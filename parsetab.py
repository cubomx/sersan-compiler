
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMA COMMENT CONSTANTES CORCHETE_EMPIEZA CORCHETE_TERMINA CTE_ALFA CTE_ENTERA CTE_ENTERA_NON_NUM CTE_REAL CTE_REAL_ENDING_BAD CTE_REAL_NON_NUM IDENT OP_ARIT OP_ASIG OP_LOG OP_REL PAL_RES PAREN_EMPIEZA PAREN_TERMINA PUNTO PUNTOS_DOBLES PUNTO_COMA TIPO VARIABLESconstantes : CONSTANTES IDENT OP_ASIG cantidad PUNTO_COMA gpoconstcantidad : CTE_ENTERA\n                    | CTE_REALgpoconst : constantesgpoconst : emptyempty :'
    
_lr_action_items = {'CONSTANTES':([0,8,],[2,2,]),'$end':([1,8,9,10,11,],[0,-6,-1,-4,-5,]),'IDENT':([2,],[3,]),'OP_ASIG':([3,],[4,]),'CTE_ENTERA':([4,],[6,]),'CTE_REAL':([4,],[7,]),'PUNTO_COMA':([5,6,7,],[8,-2,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constantes':([0,8,],[1,10,]),'cantidad':([4,],[5,]),'gpoconst':([8,],[9,]),'empty':([8,],[11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> constantes","S'",1,None,None,None),
  ('constantes -> CONSTANTES IDENT OP_ASIG cantidad PUNTO_COMA gpoconst','constantes',6,'p_constantes','syntax_analyzer.py',57),
  ('cantidad -> CTE_ENTERA','cantidad',1,'p_cantidad','syntax_analyzer.py',61),
  ('cantidad -> CTE_REAL','cantidad',1,'p_cantidad','syntax_analyzer.py',62),
  ('gpoconst -> constantes','gpoconst',1,'p_grupoconst','syntax_analyzer.py',69),
  ('gpoconst -> empty','gpoconst',1,'p_grupoconstEmpty','syntax_analyzer.py',73),
  ('empty -> <empty>','empty',0,'p_empty','syntax_analyzer.py',76),
]
