
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDENTINICIOSIMIENTRASrightPROCEDIMIENTOFUNCIONrightCONSTANTESVARIABLESrightOP_ASIGleftOP_RELleftMODleftMASMENOSleftMULTIDIVrightPROTOTIPOSleftCORCHETE_EMPIEZACORCHETE_TERMINAleftPAREN_TERMINAleftPAREN_EMPIEZArightPUNTO_COMAleftFINCOMA COMMENT CONSTANTES CONTINUA CORCHETE_EMPIEZA CORCHETE_TERMINA CTE_ALFA CTE_ENTERA CTE_ENTERA_NON_NUM CTE_REAL CTE_REAL_ENDING_BAD CTE_REAL_NON_NUM CUANDO CUMPLA DE DECR DESDE DIV EL FALSO FIN FUNCION HACER HASTA IDENT IMPRIME IMPRIMENL INCR INICIO INTERRUMPE LEE LIMPIA MAS MENOS MIENTRAS MOD MULTI NO O OP_ASIG OP_REL OTRO PAREN_EMPIEZA PAREN_TERMINA POTENCIA PROCEDIMIENTO PROGRAMA PROTOTIPOS PUNTO PUNTOS_DOBLES PUNTO_COMA QUE REGRESA REPETIR SE SEA SI SINO TIPO VALOR VARIABLES VERDADERO Yprogram : constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTOvariables : VARIABLES gpovarsvariables : emptygpovars : gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars\n                   | gpoids PUNTOS_DOBLES TIPO PUNTO_COMA\n        gpovars : emptygpoids : IDENT dimens COMA gpoids\n                  | IDENT dimens\n                  | IDENT opasig COMA gpoids\n                  | IDENT COMA gpoids\n                  gpoids : emptydimens : CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens\n                  |opasig : OP_ASIG CTE_ENTERAopasig : OP_ASIG IDENTopasig : emptyvalor : exprlog\n        constantes : CONSTANTES grupoconst\n        constantes : emptygrupoconst : IDENT OP_ASIG CTE_REAL PUNTO_COMA\n                      | IDENT OP_ASIG CTE_ENTERA PUNTO_COMA\n                      | IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst\n                      | IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst\n        grupoconst : emptyprotfuncproc : PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMAprotfuncproc : emptygpofuncproc : protfunc\n                        | protproc\n                        | protproc gpofuncproc\n                        | protfunc gpofuncproc\n                        protfunc : FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMAprotproc : PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMAprotproc : emptyparams : gpopars PUNTOS_DOBLES TIPO otrosparsparams : emptyotrospars : PUNTO_COMA paramsotrospars : emptygpopars : IDENT masparsmaspars : COMA gpoparsmaspars : emptyfuncproc : procedimiento funcproc\n                    | funcion funcproc\n        funcproc : emptyprocedimiento : PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMAfuncion : FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMAblock : estatuto puntoc block\n                 | estatuto puntoc\n        puntoc : PUNTO_COMAblock : estatuto error\n                 | estatuto error block\n        estatuto : si\n                    | lfunc\n                    | LIMPIA\n                    | desde\n                    | repetir\n                    | mientras\n                    | cuando\n                    | regresa\n                    | asigna\n                    | imprime\n                    | imprimenl\n                    | lee\n                    | INTERRUMPE\n                    | CONTINUA\n        estatuto : emptysi : SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sinosino : SINO bckespsino : emptybckesp : estatuto\n                  | INICIO block FIN\n                  |desde : DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp\n                 | DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp\n        desde : DESDE EL VALOR DE asigna HASTA expr error bckesprepetir : REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINAmientras : MIENTRAS SE CUMPLA QUE exprlog bckespasigna : IDENT udim OP_ASIG exprlogcuando : CUANDO EL VALOR DE IDENT INICIO gposea otro FINotro : OTRO PUNTOS_DOBLES bckespotro : emptygposea : SEA gpoconst PUNTOS_DOBLES bckesp gposeagposea : emptygpoconst : CTE_ALFA masgpoconstmasgpoconst : COMA gpoconstmasgpoconst : emptyregresa : REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINAudim : CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim\n                | empty\n        exprlog : opy\n                   | opy O exprlog\n        opy : opno\n               | opno Y opy\n\n        opno : oprel\n                | NO oprel\n        oprel : expr\n                 | expr OP_REL oprel\n         expr : multi\n                | multi MAS expr\n                | multi MENOS expr\n        multi : expo\n                 | expo MULTI multi\n                 | expo DIV multi\n                 | expo MOD multi\n                 | empty\n        expo : signo\n                | signo POTENCIA expo\n        signo : termino\n                 | MENOS termino\n        termino : IDENT\n                   | IDENT udim\n                   | lfunc\n                   | CTE_ENTERA\n                   | CTE_REAL\n                   | CTE_ALFA\n                   | VERDADERO\n                   | FALSO\n        lfunc : IDENT parenemp uparams PAREN_TERMINAlfunc : IDENT parenemp error PAREN_TERMINAparenemp : PAREN_EMPIEZAimprime : IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINAimprimenl : IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA imprimenl : IMPRIMENL PAREN_EMPIEZA gpoexp errorlee : LEE PAREN_EMPIEZA IDENT PAREN_TERMINA\n               | LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA\n        gpoexp : exprlog\n                  | exprlog COMA gpoexp\n        uparams : exprlog\n                   | exprlog COMA uparams\n        empty :'
    
_lr_action_items = {'CONSTANTES':([0,],[3,]),'VARIABLES':([0,2,3,4,8,10,77,78,131,132,187,232,],[-129,6,-129,-19,-18,-24,-20,-21,-22,-23,6,6,]),'PROTOTIPOS':([0,2,3,4,5,6,7,8,10,14,16,77,78,108,111,131,132,155,],[-129,-129,-129,-19,12,-129,-3,-18,-24,-2,-6,-20,-21,152,-5,-22,-23,-4,]),'PROCEDIMIENTO':([0,2,3,4,5,6,7,8,10,11,12,13,14,16,20,21,26,27,30,77,78,111,131,132,155,190,216,244,266,284,288,],[-129,-129,-129,-19,-129,-129,-3,-18,-24,23,29,-26,-2,-6,23,23,29,29,-33,-20,-21,-5,-22,-23,-4,-25,-32,-31,277,-44,-45,]),'FUNCION':([0,2,3,4,5,6,7,8,10,11,12,13,14,16,20,21,26,27,30,77,78,111,131,132,155,190,216,244,284,285,288,],[-129,-129,-129,-19,-129,-129,-3,-18,-24,24,28,-26,-2,-6,24,24,28,28,-33,-20,-21,-5,-22,-23,-4,-25,-32,-31,-44,287,-45,]),'PROGRAMA':([0,2,3,4,5,6,7,8,10,11,13,14,16,19,20,21,22,41,42,77,78,111,131,132,155,170,190,284,288,],[-129,-129,-129,-19,-129,-129,-3,-18,-24,-129,-26,-2,-6,40,-129,-129,-43,-41,-42,-20,-21,-5,-22,-23,-4,197,-25,-44,-45,]),'$end':([1,219,],[0,-1,]),'IDENT':([3,6,23,24,28,29,33,35,36,40,51,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,99,106,107,109,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,135,136,137,143,144,145,146,157,158,159,160,161,162,163,164,165,174,185,193,194,195,196,200,202,203,206,218,220,223,224,228,230,236,237,246,255,260,268,269,272,273,],[9,17,43,44,48,49,17,68,76,97,17,17,-89,-91,-93,68,-95,-97,68,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,9,9,97,147,147,147,147,17,68,68,-94,68,68,68,-108,68,68,68,68,-110,68,68,-88,-119,97,97,-48,68,68,68,68,183,-90,-92,-96,-98,-99,-101,-102,-103,-106,68,147,-117,-118,68,-129,222,68,225,68,-87,97,68,97,97,147,97,68,97,97,97,97,97,97,97,]),'INICIO':([6,7,14,16,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,111,115,116,117,118,119,120,121,122,123,124,126,129,155,157,158,159,160,161,162,163,164,165,187,193,194,196,202,212,218,220,224,225,232,243,246,260,268,269,272,273,],[-129,-3,-2,-6,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-5,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,-4,-90,-92,-96,-98,-99,-101,-102,-103,-106,-129,-117,-118,-129,-129,228,-87,236,236,240,-129,255,236,236,236,236,236,236,]),'PUNTOS_DOBLES':([6,15,16,17,32,33,51,52,53,54,111,112,113,114,147,149,156,184,186,189,191,211,262,264,265,274,276,283,],[-129,31,-11,-13,-8,-129,-129,-10,-11,-129,-129,-7,-9,-13,-129,188,-12,-38,-40,214,215,-39,272,273,-129,-83,-85,-84,]),'OP_ASIG':([9,17,97,129,138,196,218,222,],[18,36,-129,-88,174,-129,-87,-129,]),'FIN':([12,25,26,27,30,46,47,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,171,172,174,193,194,196,199,202,204,205,207,208,209,216,218,220,224,227,234,235,239,240,241,244,245,246,247,248,250,251,253,256,257,260,261,263,267,268,269,270,271,272,273,279,280,281,282,286,],[-129,45,-27,-28,-33,-30,-29,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,133,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,-47,-49,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-46,-50,-129,-117,-118,-129,-77,-129,-86,-120,-121,-122,-123,-32,-87,-71,-71,-124,-129,-69,-76,-129,254,-31,-66,-71,-68,257,-75,-129,-82,-67,-70,-71,271,-80,278,-71,-71,-74,-78,-71,-71,-72,-73,-79,-129,-81,]),'COMA':([17,32,34,37,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,114,115,116,117,118,119,120,121,122,123,124,126,127,129,130,144,145,147,156,157,158,159,160,161,162,163,164,165,168,181,193,194,195,196,206,218,265,],[33,51,54,-16,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-14,-15,-13,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-129,-88,-119,-129,-129,185,-12,-90,-92,-96,-98,-99,-101,-102,-103,-106,195,206,-117,-118,-129,-129,-129,-87,275,]),'CORCHETE_EMPIEZA':([17,68,97,114,183,196,222,],[35,128,128,35,35,128,128,]),'CTE_REAL':([18,35,60,63,115,116,118,119,120,122,123,124,125,127,128,130,137,143,144,145,174,195,202,206,223,237,],[38,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-119,71,71,71,71,71,71,71,71,71,71,]),'CTE_ENTERA':([18,35,36,60,63,115,116,118,119,120,122,123,124,125,127,128,130,137,143,144,145,174,195,202,206,223,237,258,259,],[39,70,75,70,70,70,70,70,70,70,70,70,70,70,70,70,-119,70,70,70,70,70,70,70,70,70,70,268,269,]),'TIPO':([31,188,214,215,],[50,213,232,233,]),'NO':([35,115,116,127,130,137,143,144,145,174,195,202,206,223,],[60,60,60,60,-119,60,60,60,60,60,60,60,60,60,]),'MAS':([35,60,62,64,65,66,67,68,69,70,71,72,73,74,115,116,118,119,120,121,122,123,124,126,127,128,129,130,137,143,144,145,162,163,164,165,174,193,194,195,196,202,206,218,223,237,],[-129,-129,119,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-129,-129,-129,-129,-129,-108,-129,-129,-129,-110,-129,-129,-88,-119,-129,-129,-129,-129,-101,-102,-103,-106,-129,-117,-118,-129,-129,-129,-129,-87,-129,-129,]),'MENOS':([35,60,62,64,65,66,67,68,69,70,71,72,73,74,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,137,143,144,145,162,163,164,165,174,193,194,195,196,202,206,218,223,237,],[63,63,120,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,63,63,63,63,63,-108,63,63,63,63,-110,63,63,-88,-119,63,63,63,63,-101,-102,-103,-106,63,-117,-118,63,-129,63,63,-87,63,63,]),'OP_REL':([35,60,61,62,64,65,66,67,68,69,70,71,72,73,74,115,116,118,119,120,121,122,123,124,126,127,129,130,137,143,144,145,160,161,162,163,164,165,174,193,194,195,196,202,206,218,223,],[-129,-129,118,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-129,-129,-129,-129,-129,-108,-129,-129,-129,-110,-129,-88,-119,-129,-129,-129,-129,-98,-99,-101,-102,-103,-106,-129,-117,-118,-129,-129,-129,-129,-87,-129,]),'Y':([35,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,115,116,117,118,119,120,121,122,123,124,126,127,129,130,137,143,144,145,159,160,161,162,163,164,165,174,193,194,195,196,202,206,218,223,],[-129,116,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-129,-88,-119,-129,-129,-129,-129,-96,-98,-99,-101,-102,-103,-106,-129,-117,-118,-129,-129,-129,-129,-87,-129,]),'O':([35,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,115,116,117,118,119,120,121,122,123,124,126,127,129,130,137,143,144,145,158,159,160,161,162,163,164,165,174,193,194,195,196,202,206,218,223,],[-129,115,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-129,-88,-119,-129,-129,-129,-129,-92,-96,-98,-99,-101,-102,-103,-106,-129,-117,-118,-129,-129,-129,-129,-87,-129,]),'CORCHETE_TERMINA':([35,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,115,116,117,118,119,120,121,122,123,124,126,128,129,157,158,159,160,161,162,163,164,165,169,193,194,196,218,],[-129,114,-17,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-129,-88,-90,-92,-96,-98,-99,-101,-102,-103,-106,196,-117,-118,-129,-87,]),'CTE_ALFA':([35,60,63,115,116,118,119,120,122,123,124,125,127,128,130,137,143,144,145,174,195,202,206,223,237,252,275,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,-119,72,72,72,72,72,72,72,72,72,72,265,265,]),'VERDADERO':([35,60,63,115,116,118,119,120,122,123,124,125,127,128,130,137,143,144,145,174,195,202,206,223,237,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,-119,73,73,73,73,73,73,73,73,73,73,]),'FALSO':([35,60,63,115,116,118,119,120,122,123,124,125,127,128,130,137,143,144,145,174,195,202,206,223,237,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,-119,74,74,74,74,74,74,74,74,74,74,]),'PUNTO_COMA':([38,39,40,50,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,152,157,158,159,160,161,162,163,164,165,174,192,193,194,196,199,202,204,205,207,208,209,213,218,220,224,227,228,233,234,235,236,239,245,246,247,250,255,256,257,260,268,269,270,271,277,279,280,287,],[77,78,-129,111,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,136,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-129,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,-129,-129,-48,190,-90,-92,-96,-98,-99,-101,-102,-103,-106,-129,216,-117,-118,-129,-77,-129,-86,-120,-121,-122,-123,230,-87,-71,-71,-124,-129,244,-129,-69,-129,-76,-66,-71,-68,-75,-129,-67,-70,-71,-71,-71,-74,-78,284,-72,-73,288,]),'LIMPIA':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[83,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,83,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,83,83,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,83,83,83,83,83,83,83,83,83,83,83,]),'INTERRUMPE':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[93,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,93,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,93,93,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,93,93,93,93,93,93,93,93,93,93,93,]),'CONTINUA':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[94,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,94,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,94,94,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,94,94,94,94,94,94,94,94,94,94,94,]),'SI':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[96,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,96,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,96,96,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,96,96,96,96,96,96,96,96,96,96,96,]),'DESDE':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[98,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,98,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,98,98,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,98,98,98,98,98,98,98,98,98,98,98,]),'REPETIR':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[99,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,99,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,99,99,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,99,99,99,99,99,99,99,99,99,99,99,]),'MIENTRAS':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[100,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,100,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,100,100,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,100,100,100,100,100,100,100,100,100,100,100,]),'CUANDO':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[101,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,101,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,101,101,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,101,101,101,101,101,101,101,101,101,101,101,]),'REGRESA':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[102,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,102,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,102,102,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,102,102,102,102,102,102,102,102,102,102,102,]),'IMPRIME':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[103,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,103,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,103,103,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,103,103,103,103,103,103,103,103,103,103,103,]),'IMPRIMENL':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[104,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,104,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,104,104,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,104,104,104,104,104,104,104,104,104,104,104,]),'LEE':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,99,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,157,158,159,160,161,162,163,164,165,193,194,196,202,218,220,224,228,236,246,255,260,268,269,272,273,],[105,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,105,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,105,105,-48,-90,-92,-96,-98,-99,-101,-102,-103,-106,-117,-118,-129,-129,-87,105,105,105,105,105,105,105,105,105,105,105,]),'error':([40,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,99,115,116,117,118,119,120,121,122,123,124,126,127,129,130,134,135,136,145,157,158,159,160,161,162,163,164,165,174,181,182,193,194,196,199,202,204,205,206,207,208,209,218,220,224,226,227,228,234,235,236,237,239,245,246,247,249,250,255,256,257,260,268,269,270,271,279,280,],[-129,-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,135,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-129,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,167,-88,-119,-129,-129,-48,-129,-90,-92,-96,-98,-99,-101,-102,-103,-106,-129,-125,208,-117,-118,-129,-77,-129,-86,-120,-129,-121,-122,-123,-87,-71,-71,-126,-124,-129,-129,-69,-129,-129,-76,-66,-71,-68,260,-75,-129,-67,-70,-71,-71,-71,-74,-78,-72,-73,]),'PAREN_EMPIEZA':([43,44,48,49,68,96,97,102,103,104,105,201,],[106,107,109,110,130,137,130,143,144,145,146,223,]),'DE':([45,133,175,178,254,278,],[108,170,200,203,266,285,]),'PAREN_TERMINA':([57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,106,107,109,110,114,115,116,117,118,119,120,121,122,123,124,126,127,129,130,137,143,144,145,148,150,151,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,173,179,180,181,182,183,193,194,195,196,206,210,213,217,218,223,226,229,230,231,238,242,],[-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-129,-129,-129,-129,-13,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-129,-88,-119,-129,-129,-129,-129,187,-35,189,191,192,-12,-90,-92,-96,-98,-99,-101,-102,-103,-106,193,194,-127,198,204,205,-125,207,209,-117,-118,-129,-129,-129,227,-129,-128,-87,-129,-126,-34,-129,-37,250,-36,]),'HASTA':([57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,115,116,117,118,119,120,121,122,123,124,126,129,134,135,136,140,157,158,159,160,161,162,163,164,165,171,172,174,193,194,196,199,218,221,],[-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,-47,-49,-48,176,-90,-92,-96,-98,-99,-101,-102,-103,-106,-46,-50,-129,-117,-118,-129,-77,-87,237,]),'SINO':([57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,115,116,117,118,119,120,121,122,123,124,126,129,157,158,159,160,161,162,163,164,165,174,193,194,196,199,202,204,205,207,208,209,218,220,224,227,234,235,239,245,246,247,250,256,257,260,268,269,270,271,279,280,],[-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,-90,-92,-96,-98,-99,-101,-102,-103,-106,-129,-117,-118,-129,-77,-129,-86,-120,-121,-122,-123,-87,-71,-71,-124,246,-69,-76,-66,-71,-68,-75,-67,-70,-71,-71,-71,-74,-78,-72,-73,]),'SEA':([57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,115,116,117,118,119,120,121,122,123,124,126,129,157,158,159,160,161,162,163,164,165,174,193,194,196,199,202,204,205,207,208,209,218,220,224,227,234,235,239,240,245,246,247,250,256,257,260,268,269,270,271,273,279,280,282,],[-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,-90,-92,-96,-98,-99,-101,-102,-103,-106,-129,-117,-118,-129,-77,-129,-86,-120,-121,-122,-123,-87,-71,-71,-124,-129,-69,-76,252,-66,-71,-68,-75,-67,-70,-71,-71,-71,-74,-78,-71,-72,-73,252,]),'OTRO':([57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,115,116,117,118,119,120,121,122,123,124,126,129,157,158,159,160,161,162,163,164,165,174,193,194,196,199,202,204,205,207,208,209,218,220,224,227,234,235,239,240,245,246,247,250,251,253,256,257,260,268,269,270,271,273,279,280,282,286,],[-89,-91,-93,-129,-95,-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-129,-129,-94,-129,-129,-129,-108,-129,-129,-129,-110,-88,-90,-92,-96,-98,-99,-101,-102,-103,-106,-129,-117,-118,-129,-77,-129,-86,-120,-121,-122,-123,-87,-71,-71,-124,-129,-69,-76,-129,-66,-71,-68,-75,262,-82,-67,-70,-71,-71,-71,-74,-78,-71,-72,-73,-129,-81,]),'DECR':([62,64,65,66,67,68,69,70,71,72,73,74,119,120,121,122,123,124,126,129,160,161,162,163,164,165,193,194,196,218,237,249,],[-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-129,-129,-108,-129,-129,-129,-110,-88,-98,-99,-101,-102,-103,-106,-117,-118,-129,-87,-129,258,]),'INCR':([62,64,65,66,67,68,69,70,71,72,73,74,119,120,121,122,123,124,126,129,160,161,162,163,164,165,193,194,196,218,237,249,],[-97,-100,-104,-105,-107,-109,-111,-112,-113,-114,-115,-116,-129,-129,-108,-129,-129,-129,-110,-88,-98,-99,-101,-102,-103,-106,-117,-118,-129,-87,-129,259,]),'MULTI':([64,66,67,68,69,70,71,72,73,74,121,126,129,165,193,194,196,218,],[122,-105,-107,-109,-111,-112,-113,-114,-115,-116,-108,-110,-88,-106,-117,-118,-129,-87,]),'DIV':([64,66,67,68,69,70,71,72,73,74,121,126,129,165,193,194,196,218,],[123,-105,-107,-109,-111,-112,-113,-114,-115,-116,-108,-110,-88,-106,-117,-118,-129,-87,]),'MOD':([64,66,67,68,69,70,71,72,73,74,121,126,129,165,193,194,196,218,],[124,-105,-107,-109,-111,-112,-113,-114,-115,-116,-108,-110,-88,-106,-117,-118,-129,-87,]),'POTENCIA':([66,67,68,69,70,71,72,73,74,121,126,129,193,194,196,218,],[125,-107,-109,-111,-112,-113,-114,-115,-116,-108,-110,-88,-117,-118,-129,-87,]),'EL':([98,101,],[139,142,]),'SE':([100,],[141,]),'VALOR':([139,142,],[175,178,]),'CUMPLA':([141,],[177,]),'QUE':([176,177,],[201,202,]),'PUNTO':([197,],[219,]),'HACER':([198,],[220,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'constantes':([0,],[2,]),'empty':([0,2,3,5,6,11,12,17,20,21,26,27,33,35,40,51,54,60,68,77,78,97,99,106,107,109,110,111,115,116,118,119,120,122,123,124,127,128,134,135,137,143,144,145,147,174,187,195,196,202,206,213,220,222,223,224,228,230,232,234,236,237,240,246,251,255,260,265,268,269,272,273,282,],[4,7,10,13,16,22,30,37,22,22,30,30,53,65,95,53,53,65,129,10,10,129,95,150,150,150,150,16,65,65,65,65,65,65,65,65,65,65,95,95,65,65,65,65,186,65,7,65,129,65,65,231,95,129,65,95,95,150,7,247,95,65,253,95,263,95,95,276,95,95,95,95,253,]),'variables':([2,187,232,],[5,212,243,]),'grupoconst':([3,77,78,],[8,131,132,]),'protfuncproc':([5,],[11,]),'gpovars':([6,111,],[14,155,]),'gpoids':([6,33,51,54,111,],[15,52,112,113,15,]),'funcproc':([11,20,21,],[19,41,42,]),'procedimiento':([11,20,21,],[20,20,20,]),'funcion':([11,20,21,],[21,21,21,]),'gpofuncproc':([12,26,27,],[25,46,47,]),'protfunc':([12,26,27,],[26,26,26,]),'protproc':([12,26,27,],[27,27,27,]),'dimens':([17,114,183,],[32,156,210,]),'opasig':([17,],[34,]),'valor':([35,],[55,]),'exprlog':([35,115,127,137,143,144,145,174,195,202,206,223,],[56,157,168,173,179,181,181,199,168,224,181,238,]),'opy':([35,115,116,127,137,143,144,145,174,195,202,206,223,],[57,57,158,57,57,57,57,57,57,57,57,57,57,]),'opno':([35,115,116,127,137,143,144,145,174,195,202,206,223,],[58,58,58,58,58,58,58,58,58,58,58,58,58,]),'oprel':([35,60,115,116,118,127,137,143,144,145,174,195,202,206,223,],[59,117,59,59,159,59,59,59,59,59,59,59,59,59,59,]),'expr':([35,60,115,116,118,119,120,127,128,137,143,144,145,174,195,202,206,223,237,],[61,61,61,61,61,160,161,61,169,61,61,61,61,61,61,61,61,61,249,]),'multi':([35,60,115,116,118,119,120,122,123,124,127,128,137,143,144,145,174,195,202,206,223,237,],[62,62,62,62,62,62,62,162,163,164,62,62,62,62,62,62,62,62,62,62,62,62,]),'expo':([35,60,115,116,118,119,120,122,123,124,125,127,128,137,143,144,145,174,195,202,206,223,237,],[64,64,64,64,64,64,64,64,64,64,165,64,64,64,64,64,64,64,64,64,64,64,64,]),'signo':([35,60,115,116,118,119,120,122,123,124,125,127,128,137,143,144,145,174,195,202,206,223,237,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'termino':([35,60,63,115,116,118,119,120,122,123,124,125,127,128,137,143,144,145,174,195,202,206,223,237,],[67,67,121,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'lfunc':([35,40,60,63,99,115,116,118,119,120,122,123,124,125,127,128,134,135,137,143,144,145,174,195,202,206,220,223,224,228,236,237,246,255,260,268,269,272,273,],[69,82,69,69,82,69,69,69,69,69,69,69,69,69,69,69,82,82,69,69,69,69,69,69,69,69,82,69,82,82,82,69,82,82,82,82,82,82,82,]),'block':([40,99,134,135,228,236,255,],[79,140,171,172,241,248,267,]),'estatuto':([40,99,134,135,220,224,228,236,246,255,260,268,269,272,273,],[80,80,80,80,235,235,80,80,235,80,235,235,235,235,235,]),'si':([40,99,134,135,220,224,228,236,246,255,260,268,269,272,273,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'desde':([40,99,134,135,220,224,228,236,246,255,260,268,269,272,273,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'repetir':([40,99,134,135,220,224,228,236,246,255,260,268,269,272,273,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'mientras':([40,99,134,135,220,224,228,236,246,255,260,268,269,272,273,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'cuando':([40,99,134,135,220,224,228,236,246,255,260,268,269,272,273,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'regresa':([40,99,134,135,220,224,228,236,246,255,260,268,269,272,273,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'asigna':([40,99,134,135,200,220,224,228,236,246,255,260,268,269,272,273,],[89,89,89,89,221,89,89,89,89,89,89,89,89,89,89,89,]),'imprime':([40,99,134,135,220,224,228,236,246,255,260,268,269,272,273,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'imprimenl':([40,99,134,135,220,224,228,236,246,255,260,268,269,272,273,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'lee':([40,99,134,135,220,224,228,236,246,255,260,268,269,272,273,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'udim':([68,97,196,222,],[126,138,218,138,]),'parenemp':([68,97,],[127,127,]),'puntoc':([80,],[134,]),'params':([106,107,109,110,230,],[148,151,153,154,242,]),'gpopars':([106,107,109,110,185,230,],[149,149,149,149,211,149,]),'uparams':([127,195,],[166,217,]),'gpoexp':([144,145,206,],[180,182,226,]),'maspars':([147,],[184,]),'otrospars':([213,],[229,]),'bckesp':([220,224,246,260,268,269,272,273,],[234,239,256,270,279,280,281,282,]),'sino':([234,],[245,]),'gposea':([240,282,],[251,286,]),'otro':([251,],[261,]),'gpoconst':([252,275,],[264,283,]),'masgpoconst':([265,],[274,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO','program',10,'p_programa','syntax_analyzer.py',32),
  ('variables -> VARIABLES gpovars','variables',2,'p_variables','syntax_analyzer.py',35),
  ('variables -> empty','variables',1,'p_variablesEmpty','syntax_analyzer.py',38),
  ('gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars','gpovars',5,'p_gpovars','syntax_analyzer.py',41),
  ('gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA','gpovars',4,'p_gpovars','syntax_analyzer.py',42),
  ('gpovars -> empty','gpovars',1,'p_gpovarsEmpty','syntax_analyzer.py',46),
  ('gpoids -> IDENT dimens COMA gpoids','gpoids',4,'p_gpoids','syntax_analyzer.py',49),
  ('gpoids -> IDENT dimens','gpoids',2,'p_gpoids','syntax_analyzer.py',50),
  ('gpoids -> IDENT opasig COMA gpoids','gpoids',4,'p_gpoids','syntax_analyzer.py',51),
  ('gpoids -> IDENT COMA gpoids','gpoids',3,'p_gpoids','syntax_analyzer.py',52),
  ('gpoids -> empty','gpoids',1,'p_gpoidsEmpty','syntax_analyzer.py',57),
  ('dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens','dimens',4,'p_dimens','syntax_analyzer.py',60),
  ('dimens -> <empty>','dimens',0,'p_dimens','syntax_analyzer.py',61),
  ('opasig -> OP_ASIG CTE_ENTERA','opasig',2,'p_opasig1','syntax_analyzer.py',65),
  ('opasig -> OP_ASIG IDENT','opasig',2,'p_opasig2','syntax_analyzer.py',68),
  ('opasig -> empty','opasig',1,'p_opasigEmpty','syntax_analyzer.py',71),
  ('valor -> exprlog','valor',1,'p_valor','syntax_analyzer.py',74),
  ('constantes -> CONSTANTES grupoconst','constantes',2,'p_constantes','syntax_analyzer.py',78),
  ('constantes -> empty','constantes',1,'p_constantesEmpty','syntax_analyzer.py',83),
  ('grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA','grupoconst',4,'p_grupoconst','syntax_analyzer.py',87),
  ('grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA','grupoconst',4,'p_grupoconst','syntax_analyzer.py',88),
  ('grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst','grupoconst',5,'p_grupoconst','syntax_analyzer.py',89),
  ('grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst','grupoconst',5,'p_grupoconst','syntax_analyzer.py',90),
  ('grupoconst -> empty','grupoconst',1,'p_grupoconstEmpty','syntax_analyzer.py',94),
  ('protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA','protfuncproc',6,'p_startproto','syntax_analyzer.py',97),
  ('protfuncproc -> empty','protfuncproc',1,'p_startprotoEmpty','syntax_analyzer.py',101),
  ('gpofuncproc -> protfunc','gpofuncproc',1,'p_protfuncproc','syntax_analyzer.py',104),
  ('gpofuncproc -> protproc','gpofuncproc',1,'p_protfuncproc','syntax_analyzer.py',105),
  ('gpofuncproc -> protproc gpofuncproc','gpofuncproc',2,'p_protfuncproc','syntax_analyzer.py',106),
  ('gpofuncproc -> protfunc gpofuncproc','gpofuncproc',2,'p_protfuncproc','syntax_analyzer.py',107),
  ('protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA','protfunc',8,'p_protfunc','syntax_analyzer.py',113),
  ('protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA','protproc',6,'p_protproc','syntax_analyzer.py',118),
  ('protproc -> empty','protproc',1,'p_protprocEmpty','syntax_analyzer.py',121),
  ('params -> gpopars PUNTOS_DOBLES TIPO otrospars','params',4,'p_params','syntax_analyzer.py',124),
  ('params -> empty','params',1,'p_paramsEmpty','syntax_analyzer.py',127),
  ('otrospars -> PUNTO_COMA params','otrospars',2,'p_params2','syntax_analyzer.py',130),
  ('otrospars -> empty','otrospars',1,'p_params2Empty','syntax_analyzer.py',133),
  ('gpopars -> IDENT maspars','gpopars',2,'p_gpopars','syntax_analyzer.py',136),
  ('maspars -> COMA gpopars','maspars',2,'p_maspars','syntax_analyzer.py',139),
  ('maspars -> empty','maspars',1,'p_masparsEmpty','syntax_analyzer.py',142),
  ('funcproc -> procedimiento funcproc','funcproc',2,'p_funcproc','syntax_analyzer.py',145),
  ('funcproc -> funcion funcproc','funcproc',2,'p_funcproc','syntax_analyzer.py',146),
  ('funcproc -> empty','funcproc',1,'p_funcprocEmpty','syntax_analyzer.py',150),
  ('procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA','procedimiento',12,'p_procedimiento','syntax_analyzer.py',153),
  ('funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA','funcion',14,'p_funcion','syntax_analyzer.py',156),
  ('block -> estatuto puntoc block','block',3,'p_block','syntax_analyzer.py',159),
  ('block -> estatuto puntoc','block',2,'p_block','syntax_analyzer.py',160),
  ('puntoc -> PUNTO_COMA','puntoc',1,'p_puntoc','syntax_analyzer.py',165),
  ('block -> estatuto error','block',2,'p_semicolon','syntax_analyzer.py',168),
  ('block -> estatuto error block','block',3,'p_semicolon','syntax_analyzer.py',169),
  ('estatuto -> si','estatuto',1,'p_estatuto','syntax_analyzer.py',177),
  ('estatuto -> lfunc','estatuto',1,'p_estatuto','syntax_analyzer.py',178),
  ('estatuto -> LIMPIA','estatuto',1,'p_estatuto','syntax_analyzer.py',179),
  ('estatuto -> desde','estatuto',1,'p_estatuto','syntax_analyzer.py',180),
  ('estatuto -> repetir','estatuto',1,'p_estatuto','syntax_analyzer.py',181),
  ('estatuto -> mientras','estatuto',1,'p_estatuto','syntax_analyzer.py',182),
  ('estatuto -> cuando','estatuto',1,'p_estatuto','syntax_analyzer.py',183),
  ('estatuto -> regresa','estatuto',1,'p_estatuto','syntax_analyzer.py',184),
  ('estatuto -> asigna','estatuto',1,'p_estatuto','syntax_analyzer.py',185),
  ('estatuto -> imprime','estatuto',1,'p_estatuto','syntax_analyzer.py',186),
  ('estatuto -> imprimenl','estatuto',1,'p_estatuto','syntax_analyzer.py',187),
  ('estatuto -> lee','estatuto',1,'p_estatuto','syntax_analyzer.py',188),
  ('estatuto -> INTERRUMPE','estatuto',1,'p_estatuto','syntax_analyzer.py',189),
  ('estatuto -> CONTINUA','estatuto',1,'p_estatuto','syntax_analyzer.py',190),
  ('estatuto -> empty','estatuto',1,'p_estatutoEmpty','syntax_analyzer.py',195),
  ('si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino','si',7,'p_si','syntax_analyzer.py',198),
  ('sino -> SINO bckesp','sino',2,'p_sino','syntax_analyzer.py',202),
  ('sino -> empty','sino',1,'p_sinoEmpty','syntax_analyzer.py',205),
  ('bckesp -> estatuto','bckesp',1,'p_bckesp','syntax_analyzer.py',208),
  ('bckesp -> INICIO block FIN','bckesp',3,'p_bckesp','syntax_analyzer.py',209),
  ('bckesp -> <empty>','bckesp',0,'p_bckesp','syntax_analyzer.py',210),
  ('desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp','desde',10,'p_desde','syntax_analyzer.py',215),
  ('desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp','desde',10,'p_desde','syntax_analyzer.py',216),
  ('desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp','desde',9,'p_desde_error','syntax_analyzer.py',221),
  ('repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA','repetir',7,'p_repetir','syntax_analyzer.py',233),
  ('mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp','mientras',6,'p_mientras','syntax_analyzer.py',237),
  ('asigna -> IDENT udim OP_ASIG exprlog','asigna',4,'p_asigna','syntax_analyzer.py',240),
  ('cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN','cuando',9,'p_cuando','syntax_analyzer.py',243),
  ('otro -> OTRO PUNTOS_DOBLES bckesp','otro',3,'p_otro','syntax_analyzer.py',247),
  ('otro -> empty','otro',1,'p_otroEmpty','syntax_analyzer.py',250),
  ('gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea','gposea',5,'p_gposea','syntax_analyzer.py',253),
  ('gposea -> empty','gposea',1,'p_gposeaEmpty','syntax_analyzer.py',256),
  ('gpoconst -> CTE_ALFA masgpoconst','gpoconst',2,'p_gpoconst','syntax_analyzer.py',259),
  ('masgpoconst -> COMA gpoconst','masgpoconst',2,'p_masgpoconst','syntax_analyzer.py',262),
  ('masgpoconst -> empty','masgpoconst',1,'p_masgpoconstEmpty','syntax_analyzer.py',265),
  ('regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA','regresa',4,'p_regresa','syntax_analyzer.py',268),
  ('udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim','udim',4,'p_udim','syntax_analyzer.py',271),
  ('udim -> empty','udim',1,'p_udim','syntax_analyzer.py',272),
  ('exprlog -> opy','exprlog',1,'p_exprlog','syntax_analyzer.py',276),
  ('exprlog -> opy O exprlog','exprlog',3,'p_exprlog','syntax_analyzer.py',277),
  ('opy -> opno','opy',1,'p_opy','syntax_analyzer.py',282),
  ('opy -> opno Y opy','opy',3,'p_opy','syntax_analyzer.py',283),
  ('opno -> oprel','opno',1,'p_opno','syntax_analyzer.py',288),
  ('opno -> NO oprel','opno',2,'p_opno','syntax_analyzer.py',289),
  ('oprel -> expr','oprel',1,'p_oprel','syntax_analyzer.py',293),
  ('oprel -> expr OP_REL oprel','oprel',3,'p_oprel','syntax_analyzer.py',294),
  ('expr -> multi','expr',1,'p_expr','syntax_analyzer.py',299),
  ('expr -> multi MAS expr','expr',3,'p_expr','syntax_analyzer.py',300),
  ('expr -> multi MENOS expr','expr',3,'p_expr','syntax_analyzer.py',301),
  ('multi -> expo','multi',1,'p_multi','syntax_analyzer.py',306),
  ('multi -> expo MULTI multi','multi',3,'p_multi','syntax_analyzer.py',307),
  ('multi -> expo DIV multi','multi',3,'p_multi','syntax_analyzer.py',308),
  ('multi -> expo MOD multi','multi',3,'p_multi','syntax_analyzer.py',309),
  ('multi -> empty','multi',1,'p_multi','syntax_analyzer.py',310),
  ('expo -> signo','expo',1,'p_expo','syntax_analyzer.py',314),
  ('expo -> signo POTENCIA expo','expo',3,'p_expo','syntax_analyzer.py',315),
  ('signo -> termino','signo',1,'p_signo','syntax_analyzer.py',319),
  ('signo -> MENOS termino','signo',2,'p_signo','syntax_analyzer.py',320),
  ('termino -> IDENT','termino',1,'p_termino','syntax_analyzer.py',325),
  ('termino -> IDENT udim','termino',2,'p_termino','syntax_analyzer.py',326),
  ('termino -> lfunc','termino',1,'p_termino','syntax_analyzer.py',327),
  ('termino -> CTE_ENTERA','termino',1,'p_termino','syntax_analyzer.py',328),
  ('termino -> CTE_REAL','termino',1,'p_termino','syntax_analyzer.py',329),
  ('termino -> CTE_ALFA','termino',1,'p_termino','syntax_analyzer.py',330),
  ('termino -> VERDADERO','termino',1,'p_termino','syntax_analyzer.py',331),
  ('termino -> FALSO','termino',1,'p_termino','syntax_analyzer.py',332),
  ('lfunc -> IDENT parenemp uparams PAREN_TERMINA','lfunc',4,'p_lfunc','syntax_analyzer.py',337),
  ('lfunc -> IDENT parenemp error PAREN_TERMINA','lfunc',4,'p_lfunc_error','syntax_analyzer.py',341),
  ('parenemp -> PAREN_EMPIEZA','parenemp',1,'p_parenEmpieza','syntax_analyzer.py',346),
  ('imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA','imprime',4,'p_imprime','syntax_analyzer.py',349),
  ('imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA','imprimenl',4,'p_imprimenl','syntax_analyzer.py',352),
  ('imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error','imprimenl',4,'p_imprimenl_error','syntax_analyzer.py',355),
  ('lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA','lee',4,'p_lee','syntax_analyzer.py',360),
  ('lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA','lee',5,'p_lee','syntax_analyzer.py',361),
  ('gpoexp -> exprlog','gpoexp',1,'p_gpoexp','syntax_analyzer.py',368),
  ('gpoexp -> exprlog COMA gpoexp','gpoexp',3,'p_gpoexp','syntax_analyzer.py',369),
  ('uparams -> exprlog','uparams',1,'p_uparams','syntax_analyzer.py',374),
  ('uparams -> exprlog COMA uparams','uparams',3,'p_uparams','syntax_analyzer.py',375),
  ('empty -> <empty>','empty',0,'p_empty','syntax_analyzer.py',381),
]
