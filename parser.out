Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CTE_ENTERA_NON_NUM
    CTE_REAL_ENDING_BAD
    CTE_REAL_NON_NUM

Grammar

Rule 0     S' -> program
Rule 1     program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
Rule 2     variables -> VARIABLES gpovars
Rule 3     variables -> empty
Rule 4     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
Rule 5     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 6     gpovars -> empty
Rule 7     gpoids -> IDENT dimens COMA gpoids
Rule 8     gpoids -> IDENT dimens
Rule 9     gpoids -> IDENT opasig COMA gpoids
Rule 10    gpoids -> IDENT COMA gpoids
Rule 11    gpoids -> empty
Rule 12    dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
Rule 13    dimens -> empty
Rule 14    opasig -> OP_ASIG CTE_ENTERA
Rule 15    opasig -> OP_ASIG IDENT
Rule 16    opasig -> empty
Rule 17    valor -> CTE_ENTERA
Rule 18    valor -> IDENT
Rule 19    constantes -> CONSTANTES grupoconst
Rule 20    constantes -> empty
Rule 21    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA
Rule 22    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
Rule 23    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
Rule 24    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
Rule 25    grupoconst -> empty
Rule 26    protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
Rule 27    protfuncproc -> empty
Rule 28    gpofuncproc -> protfunc
Rule 29    gpofuncproc -> protproc
Rule 30    gpofuncproc -> protproc gpofuncproc
Rule 31    gpofuncproc -> protfunc gpofuncproc
Rule 32    protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 33    protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 34    protproc -> empty
Rule 35    params -> gpopars PUNTOS_DOBLES TIPO otrospars
Rule 36    params -> empty
Rule 37    otrospars -> PUNTO_COMA params
Rule 38    otrospars -> empty
Rule 39    gpopars -> IDENT maspars
Rule 40    maspars -> COMA gpopars
Rule 41    maspars -> empty
Rule 42    funcproc -> procedimiento funcproc
Rule 43    funcproc -> funcion funcproc
Rule 44    funcproc -> empty
Rule 45    procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
Rule 46    funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
Rule 47    block -> estatuto PUNTO_COMA block
Rule 48    block -> estatuto PUNTO_COMA
Rule 49    block -> estatuto
Rule 50    block -> estatuto block
Rule 51    estatuto -> si
Rule 52    estatuto -> lfunc
Rule 53    estatuto -> LIMPIA
Rule 54    estatuto -> desde
Rule 55    estatuto -> repetir
Rule 56    estatuto -> mientras
Rule 57    estatuto -> cuando
Rule 58    estatuto -> regresa
Rule 59    estatuto -> asigna
Rule 60    estatuto -> imprime
Rule 61    estatuto -> imprimenl
Rule 62    estatuto -> lee
Rule 63    estatuto -> INTERRUMPE
Rule 64    estatuto -> CONTINUA
Rule 65    estatuto -> empty
Rule 66    si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
Rule 67    sino -> SINO bckesp
Rule 68    sino -> empty
Rule 69    bckesp -> estatuto
Rule 70    bckesp -> INICIO block FIN
Rule 71    bckesp -> <empty>
Rule 72    desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
Rule 73    desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
Rule 74    desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp
Rule 75    repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 76    mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp
Rule 77    asigna -> IDENT udim OP_ASIG exprlog
Rule 78    cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
Rule 79    otro -> OTRO PUNTOS_DOBLES bckesp
Rule 80    otro -> empty
Rule 81    gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea
Rule 82    gposea -> empty
Rule 83    gpoconst -> CTE_ALFA masgpoconst
Rule 84    masgpoconst -> COMA gpoconst
Rule 85    masgpoconst -> empty
Rule 86    regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 87    udim -> expr udim
Rule 88    udim -> empty
Rule 89    exprlog -> opy
Rule 90    exprlog -> opy O exprlog
Rule 91    opy -> opno
Rule 92    opy -> opno Y opy
Rule 93    opno -> oprel
Rule 94    opno -> NO oprel
Rule 95    oprel -> expr
Rule 96    oprel -> expr OP_REL oprel
Rule 97    expr -> multi
Rule 98    expr -> multi MAS expr
Rule 99    expr -> multi MENOS expr
Rule 100   multi -> expo
Rule 101   multi -> expo MULTI multi
Rule 102   multi -> expo DIV multi
Rule 103   multi -> expo MOD multi
Rule 104   multi -> empty
Rule 105   expo -> signo
Rule 106   expo -> signo POTENCIA expo
Rule 107   signo -> termino
Rule 108   signo -> MENOS termino
Rule 109   termino -> IDENT
Rule 110   termino -> IDENT dimens
Rule 111   termino -> lfunc
Rule 112   termino -> CTE_ENTERA
Rule 113   termino -> CTE_REAL
Rule 114   termino -> CTE_ALFA
Rule 115   termino -> VERDADERO
Rule 116   termino -> FALSO
Rule 117   lfunc -> IDENT parenemp uparams PAREN_TERMINA
Rule 118   lfunc -> IDENT parenemp error PAREN_TERMINA
Rule 119   parenemp -> PAREN_EMPIEZA
Rule 120   imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 121   imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 122   imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error
Rule 123   lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
Rule 124   lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
Rule 125   gpoexp -> exprlog
Rule 126   gpoexp -> exprlog COMA gpoexp
Rule 127   uparams -> exprlog
Rule 128   uparams -> exprlog COMA uparams
Rule 129   empty -> <empty>

Terminals, with rules where they appear

COMA                 : 7 9 10 40 84 126 128
COMMENT              : 
CONSTANTES           : 19
CONTINUA             : 64
CORCHETE_EMPIEZA     : 12
CORCHETE_TERMINA     : 12
CTE_ALFA             : 83 114
CTE_ENTERA           : 14 17 22 24 72 73 112
CTE_ENTERA_NON_NUM   : 
CTE_REAL             : 21 23 113
CTE_REAL_ENDING_BAD  : 
CTE_REAL_NON_NUM     : 
CUANDO               : 78
CUMPLA               : 76
DE                   : 1 26 45 46 72 73 74 78
DECR                 : 72
DESDE                : 72 73 74
DIV                  : 102
EL                   : 72 73 74 78
FALSO                : 116
FIN                  : 1 26 45 46 70 78
FUNCION              : 32 46 46
HACER                : 66
HASTA                : 72 73 74 75
IDENT                : 7 8 9 10 15 18 21 22 23 24 32 33 39 45 46 77 78 109 110 117 118 123 124
IMPRIME              : 120
IMPRIMENL            : 121 122
INCR                 : 73
INICIO               : 45 46 70 78
INTERRUMPE           : 63
LEE                  : 123 124
LIMPIA               : 53
MAS                  : 98
MENOS                : 99 108
MIENTRAS             : 76
MOD                  : 103
MULTI                : 101
NO                   : 94
O                    : 90
OP_ASIG              : 14 15 21 22 23 24 77
OP_REL               : 96
OTRO                 : 79
PAREN_EMPIEZA        : 32 33 45 46 66 75 86 119 120 121 122 123 124
PAREN_TERMINA        : 32 33 45 46 66 75 86 117 118 120 121 123 124
POTENCIA             : 106
PROCEDIMIENTO        : 33 45 45
PROGRAMA             : 1 1
PROTOTIPOS           : 26 26
PUNTO                : 1
PUNTOS_DOBLES        : 4 5 32 35 46 79 81
PUNTO_COMA           : 4 5 21 22 23 24 26 32 33 37 45 46 47 48
QUE                  : 75 76
REGRESA              : 86
REPETIR              : 75
SE                   : 76
SEA                  : 81
SI                   : 66
SINO                 : 67
TIPO                 : 4 5 32 35 46
VALOR                : 72 73 74 78
VARIABLES            : 2
VERDADERO            : 115
Y                    : 92
error                : 74 118 122

Nonterminals, with rules where they appear

asigna               : 59 72 73 74
bckesp               : 66 67 72 73 74 76 79 81
block                : 1 45 46 47 50 70 75
constantes           : 1
cuando               : 57
desde                : 54
dimens               : 7 8 12 110 124
empty                : 3 6 11 13 16 20 25 27 34 36 38 41 44 65 68 80 82 85 88 104
estatuto             : 47 48 49 50 69
expo                 : 100 101 102 103 106
expr                 : 72 73 74 87 95 96 98 99
exprlog              : 66 75 76 77 86 90 125 126 127 128
funcion              : 43
funcproc             : 1 42 43
gpoconst             : 81 84
gpoexp               : 120 121 122 126
gpofuncproc          : 26 30 31
gpoids               : 4 5 7 9 10
gpopars              : 35 40
gposea               : 78 81
gpovars              : 2 4
grupoconst           : 19 23 24
imprime              : 60
imprimenl            : 61
lee                  : 62
lfunc                : 52 111
masgpoconst          : 83
maspars              : 39
mientras             : 56
multi                : 97 98 99 101 102 103
opasig               : 9
opno                 : 91 92
oprel                : 93 94 96
opy                  : 89 90 92
otro                 : 78
otrospars            : 35
params               : 32 33 37 45 46
parenemp             : 117 118
procedimiento        : 42
program              : 0
protfunc             : 28 31
protfuncproc         : 1
protproc             : 29 30
regresa              : 58
repetir              : 55
si                   : 51
signo                : 105 106
sino                 : 66
termino              : 107 108
udim                 : 77 87
uparams              : 117 128
valor                : 12
variables            : 1 45 46

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (19) constantes -> . CONSTANTES grupoconst
    (20) constantes -> . empty
    (129) empty -> .

    CONSTANTES      shift and go to state 3
    VARIABLES       reduce using rule 129 (empty -> .)
    PROTOTIPOS      reduce using rule 129 (empty -> .)
    PROCEDIMIENTO   reduce using rule 129 (empty -> .)
    FUNCION         reduce using rule 129 (empty -> .)
    PROGRAMA        reduce using rule 129 (empty -> .)

    program                        shift and go to state 1
    constantes                     shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> constantes . variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (129) empty -> .

    VARIABLES       shift and go to state 6
    PROTOTIPOS      reduce using rule 129 (empty -> .)
    PROCEDIMIENTO   reduce using rule 129 (empty -> .)
    FUNCION         reduce using rule 129 (empty -> .)
    PROGRAMA        reduce using rule 129 (empty -> .)

    variables                      shift and go to state 5
    empty                          shift and go to state 7

state 3

    (19) constantes -> CONSTANTES . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (129) empty -> .

    IDENT           shift and go to state 9
    VARIABLES       reduce using rule 129 (empty -> .)
    PROTOTIPOS      reduce using rule 129 (empty -> .)
    PROCEDIMIENTO   reduce using rule 129 (empty -> .)
    FUNCION         reduce using rule 129 (empty -> .)
    PROGRAMA        reduce using rule 129 (empty -> .)

    grupoconst                     shift and go to state 8
    empty                          shift and go to state 10

state 4

    (20) constantes -> empty .

    VARIABLES       reduce using rule 20 (constantes -> empty .)
    PROTOTIPOS      reduce using rule 20 (constantes -> empty .)
    PROCEDIMIENTO   reduce using rule 20 (constantes -> empty .)
    FUNCION         reduce using rule 20 (constantes -> empty .)
    PROGRAMA        reduce using rule 20 (constantes -> empty .)


state 5

    (1) program -> constantes variables . protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (26) protfuncproc -> . PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (27) protfuncproc -> . empty
    (129) empty -> .

    PROTOTIPOS      shift and go to state 12
    PROCEDIMIENTO   reduce using rule 129 (empty -> .)
    FUNCION         reduce using rule 129 (empty -> .)
    PROGRAMA        reduce using rule 129 (empty -> .)

    protfuncproc                   shift and go to state 11
    empty                          shift and go to state 13

state 6

    (2) variables -> VARIABLES . gpovars
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (129) empty -> .

    IDENT           shift and go to state 17
    PROTOTIPOS      reduce using rule 129 (empty -> .)
    PROCEDIMIENTO   reduce using rule 129 (empty -> .)
    FUNCION         reduce using rule 129 (empty -> .)
    PROGRAMA        reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 129 (empty -> .)

    gpovars                        shift and go to state 14
    gpoids                         shift and go to state 15
    empty                          shift and go to state 16

state 7

    (3) variables -> empty .

    PROTOTIPOS      reduce using rule 3 (variables -> empty .)
    PROCEDIMIENTO   reduce using rule 3 (variables -> empty .)
    FUNCION         reduce using rule 3 (variables -> empty .)
    PROGRAMA        reduce using rule 3 (variables -> empty .)
    INICIO          reduce using rule 3 (variables -> empty .)


state 8

    (19) constantes -> CONSTANTES grupoconst .

    VARIABLES       reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    PROTOTIPOS      reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    PROCEDIMIENTO   reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    FUNCION         reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    PROGRAMA        reduce using rule 19 (constantes -> CONSTANTES grupoconst .)


state 9

    (21) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst

    OP_ASIG         shift and go to state 18


state 10

    (25) grupoconst -> empty .

    VARIABLES       reduce using rule 25 (grupoconst -> empty .)
    PROTOTIPOS      reduce using rule 25 (grupoconst -> empty .)
    PROCEDIMIENTO   reduce using rule 25 (grupoconst -> empty .)
    FUNCION         reduce using rule 25 (grupoconst -> empty .)
    PROGRAMA        reduce using rule 25 (grupoconst -> empty .)


state 11

    (1) program -> constantes variables protfuncproc . funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (42) funcproc -> . procedimiento funcproc
    (43) funcproc -> . funcion funcproc
    (44) funcproc -> . empty
    (45) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (46) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (129) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 129 (empty -> .)

    funcproc                       shift and go to state 19
    procedimiento                  shift and go to state 20
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 12

    (26) protfuncproc -> PROTOTIPOS . gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (28) gpofuncproc -> . protfunc
    (29) gpofuncproc -> . protproc
    (30) gpofuncproc -> . protproc gpofuncproc
    (31) gpofuncproc -> . protfunc gpofuncproc
    (32) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (33) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (34) protproc -> . empty
    (129) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29
    FIN             reduce using rule 129 (empty -> .)

  ! FUNCION         [ reduce using rule 129 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 129 (empty -> .) ]

    gpofuncproc                    shift and go to state 25
    protfunc                       shift and go to state 26
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 13

    (27) protfuncproc -> empty .

    PROCEDIMIENTO   reduce using rule 27 (protfuncproc -> empty .)
    FUNCION         reduce using rule 27 (protfuncproc -> empty .)
    PROGRAMA        reduce using rule 27 (protfuncproc -> empty .)


state 14

    (2) variables -> VARIABLES gpovars .

    PROTOTIPOS      reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROCEDIMIENTO   reduce using rule 2 (variables -> VARIABLES gpovars .)
    FUNCION         reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROGRAMA        reduce using rule 2 (variables -> VARIABLES gpovars .)
    INICIO          reduce using rule 2 (variables -> VARIABLES gpovars .)


state 15

    (4) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 31


state 16

    (6) gpovars -> empty .
    (11) gpoids -> empty .

    PROTOTIPOS      reduce using rule 6 (gpovars -> empty .)
    PROCEDIMIENTO   reduce using rule 6 (gpovars -> empty .)
    FUNCION         reduce using rule 6 (gpovars -> empty .)
    PROGRAMA        reduce using rule 6 (gpovars -> empty .)
    INICIO          reduce using rule 6 (gpovars -> empty .)
    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> empty .)


state 17

    (7) gpoids -> IDENT . dimens COMA gpoids
    (8) gpoids -> IDENT . dimens
    (9) gpoids -> IDENT . opasig COMA gpoids
    (10) gpoids -> IDENT . COMA gpoids
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (14) opasig -> . OP_ASIG CTE_ENTERA
    (15) opasig -> . OP_ASIG IDENT
    (16) opasig -> . empty
    (129) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
    COMA            shift and go to state 33
    CORCHETE_EMPIEZA shift and go to state 35
    OP_ASIG         shift and go to state 37
    PUNTOS_DOBLES   reduce using rule 129 (empty -> .)

  ! COMA            [ reduce using rule 129 (empty -> .) ]

    dimens                         shift and go to state 32
    opasig                         shift and go to state 34
    empty                          shift and go to state 36

state 18

    (21) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA
    (22) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA grupoconst

    CTE_REAL        shift and go to state 38
    CTE_ENTERA      shift and go to state 39


state 19

    (1) program -> constantes variables protfuncproc funcproc . PROGRAMA block FIN DE PROGRAMA PUNTO

    PROGRAMA        shift and go to state 40


state 20

    (42) funcproc -> procedimiento . funcproc
    (42) funcproc -> . procedimiento funcproc
    (43) funcproc -> . funcion funcproc
    (44) funcproc -> . empty
    (45) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (46) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (129) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 129 (empty -> .)

    procedimiento                  shift and go to state 20
    funcproc                       shift and go to state 41
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 21

    (43) funcproc -> funcion . funcproc
    (42) funcproc -> . procedimiento funcproc
    (43) funcproc -> . funcion funcproc
    (44) funcproc -> . empty
    (45) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (46) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (129) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 129 (empty -> .)

    funcion                        shift and go to state 21
    funcproc                       shift and go to state 42
    procedimiento                  shift and go to state 20
    empty                          shift and go to state 22

state 22

    (44) funcproc -> empty .

    PROGRAMA        reduce using rule 44 (funcproc -> empty .)


state 23

    (45) procedimiento -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    IDENT           shift and go to state 43


state 24

    (46) funcion -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    IDENT           shift and go to state 44


state 25

    (26) protfuncproc -> PROTOTIPOS gpofuncproc . FIN DE PROTOTIPOS PUNTO_COMA

    FIN             shift and go to state 45


state 26

    (28) gpofuncproc -> protfunc .
    (31) gpofuncproc -> protfunc . gpofuncproc
    (28) gpofuncproc -> . protfunc
    (29) gpofuncproc -> . protproc
    (30) gpofuncproc -> . protproc gpofuncproc
    (31) gpofuncproc -> . protfunc gpofuncproc
    (32) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (33) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (34) protproc -> . empty
    (129) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 28 (gpofuncproc -> protfunc .)
    FIN             reduce using rule 28 (gpofuncproc -> protfunc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 129 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]

    protfunc                       shift and go to state 26
    gpofuncproc                    shift and go to state 46
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 27

    (29) gpofuncproc -> protproc .
    (30) gpofuncproc -> protproc . gpofuncproc
    (28) gpofuncproc -> . protfunc
    (29) gpofuncproc -> . protproc
    (30) gpofuncproc -> . protproc gpofuncproc
    (31) gpofuncproc -> . protfunc gpofuncproc
    (32) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (33) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (34) protproc -> . empty
    (129) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 29 (gpofuncproc -> protproc .)
    FIN             reduce using rule 29 (gpofuncproc -> protproc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 129 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]

    protproc                       shift and go to state 27
    gpofuncproc                    shift and go to state 47
    protfunc                       shift and go to state 26
    empty                          shift and go to state 30

state 28

    (32) protfunc -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    IDENT           shift and go to state 48


state 29

    (33) protproc -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    IDENT           shift and go to state 49


state 30

    (34) protproc -> empty .

    FUNCION         reduce using rule 34 (protproc -> empty .)
    PROCEDIMIENTO   reduce using rule 34 (protproc -> empty .)
    FIN             reduce using rule 34 (protproc -> empty .)


state 31

    (4) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 50


state 32

    (7) gpoids -> IDENT dimens . COMA gpoids
    (8) gpoids -> IDENT dimens .

    COMA            shift and go to state 51
    PUNTOS_DOBLES   reduce using rule 8 (gpoids -> IDENT dimens .)


state 33

    (10) gpoids -> IDENT COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (129) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 129 (empty -> .)

    gpoids                         shift and go to state 52
    empty                          shift and go to state 53

state 34

    (9) gpoids -> IDENT opasig . COMA gpoids

    COMA            shift and go to state 54


state 35

    (12) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (17) valor -> . CTE_ENTERA
    (18) valor -> . IDENT

    CTE_ENTERA      shift and go to state 56
    IDENT           shift and go to state 57

    valor                          shift and go to state 55

state 36

    (13) dimens -> empty .
    (16) opasig -> empty .

  ! reduce/reduce conflict for COMA resolved using rule 13 (dimens -> empty .)
    COMA            reduce using rule 13 (dimens -> empty .)
    PUNTOS_DOBLES   reduce using rule 13 (dimens -> empty .)

  ! COMA            [ reduce using rule 16 (opasig -> empty .) ]


state 37

    (14) opasig -> OP_ASIG . CTE_ENTERA
    (15) opasig -> OP_ASIG . IDENT

    CTE_ENTERA      shift and go to state 58
    IDENT           shift and go to state 59


state 38

    (21) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA
    (23) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 60


state 39

    (22) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA
    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 61


state 40

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA . block FIN DE PROGRAMA PUNTO
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . estatuto PUNTO_COMA
    (49) block -> . estatuto
    (50) block -> . estatuto block
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)

  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]

    block                          shift and go to state 62
    estatuto                       shift and go to state 63
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 41

    (42) funcproc -> procedimiento funcproc .

    PROGRAMA        reduce using rule 42 (funcproc -> procedimiento funcproc .)


state 42

    (43) funcproc -> funcion funcproc .

    PROGRAMA        reduce using rule 43 (funcproc -> funcion funcproc .)


state 43

    (45) procedimiento -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 89


state 44

    (46) funcion -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 90


state 45

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN . DE PROTOTIPOS PUNTO_COMA

    DE              shift and go to state 91


state 46

    (31) gpofuncproc -> protfunc gpofuncproc .

    FIN             reduce using rule 31 (gpofuncproc -> protfunc gpofuncproc .)


state 47

    (30) gpofuncproc -> protproc gpofuncproc .

    FIN             reduce using rule 30 (gpofuncproc -> protproc gpofuncproc .)


state 48

    (32) protfunc -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 92


state 49

    (33) protproc -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 93


state 50

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 94


state 51

    (7) gpoids -> IDENT dimens COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (129) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 129 (empty -> .)

    gpoids                         shift and go to state 95
    empty                          shift and go to state 53

state 52

    (10) gpoids -> IDENT COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 10 (gpoids -> IDENT COMA gpoids .)


state 53

    (11) gpoids -> empty .

    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> empty .)


state 54

    (9) gpoids -> IDENT opasig COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (129) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 129 (empty -> .)

    gpoids                         shift and go to state 96
    empty                          shift and go to state 53

state 55

    (12) dimens -> CORCHETE_EMPIEZA valor . CORCHETE_TERMINA dimens

    CORCHETE_TERMINA shift and go to state 97


state 56

    (17) valor -> CTE_ENTERA .

    CORCHETE_TERMINA reduce using rule 17 (valor -> CTE_ENTERA .)


state 57

    (18) valor -> IDENT .

    CORCHETE_TERMINA reduce using rule 18 (valor -> IDENT .)


state 58

    (14) opasig -> OP_ASIG CTE_ENTERA .

    COMA            reduce using rule 14 (opasig -> OP_ASIG CTE_ENTERA .)


state 59

    (15) opasig -> OP_ASIG IDENT .

    COMA            reduce using rule 15 (opasig -> OP_ASIG IDENT .)


state 60

    (21) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .
    (23) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (129) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    VARIABLES       reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    FUNCION         reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROGRAMA        reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 129 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 129 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 129 (empty -> .) ]
  ! FUNCION         [ reduce using rule 129 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 129 (empty -> .) ]

    grupoconst                     shift and go to state 98
    empty                          shift and go to state 10

state 61

    (22) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .
    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (129) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    VARIABLES       reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    FUNCION         reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROGRAMA        reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 129 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 129 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 129 (empty -> .) ]
  ! FUNCION         [ reduce using rule 129 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 129 (empty -> .) ]

    grupoconst                     shift and go to state 99
    empty                          shift and go to state 10

state 62

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block . FIN DE PROGRAMA PUNTO

    FIN             shift and go to state 100


state 63

    (47) block -> estatuto . PUNTO_COMA block
    (48) block -> estatuto . PUNTO_COMA
    (49) block -> estatuto .
    (50) block -> estatuto . block
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . estatuto PUNTO_COMA
    (49) block -> . estatuto
    (50) block -> . estatuto block
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for PUNTO_COMA resolved as shift
  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 49 (block -> estatuto .)
  ! reduce/reduce conflict for HASTA resolved using rule 49 (block -> estatuto .)
    PUNTO_COMA      shift and go to state 101
    FIN             reduce using rule 49 (block -> estatuto .)
    HASTA           reduce using rule 49 (block -> estatuto .)
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

  ! PUNTO_COMA      [ reduce using rule 129 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]
  ! HASTA           [ reduce using rule 129 (empty -> .) ]

    estatuto                       shift and go to state 63
    block                          shift and go to state 102
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 64

    (51) estatuto -> si .

    PUNTO_COMA      reduce using rule 51 (estatuto -> si .)
    LIMPIA          reduce using rule 51 (estatuto -> si .)
    INTERRUMPE      reduce using rule 51 (estatuto -> si .)
    CONTINUA        reduce using rule 51 (estatuto -> si .)
    SI              reduce using rule 51 (estatuto -> si .)
    IDENT           reduce using rule 51 (estatuto -> si .)
    DESDE           reduce using rule 51 (estatuto -> si .)
    REPETIR         reduce using rule 51 (estatuto -> si .)
    MIENTRAS        reduce using rule 51 (estatuto -> si .)
    CUANDO          reduce using rule 51 (estatuto -> si .)
    REGRESA         reduce using rule 51 (estatuto -> si .)
    IMPRIME         reduce using rule 51 (estatuto -> si .)
    IMPRIMENL       reduce using rule 51 (estatuto -> si .)
    LEE             reduce using rule 51 (estatuto -> si .)
    FIN             reduce using rule 51 (estatuto -> si .)
    HASTA           reduce using rule 51 (estatuto -> si .)
    SINO            reduce using rule 51 (estatuto -> si .)
    SEA             reduce using rule 51 (estatuto -> si .)
    OTRO            reduce using rule 51 (estatuto -> si .)


state 65

    (52) estatuto -> lfunc .

    PUNTO_COMA      reduce using rule 52 (estatuto -> lfunc .)
    LIMPIA          reduce using rule 52 (estatuto -> lfunc .)
    INTERRUMPE      reduce using rule 52 (estatuto -> lfunc .)
    CONTINUA        reduce using rule 52 (estatuto -> lfunc .)
    SI              reduce using rule 52 (estatuto -> lfunc .)
    IDENT           reduce using rule 52 (estatuto -> lfunc .)
    DESDE           reduce using rule 52 (estatuto -> lfunc .)
    REPETIR         reduce using rule 52 (estatuto -> lfunc .)
    MIENTRAS        reduce using rule 52 (estatuto -> lfunc .)
    CUANDO          reduce using rule 52 (estatuto -> lfunc .)
    REGRESA         reduce using rule 52 (estatuto -> lfunc .)
    IMPRIME         reduce using rule 52 (estatuto -> lfunc .)
    IMPRIMENL       reduce using rule 52 (estatuto -> lfunc .)
    LEE             reduce using rule 52 (estatuto -> lfunc .)
    FIN             reduce using rule 52 (estatuto -> lfunc .)
    HASTA           reduce using rule 52 (estatuto -> lfunc .)
    SINO            reduce using rule 52 (estatuto -> lfunc .)
    SEA             reduce using rule 52 (estatuto -> lfunc .)
    OTRO            reduce using rule 52 (estatuto -> lfunc .)


state 66

    (53) estatuto -> LIMPIA .

    PUNTO_COMA      reduce using rule 53 (estatuto -> LIMPIA .)
    LIMPIA          reduce using rule 53 (estatuto -> LIMPIA .)
    INTERRUMPE      reduce using rule 53 (estatuto -> LIMPIA .)
    CONTINUA        reduce using rule 53 (estatuto -> LIMPIA .)
    SI              reduce using rule 53 (estatuto -> LIMPIA .)
    IDENT           reduce using rule 53 (estatuto -> LIMPIA .)
    DESDE           reduce using rule 53 (estatuto -> LIMPIA .)
    REPETIR         reduce using rule 53 (estatuto -> LIMPIA .)
    MIENTRAS        reduce using rule 53 (estatuto -> LIMPIA .)
    CUANDO          reduce using rule 53 (estatuto -> LIMPIA .)
    REGRESA         reduce using rule 53 (estatuto -> LIMPIA .)
    IMPRIME         reduce using rule 53 (estatuto -> LIMPIA .)
    IMPRIMENL       reduce using rule 53 (estatuto -> LIMPIA .)
    LEE             reduce using rule 53 (estatuto -> LIMPIA .)
    FIN             reduce using rule 53 (estatuto -> LIMPIA .)
    HASTA           reduce using rule 53 (estatuto -> LIMPIA .)
    SINO            reduce using rule 53 (estatuto -> LIMPIA .)
    SEA             reduce using rule 53 (estatuto -> LIMPIA .)
    OTRO            reduce using rule 53 (estatuto -> LIMPIA .)


state 67

    (54) estatuto -> desde .

    PUNTO_COMA      reduce using rule 54 (estatuto -> desde .)
    LIMPIA          reduce using rule 54 (estatuto -> desde .)
    INTERRUMPE      reduce using rule 54 (estatuto -> desde .)
    CONTINUA        reduce using rule 54 (estatuto -> desde .)
    SI              reduce using rule 54 (estatuto -> desde .)
    IDENT           reduce using rule 54 (estatuto -> desde .)
    DESDE           reduce using rule 54 (estatuto -> desde .)
    REPETIR         reduce using rule 54 (estatuto -> desde .)
    MIENTRAS        reduce using rule 54 (estatuto -> desde .)
    CUANDO          reduce using rule 54 (estatuto -> desde .)
    REGRESA         reduce using rule 54 (estatuto -> desde .)
    IMPRIME         reduce using rule 54 (estatuto -> desde .)
    IMPRIMENL       reduce using rule 54 (estatuto -> desde .)
    LEE             reduce using rule 54 (estatuto -> desde .)
    FIN             reduce using rule 54 (estatuto -> desde .)
    HASTA           reduce using rule 54 (estatuto -> desde .)
    SINO            reduce using rule 54 (estatuto -> desde .)
    SEA             reduce using rule 54 (estatuto -> desde .)
    OTRO            reduce using rule 54 (estatuto -> desde .)


state 68

    (55) estatuto -> repetir .

    PUNTO_COMA      reduce using rule 55 (estatuto -> repetir .)
    LIMPIA          reduce using rule 55 (estatuto -> repetir .)
    INTERRUMPE      reduce using rule 55 (estatuto -> repetir .)
    CONTINUA        reduce using rule 55 (estatuto -> repetir .)
    SI              reduce using rule 55 (estatuto -> repetir .)
    IDENT           reduce using rule 55 (estatuto -> repetir .)
    DESDE           reduce using rule 55 (estatuto -> repetir .)
    REPETIR         reduce using rule 55 (estatuto -> repetir .)
    MIENTRAS        reduce using rule 55 (estatuto -> repetir .)
    CUANDO          reduce using rule 55 (estatuto -> repetir .)
    REGRESA         reduce using rule 55 (estatuto -> repetir .)
    IMPRIME         reduce using rule 55 (estatuto -> repetir .)
    IMPRIMENL       reduce using rule 55 (estatuto -> repetir .)
    LEE             reduce using rule 55 (estatuto -> repetir .)
    FIN             reduce using rule 55 (estatuto -> repetir .)
    HASTA           reduce using rule 55 (estatuto -> repetir .)
    SINO            reduce using rule 55 (estatuto -> repetir .)
    SEA             reduce using rule 55 (estatuto -> repetir .)
    OTRO            reduce using rule 55 (estatuto -> repetir .)


state 69

    (56) estatuto -> mientras .

    PUNTO_COMA      reduce using rule 56 (estatuto -> mientras .)
    LIMPIA          reduce using rule 56 (estatuto -> mientras .)
    INTERRUMPE      reduce using rule 56 (estatuto -> mientras .)
    CONTINUA        reduce using rule 56 (estatuto -> mientras .)
    SI              reduce using rule 56 (estatuto -> mientras .)
    IDENT           reduce using rule 56 (estatuto -> mientras .)
    DESDE           reduce using rule 56 (estatuto -> mientras .)
    REPETIR         reduce using rule 56 (estatuto -> mientras .)
    MIENTRAS        reduce using rule 56 (estatuto -> mientras .)
    CUANDO          reduce using rule 56 (estatuto -> mientras .)
    REGRESA         reduce using rule 56 (estatuto -> mientras .)
    IMPRIME         reduce using rule 56 (estatuto -> mientras .)
    IMPRIMENL       reduce using rule 56 (estatuto -> mientras .)
    LEE             reduce using rule 56 (estatuto -> mientras .)
    FIN             reduce using rule 56 (estatuto -> mientras .)
    HASTA           reduce using rule 56 (estatuto -> mientras .)
    SINO            reduce using rule 56 (estatuto -> mientras .)
    SEA             reduce using rule 56 (estatuto -> mientras .)
    OTRO            reduce using rule 56 (estatuto -> mientras .)


state 70

    (57) estatuto -> cuando .

    PUNTO_COMA      reduce using rule 57 (estatuto -> cuando .)
    LIMPIA          reduce using rule 57 (estatuto -> cuando .)
    INTERRUMPE      reduce using rule 57 (estatuto -> cuando .)
    CONTINUA        reduce using rule 57 (estatuto -> cuando .)
    SI              reduce using rule 57 (estatuto -> cuando .)
    IDENT           reduce using rule 57 (estatuto -> cuando .)
    DESDE           reduce using rule 57 (estatuto -> cuando .)
    REPETIR         reduce using rule 57 (estatuto -> cuando .)
    MIENTRAS        reduce using rule 57 (estatuto -> cuando .)
    CUANDO          reduce using rule 57 (estatuto -> cuando .)
    REGRESA         reduce using rule 57 (estatuto -> cuando .)
    IMPRIME         reduce using rule 57 (estatuto -> cuando .)
    IMPRIMENL       reduce using rule 57 (estatuto -> cuando .)
    LEE             reduce using rule 57 (estatuto -> cuando .)
    FIN             reduce using rule 57 (estatuto -> cuando .)
    HASTA           reduce using rule 57 (estatuto -> cuando .)
    SINO            reduce using rule 57 (estatuto -> cuando .)
    SEA             reduce using rule 57 (estatuto -> cuando .)
    OTRO            reduce using rule 57 (estatuto -> cuando .)


state 71

    (58) estatuto -> regresa .

    PUNTO_COMA      reduce using rule 58 (estatuto -> regresa .)
    LIMPIA          reduce using rule 58 (estatuto -> regresa .)
    INTERRUMPE      reduce using rule 58 (estatuto -> regresa .)
    CONTINUA        reduce using rule 58 (estatuto -> regresa .)
    SI              reduce using rule 58 (estatuto -> regresa .)
    IDENT           reduce using rule 58 (estatuto -> regresa .)
    DESDE           reduce using rule 58 (estatuto -> regresa .)
    REPETIR         reduce using rule 58 (estatuto -> regresa .)
    MIENTRAS        reduce using rule 58 (estatuto -> regresa .)
    CUANDO          reduce using rule 58 (estatuto -> regresa .)
    REGRESA         reduce using rule 58 (estatuto -> regresa .)
    IMPRIME         reduce using rule 58 (estatuto -> regresa .)
    IMPRIMENL       reduce using rule 58 (estatuto -> regresa .)
    LEE             reduce using rule 58 (estatuto -> regresa .)
    FIN             reduce using rule 58 (estatuto -> regresa .)
    HASTA           reduce using rule 58 (estatuto -> regresa .)
    SINO            reduce using rule 58 (estatuto -> regresa .)
    SEA             reduce using rule 58 (estatuto -> regresa .)
    OTRO            reduce using rule 58 (estatuto -> regresa .)


state 72

    (59) estatuto -> asigna .

    PUNTO_COMA      reduce using rule 59 (estatuto -> asigna .)
    LIMPIA          reduce using rule 59 (estatuto -> asigna .)
    INTERRUMPE      reduce using rule 59 (estatuto -> asigna .)
    CONTINUA        reduce using rule 59 (estatuto -> asigna .)
    SI              reduce using rule 59 (estatuto -> asigna .)
    IDENT           reduce using rule 59 (estatuto -> asigna .)
    DESDE           reduce using rule 59 (estatuto -> asigna .)
    REPETIR         reduce using rule 59 (estatuto -> asigna .)
    MIENTRAS        reduce using rule 59 (estatuto -> asigna .)
    CUANDO          reduce using rule 59 (estatuto -> asigna .)
    REGRESA         reduce using rule 59 (estatuto -> asigna .)
    IMPRIME         reduce using rule 59 (estatuto -> asigna .)
    IMPRIMENL       reduce using rule 59 (estatuto -> asigna .)
    LEE             reduce using rule 59 (estatuto -> asigna .)
    FIN             reduce using rule 59 (estatuto -> asigna .)
    HASTA           reduce using rule 59 (estatuto -> asigna .)
    SINO            reduce using rule 59 (estatuto -> asigna .)
    SEA             reduce using rule 59 (estatuto -> asigna .)
    OTRO            reduce using rule 59 (estatuto -> asigna .)


state 73

    (60) estatuto -> imprime .

    PUNTO_COMA      reduce using rule 60 (estatuto -> imprime .)
    LIMPIA          reduce using rule 60 (estatuto -> imprime .)
    INTERRUMPE      reduce using rule 60 (estatuto -> imprime .)
    CONTINUA        reduce using rule 60 (estatuto -> imprime .)
    SI              reduce using rule 60 (estatuto -> imprime .)
    IDENT           reduce using rule 60 (estatuto -> imprime .)
    DESDE           reduce using rule 60 (estatuto -> imprime .)
    REPETIR         reduce using rule 60 (estatuto -> imprime .)
    MIENTRAS        reduce using rule 60 (estatuto -> imprime .)
    CUANDO          reduce using rule 60 (estatuto -> imprime .)
    REGRESA         reduce using rule 60 (estatuto -> imprime .)
    IMPRIME         reduce using rule 60 (estatuto -> imprime .)
    IMPRIMENL       reduce using rule 60 (estatuto -> imprime .)
    LEE             reduce using rule 60 (estatuto -> imprime .)
    FIN             reduce using rule 60 (estatuto -> imprime .)
    HASTA           reduce using rule 60 (estatuto -> imprime .)
    SINO            reduce using rule 60 (estatuto -> imprime .)
    SEA             reduce using rule 60 (estatuto -> imprime .)
    OTRO            reduce using rule 60 (estatuto -> imprime .)


state 74

    (61) estatuto -> imprimenl .

    PUNTO_COMA      reduce using rule 61 (estatuto -> imprimenl .)
    LIMPIA          reduce using rule 61 (estatuto -> imprimenl .)
    INTERRUMPE      reduce using rule 61 (estatuto -> imprimenl .)
    CONTINUA        reduce using rule 61 (estatuto -> imprimenl .)
    SI              reduce using rule 61 (estatuto -> imprimenl .)
    IDENT           reduce using rule 61 (estatuto -> imprimenl .)
    DESDE           reduce using rule 61 (estatuto -> imprimenl .)
    REPETIR         reduce using rule 61 (estatuto -> imprimenl .)
    MIENTRAS        reduce using rule 61 (estatuto -> imprimenl .)
    CUANDO          reduce using rule 61 (estatuto -> imprimenl .)
    REGRESA         reduce using rule 61 (estatuto -> imprimenl .)
    IMPRIME         reduce using rule 61 (estatuto -> imprimenl .)
    IMPRIMENL       reduce using rule 61 (estatuto -> imprimenl .)
    LEE             reduce using rule 61 (estatuto -> imprimenl .)
    FIN             reduce using rule 61 (estatuto -> imprimenl .)
    HASTA           reduce using rule 61 (estatuto -> imprimenl .)
    SINO            reduce using rule 61 (estatuto -> imprimenl .)
    SEA             reduce using rule 61 (estatuto -> imprimenl .)
    OTRO            reduce using rule 61 (estatuto -> imprimenl .)


state 75

    (62) estatuto -> lee .

    PUNTO_COMA      reduce using rule 62 (estatuto -> lee .)
    LIMPIA          reduce using rule 62 (estatuto -> lee .)
    INTERRUMPE      reduce using rule 62 (estatuto -> lee .)
    CONTINUA        reduce using rule 62 (estatuto -> lee .)
    SI              reduce using rule 62 (estatuto -> lee .)
    IDENT           reduce using rule 62 (estatuto -> lee .)
    DESDE           reduce using rule 62 (estatuto -> lee .)
    REPETIR         reduce using rule 62 (estatuto -> lee .)
    MIENTRAS        reduce using rule 62 (estatuto -> lee .)
    CUANDO          reduce using rule 62 (estatuto -> lee .)
    REGRESA         reduce using rule 62 (estatuto -> lee .)
    IMPRIME         reduce using rule 62 (estatuto -> lee .)
    IMPRIMENL       reduce using rule 62 (estatuto -> lee .)
    LEE             reduce using rule 62 (estatuto -> lee .)
    FIN             reduce using rule 62 (estatuto -> lee .)
    HASTA           reduce using rule 62 (estatuto -> lee .)
    SINO            reduce using rule 62 (estatuto -> lee .)
    SEA             reduce using rule 62 (estatuto -> lee .)
    OTRO            reduce using rule 62 (estatuto -> lee .)


state 76

    (63) estatuto -> INTERRUMPE .

    PUNTO_COMA      reduce using rule 63 (estatuto -> INTERRUMPE .)
    LIMPIA          reduce using rule 63 (estatuto -> INTERRUMPE .)
    INTERRUMPE      reduce using rule 63 (estatuto -> INTERRUMPE .)
    CONTINUA        reduce using rule 63 (estatuto -> INTERRUMPE .)
    SI              reduce using rule 63 (estatuto -> INTERRUMPE .)
    IDENT           reduce using rule 63 (estatuto -> INTERRUMPE .)
    DESDE           reduce using rule 63 (estatuto -> INTERRUMPE .)
    REPETIR         reduce using rule 63 (estatuto -> INTERRUMPE .)
    MIENTRAS        reduce using rule 63 (estatuto -> INTERRUMPE .)
    CUANDO          reduce using rule 63 (estatuto -> INTERRUMPE .)
    REGRESA         reduce using rule 63 (estatuto -> INTERRUMPE .)
    IMPRIME         reduce using rule 63 (estatuto -> INTERRUMPE .)
    IMPRIMENL       reduce using rule 63 (estatuto -> INTERRUMPE .)
    LEE             reduce using rule 63 (estatuto -> INTERRUMPE .)
    FIN             reduce using rule 63 (estatuto -> INTERRUMPE .)
    HASTA           reduce using rule 63 (estatuto -> INTERRUMPE .)
    SINO            reduce using rule 63 (estatuto -> INTERRUMPE .)
    SEA             reduce using rule 63 (estatuto -> INTERRUMPE .)
    OTRO            reduce using rule 63 (estatuto -> INTERRUMPE .)


state 77

    (64) estatuto -> CONTINUA .

    PUNTO_COMA      reduce using rule 64 (estatuto -> CONTINUA .)
    LIMPIA          reduce using rule 64 (estatuto -> CONTINUA .)
    INTERRUMPE      reduce using rule 64 (estatuto -> CONTINUA .)
    CONTINUA        reduce using rule 64 (estatuto -> CONTINUA .)
    SI              reduce using rule 64 (estatuto -> CONTINUA .)
    IDENT           reduce using rule 64 (estatuto -> CONTINUA .)
    DESDE           reduce using rule 64 (estatuto -> CONTINUA .)
    REPETIR         reduce using rule 64 (estatuto -> CONTINUA .)
    MIENTRAS        reduce using rule 64 (estatuto -> CONTINUA .)
    CUANDO          reduce using rule 64 (estatuto -> CONTINUA .)
    REGRESA         reduce using rule 64 (estatuto -> CONTINUA .)
    IMPRIME         reduce using rule 64 (estatuto -> CONTINUA .)
    IMPRIMENL       reduce using rule 64 (estatuto -> CONTINUA .)
    LEE             reduce using rule 64 (estatuto -> CONTINUA .)
    FIN             reduce using rule 64 (estatuto -> CONTINUA .)
    HASTA           reduce using rule 64 (estatuto -> CONTINUA .)
    SINO            reduce using rule 64 (estatuto -> CONTINUA .)
    SEA             reduce using rule 64 (estatuto -> CONTINUA .)
    OTRO            reduce using rule 64 (estatuto -> CONTINUA .)


state 78

    (65) estatuto -> empty .

    PUNTO_COMA      reduce using rule 65 (estatuto -> empty .)
    LIMPIA          reduce using rule 65 (estatuto -> empty .)
    INTERRUMPE      reduce using rule 65 (estatuto -> empty .)
    CONTINUA        reduce using rule 65 (estatuto -> empty .)
    SI              reduce using rule 65 (estatuto -> empty .)
    IDENT           reduce using rule 65 (estatuto -> empty .)
    DESDE           reduce using rule 65 (estatuto -> empty .)
    REPETIR         reduce using rule 65 (estatuto -> empty .)
    MIENTRAS        reduce using rule 65 (estatuto -> empty .)
    CUANDO          reduce using rule 65 (estatuto -> empty .)
    REGRESA         reduce using rule 65 (estatuto -> empty .)
    IMPRIME         reduce using rule 65 (estatuto -> empty .)
    IMPRIMENL       reduce using rule 65 (estatuto -> empty .)
    LEE             reduce using rule 65 (estatuto -> empty .)
    FIN             reduce using rule 65 (estatuto -> empty .)
    HASTA           reduce using rule 65 (estatuto -> empty .)
    SINO            reduce using rule 65 (estatuto -> empty .)
    SEA             reduce using rule 65 (estatuto -> empty .)
    OTRO            reduce using rule 65 (estatuto -> empty .)


state 79

    (66) si -> SI . PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino

    PAREN_EMPIEZA   shift and go to state 103


state 80

    (117) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (118) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (77) asigna -> IDENT . udim OP_ASIG exprlog
    (119) parenemp -> . PAREN_EMPIEZA
    (87) udim -> . expr udim
    (88) udim -> . empty
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (129) empty -> .
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    PAREN_EMPIEZA   shift and go to state 107
    OP_ASIG         reduce using rule 129 (empty -> .)
    MAS             reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 129 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 129 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 129 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 129 (empty -> .) ]
  ! FALSO           [ reduce using rule 129 (empty -> .) ]

    parenemp                       shift and go to state 105
    udim                           shift and go to state 106
    expr                           shift and go to state 108
    empty                          shift and go to state 109
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 81

    (72) desde -> DESDE . EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> DESDE . EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> DESDE . EL VALOR DE asigna HASTA expr error bckesp

    EL              shift and go to state 121


state 82

    (75) repetir -> REPETIR . block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . estatuto PUNTO_COMA
    (49) block -> . estatuto
    (50) block -> . estatuto block
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)

  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]

    block                          shift and go to state 122
    estatuto                       shift and go to state 63
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 83

    (76) mientras -> MIENTRAS . SE CUMPLA QUE exprlog bckesp

    SE              shift and go to state 123


state 84

    (78) cuando -> CUANDO . EL VALOR DE IDENT INICIO gposea otro FIN

    EL              shift and go to state 124


state 85

    (86) regresa -> REGRESA . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 125


state 86

    (120) imprime -> IMPRIME . PAREN_EMPIEZA gpoexp PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 126


state 87

    (121) imprimenl -> IMPRIMENL . PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> IMPRIMENL . PAREN_EMPIEZA gpoexp error

    PAREN_EMPIEZA   shift and go to state 127


state 88

    (123) lee -> LEE . PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> LEE . PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 128


state 89

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (129) empty -> .

    IDENT           shift and go to state 129
    PAREN_TERMINA   reduce using rule 129 (empty -> .)

    params                         shift and go to state 130
    gpopars                        shift and go to state 131
    empty                          shift and go to state 132

state 90

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (129) empty -> .

    IDENT           shift and go to state 129
    PAREN_TERMINA   reduce using rule 129 (empty -> .)

    params                         shift and go to state 133
    gpopars                        shift and go to state 131
    empty                          shift and go to state 132

state 91

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE . PROTOTIPOS PUNTO_COMA

    PROTOTIPOS      shift and go to state 134


state 92

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (129) empty -> .

    IDENT           shift and go to state 129
    PAREN_TERMINA   reduce using rule 129 (empty -> .)

    params                         shift and go to state 135
    gpopars                        shift and go to state 131
    empty                          shift and go to state 132

state 93

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (129) empty -> .

    IDENT           shift and go to state 129
    PAREN_TERMINA   reduce using rule 129 (empty -> .)

    params                         shift and go to state 136
    gpopars                        shift and go to state 131
    empty                          shift and go to state 132

state 94

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA . gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (129) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    INICIO          reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 129 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 129 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 129 (empty -> .) ]
  ! FUNCION         [ reduce using rule 129 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 129 (empty -> .) ]
  ! INICIO          [ reduce using rule 129 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 137
    empty                          shift and go to state 16

state 95

    (7) gpoids -> IDENT dimens COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 7 (gpoids -> IDENT dimens COMA gpoids .)


state 96

    (9) gpoids -> IDENT opasig COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 9 (gpoids -> IDENT opasig COMA gpoids .)


state 97

    (12) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA . dimens
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (129) empty -> .

    CORCHETE_EMPIEZA shift and go to state 35
    COMA            reduce using rule 129 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 129 (empty -> .)
    POTENCIA        reduce using rule 129 (empty -> .)
    MULTI           reduce using rule 129 (empty -> .)
    DIV             reduce using rule 129 (empty -> .)
    MOD             reduce using rule 129 (empty -> .)
    MAS             reduce using rule 129 (empty -> .)
    MENOS           reduce using rule 129 (empty -> .)
    IDENT           reduce using rule 129 (empty -> .)
    CTE_ENTERA      reduce using rule 129 (empty -> .)
    CTE_REAL        reduce using rule 129 (empty -> .)
    CTE_ALFA        reduce using rule 129 (empty -> .)
    VERDADERO       reduce using rule 129 (empty -> .)
    FALSO           reduce using rule 129 (empty -> .)
    OP_ASIG         reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    DECR            reduce using rule 129 (empty -> .)
    INCR            reduce using rule 129 (empty -> .)

    dimens                         shift and go to state 138
    empty                          shift and go to state 139

state 98

    (23) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)


state 99

    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)


state 100

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN . DE PROGRAMA PUNTO

    DE              shift and go to state 140


state 101

    (47) block -> estatuto PUNTO_COMA . block
    (48) block -> estatuto PUNTO_COMA .
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . estatuto PUNTO_COMA
    (49) block -> . estatuto
    (50) block -> . estatuto block
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 48 (block -> estatuto PUNTO_COMA .)
  ! reduce/reduce conflict for HASTA resolved using rule 48 (block -> estatuto PUNTO_COMA .)
    FIN             reduce using rule 48 (block -> estatuto PUNTO_COMA .)
    HASTA           reduce using rule 48 (block -> estatuto PUNTO_COMA .)
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88
    PUNTO_COMA      reduce using rule 129 (empty -> .)

  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]
  ! HASTA           [ reduce using rule 129 (empty -> .) ]

    estatuto                       shift and go to state 63
    block                          shift and go to state 141
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 102

    (50) block -> estatuto block .

    FIN             reduce using rule 50 (block -> estatuto block .)
    HASTA           reduce using rule 50 (block -> estatuto block .)


state 103

    (66) si -> SI PAREN_EMPIEZA . exprlog PAREN_TERMINA HACER bckesp sino
    (89) exprlog -> . opy
    (90) exprlog -> . opy O exprlog
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]

    exprlog                        shift and go to state 142
    opy                            shift and go to state 143
    opno                           shift and go to state 144
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 104

    (109) termino -> IDENT .
    (110) termino -> IDENT . dimens
    (117) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (118) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (119) parenemp -> . PAREN_EMPIEZA
    (129) empty -> .

  ! reduce/reduce conflict for POTENCIA resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for MAS resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for MENOS resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for IDENT resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_ENTERA resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_REAL resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_ALFA resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for VERDADERO resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for FALSO resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_ASIG resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for COMA resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for error resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for SI resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for DESDE resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for REPETIR resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for CUANDO resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for REGRESA resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for LEE resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for FIN resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for HASTA resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for SINO resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for SEA resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for OTRO resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for INICIO resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for DECR resolved using rule 109 (termino -> IDENT .)
  ! reduce/reduce conflict for INCR resolved using rule 109 (termino -> IDENT .)
    POTENCIA        reduce using rule 109 (termino -> IDENT .)
    MULTI           reduce using rule 109 (termino -> IDENT .)
    DIV             reduce using rule 109 (termino -> IDENT .)
    MOD             reduce using rule 109 (termino -> IDENT .)
    MAS             reduce using rule 109 (termino -> IDENT .)
    MENOS           reduce using rule 109 (termino -> IDENT .)
    IDENT           reduce using rule 109 (termino -> IDENT .)
    CTE_ENTERA      reduce using rule 109 (termino -> IDENT .)
    CTE_REAL        reduce using rule 109 (termino -> IDENT .)
    CTE_ALFA        reduce using rule 109 (termino -> IDENT .)
    VERDADERO       reduce using rule 109 (termino -> IDENT .)
    FALSO           reduce using rule 109 (termino -> IDENT .)
    OP_ASIG         reduce using rule 109 (termino -> IDENT .)
    OP_REL          reduce using rule 109 (termino -> IDENT .)
    Y               reduce using rule 109 (termino -> IDENT .)
    O               reduce using rule 109 (termino -> IDENT .)
    PAREN_TERMINA   reduce using rule 109 (termino -> IDENT .)
    COMA            reduce using rule 109 (termino -> IDENT .)
    error           reduce using rule 109 (termino -> IDENT .)
    PUNTO_COMA      reduce using rule 109 (termino -> IDENT .)
    LIMPIA          reduce using rule 109 (termino -> IDENT .)
    INTERRUMPE      reduce using rule 109 (termino -> IDENT .)
    CONTINUA        reduce using rule 109 (termino -> IDENT .)
    SI              reduce using rule 109 (termino -> IDENT .)
    DESDE           reduce using rule 109 (termino -> IDENT .)
    REPETIR         reduce using rule 109 (termino -> IDENT .)
    MIENTRAS        reduce using rule 109 (termino -> IDENT .)
    CUANDO          reduce using rule 109 (termino -> IDENT .)
    REGRESA         reduce using rule 109 (termino -> IDENT .)
    IMPRIME         reduce using rule 109 (termino -> IDENT .)
    IMPRIMENL       reduce using rule 109 (termino -> IDENT .)
    LEE             reduce using rule 109 (termino -> IDENT .)
    FIN             reduce using rule 109 (termino -> IDENT .)
    HASTA           reduce using rule 109 (termino -> IDENT .)
    SINO            reduce using rule 109 (termino -> IDENT .)
    SEA             reduce using rule 109 (termino -> IDENT .)
    OTRO            reduce using rule 109 (termino -> IDENT .)
    INICIO          reduce using rule 109 (termino -> IDENT .)
    DECR            reduce using rule 109 (termino -> IDENT .)
    INCR            reduce using rule 109 (termino -> IDENT .)
    CORCHETE_EMPIEZA shift and go to state 35
    PAREN_EMPIEZA   shift and go to state 107

  ! POTENCIA        [ reduce using rule 129 (empty -> .) ]
  ! MULTI           [ reduce using rule 129 (empty -> .) ]
  ! DIV             [ reduce using rule 129 (empty -> .) ]
  ! MOD             [ reduce using rule 129 (empty -> .) ]
  ! MAS             [ reduce using rule 129 (empty -> .) ]
  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 129 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 129 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 129 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 129 (empty -> .) ]
  ! FALSO           [ reduce using rule 129 (empty -> .) ]
  ! OP_ASIG         [ reduce using rule 129 (empty -> .) ]
  ! OP_REL          [ reduce using rule 129 (empty -> .) ]
  ! Y               [ reduce using rule 129 (empty -> .) ]
  ! O               [ reduce using rule 129 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 129 (empty -> .) ]
  ! COMA            [ reduce using rule 129 (empty -> .) ]
  ! error           [ reduce using rule 129 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 129 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]
  ! HASTA           [ reduce using rule 129 (empty -> .) ]
  ! SINO            [ reduce using rule 129 (empty -> .) ]
  ! SEA             [ reduce using rule 129 (empty -> .) ]
  ! OTRO            [ reduce using rule 129 (empty -> .) ]
  ! INICIO          [ reduce using rule 129 (empty -> .) ]
  ! DECR            [ reduce using rule 129 (empty -> .) ]
  ! INCR            [ reduce using rule 129 (empty -> .) ]

    dimens                         shift and go to state 149
    parenemp                       shift and go to state 105
    empty                          shift and go to state 139

state 105

    (117) lfunc -> IDENT parenemp . uparams PAREN_TERMINA
    (118) lfunc -> IDENT parenemp . error PAREN_TERMINA
    (127) uparams -> . exprlog
    (128) uparams -> . exprlog COMA uparams
    (89) exprlog -> . opy
    (90) exprlog -> . opy O exprlog
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    error           shift and go to state 151
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]

    uparams                        shift and go to state 150
    exprlog                        shift and go to state 152
    opy                            shift and go to state 143
    opno                           shift and go to state 144
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 106

    (77) asigna -> IDENT udim . OP_ASIG exprlog

    OP_ASIG         shift and go to state 153


state 107

    (119) parenemp -> PAREN_EMPIEZA .

    error           reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    NO              reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    MENOS           reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    IDENT           reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    CTE_ENTERA      reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    CTE_REAL        reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    CTE_ALFA        reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    VERDADERO       reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    FALSO           reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    PAREN_TERMINA   reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    COMA            reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    O               reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    Y               reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    OP_REL          reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)
    MAS             reduce using rule 119 (parenemp -> PAREN_EMPIEZA .)


state 108

    (87) udim -> expr . udim
    (87) udim -> . expr udim
    (88) udim -> . empty
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (129) empty -> .
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    OP_ASIG         reduce using rule 129 (empty -> .)
    MAS             reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 129 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 129 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 129 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 129 (empty -> .) ]
  ! FALSO           [ reduce using rule 129 (empty -> .) ]

    expr                           shift and go to state 108
    udim                           shift and go to state 154
    empty                          shift and go to state 109
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 109

    (88) udim -> empty .
    (104) multi -> empty .

  ! reduce/reduce conflict for OP_ASIG resolved using rule 88 (udim -> empty .)
    OP_ASIG         reduce using rule 88 (udim -> empty .)
    MAS             reduce using rule 104 (multi -> empty .)
    MENOS           reduce using rule 104 (multi -> empty .)
    IDENT           reduce using rule 104 (multi -> empty .)
    CTE_ENTERA      reduce using rule 104 (multi -> empty .)
    CTE_REAL        reduce using rule 104 (multi -> empty .)
    CTE_ALFA        reduce using rule 104 (multi -> empty .)
    VERDADERO       reduce using rule 104 (multi -> empty .)
    FALSO           reduce using rule 104 (multi -> empty .)

  ! OP_ASIG         [ reduce using rule 104 (multi -> empty .) ]


state 110

    (97) expr -> multi .
    (98) expr -> multi . MAS expr
    (99) expr -> multi . MENOS expr

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    IDENT           reduce using rule 97 (expr -> multi .)
    CTE_ENTERA      reduce using rule 97 (expr -> multi .)
    CTE_REAL        reduce using rule 97 (expr -> multi .)
    CTE_ALFA        reduce using rule 97 (expr -> multi .)
    VERDADERO       reduce using rule 97 (expr -> multi .)
    FALSO           reduce using rule 97 (expr -> multi .)
    OP_ASIG         reduce using rule 97 (expr -> multi .)
    OP_REL          reduce using rule 97 (expr -> multi .)
    Y               reduce using rule 97 (expr -> multi .)
    O               reduce using rule 97 (expr -> multi .)
    PAREN_TERMINA   reduce using rule 97 (expr -> multi .)
    COMA            reduce using rule 97 (expr -> multi .)
    error           reduce using rule 97 (expr -> multi .)
    PUNTO_COMA      reduce using rule 97 (expr -> multi .)
    LIMPIA          reduce using rule 97 (expr -> multi .)
    INTERRUMPE      reduce using rule 97 (expr -> multi .)
    CONTINUA        reduce using rule 97 (expr -> multi .)
    SI              reduce using rule 97 (expr -> multi .)
    DESDE           reduce using rule 97 (expr -> multi .)
    REPETIR         reduce using rule 97 (expr -> multi .)
    MIENTRAS        reduce using rule 97 (expr -> multi .)
    CUANDO          reduce using rule 97 (expr -> multi .)
    REGRESA         reduce using rule 97 (expr -> multi .)
    IMPRIME         reduce using rule 97 (expr -> multi .)
    IMPRIMENL       reduce using rule 97 (expr -> multi .)
    LEE             reduce using rule 97 (expr -> multi .)
    FIN             reduce using rule 97 (expr -> multi .)
    HASTA           reduce using rule 97 (expr -> multi .)
    SINO            reduce using rule 97 (expr -> multi .)
    SEA             reduce using rule 97 (expr -> multi .)
    OTRO            reduce using rule 97 (expr -> multi .)
    INICIO          reduce using rule 97 (expr -> multi .)
    DECR            reduce using rule 97 (expr -> multi .)
    INCR            reduce using rule 97 (expr -> multi .)
    MAS             shift and go to state 155
    MENOS           shift and go to state 156

  ! MENOS           [ reduce using rule 97 (expr -> multi .) ]
  ! MAS             [ reduce using rule 97 (expr -> multi .) ]


state 111

    (108) signo -> MENOS . termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

    termino                        shift and go to state 157
    lfunc                          shift and go to state 115

state 112

    (100) multi -> expo .
    (101) multi -> expo . MULTI multi
    (102) multi -> expo . DIV multi
    (103) multi -> expo . MOD multi

    MAS             reduce using rule 100 (multi -> expo .)
    MENOS           reduce using rule 100 (multi -> expo .)
    IDENT           reduce using rule 100 (multi -> expo .)
    CTE_ENTERA      reduce using rule 100 (multi -> expo .)
    CTE_REAL        reduce using rule 100 (multi -> expo .)
    CTE_ALFA        reduce using rule 100 (multi -> expo .)
    VERDADERO       reduce using rule 100 (multi -> expo .)
    FALSO           reduce using rule 100 (multi -> expo .)
    OP_ASIG         reduce using rule 100 (multi -> expo .)
    OP_REL          reduce using rule 100 (multi -> expo .)
    Y               reduce using rule 100 (multi -> expo .)
    O               reduce using rule 100 (multi -> expo .)
    PAREN_TERMINA   reduce using rule 100 (multi -> expo .)
    COMA            reduce using rule 100 (multi -> expo .)
    error           reduce using rule 100 (multi -> expo .)
    PUNTO_COMA      reduce using rule 100 (multi -> expo .)
    LIMPIA          reduce using rule 100 (multi -> expo .)
    INTERRUMPE      reduce using rule 100 (multi -> expo .)
    CONTINUA        reduce using rule 100 (multi -> expo .)
    SI              reduce using rule 100 (multi -> expo .)
    DESDE           reduce using rule 100 (multi -> expo .)
    REPETIR         reduce using rule 100 (multi -> expo .)
    MIENTRAS        reduce using rule 100 (multi -> expo .)
    CUANDO          reduce using rule 100 (multi -> expo .)
    REGRESA         reduce using rule 100 (multi -> expo .)
    IMPRIME         reduce using rule 100 (multi -> expo .)
    IMPRIMENL       reduce using rule 100 (multi -> expo .)
    LEE             reduce using rule 100 (multi -> expo .)
    FIN             reduce using rule 100 (multi -> expo .)
    HASTA           reduce using rule 100 (multi -> expo .)
    SINO            reduce using rule 100 (multi -> expo .)
    SEA             reduce using rule 100 (multi -> expo .)
    OTRO            reduce using rule 100 (multi -> expo .)
    INICIO          reduce using rule 100 (multi -> expo .)
    DECR            reduce using rule 100 (multi -> expo .)
    INCR            reduce using rule 100 (multi -> expo .)
    MULTI           shift and go to state 158
    DIV             shift and go to state 159
    MOD             shift and go to state 160


state 113

    (105) expo -> signo .
    (106) expo -> signo . POTENCIA expo

    MULTI           reduce using rule 105 (expo -> signo .)
    DIV             reduce using rule 105 (expo -> signo .)
    MOD             reduce using rule 105 (expo -> signo .)
    MAS             reduce using rule 105 (expo -> signo .)
    MENOS           reduce using rule 105 (expo -> signo .)
    IDENT           reduce using rule 105 (expo -> signo .)
    CTE_ENTERA      reduce using rule 105 (expo -> signo .)
    CTE_REAL        reduce using rule 105 (expo -> signo .)
    CTE_ALFA        reduce using rule 105 (expo -> signo .)
    VERDADERO       reduce using rule 105 (expo -> signo .)
    FALSO           reduce using rule 105 (expo -> signo .)
    OP_ASIG         reduce using rule 105 (expo -> signo .)
    OP_REL          reduce using rule 105 (expo -> signo .)
    Y               reduce using rule 105 (expo -> signo .)
    O               reduce using rule 105 (expo -> signo .)
    PAREN_TERMINA   reduce using rule 105 (expo -> signo .)
    COMA            reduce using rule 105 (expo -> signo .)
    error           reduce using rule 105 (expo -> signo .)
    PUNTO_COMA      reduce using rule 105 (expo -> signo .)
    LIMPIA          reduce using rule 105 (expo -> signo .)
    INTERRUMPE      reduce using rule 105 (expo -> signo .)
    CONTINUA        reduce using rule 105 (expo -> signo .)
    SI              reduce using rule 105 (expo -> signo .)
    DESDE           reduce using rule 105 (expo -> signo .)
    REPETIR         reduce using rule 105 (expo -> signo .)
    MIENTRAS        reduce using rule 105 (expo -> signo .)
    CUANDO          reduce using rule 105 (expo -> signo .)
    REGRESA         reduce using rule 105 (expo -> signo .)
    IMPRIME         reduce using rule 105 (expo -> signo .)
    IMPRIMENL       reduce using rule 105 (expo -> signo .)
    LEE             reduce using rule 105 (expo -> signo .)
    FIN             reduce using rule 105 (expo -> signo .)
    HASTA           reduce using rule 105 (expo -> signo .)
    SINO            reduce using rule 105 (expo -> signo .)
    SEA             reduce using rule 105 (expo -> signo .)
    OTRO            reduce using rule 105 (expo -> signo .)
    INICIO          reduce using rule 105 (expo -> signo .)
    DECR            reduce using rule 105 (expo -> signo .)
    INCR            reduce using rule 105 (expo -> signo .)
    POTENCIA        shift and go to state 161


state 114

    (107) signo -> termino .

    POTENCIA        reduce using rule 107 (signo -> termino .)
    MULTI           reduce using rule 107 (signo -> termino .)
    DIV             reduce using rule 107 (signo -> termino .)
    MOD             reduce using rule 107 (signo -> termino .)
    MAS             reduce using rule 107 (signo -> termino .)
    MENOS           reduce using rule 107 (signo -> termino .)
    IDENT           reduce using rule 107 (signo -> termino .)
    CTE_ENTERA      reduce using rule 107 (signo -> termino .)
    CTE_REAL        reduce using rule 107 (signo -> termino .)
    CTE_ALFA        reduce using rule 107 (signo -> termino .)
    VERDADERO       reduce using rule 107 (signo -> termino .)
    FALSO           reduce using rule 107 (signo -> termino .)
    OP_ASIG         reduce using rule 107 (signo -> termino .)
    OP_REL          reduce using rule 107 (signo -> termino .)
    Y               reduce using rule 107 (signo -> termino .)
    O               reduce using rule 107 (signo -> termino .)
    PAREN_TERMINA   reduce using rule 107 (signo -> termino .)
    COMA            reduce using rule 107 (signo -> termino .)
    error           reduce using rule 107 (signo -> termino .)
    PUNTO_COMA      reduce using rule 107 (signo -> termino .)
    LIMPIA          reduce using rule 107 (signo -> termino .)
    INTERRUMPE      reduce using rule 107 (signo -> termino .)
    CONTINUA        reduce using rule 107 (signo -> termino .)
    SI              reduce using rule 107 (signo -> termino .)
    DESDE           reduce using rule 107 (signo -> termino .)
    REPETIR         reduce using rule 107 (signo -> termino .)
    MIENTRAS        reduce using rule 107 (signo -> termino .)
    CUANDO          reduce using rule 107 (signo -> termino .)
    REGRESA         reduce using rule 107 (signo -> termino .)
    IMPRIME         reduce using rule 107 (signo -> termino .)
    IMPRIMENL       reduce using rule 107 (signo -> termino .)
    LEE             reduce using rule 107 (signo -> termino .)
    FIN             reduce using rule 107 (signo -> termino .)
    HASTA           reduce using rule 107 (signo -> termino .)
    SINO            reduce using rule 107 (signo -> termino .)
    SEA             reduce using rule 107 (signo -> termino .)
    OTRO            reduce using rule 107 (signo -> termino .)
    INICIO          reduce using rule 107 (signo -> termino .)
    DECR            reduce using rule 107 (signo -> termino .)
    INCR            reduce using rule 107 (signo -> termino .)


state 115

    (111) termino -> lfunc .

    POTENCIA        reduce using rule 111 (termino -> lfunc .)
    MULTI           reduce using rule 111 (termino -> lfunc .)
    DIV             reduce using rule 111 (termino -> lfunc .)
    MOD             reduce using rule 111 (termino -> lfunc .)
    MAS             reduce using rule 111 (termino -> lfunc .)
    MENOS           reduce using rule 111 (termino -> lfunc .)
    IDENT           reduce using rule 111 (termino -> lfunc .)
    CTE_ENTERA      reduce using rule 111 (termino -> lfunc .)
    CTE_REAL        reduce using rule 111 (termino -> lfunc .)
    CTE_ALFA        reduce using rule 111 (termino -> lfunc .)
    VERDADERO       reduce using rule 111 (termino -> lfunc .)
    FALSO           reduce using rule 111 (termino -> lfunc .)
    OP_ASIG         reduce using rule 111 (termino -> lfunc .)
    OP_REL          reduce using rule 111 (termino -> lfunc .)
    Y               reduce using rule 111 (termino -> lfunc .)
    O               reduce using rule 111 (termino -> lfunc .)
    PAREN_TERMINA   reduce using rule 111 (termino -> lfunc .)
    COMA            reduce using rule 111 (termino -> lfunc .)
    error           reduce using rule 111 (termino -> lfunc .)
    PUNTO_COMA      reduce using rule 111 (termino -> lfunc .)
    LIMPIA          reduce using rule 111 (termino -> lfunc .)
    INTERRUMPE      reduce using rule 111 (termino -> lfunc .)
    CONTINUA        reduce using rule 111 (termino -> lfunc .)
    SI              reduce using rule 111 (termino -> lfunc .)
    DESDE           reduce using rule 111 (termino -> lfunc .)
    REPETIR         reduce using rule 111 (termino -> lfunc .)
    MIENTRAS        reduce using rule 111 (termino -> lfunc .)
    CUANDO          reduce using rule 111 (termino -> lfunc .)
    REGRESA         reduce using rule 111 (termino -> lfunc .)
    IMPRIME         reduce using rule 111 (termino -> lfunc .)
    IMPRIMENL       reduce using rule 111 (termino -> lfunc .)
    LEE             reduce using rule 111 (termino -> lfunc .)
    FIN             reduce using rule 111 (termino -> lfunc .)
    HASTA           reduce using rule 111 (termino -> lfunc .)
    SINO            reduce using rule 111 (termino -> lfunc .)
    SEA             reduce using rule 111 (termino -> lfunc .)
    OTRO            reduce using rule 111 (termino -> lfunc .)
    INICIO          reduce using rule 111 (termino -> lfunc .)
    DECR            reduce using rule 111 (termino -> lfunc .)
    INCR            reduce using rule 111 (termino -> lfunc .)


state 116

    (112) termino -> CTE_ENTERA .

    POTENCIA        reduce using rule 112 (termino -> CTE_ENTERA .)
    MULTI           reduce using rule 112 (termino -> CTE_ENTERA .)
    DIV             reduce using rule 112 (termino -> CTE_ENTERA .)
    MOD             reduce using rule 112 (termino -> CTE_ENTERA .)
    MAS             reduce using rule 112 (termino -> CTE_ENTERA .)
    MENOS           reduce using rule 112 (termino -> CTE_ENTERA .)
    IDENT           reduce using rule 112 (termino -> CTE_ENTERA .)
    CTE_ENTERA      reduce using rule 112 (termino -> CTE_ENTERA .)
    CTE_REAL        reduce using rule 112 (termino -> CTE_ENTERA .)
    CTE_ALFA        reduce using rule 112 (termino -> CTE_ENTERA .)
    VERDADERO       reduce using rule 112 (termino -> CTE_ENTERA .)
    FALSO           reduce using rule 112 (termino -> CTE_ENTERA .)
    OP_ASIG         reduce using rule 112 (termino -> CTE_ENTERA .)
    OP_REL          reduce using rule 112 (termino -> CTE_ENTERA .)
    Y               reduce using rule 112 (termino -> CTE_ENTERA .)
    O               reduce using rule 112 (termino -> CTE_ENTERA .)
    PAREN_TERMINA   reduce using rule 112 (termino -> CTE_ENTERA .)
    COMA            reduce using rule 112 (termino -> CTE_ENTERA .)
    error           reduce using rule 112 (termino -> CTE_ENTERA .)
    PUNTO_COMA      reduce using rule 112 (termino -> CTE_ENTERA .)
    LIMPIA          reduce using rule 112 (termino -> CTE_ENTERA .)
    INTERRUMPE      reduce using rule 112 (termino -> CTE_ENTERA .)
    CONTINUA        reduce using rule 112 (termino -> CTE_ENTERA .)
    SI              reduce using rule 112 (termino -> CTE_ENTERA .)
    DESDE           reduce using rule 112 (termino -> CTE_ENTERA .)
    REPETIR         reduce using rule 112 (termino -> CTE_ENTERA .)
    MIENTRAS        reduce using rule 112 (termino -> CTE_ENTERA .)
    CUANDO          reduce using rule 112 (termino -> CTE_ENTERA .)
    REGRESA         reduce using rule 112 (termino -> CTE_ENTERA .)
    IMPRIME         reduce using rule 112 (termino -> CTE_ENTERA .)
    IMPRIMENL       reduce using rule 112 (termino -> CTE_ENTERA .)
    LEE             reduce using rule 112 (termino -> CTE_ENTERA .)
    FIN             reduce using rule 112 (termino -> CTE_ENTERA .)
    HASTA           reduce using rule 112 (termino -> CTE_ENTERA .)
    SINO            reduce using rule 112 (termino -> CTE_ENTERA .)
    SEA             reduce using rule 112 (termino -> CTE_ENTERA .)
    OTRO            reduce using rule 112 (termino -> CTE_ENTERA .)
    INICIO          reduce using rule 112 (termino -> CTE_ENTERA .)
    DECR            reduce using rule 112 (termino -> CTE_ENTERA .)
    INCR            reduce using rule 112 (termino -> CTE_ENTERA .)


state 117

    (113) termino -> CTE_REAL .

    POTENCIA        reduce using rule 113 (termino -> CTE_REAL .)
    MULTI           reduce using rule 113 (termino -> CTE_REAL .)
    DIV             reduce using rule 113 (termino -> CTE_REAL .)
    MOD             reduce using rule 113 (termino -> CTE_REAL .)
    MAS             reduce using rule 113 (termino -> CTE_REAL .)
    MENOS           reduce using rule 113 (termino -> CTE_REAL .)
    IDENT           reduce using rule 113 (termino -> CTE_REAL .)
    CTE_ENTERA      reduce using rule 113 (termino -> CTE_REAL .)
    CTE_REAL        reduce using rule 113 (termino -> CTE_REAL .)
    CTE_ALFA        reduce using rule 113 (termino -> CTE_REAL .)
    VERDADERO       reduce using rule 113 (termino -> CTE_REAL .)
    FALSO           reduce using rule 113 (termino -> CTE_REAL .)
    OP_ASIG         reduce using rule 113 (termino -> CTE_REAL .)
    OP_REL          reduce using rule 113 (termino -> CTE_REAL .)
    Y               reduce using rule 113 (termino -> CTE_REAL .)
    O               reduce using rule 113 (termino -> CTE_REAL .)
    PAREN_TERMINA   reduce using rule 113 (termino -> CTE_REAL .)
    COMA            reduce using rule 113 (termino -> CTE_REAL .)
    error           reduce using rule 113 (termino -> CTE_REAL .)
    PUNTO_COMA      reduce using rule 113 (termino -> CTE_REAL .)
    LIMPIA          reduce using rule 113 (termino -> CTE_REAL .)
    INTERRUMPE      reduce using rule 113 (termino -> CTE_REAL .)
    CONTINUA        reduce using rule 113 (termino -> CTE_REAL .)
    SI              reduce using rule 113 (termino -> CTE_REAL .)
    DESDE           reduce using rule 113 (termino -> CTE_REAL .)
    REPETIR         reduce using rule 113 (termino -> CTE_REAL .)
    MIENTRAS        reduce using rule 113 (termino -> CTE_REAL .)
    CUANDO          reduce using rule 113 (termino -> CTE_REAL .)
    REGRESA         reduce using rule 113 (termino -> CTE_REAL .)
    IMPRIME         reduce using rule 113 (termino -> CTE_REAL .)
    IMPRIMENL       reduce using rule 113 (termino -> CTE_REAL .)
    LEE             reduce using rule 113 (termino -> CTE_REAL .)
    FIN             reduce using rule 113 (termino -> CTE_REAL .)
    HASTA           reduce using rule 113 (termino -> CTE_REAL .)
    SINO            reduce using rule 113 (termino -> CTE_REAL .)
    SEA             reduce using rule 113 (termino -> CTE_REAL .)
    OTRO            reduce using rule 113 (termino -> CTE_REAL .)
    INICIO          reduce using rule 113 (termino -> CTE_REAL .)
    DECR            reduce using rule 113 (termino -> CTE_REAL .)
    INCR            reduce using rule 113 (termino -> CTE_REAL .)


state 118

    (114) termino -> CTE_ALFA .

    POTENCIA        reduce using rule 114 (termino -> CTE_ALFA .)
    MULTI           reduce using rule 114 (termino -> CTE_ALFA .)
    DIV             reduce using rule 114 (termino -> CTE_ALFA .)
    MOD             reduce using rule 114 (termino -> CTE_ALFA .)
    MAS             reduce using rule 114 (termino -> CTE_ALFA .)
    MENOS           reduce using rule 114 (termino -> CTE_ALFA .)
    IDENT           reduce using rule 114 (termino -> CTE_ALFA .)
    CTE_ENTERA      reduce using rule 114 (termino -> CTE_ALFA .)
    CTE_REAL        reduce using rule 114 (termino -> CTE_ALFA .)
    CTE_ALFA        reduce using rule 114 (termino -> CTE_ALFA .)
    VERDADERO       reduce using rule 114 (termino -> CTE_ALFA .)
    FALSO           reduce using rule 114 (termino -> CTE_ALFA .)
    OP_ASIG         reduce using rule 114 (termino -> CTE_ALFA .)
    OP_REL          reduce using rule 114 (termino -> CTE_ALFA .)
    Y               reduce using rule 114 (termino -> CTE_ALFA .)
    O               reduce using rule 114 (termino -> CTE_ALFA .)
    PAREN_TERMINA   reduce using rule 114 (termino -> CTE_ALFA .)
    COMA            reduce using rule 114 (termino -> CTE_ALFA .)
    error           reduce using rule 114 (termino -> CTE_ALFA .)
    PUNTO_COMA      reduce using rule 114 (termino -> CTE_ALFA .)
    LIMPIA          reduce using rule 114 (termino -> CTE_ALFA .)
    INTERRUMPE      reduce using rule 114 (termino -> CTE_ALFA .)
    CONTINUA        reduce using rule 114 (termino -> CTE_ALFA .)
    SI              reduce using rule 114 (termino -> CTE_ALFA .)
    DESDE           reduce using rule 114 (termino -> CTE_ALFA .)
    REPETIR         reduce using rule 114 (termino -> CTE_ALFA .)
    MIENTRAS        reduce using rule 114 (termino -> CTE_ALFA .)
    CUANDO          reduce using rule 114 (termino -> CTE_ALFA .)
    REGRESA         reduce using rule 114 (termino -> CTE_ALFA .)
    IMPRIME         reduce using rule 114 (termino -> CTE_ALFA .)
    IMPRIMENL       reduce using rule 114 (termino -> CTE_ALFA .)
    LEE             reduce using rule 114 (termino -> CTE_ALFA .)
    FIN             reduce using rule 114 (termino -> CTE_ALFA .)
    HASTA           reduce using rule 114 (termino -> CTE_ALFA .)
    SINO            reduce using rule 114 (termino -> CTE_ALFA .)
    SEA             reduce using rule 114 (termino -> CTE_ALFA .)
    OTRO            reduce using rule 114 (termino -> CTE_ALFA .)
    INICIO          reduce using rule 114 (termino -> CTE_ALFA .)
    DECR            reduce using rule 114 (termino -> CTE_ALFA .)
    INCR            reduce using rule 114 (termino -> CTE_ALFA .)


state 119

    (115) termino -> VERDADERO .

    POTENCIA        reduce using rule 115 (termino -> VERDADERO .)
    MULTI           reduce using rule 115 (termino -> VERDADERO .)
    DIV             reduce using rule 115 (termino -> VERDADERO .)
    MOD             reduce using rule 115 (termino -> VERDADERO .)
    MAS             reduce using rule 115 (termino -> VERDADERO .)
    MENOS           reduce using rule 115 (termino -> VERDADERO .)
    IDENT           reduce using rule 115 (termino -> VERDADERO .)
    CTE_ENTERA      reduce using rule 115 (termino -> VERDADERO .)
    CTE_REAL        reduce using rule 115 (termino -> VERDADERO .)
    CTE_ALFA        reduce using rule 115 (termino -> VERDADERO .)
    VERDADERO       reduce using rule 115 (termino -> VERDADERO .)
    FALSO           reduce using rule 115 (termino -> VERDADERO .)
    OP_ASIG         reduce using rule 115 (termino -> VERDADERO .)
    OP_REL          reduce using rule 115 (termino -> VERDADERO .)
    Y               reduce using rule 115 (termino -> VERDADERO .)
    O               reduce using rule 115 (termino -> VERDADERO .)
    PAREN_TERMINA   reduce using rule 115 (termino -> VERDADERO .)
    COMA            reduce using rule 115 (termino -> VERDADERO .)
    error           reduce using rule 115 (termino -> VERDADERO .)
    PUNTO_COMA      reduce using rule 115 (termino -> VERDADERO .)
    LIMPIA          reduce using rule 115 (termino -> VERDADERO .)
    INTERRUMPE      reduce using rule 115 (termino -> VERDADERO .)
    CONTINUA        reduce using rule 115 (termino -> VERDADERO .)
    SI              reduce using rule 115 (termino -> VERDADERO .)
    DESDE           reduce using rule 115 (termino -> VERDADERO .)
    REPETIR         reduce using rule 115 (termino -> VERDADERO .)
    MIENTRAS        reduce using rule 115 (termino -> VERDADERO .)
    CUANDO          reduce using rule 115 (termino -> VERDADERO .)
    REGRESA         reduce using rule 115 (termino -> VERDADERO .)
    IMPRIME         reduce using rule 115 (termino -> VERDADERO .)
    IMPRIMENL       reduce using rule 115 (termino -> VERDADERO .)
    LEE             reduce using rule 115 (termino -> VERDADERO .)
    FIN             reduce using rule 115 (termino -> VERDADERO .)
    HASTA           reduce using rule 115 (termino -> VERDADERO .)
    SINO            reduce using rule 115 (termino -> VERDADERO .)
    SEA             reduce using rule 115 (termino -> VERDADERO .)
    OTRO            reduce using rule 115 (termino -> VERDADERO .)
    INICIO          reduce using rule 115 (termino -> VERDADERO .)
    DECR            reduce using rule 115 (termino -> VERDADERO .)
    INCR            reduce using rule 115 (termino -> VERDADERO .)


state 120

    (116) termino -> FALSO .

    POTENCIA        reduce using rule 116 (termino -> FALSO .)
    MULTI           reduce using rule 116 (termino -> FALSO .)
    DIV             reduce using rule 116 (termino -> FALSO .)
    MOD             reduce using rule 116 (termino -> FALSO .)
    MAS             reduce using rule 116 (termino -> FALSO .)
    MENOS           reduce using rule 116 (termino -> FALSO .)
    IDENT           reduce using rule 116 (termino -> FALSO .)
    CTE_ENTERA      reduce using rule 116 (termino -> FALSO .)
    CTE_REAL        reduce using rule 116 (termino -> FALSO .)
    CTE_ALFA        reduce using rule 116 (termino -> FALSO .)
    VERDADERO       reduce using rule 116 (termino -> FALSO .)
    FALSO           reduce using rule 116 (termino -> FALSO .)
    OP_ASIG         reduce using rule 116 (termino -> FALSO .)
    OP_REL          reduce using rule 116 (termino -> FALSO .)
    Y               reduce using rule 116 (termino -> FALSO .)
    O               reduce using rule 116 (termino -> FALSO .)
    PAREN_TERMINA   reduce using rule 116 (termino -> FALSO .)
    COMA            reduce using rule 116 (termino -> FALSO .)
    error           reduce using rule 116 (termino -> FALSO .)
    PUNTO_COMA      reduce using rule 116 (termino -> FALSO .)
    LIMPIA          reduce using rule 116 (termino -> FALSO .)
    INTERRUMPE      reduce using rule 116 (termino -> FALSO .)
    CONTINUA        reduce using rule 116 (termino -> FALSO .)
    SI              reduce using rule 116 (termino -> FALSO .)
    DESDE           reduce using rule 116 (termino -> FALSO .)
    REPETIR         reduce using rule 116 (termino -> FALSO .)
    MIENTRAS        reduce using rule 116 (termino -> FALSO .)
    CUANDO          reduce using rule 116 (termino -> FALSO .)
    REGRESA         reduce using rule 116 (termino -> FALSO .)
    IMPRIME         reduce using rule 116 (termino -> FALSO .)
    IMPRIMENL       reduce using rule 116 (termino -> FALSO .)
    LEE             reduce using rule 116 (termino -> FALSO .)
    FIN             reduce using rule 116 (termino -> FALSO .)
    HASTA           reduce using rule 116 (termino -> FALSO .)
    SINO            reduce using rule 116 (termino -> FALSO .)
    SEA             reduce using rule 116 (termino -> FALSO .)
    OTRO            reduce using rule 116 (termino -> FALSO .)
    INICIO          reduce using rule 116 (termino -> FALSO .)
    DECR            reduce using rule 116 (termino -> FALSO .)
    INCR            reduce using rule 116 (termino -> FALSO .)


state 121

    (72) desde -> DESDE EL . VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> DESDE EL . VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> DESDE EL . VALOR DE asigna HASTA expr error bckesp

    VALOR           shift and go to state 162


state 122

    (75) repetir -> REPETIR block . HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    HASTA           shift and go to state 163


state 123

    (76) mientras -> MIENTRAS SE . CUMPLA QUE exprlog bckesp

    CUMPLA          shift and go to state 164


state 124

    (78) cuando -> CUANDO EL . VALOR DE IDENT INICIO gposea otro FIN

    VALOR           shift and go to state 165


state 125

    (86) regresa -> REGRESA PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (89) exprlog -> . opy
    (90) exprlog -> . opy O exprlog
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]

    exprlog                        shift and go to state 166
    opy                            shift and go to state 143
    opno                           shift and go to state 144
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 126

    (120) imprime -> IMPRIME PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (125) gpoexp -> . exprlog
    (126) gpoexp -> . exprlog COMA gpoexp
    (89) exprlog -> . opy
    (90) exprlog -> . opy O exprlog
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]

    gpoexp                         shift and go to state 167
    exprlog                        shift and go to state 168
    opy                            shift and go to state 143
    opno                           shift and go to state 144
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 127

    (121) imprimenl -> IMPRIMENL PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (122) imprimenl -> IMPRIMENL PAREN_EMPIEZA . gpoexp error
    (125) gpoexp -> . exprlog
    (126) gpoexp -> . exprlog COMA gpoexp
    (89) exprlog -> . opy
    (90) exprlog -> . opy O exprlog
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]

    gpoexp                         shift and go to state 169
    exprlog                        shift and go to state 168
    opy                            shift and go to state 143
    opno                           shift and go to state 144
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 128

    (123) lee -> LEE PAREN_EMPIEZA . IDENT PAREN_TERMINA
    (124) lee -> LEE PAREN_EMPIEZA . IDENT dimens PAREN_TERMINA

    IDENT           shift and go to state 170


state 129

    (39) gpopars -> IDENT . maspars
    (40) maspars -> . COMA gpopars
    (41) maspars -> . empty
    (129) empty -> .

    COMA            shift and go to state 172
    PUNTOS_DOBLES   reduce using rule 129 (empty -> .)

    maspars                        shift and go to state 171
    empty                          shift and go to state 173

state 130

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 174


state 131

    (35) params -> gpopars . PUNTOS_DOBLES TIPO otrospars

    PUNTOS_DOBLES   shift and go to state 175


state 132

    (36) params -> empty .

    PAREN_TERMINA   reduce using rule 36 (params -> empty .)


state 133

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_TERMINA   shift and go to state 176


state 134

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 177


state 135

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 178


state 136

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 179


state 137

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)


state 138

    (12) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    POTENCIA        reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    MULTI           reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    DIV             reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    MOD             reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    MAS             reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    MENOS           reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    IDENT           reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    CTE_ENTERA      reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    CTE_REAL        reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    CTE_ALFA        reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    VERDADERO       reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    FALSO           reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    OP_ASIG         reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    OP_REL          reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    Y               reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    O               reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    error           reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PUNTO_COMA      reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    LIMPIA          reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    INTERRUMPE      reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    CONTINUA        reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    SI              reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    DESDE           reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    REPETIR         reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    MIENTRAS        reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    CUANDO          reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    REGRESA         reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    IMPRIME         reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    IMPRIMENL       reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    LEE             reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    FIN             reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    HASTA           reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    SINO            reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    SEA             reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    OTRO            reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    INICIO          reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    DECR            reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    INCR            reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)


state 139

    (13) dimens -> empty .

    COMA            reduce using rule 13 (dimens -> empty .)
    PUNTOS_DOBLES   reduce using rule 13 (dimens -> empty .)
    POTENCIA        reduce using rule 13 (dimens -> empty .)
    MULTI           reduce using rule 13 (dimens -> empty .)
    DIV             reduce using rule 13 (dimens -> empty .)
    MOD             reduce using rule 13 (dimens -> empty .)
    MAS             reduce using rule 13 (dimens -> empty .)
    MENOS           reduce using rule 13 (dimens -> empty .)
    IDENT           reduce using rule 13 (dimens -> empty .)
    CTE_ENTERA      reduce using rule 13 (dimens -> empty .)
    CTE_REAL        reduce using rule 13 (dimens -> empty .)
    CTE_ALFA        reduce using rule 13 (dimens -> empty .)
    VERDADERO       reduce using rule 13 (dimens -> empty .)
    FALSO           reduce using rule 13 (dimens -> empty .)
    OP_ASIG         reduce using rule 13 (dimens -> empty .)
    OP_REL          reduce using rule 13 (dimens -> empty .)
    Y               reduce using rule 13 (dimens -> empty .)
    O               reduce using rule 13 (dimens -> empty .)
    PAREN_TERMINA   reduce using rule 13 (dimens -> empty .)
    error           reduce using rule 13 (dimens -> empty .)
    PUNTO_COMA      reduce using rule 13 (dimens -> empty .)
    LIMPIA          reduce using rule 13 (dimens -> empty .)
    INTERRUMPE      reduce using rule 13 (dimens -> empty .)
    CONTINUA        reduce using rule 13 (dimens -> empty .)
    SI              reduce using rule 13 (dimens -> empty .)
    DESDE           reduce using rule 13 (dimens -> empty .)
    REPETIR         reduce using rule 13 (dimens -> empty .)
    MIENTRAS        reduce using rule 13 (dimens -> empty .)
    CUANDO          reduce using rule 13 (dimens -> empty .)
    REGRESA         reduce using rule 13 (dimens -> empty .)
    IMPRIME         reduce using rule 13 (dimens -> empty .)
    IMPRIMENL       reduce using rule 13 (dimens -> empty .)
    LEE             reduce using rule 13 (dimens -> empty .)
    FIN             reduce using rule 13 (dimens -> empty .)
    HASTA           reduce using rule 13 (dimens -> empty .)
    SINO            reduce using rule 13 (dimens -> empty .)
    SEA             reduce using rule 13 (dimens -> empty .)
    OTRO            reduce using rule 13 (dimens -> empty .)
    INICIO          reduce using rule 13 (dimens -> empty .)
    DECR            reduce using rule 13 (dimens -> empty .)
    INCR            reduce using rule 13 (dimens -> empty .)


state 140

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE . PROGRAMA PUNTO

    PROGRAMA        shift and go to state 180


state 141

    (47) block -> estatuto PUNTO_COMA block .

    FIN             reduce using rule 47 (block -> estatuto PUNTO_COMA block .)
    HASTA           reduce using rule 47 (block -> estatuto PUNTO_COMA block .)


state 142

    (66) si -> SI PAREN_EMPIEZA exprlog . PAREN_TERMINA HACER bckesp sino

    PAREN_TERMINA   shift and go to state 181


state 143

    (89) exprlog -> opy .
    (90) exprlog -> opy . O exprlog

    PAREN_TERMINA   reduce using rule 89 (exprlog -> opy .)
    COMA            reduce using rule 89 (exprlog -> opy .)
    error           reduce using rule 89 (exprlog -> opy .)
    PUNTO_COMA      reduce using rule 89 (exprlog -> opy .)
    LIMPIA          reduce using rule 89 (exprlog -> opy .)
    INTERRUMPE      reduce using rule 89 (exprlog -> opy .)
    CONTINUA        reduce using rule 89 (exprlog -> opy .)
    SI              reduce using rule 89 (exprlog -> opy .)
    IDENT           reduce using rule 89 (exprlog -> opy .)
    DESDE           reduce using rule 89 (exprlog -> opy .)
    REPETIR         reduce using rule 89 (exprlog -> opy .)
    MIENTRAS        reduce using rule 89 (exprlog -> opy .)
    CUANDO          reduce using rule 89 (exprlog -> opy .)
    REGRESA         reduce using rule 89 (exprlog -> opy .)
    IMPRIME         reduce using rule 89 (exprlog -> opy .)
    IMPRIMENL       reduce using rule 89 (exprlog -> opy .)
    LEE             reduce using rule 89 (exprlog -> opy .)
    FIN             reduce using rule 89 (exprlog -> opy .)
    HASTA           reduce using rule 89 (exprlog -> opy .)
    SINO            reduce using rule 89 (exprlog -> opy .)
    SEA             reduce using rule 89 (exprlog -> opy .)
    OTRO            reduce using rule 89 (exprlog -> opy .)
    INICIO          reduce using rule 89 (exprlog -> opy .)
    O               shift and go to state 182


state 144

    (91) opy -> opno .
    (92) opy -> opno . Y opy

    O               reduce using rule 91 (opy -> opno .)
    PAREN_TERMINA   reduce using rule 91 (opy -> opno .)
    COMA            reduce using rule 91 (opy -> opno .)
    error           reduce using rule 91 (opy -> opno .)
    PUNTO_COMA      reduce using rule 91 (opy -> opno .)
    LIMPIA          reduce using rule 91 (opy -> opno .)
    INTERRUMPE      reduce using rule 91 (opy -> opno .)
    CONTINUA        reduce using rule 91 (opy -> opno .)
    SI              reduce using rule 91 (opy -> opno .)
    IDENT           reduce using rule 91 (opy -> opno .)
    DESDE           reduce using rule 91 (opy -> opno .)
    REPETIR         reduce using rule 91 (opy -> opno .)
    MIENTRAS        reduce using rule 91 (opy -> opno .)
    CUANDO          reduce using rule 91 (opy -> opno .)
    REGRESA         reduce using rule 91 (opy -> opno .)
    IMPRIME         reduce using rule 91 (opy -> opno .)
    IMPRIMENL       reduce using rule 91 (opy -> opno .)
    LEE             reduce using rule 91 (opy -> opno .)
    FIN             reduce using rule 91 (opy -> opno .)
    HASTA           reduce using rule 91 (opy -> opno .)
    SINO            reduce using rule 91 (opy -> opno .)
    SEA             reduce using rule 91 (opy -> opno .)
    OTRO            reduce using rule 91 (opy -> opno .)
    INICIO          reduce using rule 91 (opy -> opno .)
    Y               shift and go to state 183


state 145

    (93) opno -> oprel .

    Y               reduce using rule 93 (opno -> oprel .)
    O               reduce using rule 93 (opno -> oprel .)
    PAREN_TERMINA   reduce using rule 93 (opno -> oprel .)
    COMA            reduce using rule 93 (opno -> oprel .)
    error           reduce using rule 93 (opno -> oprel .)
    PUNTO_COMA      reduce using rule 93 (opno -> oprel .)
    LIMPIA          reduce using rule 93 (opno -> oprel .)
    INTERRUMPE      reduce using rule 93 (opno -> oprel .)
    CONTINUA        reduce using rule 93 (opno -> oprel .)
    SI              reduce using rule 93 (opno -> oprel .)
    IDENT           reduce using rule 93 (opno -> oprel .)
    DESDE           reduce using rule 93 (opno -> oprel .)
    REPETIR         reduce using rule 93 (opno -> oprel .)
    MIENTRAS        reduce using rule 93 (opno -> oprel .)
    CUANDO          reduce using rule 93 (opno -> oprel .)
    REGRESA         reduce using rule 93 (opno -> oprel .)
    IMPRIME         reduce using rule 93 (opno -> oprel .)
    IMPRIMENL       reduce using rule 93 (opno -> oprel .)
    LEE             reduce using rule 93 (opno -> oprel .)
    FIN             reduce using rule 93 (opno -> oprel .)
    HASTA           reduce using rule 93 (opno -> oprel .)
    SINO            reduce using rule 93 (opno -> oprel .)
    SEA             reduce using rule 93 (opno -> oprel .)
    OTRO            reduce using rule 93 (opno -> oprel .)
    INICIO          reduce using rule 93 (opno -> oprel .)


state 146

    (94) opno -> NO . oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]

    oprel                          shift and go to state 184
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 147

    (95) oprel -> expr .
    (96) oprel -> expr . OP_REL oprel

    Y               reduce using rule 95 (oprel -> expr .)
    O               reduce using rule 95 (oprel -> expr .)
    PAREN_TERMINA   reduce using rule 95 (oprel -> expr .)
    COMA            reduce using rule 95 (oprel -> expr .)
    error           reduce using rule 95 (oprel -> expr .)
    PUNTO_COMA      reduce using rule 95 (oprel -> expr .)
    LIMPIA          reduce using rule 95 (oprel -> expr .)
    INTERRUMPE      reduce using rule 95 (oprel -> expr .)
    CONTINUA        reduce using rule 95 (oprel -> expr .)
    SI              reduce using rule 95 (oprel -> expr .)
    IDENT           reduce using rule 95 (oprel -> expr .)
    DESDE           reduce using rule 95 (oprel -> expr .)
    REPETIR         reduce using rule 95 (oprel -> expr .)
    MIENTRAS        reduce using rule 95 (oprel -> expr .)
    CUANDO          reduce using rule 95 (oprel -> expr .)
    REGRESA         reduce using rule 95 (oprel -> expr .)
    IMPRIME         reduce using rule 95 (oprel -> expr .)
    IMPRIMENL       reduce using rule 95 (oprel -> expr .)
    LEE             reduce using rule 95 (oprel -> expr .)
    FIN             reduce using rule 95 (oprel -> expr .)
    HASTA           reduce using rule 95 (oprel -> expr .)
    SINO            reduce using rule 95 (oprel -> expr .)
    SEA             reduce using rule 95 (oprel -> expr .)
    OTRO            reduce using rule 95 (oprel -> expr .)
    INICIO          reduce using rule 95 (oprel -> expr .)
    OP_REL          shift and go to state 185


state 148

    (104) multi -> empty .

    MAS             reduce using rule 104 (multi -> empty .)
    MENOS           reduce using rule 104 (multi -> empty .)
    OP_REL          reduce using rule 104 (multi -> empty .)
    Y               reduce using rule 104 (multi -> empty .)
    O               reduce using rule 104 (multi -> empty .)
    PAREN_TERMINA   reduce using rule 104 (multi -> empty .)
    COMA            reduce using rule 104 (multi -> empty .)
    error           reduce using rule 104 (multi -> empty .)
    PUNTO_COMA      reduce using rule 104 (multi -> empty .)
    LIMPIA          reduce using rule 104 (multi -> empty .)
    INTERRUMPE      reduce using rule 104 (multi -> empty .)
    CONTINUA        reduce using rule 104 (multi -> empty .)
    SI              reduce using rule 104 (multi -> empty .)
    IDENT           reduce using rule 104 (multi -> empty .)
    DESDE           reduce using rule 104 (multi -> empty .)
    REPETIR         reduce using rule 104 (multi -> empty .)
    MIENTRAS        reduce using rule 104 (multi -> empty .)
    CUANDO          reduce using rule 104 (multi -> empty .)
    REGRESA         reduce using rule 104 (multi -> empty .)
    IMPRIME         reduce using rule 104 (multi -> empty .)
    IMPRIMENL       reduce using rule 104 (multi -> empty .)
    LEE             reduce using rule 104 (multi -> empty .)
    FIN             reduce using rule 104 (multi -> empty .)
    HASTA           reduce using rule 104 (multi -> empty .)
    SINO            reduce using rule 104 (multi -> empty .)
    SEA             reduce using rule 104 (multi -> empty .)
    OTRO            reduce using rule 104 (multi -> empty .)
    INICIO          reduce using rule 104 (multi -> empty .)
    CTE_ENTERA      reduce using rule 104 (multi -> empty .)
    CTE_REAL        reduce using rule 104 (multi -> empty .)
    CTE_ALFA        reduce using rule 104 (multi -> empty .)
    VERDADERO       reduce using rule 104 (multi -> empty .)
    FALSO           reduce using rule 104 (multi -> empty .)
    OP_ASIG         reduce using rule 104 (multi -> empty .)
    DECR            reduce using rule 104 (multi -> empty .)
    INCR            reduce using rule 104 (multi -> empty .)


state 149

    (110) termino -> IDENT dimens .

    POTENCIA        reduce using rule 110 (termino -> IDENT dimens .)
    MULTI           reduce using rule 110 (termino -> IDENT dimens .)
    DIV             reduce using rule 110 (termino -> IDENT dimens .)
    MOD             reduce using rule 110 (termino -> IDENT dimens .)
    MAS             reduce using rule 110 (termino -> IDENT dimens .)
    MENOS           reduce using rule 110 (termino -> IDENT dimens .)
    IDENT           reduce using rule 110 (termino -> IDENT dimens .)
    CTE_ENTERA      reduce using rule 110 (termino -> IDENT dimens .)
    CTE_REAL        reduce using rule 110 (termino -> IDENT dimens .)
    CTE_ALFA        reduce using rule 110 (termino -> IDENT dimens .)
    VERDADERO       reduce using rule 110 (termino -> IDENT dimens .)
    FALSO           reduce using rule 110 (termino -> IDENT dimens .)
    OP_ASIG         reduce using rule 110 (termino -> IDENT dimens .)
    OP_REL          reduce using rule 110 (termino -> IDENT dimens .)
    Y               reduce using rule 110 (termino -> IDENT dimens .)
    O               reduce using rule 110 (termino -> IDENT dimens .)
    PAREN_TERMINA   reduce using rule 110 (termino -> IDENT dimens .)
    COMA            reduce using rule 110 (termino -> IDENT dimens .)
    error           reduce using rule 110 (termino -> IDENT dimens .)
    PUNTO_COMA      reduce using rule 110 (termino -> IDENT dimens .)
    LIMPIA          reduce using rule 110 (termino -> IDENT dimens .)
    INTERRUMPE      reduce using rule 110 (termino -> IDENT dimens .)
    CONTINUA        reduce using rule 110 (termino -> IDENT dimens .)
    SI              reduce using rule 110 (termino -> IDENT dimens .)
    DESDE           reduce using rule 110 (termino -> IDENT dimens .)
    REPETIR         reduce using rule 110 (termino -> IDENT dimens .)
    MIENTRAS        reduce using rule 110 (termino -> IDENT dimens .)
    CUANDO          reduce using rule 110 (termino -> IDENT dimens .)
    REGRESA         reduce using rule 110 (termino -> IDENT dimens .)
    IMPRIME         reduce using rule 110 (termino -> IDENT dimens .)
    IMPRIMENL       reduce using rule 110 (termino -> IDENT dimens .)
    LEE             reduce using rule 110 (termino -> IDENT dimens .)
    FIN             reduce using rule 110 (termino -> IDENT dimens .)
    HASTA           reduce using rule 110 (termino -> IDENT dimens .)
    SINO            reduce using rule 110 (termino -> IDENT dimens .)
    SEA             reduce using rule 110 (termino -> IDENT dimens .)
    OTRO            reduce using rule 110 (termino -> IDENT dimens .)
    INICIO          reduce using rule 110 (termino -> IDENT dimens .)
    DECR            reduce using rule 110 (termino -> IDENT dimens .)
    INCR            reduce using rule 110 (termino -> IDENT dimens .)


state 150

    (117) lfunc -> IDENT parenemp uparams . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 186


state 151

    (118) lfunc -> IDENT parenemp error . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 187


state 152

    (127) uparams -> exprlog .
    (128) uparams -> exprlog . COMA uparams

    PAREN_TERMINA   reduce using rule 127 (uparams -> exprlog .)
    COMA            shift and go to state 188


state 153

    (77) asigna -> IDENT udim OP_ASIG . exprlog
    (89) exprlog -> . opy
    (90) exprlog -> . opy O exprlog
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]

    exprlog                        shift and go to state 189
    opy                            shift and go to state 143
    opno                           shift and go to state 144
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 154

    (87) udim -> expr udim .

    OP_ASIG         reduce using rule 87 (udim -> expr udim .)


state 155

    (98) expr -> multi MAS . expr
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    MAS             reduce using rule 129 (empty -> .)
    OP_ASIG         reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    DECR            reduce using rule 129 (empty -> .)
    INCR            reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 129 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 129 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 129 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 129 (empty -> .) ]
  ! FALSO           [ reduce using rule 129 (empty -> .) ]

    multi                          shift and go to state 110
    expr                           shift and go to state 190
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 156

    (99) expr -> multi MENOS . expr
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    MAS             reduce using rule 129 (empty -> .)
    OP_ASIG         reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    DECR            reduce using rule 129 (empty -> .)
    INCR            reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 129 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 129 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 129 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 129 (empty -> .) ]
  ! FALSO           [ reduce using rule 129 (empty -> .) ]

    multi                          shift and go to state 110
    expr                           shift and go to state 191
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 157

    (108) signo -> MENOS termino .

    POTENCIA        reduce using rule 108 (signo -> MENOS termino .)
    MULTI           reduce using rule 108 (signo -> MENOS termino .)
    DIV             reduce using rule 108 (signo -> MENOS termino .)
    MOD             reduce using rule 108 (signo -> MENOS termino .)
    MAS             reduce using rule 108 (signo -> MENOS termino .)
    MENOS           reduce using rule 108 (signo -> MENOS termino .)
    IDENT           reduce using rule 108 (signo -> MENOS termino .)
    CTE_ENTERA      reduce using rule 108 (signo -> MENOS termino .)
    CTE_REAL        reduce using rule 108 (signo -> MENOS termino .)
    CTE_ALFA        reduce using rule 108 (signo -> MENOS termino .)
    VERDADERO       reduce using rule 108 (signo -> MENOS termino .)
    FALSO           reduce using rule 108 (signo -> MENOS termino .)
    OP_ASIG         reduce using rule 108 (signo -> MENOS termino .)
    OP_REL          reduce using rule 108 (signo -> MENOS termino .)
    Y               reduce using rule 108 (signo -> MENOS termino .)
    O               reduce using rule 108 (signo -> MENOS termino .)
    PAREN_TERMINA   reduce using rule 108 (signo -> MENOS termino .)
    COMA            reduce using rule 108 (signo -> MENOS termino .)
    error           reduce using rule 108 (signo -> MENOS termino .)
    PUNTO_COMA      reduce using rule 108 (signo -> MENOS termino .)
    LIMPIA          reduce using rule 108 (signo -> MENOS termino .)
    INTERRUMPE      reduce using rule 108 (signo -> MENOS termino .)
    CONTINUA        reduce using rule 108 (signo -> MENOS termino .)
    SI              reduce using rule 108 (signo -> MENOS termino .)
    DESDE           reduce using rule 108 (signo -> MENOS termino .)
    REPETIR         reduce using rule 108 (signo -> MENOS termino .)
    MIENTRAS        reduce using rule 108 (signo -> MENOS termino .)
    CUANDO          reduce using rule 108 (signo -> MENOS termino .)
    REGRESA         reduce using rule 108 (signo -> MENOS termino .)
    IMPRIME         reduce using rule 108 (signo -> MENOS termino .)
    IMPRIMENL       reduce using rule 108 (signo -> MENOS termino .)
    LEE             reduce using rule 108 (signo -> MENOS termino .)
    FIN             reduce using rule 108 (signo -> MENOS termino .)
    HASTA           reduce using rule 108 (signo -> MENOS termino .)
    SINO            reduce using rule 108 (signo -> MENOS termino .)
    SEA             reduce using rule 108 (signo -> MENOS termino .)
    OTRO            reduce using rule 108 (signo -> MENOS termino .)
    INICIO          reduce using rule 108 (signo -> MENOS termino .)
    DECR            reduce using rule 108 (signo -> MENOS termino .)
    INCR            reduce using rule 108 (signo -> MENOS termino .)


state 158

    (101) multi -> expo MULTI . multi
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    MAS             reduce using rule 129 (empty -> .)
    OP_ASIG         reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    DECR            reduce using rule 129 (empty -> .)
    INCR            reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 129 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 129 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 129 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 129 (empty -> .) ]
  ! FALSO           [ reduce using rule 129 (empty -> .) ]

    expo                           shift and go to state 112
    multi                          shift and go to state 192
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 159

    (102) multi -> expo DIV . multi
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    MAS             reduce using rule 129 (empty -> .)
    OP_ASIG         reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    DECR            reduce using rule 129 (empty -> .)
    INCR            reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 129 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 129 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 129 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 129 (empty -> .) ]
  ! FALSO           [ reduce using rule 129 (empty -> .) ]

    expo                           shift and go to state 112
    multi                          shift and go to state 193
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 160

    (103) multi -> expo MOD . multi
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    MAS             reduce using rule 129 (empty -> .)
    OP_ASIG         reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    DECR            reduce using rule 129 (empty -> .)
    INCR            reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 129 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 129 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 129 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 129 (empty -> .) ]
  ! FALSO           [ reduce using rule 129 (empty -> .) ]

    expo                           shift and go to state 112
    multi                          shift and go to state 194
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 161

    (106) expo -> signo POTENCIA . expo
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

    signo                          shift and go to state 113
    expo                           shift and go to state 195
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 162

    (72) desde -> DESDE EL VALOR . DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> DESDE EL VALOR . DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> DESDE EL VALOR . DE asigna HASTA expr error bckesp

    DE              shift and go to state 196


state 163

    (75) repetir -> REPETIR block HASTA . QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    QUE             shift and go to state 197


state 164

    (76) mientras -> MIENTRAS SE CUMPLA . QUE exprlog bckesp

    QUE             shift and go to state 198


state 165

    (78) cuando -> CUANDO EL VALOR . DE IDENT INICIO gposea otro FIN

    DE              shift and go to state 199


state 166

    (86) regresa -> REGRESA PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 200


state 167

    (120) imprime -> IMPRIME PAREN_EMPIEZA gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 201


state 168

    (125) gpoexp -> exprlog .
    (126) gpoexp -> exprlog . COMA gpoexp

    PAREN_TERMINA   reduce using rule 125 (gpoexp -> exprlog .)
    error           reduce using rule 125 (gpoexp -> exprlog .)
    COMA            shift and go to state 202


state 169

    (121) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp . PAREN_TERMINA
    (122) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp . error

    PAREN_TERMINA   shift and go to state 203
    error           shift and go to state 204


state 170

    (123) lee -> LEE PAREN_EMPIEZA IDENT . PAREN_TERMINA
    (124) lee -> LEE PAREN_EMPIEZA IDENT . dimens PAREN_TERMINA
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (129) empty -> .

  ! shift/reduce conflict for PAREN_TERMINA resolved as shift
    PAREN_TERMINA   shift and go to state 205
    CORCHETE_EMPIEZA shift and go to state 35

  ! PAREN_TERMINA   [ reduce using rule 129 (empty -> .) ]

    dimens                         shift and go to state 206
    empty                          shift and go to state 139

state 171

    (39) gpopars -> IDENT maspars .

    PUNTOS_DOBLES   reduce using rule 39 (gpopars -> IDENT maspars .)


state 172

    (40) maspars -> COMA . gpopars
    (39) gpopars -> . IDENT maspars

    IDENT           shift and go to state 129

    gpopars                        shift and go to state 207

state 173

    (41) maspars -> empty .

    PUNTOS_DOBLES   reduce using rule 41 (maspars -> empty .)


state 174

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (129) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 129 (empty -> .)

    variables                      shift and go to state 208
    empty                          shift and go to state 7

state 175

    (35) params -> gpopars PUNTOS_DOBLES . TIPO otrospars

    TIPO            shift and go to state 209


state 176

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 210


state 177

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 26 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    FUNCION         reduce using rule 26 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    PROGRAMA        reduce using rule 26 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)


state 178

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 211


state 179

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 212


state 180

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA . PUNTO

    PUNTO           shift and go to state 213


state 181

    (66) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA . HACER bckesp sino

    HACER           shift and go to state 214


state 182

    (90) exprlog -> opy O . exprlog
    (89) exprlog -> . opy
    (90) exprlog -> . opy O exprlog
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]

    opy                            shift and go to state 143
    exprlog                        shift and go to state 215
    opno                           shift and go to state 144
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 183

    (92) opy -> opno Y . opy
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]

    opno                           shift and go to state 144
    opy                            shift and go to state 216
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 184

    (94) opno -> NO oprel .

    Y               reduce using rule 94 (opno -> NO oprel .)
    O               reduce using rule 94 (opno -> NO oprel .)
    PAREN_TERMINA   reduce using rule 94 (opno -> NO oprel .)
    COMA            reduce using rule 94 (opno -> NO oprel .)
    error           reduce using rule 94 (opno -> NO oprel .)
    PUNTO_COMA      reduce using rule 94 (opno -> NO oprel .)
    LIMPIA          reduce using rule 94 (opno -> NO oprel .)
    INTERRUMPE      reduce using rule 94 (opno -> NO oprel .)
    CONTINUA        reduce using rule 94 (opno -> NO oprel .)
    SI              reduce using rule 94 (opno -> NO oprel .)
    IDENT           reduce using rule 94 (opno -> NO oprel .)
    DESDE           reduce using rule 94 (opno -> NO oprel .)
    REPETIR         reduce using rule 94 (opno -> NO oprel .)
    MIENTRAS        reduce using rule 94 (opno -> NO oprel .)
    CUANDO          reduce using rule 94 (opno -> NO oprel .)
    REGRESA         reduce using rule 94 (opno -> NO oprel .)
    IMPRIME         reduce using rule 94 (opno -> NO oprel .)
    IMPRIMENL       reduce using rule 94 (opno -> NO oprel .)
    LEE             reduce using rule 94 (opno -> NO oprel .)
    FIN             reduce using rule 94 (opno -> NO oprel .)
    HASTA           reduce using rule 94 (opno -> NO oprel .)
    SINO            reduce using rule 94 (opno -> NO oprel .)
    SEA             reduce using rule 94 (opno -> NO oprel .)
    OTRO            reduce using rule 94 (opno -> NO oprel .)
    INICIO          reduce using rule 94 (opno -> NO oprel .)


state 185

    (96) oprel -> expr OP_REL . oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]

    expr                           shift and go to state 147
    oprel                          shift and go to state 217
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 186

    (117) lfunc -> IDENT parenemp uparams PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    LIMPIA          reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CONTINUA        reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SI              reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IDENT           reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DESDE           reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    REPETIR         reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MIENTRAS        reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CUANDO          reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    REGRESA         reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IMPRIME         reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    LEE             reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    FIN             reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    HASTA           reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    POTENCIA        reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MULTI           reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DIV             reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MOD             reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MAS             reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MENOS           reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CTE_ENTERA      reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CTE_REAL        reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CTE_ALFA        reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    VERDADERO       reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    FALSO           reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OP_ASIG         reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OP_REL          reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    Y               reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    O               reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    COMA            reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    error           reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SINO            reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SEA             reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OTRO            reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INICIO          reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DECR            reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INCR            reduce using rule 117 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)


state 187

    (118) lfunc -> IDENT parenemp error PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    LIMPIA          reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CONTINUA        reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SI              reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IDENT           reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DESDE           reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    REPETIR         reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MIENTRAS        reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CUANDO          reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    REGRESA         reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IMPRIME         reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    LEE             reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    FIN             reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    HASTA           reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    POTENCIA        reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MULTI           reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DIV             reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MOD             reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MAS             reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MENOS           reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CTE_ENTERA      reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CTE_REAL        reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CTE_ALFA        reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    VERDADERO       reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    FALSO           reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OP_ASIG         reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OP_REL          reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    Y               reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    O               reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    COMA            reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    error           reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SINO            reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SEA             reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OTRO            reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INICIO          reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DECR            reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INCR            reduce using rule 118 (lfunc -> IDENT parenemp error PAREN_TERMINA .)


state 188

    (128) uparams -> exprlog COMA . uparams
    (127) uparams -> . exprlog
    (128) uparams -> . exprlog COMA uparams
    (89) exprlog -> . opy
    (90) exprlog -> . opy O exprlog
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]

    exprlog                        shift and go to state 152
    uparams                        shift and go to state 218
    opy                            shift and go to state 143
    opno                           shift and go to state 144
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 189

    (77) asigna -> IDENT udim OP_ASIG exprlog .

    PUNTO_COMA      reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    LIMPIA          reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    INTERRUMPE      reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    CONTINUA        reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    SI              reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    IDENT           reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    DESDE           reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    REPETIR         reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    MIENTRAS        reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    CUANDO          reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    REGRESA         reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    IMPRIME         reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    IMPRIMENL       reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    LEE             reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    FIN             reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    HASTA           reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    SINO            reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    SEA             reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)
    OTRO            reduce using rule 77 (asigna -> IDENT udim OP_ASIG exprlog .)


state 190

    (98) expr -> multi MAS expr .

    MENOS           reduce using rule 98 (expr -> multi MAS expr .)
    IDENT           reduce using rule 98 (expr -> multi MAS expr .)
    CTE_ENTERA      reduce using rule 98 (expr -> multi MAS expr .)
    CTE_REAL        reduce using rule 98 (expr -> multi MAS expr .)
    CTE_ALFA        reduce using rule 98 (expr -> multi MAS expr .)
    VERDADERO       reduce using rule 98 (expr -> multi MAS expr .)
    FALSO           reduce using rule 98 (expr -> multi MAS expr .)
    MAS             reduce using rule 98 (expr -> multi MAS expr .)
    OP_ASIG         reduce using rule 98 (expr -> multi MAS expr .)
    OP_REL          reduce using rule 98 (expr -> multi MAS expr .)
    Y               reduce using rule 98 (expr -> multi MAS expr .)
    O               reduce using rule 98 (expr -> multi MAS expr .)
    PAREN_TERMINA   reduce using rule 98 (expr -> multi MAS expr .)
    COMA            reduce using rule 98 (expr -> multi MAS expr .)
    error           reduce using rule 98 (expr -> multi MAS expr .)
    PUNTO_COMA      reduce using rule 98 (expr -> multi MAS expr .)
    LIMPIA          reduce using rule 98 (expr -> multi MAS expr .)
    INTERRUMPE      reduce using rule 98 (expr -> multi MAS expr .)
    CONTINUA        reduce using rule 98 (expr -> multi MAS expr .)
    SI              reduce using rule 98 (expr -> multi MAS expr .)
    DESDE           reduce using rule 98 (expr -> multi MAS expr .)
    REPETIR         reduce using rule 98 (expr -> multi MAS expr .)
    MIENTRAS        reduce using rule 98 (expr -> multi MAS expr .)
    CUANDO          reduce using rule 98 (expr -> multi MAS expr .)
    REGRESA         reduce using rule 98 (expr -> multi MAS expr .)
    IMPRIME         reduce using rule 98 (expr -> multi MAS expr .)
    IMPRIMENL       reduce using rule 98 (expr -> multi MAS expr .)
    LEE             reduce using rule 98 (expr -> multi MAS expr .)
    FIN             reduce using rule 98 (expr -> multi MAS expr .)
    HASTA           reduce using rule 98 (expr -> multi MAS expr .)
    SINO            reduce using rule 98 (expr -> multi MAS expr .)
    SEA             reduce using rule 98 (expr -> multi MAS expr .)
    OTRO            reduce using rule 98 (expr -> multi MAS expr .)
    INICIO          reduce using rule 98 (expr -> multi MAS expr .)
    DECR            reduce using rule 98 (expr -> multi MAS expr .)
    INCR            reduce using rule 98 (expr -> multi MAS expr .)


state 191

    (99) expr -> multi MENOS expr .

    MENOS           reduce using rule 99 (expr -> multi MENOS expr .)
    IDENT           reduce using rule 99 (expr -> multi MENOS expr .)
    CTE_ENTERA      reduce using rule 99 (expr -> multi MENOS expr .)
    CTE_REAL        reduce using rule 99 (expr -> multi MENOS expr .)
    CTE_ALFA        reduce using rule 99 (expr -> multi MENOS expr .)
    VERDADERO       reduce using rule 99 (expr -> multi MENOS expr .)
    FALSO           reduce using rule 99 (expr -> multi MENOS expr .)
    MAS             reduce using rule 99 (expr -> multi MENOS expr .)
    OP_ASIG         reduce using rule 99 (expr -> multi MENOS expr .)
    OP_REL          reduce using rule 99 (expr -> multi MENOS expr .)
    Y               reduce using rule 99 (expr -> multi MENOS expr .)
    O               reduce using rule 99 (expr -> multi MENOS expr .)
    PAREN_TERMINA   reduce using rule 99 (expr -> multi MENOS expr .)
    COMA            reduce using rule 99 (expr -> multi MENOS expr .)
    error           reduce using rule 99 (expr -> multi MENOS expr .)
    PUNTO_COMA      reduce using rule 99 (expr -> multi MENOS expr .)
    LIMPIA          reduce using rule 99 (expr -> multi MENOS expr .)
    INTERRUMPE      reduce using rule 99 (expr -> multi MENOS expr .)
    CONTINUA        reduce using rule 99 (expr -> multi MENOS expr .)
    SI              reduce using rule 99 (expr -> multi MENOS expr .)
    DESDE           reduce using rule 99 (expr -> multi MENOS expr .)
    REPETIR         reduce using rule 99 (expr -> multi MENOS expr .)
    MIENTRAS        reduce using rule 99 (expr -> multi MENOS expr .)
    CUANDO          reduce using rule 99 (expr -> multi MENOS expr .)
    REGRESA         reduce using rule 99 (expr -> multi MENOS expr .)
    IMPRIME         reduce using rule 99 (expr -> multi MENOS expr .)
    IMPRIMENL       reduce using rule 99 (expr -> multi MENOS expr .)
    LEE             reduce using rule 99 (expr -> multi MENOS expr .)
    FIN             reduce using rule 99 (expr -> multi MENOS expr .)
    HASTA           reduce using rule 99 (expr -> multi MENOS expr .)
    SINO            reduce using rule 99 (expr -> multi MENOS expr .)
    SEA             reduce using rule 99 (expr -> multi MENOS expr .)
    OTRO            reduce using rule 99 (expr -> multi MENOS expr .)
    INICIO          reduce using rule 99 (expr -> multi MENOS expr .)
    DECR            reduce using rule 99 (expr -> multi MENOS expr .)
    INCR            reduce using rule 99 (expr -> multi MENOS expr .)


state 192

    (101) multi -> expo MULTI multi .

    MAS             reduce using rule 101 (multi -> expo MULTI multi .)
    MENOS           reduce using rule 101 (multi -> expo MULTI multi .)
    IDENT           reduce using rule 101 (multi -> expo MULTI multi .)
    CTE_ENTERA      reduce using rule 101 (multi -> expo MULTI multi .)
    CTE_REAL        reduce using rule 101 (multi -> expo MULTI multi .)
    CTE_ALFA        reduce using rule 101 (multi -> expo MULTI multi .)
    VERDADERO       reduce using rule 101 (multi -> expo MULTI multi .)
    FALSO           reduce using rule 101 (multi -> expo MULTI multi .)
    OP_ASIG         reduce using rule 101 (multi -> expo MULTI multi .)
    OP_REL          reduce using rule 101 (multi -> expo MULTI multi .)
    Y               reduce using rule 101 (multi -> expo MULTI multi .)
    O               reduce using rule 101 (multi -> expo MULTI multi .)
    PAREN_TERMINA   reduce using rule 101 (multi -> expo MULTI multi .)
    COMA            reduce using rule 101 (multi -> expo MULTI multi .)
    error           reduce using rule 101 (multi -> expo MULTI multi .)
    PUNTO_COMA      reduce using rule 101 (multi -> expo MULTI multi .)
    LIMPIA          reduce using rule 101 (multi -> expo MULTI multi .)
    INTERRUMPE      reduce using rule 101 (multi -> expo MULTI multi .)
    CONTINUA        reduce using rule 101 (multi -> expo MULTI multi .)
    SI              reduce using rule 101 (multi -> expo MULTI multi .)
    DESDE           reduce using rule 101 (multi -> expo MULTI multi .)
    REPETIR         reduce using rule 101 (multi -> expo MULTI multi .)
    MIENTRAS        reduce using rule 101 (multi -> expo MULTI multi .)
    CUANDO          reduce using rule 101 (multi -> expo MULTI multi .)
    REGRESA         reduce using rule 101 (multi -> expo MULTI multi .)
    IMPRIME         reduce using rule 101 (multi -> expo MULTI multi .)
    IMPRIMENL       reduce using rule 101 (multi -> expo MULTI multi .)
    LEE             reduce using rule 101 (multi -> expo MULTI multi .)
    FIN             reduce using rule 101 (multi -> expo MULTI multi .)
    HASTA           reduce using rule 101 (multi -> expo MULTI multi .)
    SINO            reduce using rule 101 (multi -> expo MULTI multi .)
    SEA             reduce using rule 101 (multi -> expo MULTI multi .)
    OTRO            reduce using rule 101 (multi -> expo MULTI multi .)
    INICIO          reduce using rule 101 (multi -> expo MULTI multi .)
    DECR            reduce using rule 101 (multi -> expo MULTI multi .)
    INCR            reduce using rule 101 (multi -> expo MULTI multi .)


state 193

    (102) multi -> expo DIV multi .

    MAS             reduce using rule 102 (multi -> expo DIV multi .)
    MENOS           reduce using rule 102 (multi -> expo DIV multi .)
    IDENT           reduce using rule 102 (multi -> expo DIV multi .)
    CTE_ENTERA      reduce using rule 102 (multi -> expo DIV multi .)
    CTE_REAL        reduce using rule 102 (multi -> expo DIV multi .)
    CTE_ALFA        reduce using rule 102 (multi -> expo DIV multi .)
    VERDADERO       reduce using rule 102 (multi -> expo DIV multi .)
    FALSO           reduce using rule 102 (multi -> expo DIV multi .)
    OP_ASIG         reduce using rule 102 (multi -> expo DIV multi .)
    OP_REL          reduce using rule 102 (multi -> expo DIV multi .)
    Y               reduce using rule 102 (multi -> expo DIV multi .)
    O               reduce using rule 102 (multi -> expo DIV multi .)
    PAREN_TERMINA   reduce using rule 102 (multi -> expo DIV multi .)
    COMA            reduce using rule 102 (multi -> expo DIV multi .)
    error           reduce using rule 102 (multi -> expo DIV multi .)
    PUNTO_COMA      reduce using rule 102 (multi -> expo DIV multi .)
    LIMPIA          reduce using rule 102 (multi -> expo DIV multi .)
    INTERRUMPE      reduce using rule 102 (multi -> expo DIV multi .)
    CONTINUA        reduce using rule 102 (multi -> expo DIV multi .)
    SI              reduce using rule 102 (multi -> expo DIV multi .)
    DESDE           reduce using rule 102 (multi -> expo DIV multi .)
    REPETIR         reduce using rule 102 (multi -> expo DIV multi .)
    MIENTRAS        reduce using rule 102 (multi -> expo DIV multi .)
    CUANDO          reduce using rule 102 (multi -> expo DIV multi .)
    REGRESA         reduce using rule 102 (multi -> expo DIV multi .)
    IMPRIME         reduce using rule 102 (multi -> expo DIV multi .)
    IMPRIMENL       reduce using rule 102 (multi -> expo DIV multi .)
    LEE             reduce using rule 102 (multi -> expo DIV multi .)
    FIN             reduce using rule 102 (multi -> expo DIV multi .)
    HASTA           reduce using rule 102 (multi -> expo DIV multi .)
    SINO            reduce using rule 102 (multi -> expo DIV multi .)
    SEA             reduce using rule 102 (multi -> expo DIV multi .)
    OTRO            reduce using rule 102 (multi -> expo DIV multi .)
    INICIO          reduce using rule 102 (multi -> expo DIV multi .)
    DECR            reduce using rule 102 (multi -> expo DIV multi .)
    INCR            reduce using rule 102 (multi -> expo DIV multi .)


state 194

    (103) multi -> expo MOD multi .

    MAS             reduce using rule 103 (multi -> expo MOD multi .)
    MENOS           reduce using rule 103 (multi -> expo MOD multi .)
    IDENT           reduce using rule 103 (multi -> expo MOD multi .)
    CTE_ENTERA      reduce using rule 103 (multi -> expo MOD multi .)
    CTE_REAL        reduce using rule 103 (multi -> expo MOD multi .)
    CTE_ALFA        reduce using rule 103 (multi -> expo MOD multi .)
    VERDADERO       reduce using rule 103 (multi -> expo MOD multi .)
    FALSO           reduce using rule 103 (multi -> expo MOD multi .)
    OP_ASIG         reduce using rule 103 (multi -> expo MOD multi .)
    OP_REL          reduce using rule 103 (multi -> expo MOD multi .)
    Y               reduce using rule 103 (multi -> expo MOD multi .)
    O               reduce using rule 103 (multi -> expo MOD multi .)
    PAREN_TERMINA   reduce using rule 103 (multi -> expo MOD multi .)
    COMA            reduce using rule 103 (multi -> expo MOD multi .)
    error           reduce using rule 103 (multi -> expo MOD multi .)
    PUNTO_COMA      reduce using rule 103 (multi -> expo MOD multi .)
    LIMPIA          reduce using rule 103 (multi -> expo MOD multi .)
    INTERRUMPE      reduce using rule 103 (multi -> expo MOD multi .)
    CONTINUA        reduce using rule 103 (multi -> expo MOD multi .)
    SI              reduce using rule 103 (multi -> expo MOD multi .)
    DESDE           reduce using rule 103 (multi -> expo MOD multi .)
    REPETIR         reduce using rule 103 (multi -> expo MOD multi .)
    MIENTRAS        reduce using rule 103 (multi -> expo MOD multi .)
    CUANDO          reduce using rule 103 (multi -> expo MOD multi .)
    REGRESA         reduce using rule 103 (multi -> expo MOD multi .)
    IMPRIME         reduce using rule 103 (multi -> expo MOD multi .)
    IMPRIMENL       reduce using rule 103 (multi -> expo MOD multi .)
    LEE             reduce using rule 103 (multi -> expo MOD multi .)
    FIN             reduce using rule 103 (multi -> expo MOD multi .)
    HASTA           reduce using rule 103 (multi -> expo MOD multi .)
    SINO            reduce using rule 103 (multi -> expo MOD multi .)
    SEA             reduce using rule 103 (multi -> expo MOD multi .)
    OTRO            reduce using rule 103 (multi -> expo MOD multi .)
    INICIO          reduce using rule 103 (multi -> expo MOD multi .)
    DECR            reduce using rule 103 (multi -> expo MOD multi .)
    INCR            reduce using rule 103 (multi -> expo MOD multi .)


state 195

    (106) expo -> signo POTENCIA expo .

    MULTI           reduce using rule 106 (expo -> signo POTENCIA expo .)
    DIV             reduce using rule 106 (expo -> signo POTENCIA expo .)
    MOD             reduce using rule 106 (expo -> signo POTENCIA expo .)
    MAS             reduce using rule 106 (expo -> signo POTENCIA expo .)
    MENOS           reduce using rule 106 (expo -> signo POTENCIA expo .)
    IDENT           reduce using rule 106 (expo -> signo POTENCIA expo .)
    CTE_ENTERA      reduce using rule 106 (expo -> signo POTENCIA expo .)
    CTE_REAL        reduce using rule 106 (expo -> signo POTENCIA expo .)
    CTE_ALFA        reduce using rule 106 (expo -> signo POTENCIA expo .)
    VERDADERO       reduce using rule 106 (expo -> signo POTENCIA expo .)
    FALSO           reduce using rule 106 (expo -> signo POTENCIA expo .)
    OP_ASIG         reduce using rule 106 (expo -> signo POTENCIA expo .)
    OP_REL          reduce using rule 106 (expo -> signo POTENCIA expo .)
    Y               reduce using rule 106 (expo -> signo POTENCIA expo .)
    O               reduce using rule 106 (expo -> signo POTENCIA expo .)
    PAREN_TERMINA   reduce using rule 106 (expo -> signo POTENCIA expo .)
    COMA            reduce using rule 106 (expo -> signo POTENCIA expo .)
    error           reduce using rule 106 (expo -> signo POTENCIA expo .)
    PUNTO_COMA      reduce using rule 106 (expo -> signo POTENCIA expo .)
    LIMPIA          reduce using rule 106 (expo -> signo POTENCIA expo .)
    INTERRUMPE      reduce using rule 106 (expo -> signo POTENCIA expo .)
    CONTINUA        reduce using rule 106 (expo -> signo POTENCIA expo .)
    SI              reduce using rule 106 (expo -> signo POTENCIA expo .)
    DESDE           reduce using rule 106 (expo -> signo POTENCIA expo .)
    REPETIR         reduce using rule 106 (expo -> signo POTENCIA expo .)
    MIENTRAS        reduce using rule 106 (expo -> signo POTENCIA expo .)
    CUANDO          reduce using rule 106 (expo -> signo POTENCIA expo .)
    REGRESA         reduce using rule 106 (expo -> signo POTENCIA expo .)
    IMPRIME         reduce using rule 106 (expo -> signo POTENCIA expo .)
    IMPRIMENL       reduce using rule 106 (expo -> signo POTENCIA expo .)
    LEE             reduce using rule 106 (expo -> signo POTENCIA expo .)
    FIN             reduce using rule 106 (expo -> signo POTENCIA expo .)
    HASTA           reduce using rule 106 (expo -> signo POTENCIA expo .)
    SINO            reduce using rule 106 (expo -> signo POTENCIA expo .)
    SEA             reduce using rule 106 (expo -> signo POTENCIA expo .)
    OTRO            reduce using rule 106 (expo -> signo POTENCIA expo .)
    INICIO          reduce using rule 106 (expo -> signo POTENCIA expo .)
    DECR            reduce using rule 106 (expo -> signo POTENCIA expo .)
    INCR            reduce using rule 106 (expo -> signo POTENCIA expo .)


state 196

    (72) desde -> DESDE EL VALOR DE . asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> DESDE EL VALOR DE . asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> DESDE EL VALOR DE . asigna HASTA expr error bckesp
    (77) asigna -> . IDENT udim OP_ASIG exprlog

    IDENT           shift and go to state 220

    asigna                         shift and go to state 219

state 197

    (75) repetir -> REPETIR block HASTA QUE . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 221


state 198

    (76) mientras -> MIENTRAS SE CUMPLA QUE . exprlog bckesp
    (89) exprlog -> . opy
    (90) exprlog -> . opy O exprlog
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    INICIO          reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SINO            reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]

    exprlog                        shift and go to state 222
    opy                            shift and go to state 143
    opno                           shift and go to state 144
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 199

    (78) cuando -> CUANDO EL VALOR DE . IDENT INICIO gposea otro FIN

    IDENT           shift and go to state 223


state 200

    (86) regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    LIMPIA          reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CONTINUA        reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SI              reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IDENT           reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    DESDE           reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    REPETIR         reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MIENTRAS        reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CUANDO          reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    REGRESA         reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IMPRIME         reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    LEE             reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    HASTA           reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 86 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 201

    (120) imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    LIMPIA          reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    CONTINUA        reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SI              reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    IDENT           reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    DESDE           reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    REPETIR         reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    MIENTRAS        reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    CUANDO          reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    REGRESA         reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    IMPRIME         reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    LEE             reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    HASTA           reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 120 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 202

    (126) gpoexp -> exprlog COMA . gpoexp
    (125) gpoexp -> . exprlog
    (126) gpoexp -> . exprlog COMA gpoexp
    (89) exprlog -> . opy
    (90) exprlog -> . opy O exprlog
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    COMA            reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]

    exprlog                        shift and go to state 168
    gpoexp                         shift and go to state 224
    opy                            shift and go to state 143
    opno                           shift and go to state 144
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 203

    (121) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    LIMPIA          reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    CONTINUA        reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SI              reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    IDENT           reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    DESDE           reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    REPETIR         reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    MIENTRAS        reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    CUANDO          reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    REGRESA         reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    IMPRIME         reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    LEE             reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    HASTA           reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 121 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 204

    (122) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .

    PUNTO_COMA      reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    LIMPIA          reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    INTERRUMPE      reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    CONTINUA        reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    SI              reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    IDENT           reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    DESDE           reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    REPETIR         reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    MIENTRAS        reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    CUANDO          reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    REGRESA         reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    IMPRIME         reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    IMPRIMENL       reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    LEE             reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    FIN             reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    HASTA           reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    SINO            reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    SEA             reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    OTRO            reduce using rule 122 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)


state 205

    (123) lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    LIMPIA          reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    CONTINUA        reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SI              reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    IDENT           reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    DESDE           reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    REPETIR         reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    MIENTRAS        reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    CUANDO          reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    REGRESA         reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    IMPRIME         reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    LEE             reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    FIN             reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    HASTA           reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SINO            reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SEA             reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    OTRO            reduce using rule 123 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)


state 206

    (124) lee -> LEE PAREN_EMPIEZA IDENT dimens . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 225


state 207

    (40) maspars -> COMA gpopars .

    PUNTOS_DOBLES   reduce using rule 40 (maspars -> COMA gpopars .)


state 208

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables . INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    INICIO          shift and go to state 226


state 209

    (35) params -> gpopars PUNTOS_DOBLES TIPO . otrospars
    (37) otrospars -> . PUNTO_COMA params
    (38) otrospars -> . empty
    (129) empty -> .

    PUNTO_COMA      shift and go to state 228
    PAREN_TERMINA   reduce using rule 129 (empty -> .)

    otrospars                      shift and go to state 227
    empty                          shift and go to state 229

state 210

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    TIPO            shift and go to state 230


state 211

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 231


state 212

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    FUNCION         reduce using rule 33 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 33 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FIN             reduce using rule 33 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 213

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO .

    $end            reduce using rule 1 (program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO .)


state 214

    (66) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER . bckesp sino
    (69) bckesp -> . estatuto
    (70) bckesp -> . INICIO block FIN
    (71) bckesp -> .
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for SINO resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 71 (bckesp -> .)
  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 71 (bckesp -> .)
    INICIO          shift and go to state 234
    SINO            reduce using rule 71 (bckesp -> .)
    PUNTO_COMA      reduce using rule 71 (bckesp -> .)
    FIN             reduce using rule 71 (bckesp -> .)
    HASTA           reduce using rule 71 (bckesp -> .)
    SEA             reduce using rule 71 (bckesp -> .)
    OTRO            reduce using rule 71 (bckesp -> .)
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

  ! LIMPIA          [ reduce using rule 71 (bckesp -> .) ]
  ! INTERRUMPE      [ reduce using rule 71 (bckesp -> .) ]
  ! CONTINUA        [ reduce using rule 71 (bckesp -> .) ]
  ! SI              [ reduce using rule 71 (bckesp -> .) ]
  ! IDENT           [ reduce using rule 71 (bckesp -> .) ]
  ! DESDE           [ reduce using rule 71 (bckesp -> .) ]
  ! REPETIR         [ reduce using rule 71 (bckesp -> .) ]
  ! MIENTRAS        [ reduce using rule 71 (bckesp -> .) ]
  ! CUANDO          [ reduce using rule 71 (bckesp -> .) ]
  ! REGRESA         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIME         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIMENL       [ reduce using rule 71 (bckesp -> .) ]
  ! LEE             [ reduce using rule 71 (bckesp -> .) ]
  ! SINO            [ reduce using rule 129 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 129 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]
  ! HASTA           [ reduce using rule 129 (empty -> .) ]
  ! SEA             [ reduce using rule 129 (empty -> .) ]
  ! OTRO            [ reduce using rule 129 (empty -> .) ]

    bckesp                         shift and go to state 232
    estatuto                       shift and go to state 233
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 215

    (90) exprlog -> opy O exprlog .

    PAREN_TERMINA   reduce using rule 90 (exprlog -> opy O exprlog .)
    COMA            reduce using rule 90 (exprlog -> opy O exprlog .)
    error           reduce using rule 90 (exprlog -> opy O exprlog .)
    PUNTO_COMA      reduce using rule 90 (exprlog -> opy O exprlog .)
    LIMPIA          reduce using rule 90 (exprlog -> opy O exprlog .)
    INTERRUMPE      reduce using rule 90 (exprlog -> opy O exprlog .)
    CONTINUA        reduce using rule 90 (exprlog -> opy O exprlog .)
    SI              reduce using rule 90 (exprlog -> opy O exprlog .)
    IDENT           reduce using rule 90 (exprlog -> opy O exprlog .)
    DESDE           reduce using rule 90 (exprlog -> opy O exprlog .)
    REPETIR         reduce using rule 90 (exprlog -> opy O exprlog .)
    MIENTRAS        reduce using rule 90 (exprlog -> opy O exprlog .)
    CUANDO          reduce using rule 90 (exprlog -> opy O exprlog .)
    REGRESA         reduce using rule 90 (exprlog -> opy O exprlog .)
    IMPRIME         reduce using rule 90 (exprlog -> opy O exprlog .)
    IMPRIMENL       reduce using rule 90 (exprlog -> opy O exprlog .)
    LEE             reduce using rule 90 (exprlog -> opy O exprlog .)
    FIN             reduce using rule 90 (exprlog -> opy O exprlog .)
    HASTA           reduce using rule 90 (exprlog -> opy O exprlog .)
    SINO            reduce using rule 90 (exprlog -> opy O exprlog .)
    SEA             reduce using rule 90 (exprlog -> opy O exprlog .)
    OTRO            reduce using rule 90 (exprlog -> opy O exprlog .)
    INICIO          reduce using rule 90 (exprlog -> opy O exprlog .)


state 216

    (92) opy -> opno Y opy .

    O               reduce using rule 92 (opy -> opno Y opy .)
    PAREN_TERMINA   reduce using rule 92 (opy -> opno Y opy .)
    COMA            reduce using rule 92 (opy -> opno Y opy .)
    error           reduce using rule 92 (opy -> opno Y opy .)
    PUNTO_COMA      reduce using rule 92 (opy -> opno Y opy .)
    LIMPIA          reduce using rule 92 (opy -> opno Y opy .)
    INTERRUMPE      reduce using rule 92 (opy -> opno Y opy .)
    CONTINUA        reduce using rule 92 (opy -> opno Y opy .)
    SI              reduce using rule 92 (opy -> opno Y opy .)
    IDENT           reduce using rule 92 (opy -> opno Y opy .)
    DESDE           reduce using rule 92 (opy -> opno Y opy .)
    REPETIR         reduce using rule 92 (opy -> opno Y opy .)
    MIENTRAS        reduce using rule 92 (opy -> opno Y opy .)
    CUANDO          reduce using rule 92 (opy -> opno Y opy .)
    REGRESA         reduce using rule 92 (opy -> opno Y opy .)
    IMPRIME         reduce using rule 92 (opy -> opno Y opy .)
    IMPRIMENL       reduce using rule 92 (opy -> opno Y opy .)
    LEE             reduce using rule 92 (opy -> opno Y opy .)
    FIN             reduce using rule 92 (opy -> opno Y opy .)
    HASTA           reduce using rule 92 (opy -> opno Y opy .)
    SINO            reduce using rule 92 (opy -> opno Y opy .)
    SEA             reduce using rule 92 (opy -> opno Y opy .)
    OTRO            reduce using rule 92 (opy -> opno Y opy .)
    INICIO          reduce using rule 92 (opy -> opno Y opy .)


state 217

    (96) oprel -> expr OP_REL oprel .

    Y               reduce using rule 96 (oprel -> expr OP_REL oprel .)
    O               reduce using rule 96 (oprel -> expr OP_REL oprel .)
    PAREN_TERMINA   reduce using rule 96 (oprel -> expr OP_REL oprel .)
    COMA            reduce using rule 96 (oprel -> expr OP_REL oprel .)
    error           reduce using rule 96 (oprel -> expr OP_REL oprel .)
    PUNTO_COMA      reduce using rule 96 (oprel -> expr OP_REL oprel .)
    LIMPIA          reduce using rule 96 (oprel -> expr OP_REL oprel .)
    INTERRUMPE      reduce using rule 96 (oprel -> expr OP_REL oprel .)
    CONTINUA        reduce using rule 96 (oprel -> expr OP_REL oprel .)
    SI              reduce using rule 96 (oprel -> expr OP_REL oprel .)
    IDENT           reduce using rule 96 (oprel -> expr OP_REL oprel .)
    DESDE           reduce using rule 96 (oprel -> expr OP_REL oprel .)
    REPETIR         reduce using rule 96 (oprel -> expr OP_REL oprel .)
    MIENTRAS        reduce using rule 96 (oprel -> expr OP_REL oprel .)
    CUANDO          reduce using rule 96 (oprel -> expr OP_REL oprel .)
    REGRESA         reduce using rule 96 (oprel -> expr OP_REL oprel .)
    IMPRIME         reduce using rule 96 (oprel -> expr OP_REL oprel .)
    IMPRIMENL       reduce using rule 96 (oprel -> expr OP_REL oprel .)
    LEE             reduce using rule 96 (oprel -> expr OP_REL oprel .)
    FIN             reduce using rule 96 (oprel -> expr OP_REL oprel .)
    HASTA           reduce using rule 96 (oprel -> expr OP_REL oprel .)
    SINO            reduce using rule 96 (oprel -> expr OP_REL oprel .)
    SEA             reduce using rule 96 (oprel -> expr OP_REL oprel .)
    OTRO            reduce using rule 96 (oprel -> expr OP_REL oprel .)
    INICIO          reduce using rule 96 (oprel -> expr OP_REL oprel .)


state 218

    (128) uparams -> exprlog COMA uparams .

    PAREN_TERMINA   reduce using rule 128 (uparams -> exprlog COMA uparams .)


state 219

    (72) desde -> DESDE EL VALOR DE asigna . HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> DESDE EL VALOR DE asigna . HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> DESDE EL VALOR DE asigna . HASTA expr error bckesp

    HASTA           shift and go to state 235


state 220

    (77) asigna -> IDENT . udim OP_ASIG exprlog
    (87) udim -> . expr udim
    (88) udim -> . empty
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (129) empty -> .
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    OP_ASIG         reduce using rule 129 (empty -> .)
    MAS             reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 129 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 129 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 129 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 129 (empty -> .) ]
  ! FALSO           [ reduce using rule 129 (empty -> .) ]

    udim                           shift and go to state 106
    expr                           shift and go to state 108
    empty                          shift and go to state 109
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 221

    (75) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (89) exprlog -> . opy
    (90) exprlog -> . opy O exprlog
    (91) opy -> . opno
    (92) opy -> . opno Y opy
    (93) opno -> . oprel
    (94) opno -> . NO oprel
    (95) oprel -> . expr
    (96) oprel -> . expr OP_REL oprel
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 146
    MAS             reduce using rule 129 (empty -> .)
    OP_REL          reduce using rule 129 (empty -> .)
    Y               reduce using rule 129 (empty -> .)
    O               reduce using rule 129 (empty -> .)
    PAREN_TERMINA   reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]

    exprlog                        shift and go to state 236
    opy                            shift and go to state 143
    opno                           shift and go to state 144
    oprel                          shift and go to state 145
    expr                           shift and go to state 147
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 222

    (76) mientras -> MIENTRAS SE CUMPLA QUE exprlog . bckesp
    (69) bckesp -> . estatuto
    (70) bckesp -> . INICIO block FIN
    (71) bckesp -> .
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for SINO resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 71 (bckesp -> .)
  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 71 (bckesp -> .)
    INICIO          shift and go to state 234
    SINO            reduce using rule 71 (bckesp -> .)
    PUNTO_COMA      reduce using rule 71 (bckesp -> .)
    FIN             reduce using rule 71 (bckesp -> .)
    HASTA           reduce using rule 71 (bckesp -> .)
    SEA             reduce using rule 71 (bckesp -> .)
    OTRO            reduce using rule 71 (bckesp -> .)
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

  ! LIMPIA          [ reduce using rule 71 (bckesp -> .) ]
  ! INTERRUMPE      [ reduce using rule 71 (bckesp -> .) ]
  ! CONTINUA        [ reduce using rule 71 (bckesp -> .) ]
  ! SI              [ reduce using rule 71 (bckesp -> .) ]
  ! IDENT           [ reduce using rule 71 (bckesp -> .) ]
  ! DESDE           [ reduce using rule 71 (bckesp -> .) ]
  ! REPETIR         [ reduce using rule 71 (bckesp -> .) ]
  ! MIENTRAS        [ reduce using rule 71 (bckesp -> .) ]
  ! CUANDO          [ reduce using rule 71 (bckesp -> .) ]
  ! REGRESA         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIME         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIMENL       [ reduce using rule 71 (bckesp -> .) ]
  ! LEE             [ reduce using rule 71 (bckesp -> .) ]
  ! SINO            [ reduce using rule 129 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 129 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]
  ! HASTA           [ reduce using rule 129 (empty -> .) ]
  ! SEA             [ reduce using rule 129 (empty -> .) ]
  ! OTRO            [ reduce using rule 129 (empty -> .) ]

    bckesp                         shift and go to state 237
    estatuto                       shift and go to state 233
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 223

    (78) cuando -> CUANDO EL VALOR DE IDENT . INICIO gposea otro FIN

    INICIO          shift and go to state 238


state 224

    (126) gpoexp -> exprlog COMA gpoexp .

    PAREN_TERMINA   reduce using rule 126 (gpoexp -> exprlog COMA gpoexp .)
    error           reduce using rule 126 (gpoexp -> exprlog COMA gpoexp .)


state 225

    (124) lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    LIMPIA          reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    CONTINUA        reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SI              reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    IDENT           reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    DESDE           reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    REPETIR         reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    MIENTRAS        reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    CUANDO          reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    REGRESA         reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    IMPRIME         reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    LEE             reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    FIN             reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    HASTA           reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SINO            reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SEA             reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    OTRO            reduce using rule 124 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)


state 226

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO . block FIN DE PROCEDIMIENTO PUNTO_COMA
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . estatuto PUNTO_COMA
    (49) block -> . estatuto
    (50) block -> . estatuto block
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)

  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]

    block                          shift and go to state 239
    estatuto                       shift and go to state 63
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 227

    (35) params -> gpopars PUNTOS_DOBLES TIPO otrospars .

    PAREN_TERMINA   reduce using rule 35 (params -> gpopars PUNTOS_DOBLES TIPO otrospars .)


state 228

    (37) otrospars -> PUNTO_COMA . params
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (129) empty -> .

    IDENT           shift and go to state 129
    PAREN_TERMINA   reduce using rule 129 (empty -> .)

    params                         shift and go to state 240
    gpopars                        shift and go to state 131
    empty                          shift and go to state 132

state 229

    (38) otrospars -> empty .

    PAREN_TERMINA   reduce using rule 38 (otrospars -> empty .)


state 230

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . variables INICIO block FIN DE FUNCION PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (129) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 129 (empty -> .)

    variables                      shift and go to state 241
    empty                          shift and go to state 7

state 231

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 242


state 232

    (66) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp . sino
    (67) sino -> . SINO bckesp
    (68) sino -> . empty
    (129) empty -> .

  ! shift/reduce conflict for SINO resolved as shift
    SINO            shift and go to state 244
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    LIMPIA          reduce using rule 129 (empty -> .)
    INTERRUMPE      reduce using rule 129 (empty -> .)
    CONTINUA        reduce using rule 129 (empty -> .)
    SI              reduce using rule 129 (empty -> .)
    IDENT           reduce using rule 129 (empty -> .)
    DESDE           reduce using rule 129 (empty -> .)
    REPETIR         reduce using rule 129 (empty -> .)
    MIENTRAS        reduce using rule 129 (empty -> .)
    CUANDO          reduce using rule 129 (empty -> .)
    REGRESA         reduce using rule 129 (empty -> .)
    IMPRIME         reduce using rule 129 (empty -> .)
    IMPRIMENL       reduce using rule 129 (empty -> .)
    LEE             reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)
    HASTA           reduce using rule 129 (empty -> .)
    SEA             reduce using rule 129 (empty -> .)
    OTRO            reduce using rule 129 (empty -> .)

  ! SINO            [ reduce using rule 129 (empty -> .) ]

    sino                           shift and go to state 243
    empty                          shift and go to state 245

state 233

    (69) bckesp -> estatuto .

    SINO            reduce using rule 69 (bckesp -> estatuto .)
    PUNTO_COMA      reduce using rule 69 (bckesp -> estatuto .)
    LIMPIA          reduce using rule 69 (bckesp -> estatuto .)
    INTERRUMPE      reduce using rule 69 (bckesp -> estatuto .)
    CONTINUA        reduce using rule 69 (bckesp -> estatuto .)
    SI              reduce using rule 69 (bckesp -> estatuto .)
    IDENT           reduce using rule 69 (bckesp -> estatuto .)
    DESDE           reduce using rule 69 (bckesp -> estatuto .)
    REPETIR         reduce using rule 69 (bckesp -> estatuto .)
    MIENTRAS        reduce using rule 69 (bckesp -> estatuto .)
    CUANDO          reduce using rule 69 (bckesp -> estatuto .)
    REGRESA         reduce using rule 69 (bckesp -> estatuto .)
    IMPRIME         reduce using rule 69 (bckesp -> estatuto .)
    IMPRIMENL       reduce using rule 69 (bckesp -> estatuto .)
    LEE             reduce using rule 69 (bckesp -> estatuto .)
    FIN             reduce using rule 69 (bckesp -> estatuto .)
    HASTA           reduce using rule 69 (bckesp -> estatuto .)
    SEA             reduce using rule 69 (bckesp -> estatuto .)
    OTRO            reduce using rule 69 (bckesp -> estatuto .)


state 234

    (70) bckesp -> INICIO . block FIN
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . estatuto PUNTO_COMA
    (49) block -> . estatuto
    (50) block -> . estatuto block
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)

  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]

    block                          shift and go to state 246
    estatuto                       shift and go to state 63
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 235

    (72) desde -> DESDE EL VALOR DE asigna HASTA . expr DECR CTE_ENTERA bckesp
    (73) desde -> DESDE EL VALOR DE asigna HASTA . expr INCR CTE_ENTERA bckesp
    (74) desde -> DESDE EL VALOR DE asigna HASTA . expr error bckesp
    (97) expr -> . multi
    (98) expr -> . multi MAS expr
    (99) expr -> . multi MENOS expr
    (100) multi -> . expo
    (101) multi -> . expo MULTI multi
    (102) multi -> . expo DIV multi
    (103) multi -> . expo MOD multi
    (104) multi -> . empty
    (105) expo -> . signo
    (106) expo -> . signo POTENCIA expo
    (129) empty -> .
    (107) signo -> . termino
    (108) signo -> . MENOS termino
    (109) termino -> . IDENT
    (110) termino -> . IDENT dimens
    (111) termino -> . lfunc
    (112) termino -> . CTE_ENTERA
    (113) termino -> . CTE_REAL
    (114) termino -> . CTE_ALFA
    (115) termino -> . VERDADERO
    (116) termino -> . FALSO
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    MAS             reduce using rule 129 (empty -> .)
    DECR            reduce using rule 129 (empty -> .)
    INCR            reduce using rule 129 (empty -> .)
    error           reduce using rule 129 (empty -> .)
    MENOS           shift and go to state 111
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MENOS           [ reduce using rule 129 (empty -> .) ]

    expr                           shift and go to state 247
    multi                          shift and go to state 110
    expo                           shift and go to state 112
    empty                          shift and go to state 148
    signo                          shift and go to state 113
    termino                        shift and go to state 114
    lfunc                          shift and go to state 115

state 236

    (75) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 248


state 237

    (76) mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .

    PUNTO_COMA      reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    LIMPIA          reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    INTERRUMPE      reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    CONTINUA        reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SI              reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    IDENT           reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    DESDE           reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    REPETIR         reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    MIENTRAS        reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    CUANDO          reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    REGRESA         reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    IMPRIME         reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    IMPRIMENL       reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    LEE             reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    FIN             reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    HASTA           reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SINO            reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SEA             reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    OTRO            reduce using rule 76 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)


state 238

    (78) cuando -> CUANDO EL VALOR DE IDENT INICIO . gposea otro FIN
    (81) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (82) gposea -> . empty
    (129) empty -> .

    SEA             shift and go to state 250
    OTRO            reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)

    gposea                         shift and go to state 249
    empty                          shift and go to state 251

state 239

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block . FIN DE PROCEDIMIENTO PUNTO_COMA

    FIN             shift and go to state 252


state 240

    (37) otrospars -> PUNTO_COMA params .

    PAREN_TERMINA   reduce using rule 37 (otrospars -> PUNTO_COMA params .)


state 241

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables . INICIO block FIN DE FUNCION PUNTO_COMA

    INICIO          shift and go to state 253


state 242

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    FUNCION         reduce using rule 32 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 32 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FIN             reduce using rule 32 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 243

    (66) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .

    PUNTO_COMA      reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    LIMPIA          reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    INTERRUMPE      reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    CONTINUA        reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SI              reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    IDENT           reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    DESDE           reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    REPETIR         reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    MIENTRAS        reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    CUANDO          reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    REGRESA         reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    IMPRIME         reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    IMPRIMENL       reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    LEE             reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    FIN             reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    HASTA           reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SINO            reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SEA             reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    OTRO            reduce using rule 66 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)


state 244

    (67) sino -> SINO . bckesp
    (69) bckesp -> . estatuto
    (70) bckesp -> . INICIO block FIN
    (71) bckesp -> .
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for SINO resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 71 (bckesp -> .)
  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 71 (bckesp -> .)
    INICIO          shift and go to state 234
    SINO            reduce using rule 71 (bckesp -> .)
    PUNTO_COMA      reduce using rule 71 (bckesp -> .)
    FIN             reduce using rule 71 (bckesp -> .)
    HASTA           reduce using rule 71 (bckesp -> .)
    SEA             reduce using rule 71 (bckesp -> .)
    OTRO            reduce using rule 71 (bckesp -> .)
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

  ! LIMPIA          [ reduce using rule 71 (bckesp -> .) ]
  ! INTERRUMPE      [ reduce using rule 71 (bckesp -> .) ]
  ! CONTINUA        [ reduce using rule 71 (bckesp -> .) ]
  ! SI              [ reduce using rule 71 (bckesp -> .) ]
  ! IDENT           [ reduce using rule 71 (bckesp -> .) ]
  ! DESDE           [ reduce using rule 71 (bckesp -> .) ]
  ! REPETIR         [ reduce using rule 71 (bckesp -> .) ]
  ! MIENTRAS        [ reduce using rule 71 (bckesp -> .) ]
  ! CUANDO          [ reduce using rule 71 (bckesp -> .) ]
  ! REGRESA         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIME         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIMENL       [ reduce using rule 71 (bckesp -> .) ]
  ! LEE             [ reduce using rule 71 (bckesp -> .) ]
  ! SINO            [ reduce using rule 129 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 129 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]
  ! HASTA           [ reduce using rule 129 (empty -> .) ]
  ! SEA             [ reduce using rule 129 (empty -> .) ]
  ! OTRO            [ reduce using rule 129 (empty -> .) ]

    bckesp                         shift and go to state 254
    estatuto                       shift and go to state 233
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 245

    (68) sino -> empty .

    SINO            reduce using rule 68 (sino -> empty .)
    PUNTO_COMA      reduce using rule 68 (sino -> empty .)
    LIMPIA          reduce using rule 68 (sino -> empty .)
    INTERRUMPE      reduce using rule 68 (sino -> empty .)
    CONTINUA        reduce using rule 68 (sino -> empty .)
    SI              reduce using rule 68 (sino -> empty .)
    IDENT           reduce using rule 68 (sino -> empty .)
    DESDE           reduce using rule 68 (sino -> empty .)
    REPETIR         reduce using rule 68 (sino -> empty .)
    MIENTRAS        reduce using rule 68 (sino -> empty .)
    CUANDO          reduce using rule 68 (sino -> empty .)
    REGRESA         reduce using rule 68 (sino -> empty .)
    IMPRIME         reduce using rule 68 (sino -> empty .)
    IMPRIMENL       reduce using rule 68 (sino -> empty .)
    LEE             reduce using rule 68 (sino -> empty .)
    FIN             reduce using rule 68 (sino -> empty .)
    HASTA           reduce using rule 68 (sino -> empty .)
    SEA             reduce using rule 68 (sino -> empty .)
    OTRO            reduce using rule 68 (sino -> empty .)


state 246

    (70) bckesp -> INICIO block . FIN

    FIN             shift and go to state 255


state 247

    (72) desde -> DESDE EL VALOR DE asigna HASTA expr . DECR CTE_ENTERA bckesp
    (73) desde -> DESDE EL VALOR DE asigna HASTA expr . INCR CTE_ENTERA bckesp
    (74) desde -> DESDE EL VALOR DE asigna HASTA expr . error bckesp

    DECR            shift and go to state 256
    INCR            shift and go to state 257
    error           shift and go to state 258


state 248

    (75) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    LIMPIA          reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CONTINUA        reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SI              reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IDENT           reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    DESDE           reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    REPETIR         reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MIENTRAS        reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CUANDO          reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    REGRESA         reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IMPRIME         reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    LEE             reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    HASTA           reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 75 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 249

    (78) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea . otro FIN
    (79) otro -> . OTRO PUNTOS_DOBLES bckesp
    (80) otro -> . empty
    (129) empty -> .

    OTRO            shift and go to state 260
    FIN             reduce using rule 129 (empty -> .)

    otro                           shift and go to state 259
    empty                          shift and go to state 261

state 250

    (81) gposea -> SEA . gpoconst PUNTOS_DOBLES bckesp gposea
    (83) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 263

    gpoconst                       shift and go to state 262

state 251

    (82) gposea -> empty .

    OTRO            reduce using rule 82 (gposea -> empty .)
    FIN             reduce using rule 82 (gposea -> empty .)


state 252

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN . DE PROCEDIMIENTO PUNTO_COMA

    DE              shift and go to state 264


state 253

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO . block FIN DE FUNCION PUNTO_COMA
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . estatuto PUNTO_COMA
    (49) block -> . estatuto
    (50) block -> . estatuto block
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88
    PUNTO_COMA      reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)

  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]

    block                          shift and go to state 265
    estatuto                       shift and go to state 63
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 254

    (67) sino -> SINO bckesp .

    SINO            reduce using rule 67 (sino -> SINO bckesp .)
    PUNTO_COMA      reduce using rule 67 (sino -> SINO bckesp .)
    LIMPIA          reduce using rule 67 (sino -> SINO bckesp .)
    INTERRUMPE      reduce using rule 67 (sino -> SINO bckesp .)
    CONTINUA        reduce using rule 67 (sino -> SINO bckesp .)
    SI              reduce using rule 67 (sino -> SINO bckesp .)
    IDENT           reduce using rule 67 (sino -> SINO bckesp .)
    DESDE           reduce using rule 67 (sino -> SINO bckesp .)
    REPETIR         reduce using rule 67 (sino -> SINO bckesp .)
    MIENTRAS        reduce using rule 67 (sino -> SINO bckesp .)
    CUANDO          reduce using rule 67 (sino -> SINO bckesp .)
    REGRESA         reduce using rule 67 (sino -> SINO bckesp .)
    IMPRIME         reduce using rule 67 (sino -> SINO bckesp .)
    IMPRIMENL       reduce using rule 67 (sino -> SINO bckesp .)
    LEE             reduce using rule 67 (sino -> SINO bckesp .)
    FIN             reduce using rule 67 (sino -> SINO bckesp .)
    HASTA           reduce using rule 67 (sino -> SINO bckesp .)
    SEA             reduce using rule 67 (sino -> SINO bckesp .)
    OTRO            reduce using rule 67 (sino -> SINO bckesp .)


state 255

    (70) bckesp -> INICIO block FIN .

    SINO            reduce using rule 70 (bckesp -> INICIO block FIN .)
    PUNTO_COMA      reduce using rule 70 (bckesp -> INICIO block FIN .)
    LIMPIA          reduce using rule 70 (bckesp -> INICIO block FIN .)
    INTERRUMPE      reduce using rule 70 (bckesp -> INICIO block FIN .)
    CONTINUA        reduce using rule 70 (bckesp -> INICIO block FIN .)
    SI              reduce using rule 70 (bckesp -> INICIO block FIN .)
    IDENT           reduce using rule 70 (bckesp -> INICIO block FIN .)
    DESDE           reduce using rule 70 (bckesp -> INICIO block FIN .)
    REPETIR         reduce using rule 70 (bckesp -> INICIO block FIN .)
    MIENTRAS        reduce using rule 70 (bckesp -> INICIO block FIN .)
    CUANDO          reduce using rule 70 (bckesp -> INICIO block FIN .)
    REGRESA         reduce using rule 70 (bckesp -> INICIO block FIN .)
    IMPRIME         reduce using rule 70 (bckesp -> INICIO block FIN .)
    IMPRIMENL       reduce using rule 70 (bckesp -> INICIO block FIN .)
    LEE             reduce using rule 70 (bckesp -> INICIO block FIN .)
    FIN             reduce using rule 70 (bckesp -> INICIO block FIN .)
    HASTA           reduce using rule 70 (bckesp -> INICIO block FIN .)
    SEA             reduce using rule 70 (bckesp -> INICIO block FIN .)
    OTRO            reduce using rule 70 (bckesp -> INICIO block FIN .)


state 256

    (72) desde -> DESDE EL VALOR DE asigna HASTA expr DECR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 266


state 257

    (73) desde -> DESDE EL VALOR DE asigna HASTA expr INCR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 267


state 258

    (74) desde -> DESDE EL VALOR DE asigna HASTA expr error . bckesp
    (69) bckesp -> . estatuto
    (70) bckesp -> . INICIO block FIN
    (71) bckesp -> .
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for SINO resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 71 (bckesp -> .)
  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 71 (bckesp -> .)
    INICIO          shift and go to state 234
    SINO            reduce using rule 71 (bckesp -> .)
    PUNTO_COMA      reduce using rule 71 (bckesp -> .)
    FIN             reduce using rule 71 (bckesp -> .)
    HASTA           reduce using rule 71 (bckesp -> .)
    SEA             reduce using rule 71 (bckesp -> .)
    OTRO            reduce using rule 71 (bckesp -> .)
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

  ! LIMPIA          [ reduce using rule 71 (bckesp -> .) ]
  ! INTERRUMPE      [ reduce using rule 71 (bckesp -> .) ]
  ! CONTINUA        [ reduce using rule 71 (bckesp -> .) ]
  ! SI              [ reduce using rule 71 (bckesp -> .) ]
  ! IDENT           [ reduce using rule 71 (bckesp -> .) ]
  ! DESDE           [ reduce using rule 71 (bckesp -> .) ]
  ! REPETIR         [ reduce using rule 71 (bckesp -> .) ]
  ! MIENTRAS        [ reduce using rule 71 (bckesp -> .) ]
  ! CUANDO          [ reduce using rule 71 (bckesp -> .) ]
  ! REGRESA         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIME         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIMENL       [ reduce using rule 71 (bckesp -> .) ]
  ! LEE             [ reduce using rule 71 (bckesp -> .) ]
  ! SINO            [ reduce using rule 129 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 129 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]
  ! HASTA           [ reduce using rule 129 (empty -> .) ]
  ! SEA             [ reduce using rule 129 (empty -> .) ]
  ! OTRO            [ reduce using rule 129 (empty -> .) ]

    asigna                         shift and go to state 72
    bckesp                         shift and go to state 268
    estatuto                       shift and go to state 233
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 259

    (78) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro . FIN

    FIN             shift and go to state 269


state 260

    (79) otro -> OTRO . PUNTOS_DOBLES bckesp

    PUNTOS_DOBLES   shift and go to state 270


state 261

    (80) otro -> empty .

    FIN             reduce using rule 80 (otro -> empty .)


state 262

    (81) gposea -> SEA gpoconst . PUNTOS_DOBLES bckesp gposea

    PUNTOS_DOBLES   shift and go to state 271


state 263

    (83) gpoconst -> CTE_ALFA . masgpoconst
    (84) masgpoconst -> . COMA gpoconst
    (85) masgpoconst -> . empty
    (129) empty -> .

    COMA            shift and go to state 273
    PUNTOS_DOBLES   reduce using rule 129 (empty -> .)

    masgpoconst                    shift and go to state 272
    empty                          shift and go to state 274

state 264

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE . PROCEDIMIENTO PUNTO_COMA

    PROCEDIMIENTO   shift and go to state 275


state 265

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block . FIN DE FUNCION PUNTO_COMA

    FIN             shift and go to state 276


state 266

    (72) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA . bckesp
    (69) bckesp -> . estatuto
    (70) bckesp -> . INICIO block FIN
    (71) bckesp -> .
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for SINO resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 71 (bckesp -> .)
  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 71 (bckesp -> .)
    INICIO          shift and go to state 234
    SINO            reduce using rule 71 (bckesp -> .)
    PUNTO_COMA      reduce using rule 71 (bckesp -> .)
    FIN             reduce using rule 71 (bckesp -> .)
    HASTA           reduce using rule 71 (bckesp -> .)
    SEA             reduce using rule 71 (bckesp -> .)
    OTRO            reduce using rule 71 (bckesp -> .)
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

  ! LIMPIA          [ reduce using rule 71 (bckesp -> .) ]
  ! INTERRUMPE      [ reduce using rule 71 (bckesp -> .) ]
  ! CONTINUA        [ reduce using rule 71 (bckesp -> .) ]
  ! SI              [ reduce using rule 71 (bckesp -> .) ]
  ! IDENT           [ reduce using rule 71 (bckesp -> .) ]
  ! DESDE           [ reduce using rule 71 (bckesp -> .) ]
  ! REPETIR         [ reduce using rule 71 (bckesp -> .) ]
  ! MIENTRAS        [ reduce using rule 71 (bckesp -> .) ]
  ! CUANDO          [ reduce using rule 71 (bckesp -> .) ]
  ! REGRESA         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIME         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIMENL       [ reduce using rule 71 (bckesp -> .) ]
  ! LEE             [ reduce using rule 71 (bckesp -> .) ]
  ! SINO            [ reduce using rule 129 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 129 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]
  ! HASTA           [ reduce using rule 129 (empty -> .) ]
  ! SEA             [ reduce using rule 129 (empty -> .) ]
  ! OTRO            [ reduce using rule 129 (empty -> .) ]

    asigna                         shift and go to state 72
    bckesp                         shift and go to state 277
    estatuto                       shift and go to state 233
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 267

    (73) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA . bckesp
    (69) bckesp -> . estatuto
    (70) bckesp -> . INICIO block FIN
    (71) bckesp -> .
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for SINO resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 71 (bckesp -> .)
  ! shift/reduce conflict for LIMPIA resolved as shift
  ! shift/reduce conflict for INTERRUMPE resolved as shift
  ! shift/reduce conflict for CONTINUA resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for DESDE resolved as shift
  ! shift/reduce conflict for REPETIR resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for CUANDO resolved as shift
  ! shift/reduce conflict for REGRESA resolved as shift
  ! shift/reduce conflict for IMPRIME resolved as shift
  ! shift/reduce conflict for IMPRIMENL resolved as shift
  ! shift/reduce conflict for LEE resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 71 (bckesp -> .)
    INICIO          shift and go to state 234
    SINO            reduce using rule 71 (bckesp -> .)
    PUNTO_COMA      reduce using rule 71 (bckesp -> .)
    FIN             reduce using rule 71 (bckesp -> .)
    HASTA           reduce using rule 71 (bckesp -> .)
    SEA             reduce using rule 71 (bckesp -> .)
    OTRO            reduce using rule 71 (bckesp -> .)
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

  ! LIMPIA          [ reduce using rule 71 (bckesp -> .) ]
  ! INTERRUMPE      [ reduce using rule 71 (bckesp -> .) ]
  ! CONTINUA        [ reduce using rule 71 (bckesp -> .) ]
  ! SI              [ reduce using rule 71 (bckesp -> .) ]
  ! IDENT           [ reduce using rule 71 (bckesp -> .) ]
  ! DESDE           [ reduce using rule 71 (bckesp -> .) ]
  ! REPETIR         [ reduce using rule 71 (bckesp -> .) ]
  ! MIENTRAS        [ reduce using rule 71 (bckesp -> .) ]
  ! CUANDO          [ reduce using rule 71 (bckesp -> .) ]
  ! REGRESA         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIME         [ reduce using rule 71 (bckesp -> .) ]
  ! IMPRIMENL       [ reduce using rule 71 (bckesp -> .) ]
  ! LEE             [ reduce using rule 71 (bckesp -> .) ]
  ! SINO            [ reduce using rule 129 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 129 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 129 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 129 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 129 (empty -> .) ]
  ! SI              [ reduce using rule 129 (empty -> .) ]
  ! IDENT           [ reduce using rule 129 (empty -> .) ]
  ! DESDE           [ reduce using rule 129 (empty -> .) ]
  ! REPETIR         [ reduce using rule 129 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 129 (empty -> .) ]
  ! CUANDO          [ reduce using rule 129 (empty -> .) ]
  ! REGRESA         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 129 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 129 (empty -> .) ]
  ! LEE             [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]
  ! HASTA           [ reduce using rule 129 (empty -> .) ]
  ! SEA             [ reduce using rule 129 (empty -> .) ]
  ! OTRO            [ reduce using rule 129 (empty -> .) ]

    asigna                         shift and go to state 72
    bckesp                         shift and go to state 278
    estatuto                       shift and go to state 233
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 268

    (74) desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .

    PUNTO_COMA      reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    LIMPIA          reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    INTERRUMPE      reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    CONTINUA        reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    SI              reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    IDENT           reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    DESDE           reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    REPETIR         reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    MIENTRAS        reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    CUANDO          reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    REGRESA         reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    IMPRIME         reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    IMPRIMENL       reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    LEE             reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    FIN             reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    HASTA           reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    SINO            reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    SEA             reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    OTRO            reduce using rule 74 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)


state 269

    (78) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .

    PUNTO_COMA      reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    LIMPIA          reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    INTERRUMPE      reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    CONTINUA        reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SI              reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    IDENT           reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    DESDE           reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    REPETIR         reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    MIENTRAS        reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    CUANDO          reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    REGRESA         reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    IMPRIME         reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    IMPRIMENL       reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    LEE             reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    FIN             reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    HASTA           reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SINO            reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SEA             reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    OTRO            reduce using rule 78 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)


state 270

    (79) otro -> OTRO PUNTOS_DOBLES . bckesp
    (69) bckesp -> . estatuto
    (70) bckesp -> . INICIO block FIN
    (71) bckesp -> .
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 71 (bckesp -> .)
    INICIO          shift and go to state 234
    FIN             reduce using rule 71 (bckesp -> .)
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

  ! FIN             [ reduce using rule 129 (empty -> .) ]

    bckesp                         shift and go to state 279
    estatuto                       shift and go to state 233
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 271

    (81) gposea -> SEA gpoconst PUNTOS_DOBLES . bckesp gposea
    (69) bckesp -> . estatuto
    (70) bckesp -> . INICIO block FIN
    (71) bckesp -> .
    (51) estatuto -> . si
    (52) estatuto -> . lfunc
    (53) estatuto -> . LIMPIA
    (54) estatuto -> . desde
    (55) estatuto -> . repetir
    (56) estatuto -> . mientras
    (57) estatuto -> . cuando
    (58) estatuto -> . regresa
    (59) estatuto -> . asigna
    (60) estatuto -> . imprime
    (61) estatuto -> . imprimenl
    (62) estatuto -> . lee
    (63) estatuto -> . INTERRUMPE
    (64) estatuto -> . CONTINUA
    (65) estatuto -> . empty
    (66) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (117) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (118) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (74) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (75) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (76) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (78) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (86) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (77) asigna -> . IDENT udim OP_ASIG exprlog
    (120) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (122) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (123) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (124) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (129) empty -> .

  ! reduce/reduce conflict for SEA resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 71 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 71 (bckesp -> .)
    INICIO          shift and go to state 234
    SEA             reduce using rule 71 (bckesp -> .)
    OTRO            reduce using rule 71 (bckesp -> .)
    FIN             reduce using rule 71 (bckesp -> .)
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 76
    CONTINUA        shift and go to state 77
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

  ! SEA             [ reduce using rule 129 (empty -> .) ]
  ! OTRO            [ reduce using rule 129 (empty -> .) ]
  ! FIN             [ reduce using rule 129 (empty -> .) ]

    bckesp                         shift and go to state 280
    estatuto                       shift and go to state 233
    si                             shift and go to state 64
    lfunc                          shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    imprime                        shift and go to state 73
    imprimenl                      shift and go to state 74
    lee                            shift and go to state 75
    empty                          shift and go to state 78

state 272

    (83) gpoconst -> CTE_ALFA masgpoconst .

    PUNTOS_DOBLES   reduce using rule 83 (gpoconst -> CTE_ALFA masgpoconst .)


state 273

    (84) masgpoconst -> COMA . gpoconst
    (83) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 263

    gpoconst                       shift and go to state 281

state 274

    (85) masgpoconst -> empty .

    PUNTOS_DOBLES   reduce using rule 85 (masgpoconst -> empty .)


state 275

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 282


state 276

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN . DE FUNCION PUNTO_COMA

    DE              shift and go to state 283


state 277

    (72) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .

    PUNTO_COMA      reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    LIMPIA          reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    INTERRUMPE      reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    CONTINUA        reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SI              reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    IDENT           reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    DESDE           reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    REPETIR         reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    MIENTRAS        reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    CUANDO          reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    REGRESA         reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    IMPRIME         reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    IMPRIMENL       reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    LEE             reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    FIN             reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    HASTA           reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SINO            reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SEA             reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)


state 278

    (73) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .

    PUNTO_COMA      reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    LIMPIA          reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    INTERRUMPE      reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    CONTINUA        reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SI              reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    IDENT           reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    DESDE           reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    REPETIR         reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    MIENTRAS        reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    CUANDO          reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    REGRESA         reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    IMPRIME         reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    IMPRIMENL       reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    LEE             reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    FIN             reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    HASTA           reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SINO            reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SEA             reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 73 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)


state 279

    (79) otro -> OTRO PUNTOS_DOBLES bckesp .

    FIN             reduce using rule 79 (otro -> OTRO PUNTOS_DOBLES bckesp .)


state 280

    (81) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp . gposea
    (81) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (82) gposea -> . empty
    (129) empty -> .

    SEA             shift and go to state 250
    OTRO            reduce using rule 129 (empty -> .)
    FIN             reduce using rule 129 (empty -> .)

    gposea                         shift and go to state 284
    empty                          shift and go to state 251

state 281

    (84) masgpoconst -> COMA gpoconst .

    PUNTOS_DOBLES   reduce using rule 84 (masgpoconst -> COMA gpoconst .)


state 282

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 45 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    FUNCION         reduce using rule 45 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    PROGRAMA        reduce using rule 45 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)


state 283

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE . FUNCION PUNTO_COMA

    FUNCION         shift and go to state 285


state 284

    (81) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .

    OTRO            reduce using rule 81 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)
    FIN             reduce using rule 81 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)


state 285

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION . PUNTO_COMA

    PUNTO_COMA      shift and go to state 286


state 286

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 46 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    FUNCION         reduce using rule 46 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    PROGRAMA        reduce using rule 46 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 12 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 12 resolved as shift
WARNING: shift/reduce conflict for COMA in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 26 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 26 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 27 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 27 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 40 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 40 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 40 resolved as shift
WARNING: shift/reduce conflict for SI in state 40 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 40 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 40 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 40 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 40 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 40 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 40 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 40 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 40 resolved as shift
WARNING: shift/reduce conflict for LEE in state 40 resolved as shift
WARNING: shift/reduce conflict for PUNTO_COMA in state 63 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 63 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 63 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 63 resolved as shift
WARNING: shift/reduce conflict for SI in state 63 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 63 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 63 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 63 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 63 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 63 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 63 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 63 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 63 resolved as shift
WARNING: shift/reduce conflict for LEE in state 63 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 80 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 80 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 80 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 80 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 80 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 80 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 80 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 82 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 82 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 82 resolved as shift
WARNING: shift/reduce conflict for SI in state 82 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 82 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 82 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 82 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 82 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 82 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 82 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 82 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 82 resolved as shift
WARNING: shift/reduce conflict for LEE in state 82 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 101 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 101 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 101 resolved as shift
WARNING: shift/reduce conflict for SI in state 101 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 101 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 101 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 101 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 101 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 101 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 101 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 101 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 101 resolved as shift
WARNING: shift/reduce conflict for LEE in state 101 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 103 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 105 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 108 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 108 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 108 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 108 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 108 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 108 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 108 resolved as shift
WARNING: shift/reduce conflict for MAS in state 110 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 110 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 125 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 126 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 127 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 146 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 146 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 153 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 153 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 155 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 155 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 155 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 155 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 155 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 155 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 155 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 156 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 156 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 156 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 156 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 156 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 156 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 156 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 158 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 158 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 158 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 158 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 158 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 158 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 158 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 159 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 159 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 159 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 159 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 159 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 159 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 159 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 160 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 160 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 160 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 160 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 160 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 160 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 160 resolved as shift
WARNING: shift/reduce conflict for PAREN_TERMINA in state 170 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 182 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 182 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 183 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 183 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 185 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 185 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 188 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 198 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 198 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 202 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 214 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 214 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 214 resolved as shift
WARNING: shift/reduce conflict for SI in state 214 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 214 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 214 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 214 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 214 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 214 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 214 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 214 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 214 resolved as shift
WARNING: shift/reduce conflict for LEE in state 214 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 214 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 214 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 214 resolved as shift
WARNING: shift/reduce conflict for SI in state 214 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 214 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 214 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 214 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 214 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 214 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 214 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 214 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 214 resolved as shift
WARNING: shift/reduce conflict for LEE in state 214 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 220 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 220 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 220 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 220 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 220 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 220 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 220 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 221 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 222 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 222 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 222 resolved as shift
WARNING: shift/reduce conflict for SI in state 222 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 222 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 222 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 222 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 222 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 222 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 222 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 222 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 222 resolved as shift
WARNING: shift/reduce conflict for LEE in state 222 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 222 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 222 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 222 resolved as shift
WARNING: shift/reduce conflict for SI in state 222 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 222 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 222 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 222 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 222 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 222 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 222 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 222 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 222 resolved as shift
WARNING: shift/reduce conflict for LEE in state 222 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 226 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 226 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 226 resolved as shift
WARNING: shift/reduce conflict for SI in state 226 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 226 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 226 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 226 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 226 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 226 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 226 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 226 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 226 resolved as shift
WARNING: shift/reduce conflict for LEE in state 226 resolved as shift
WARNING: shift/reduce conflict for SINO in state 232 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 234 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 234 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 234 resolved as shift
WARNING: shift/reduce conflict for SI in state 234 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 234 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 234 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 234 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 234 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 234 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 234 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 234 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 234 resolved as shift
WARNING: shift/reduce conflict for LEE in state 234 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 235 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 244 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 244 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 244 resolved as shift
WARNING: shift/reduce conflict for SI in state 244 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 244 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 244 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 244 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 244 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 244 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 244 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 244 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 244 resolved as shift
WARNING: shift/reduce conflict for LEE in state 244 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 244 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 244 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 244 resolved as shift
WARNING: shift/reduce conflict for SI in state 244 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 244 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 244 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 244 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 244 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 244 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 244 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 244 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 244 resolved as shift
WARNING: shift/reduce conflict for LEE in state 244 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 253 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 253 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 253 resolved as shift
WARNING: shift/reduce conflict for SI in state 253 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 253 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 253 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 253 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 253 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 253 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 253 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 253 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 253 resolved as shift
WARNING: shift/reduce conflict for LEE in state 253 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 258 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 258 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 258 resolved as shift
WARNING: shift/reduce conflict for SI in state 258 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 258 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 258 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 258 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 258 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 258 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 258 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 258 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 258 resolved as shift
WARNING: shift/reduce conflict for LEE in state 258 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 258 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 258 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 258 resolved as shift
WARNING: shift/reduce conflict for SI in state 258 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 258 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 258 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 258 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 258 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 258 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 258 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 258 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 258 resolved as shift
WARNING: shift/reduce conflict for LEE in state 258 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 266 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 266 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 266 resolved as shift
WARNING: shift/reduce conflict for SI in state 266 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 266 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 266 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 266 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 266 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 266 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 266 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 266 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 266 resolved as shift
WARNING: shift/reduce conflict for LEE in state 266 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 266 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 266 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 266 resolved as shift
WARNING: shift/reduce conflict for SI in state 266 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 266 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 266 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 266 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 266 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 266 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 266 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 266 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 266 resolved as shift
WARNING: shift/reduce conflict for LEE in state 266 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 267 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 267 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 267 resolved as shift
WARNING: shift/reduce conflict for SI in state 267 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 267 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 267 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 267 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 267 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 267 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 267 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 267 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 267 resolved as shift
WARNING: shift/reduce conflict for LEE in state 267 resolved as shift
WARNING: shift/reduce conflict for LIMPIA in state 267 resolved as shift
WARNING: shift/reduce conflict for INTERRUMPE in state 267 resolved as shift
WARNING: shift/reduce conflict for CONTINUA in state 267 resolved as shift
WARNING: shift/reduce conflict for SI in state 267 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 267 resolved as shift
WARNING: shift/reduce conflict for DESDE in state 267 resolved as shift
WARNING: shift/reduce conflict for REPETIR in state 267 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 267 resolved as shift
WARNING: shift/reduce conflict for CUANDO in state 267 resolved as shift
WARNING: shift/reduce conflict for REGRESA in state 267 resolved as shift
WARNING: shift/reduce conflict for IMPRIME in state 267 resolved as shift
WARNING: shift/reduce conflict for IMPRIMENL in state 267 resolved as shift
WARNING: shift/reduce conflict for LEE in state 267 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (gpofuncproc -> protfunc)
WARNING: rejected rule (empty -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (gpofuncproc -> protproc)
WARNING: rejected rule (empty -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 36 resolved using rule (dimens -> empty)
WARNING: rejected rule (opasig -> empty) in state 36
WARNING: reduce/reduce conflict in state 60 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 60
WARNING: reduce/reduce conflict in state 61 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 61
WARNING: reduce/reduce conflict in state 63 resolved using rule (block -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 94 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 94
WARNING: reduce/reduce conflict in state 101 resolved using rule (block -> estatuto PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 101
WARNING: reduce/reduce conflict in state 104 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 104
WARNING: reduce/reduce conflict in state 109 resolved using rule (udim -> empty)
WARNING: rejected rule (multi -> empty) in state 109
WARNING: reduce/reduce conflict in state 214 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 214
WARNING: reduce/reduce conflict in state 222 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 222
WARNING: reduce/reduce conflict in state 244 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 244
WARNING: reduce/reduce conflict in state 258 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 258
WARNING: reduce/reduce conflict in state 266 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 266
WARNING: reduce/reduce conflict in state 267 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 267
WARNING: reduce/reduce conflict in state 270 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 270
WARNING: reduce/reduce conflict in state 271 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 271
WARNING: Rule (opasig -> empty) is never reduced
