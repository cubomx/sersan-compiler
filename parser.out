Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CTE_ENTERA_NON_NUM
    CTE_REAL_ENDING_BAD
    CTE_REAL_NON_NUM

Grammar

Rule 0     S' -> program
Rule 1     program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
Rule 2     variables -> VARIABLES gpovars
Rule 3     variables -> empty
Rule 4     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
Rule 5     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 6     gpovars -> empty
Rule 7     gpovars -> gpoids error TIPO PUNTO_COMA gpovars
Rule 8     gpovars -> gpoids error TIPO PUNTO_COMA
Rule 9     gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
Rule 10    gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA
Rule 11    gpoids -> IDENT dimens COMA gpoids2
Rule 12    gpoids -> IDENT opasig COMA gpoids2
Rule 13    gpoids -> IDENT dimens
Rule 14    gpoids -> IDENT COMA gpoids2
Rule 15    gpoids2 -> IDENT dimens COMA gpoids2
Rule 16    gpoids2 -> IDENT opasig COMA gpoids2
Rule 17    gpoids2 -> IDENT dimens
Rule 18    gpoids2 -> IDENT COMA gpoids2
Rule 19    gpoids -> IDENT dimens error gpoids
Rule 20    gpoids -> IDENT error gpoids
Rule 21    gpoids -> IDENT opasig error gpoids
Rule 22    gpoids -> empty
Rule 23    gpoids2 -> empty
Rule 24    dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
Rule 25    dimens -> <empty>
Rule 26    dimens -> CORCHETE_EMPIEZA valor error dimens
Rule 27    dimens -> error valor CORCHETE_TERMINA dimens
Rule 28    opasig -> OP_ASIG CTE_ENTERA
Rule 29    opasig -> OP_ASIG IDENT
Rule 30    opasig -> empty
Rule 31    valor -> exprlog
Rule 32    constantes -> CONSTANTES grupoconst
Rule 33    constantes -> empty
Rule 34    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
Rule 35    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
Rule 36    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA
Rule 37    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
Rule 38    grupoconst -> empty
Rule 39    protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
Rule 40    protfuncproc -> empty
Rule 41    gpofuncproc -> protfunc
Rule 42    gpofuncproc -> protproc
Rule 43    gpofuncproc -> protproc gpofuncproc
Rule 44    gpofuncproc -> protfunc gpofuncproc
Rule 45    protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 46    protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 47    protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 48    protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 49    protproc -> empty
Rule 50    params -> gpopars PUNTOS_DOBLES TIPO otrospars
Rule 51    params -> empty
Rule 52    params -> gpopars PUNTOS_DOBLES error otrospars
Rule 53    params -> gpopars error TIPO otrospars
Rule 54    otrospars -> PUNTO_COMA params
Rule 55    otrospars -> empty
Rule 56    gpopars -> IDENT COMA gpopars
Rule 57    gpopars -> IDENT
Rule 58    funcproc -> procedimiento funcproc
Rule 59    funcproc -> funcion funcproc
Rule 60    funcproc -> empty
Rule 61    procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
Rule 62    funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
Rule 63    block -> estatuto puntoc block
Rule 64    block -> estatuto puntoc
Rule 65    puntoc -> PUNTO_COMA
Rule 66    block -> estatuto error
Rule 67    block -> estatuto error block
Rule 68    estatuto -> si
Rule 69    estatuto -> lfunc
Rule 70    estatuto -> LIMPIA
Rule 71    estatuto -> desde
Rule 72    estatuto -> repetir
Rule 73    estatuto -> mientras
Rule 74    estatuto -> cuando
Rule 75    estatuto -> regresa
Rule 76    estatuto -> asigna
Rule 77    estatuto -> imprime
Rule 78    estatuto -> imprimenl
Rule 79    estatuto -> lee
Rule 80    estatuto -> INTERRUMPE
Rule 81    estatuto -> CONTINUA
Rule 82    estatuto -> empty
Rule 83    si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
Rule 84    sino -> SINO bckesp
Rule 85    sino -> empty
Rule 86    bckesp -> estatuto
Rule 87    bckesp -> INICIO block FIN
Rule 88    bckesp -> <empty>
Rule 89    desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
Rule 90    desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
Rule 91    desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp
Rule 92    repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 93    mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp
Rule 94    asigna -> IDENT udim OP_ASIG exprlog
Rule 95    cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
Rule 96    otro -> OTRO PUNTOS_DOBLES bckesp
Rule 97    otro -> empty
Rule 98    gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea
Rule 99    gposea -> empty
Rule 100   gpoconst -> CTE_ALFA masgpoconst
Rule 101   masgpoconst -> COMA gpoconst
Rule 102   masgpoconst -> empty
Rule 103   regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 104   udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
Rule 105   udim -> empty
Rule 106   exprlog -> opy
Rule 107   exprlog -> opy O exprlog
Rule 108   opy -> opno
Rule 109   opy -> opno Y opy
Rule 110   opno -> oprel
Rule 111   opno -> NO oprel
Rule 112   oprel -> expr
Rule 113   oprel -> expr OP_REL oprel
Rule 114   expr -> multi
Rule 115   expr -> multi MAS expr
Rule 116   expr -> multi MENOS expr
Rule 117   multi -> expo
Rule 118   multi -> expo MULTI multi
Rule 119   multi -> expo DIV multi
Rule 120   multi -> expo MOD multi
Rule 121   multi -> empty
Rule 122   expo -> signo
Rule 123   expo -> signo POTENCIA expo
Rule 124   signo -> termino
Rule 125   signo -> MENOS termino
Rule 126   termino -> IDENT
Rule 127   termino -> CTE_ENTERA
Rule 128   termino -> CTE_REAL
Rule 129   termino -> CTE_ALFA
Rule 130   termino -> VERDADERO
Rule 131   termino -> FALSO
Rule 132   termino -> <empty>
Rule 133   termino -> IDENT udim
Rule 134   termino -> lfunc
Rule 135   lfunc -> IDENT parenemp uparams PAREN_TERMINA
Rule 136   lfunc -> IDENT parenemp error PAREN_TERMINA
Rule 137   parenemp -> PAREN_EMPIEZA
Rule 138   imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 139   imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 140   imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error
Rule 141   lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
Rule 142   lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
Rule 143   gpoexp -> exprlog
Rule 144   gpoexp -> exprlog COMA gpoexp
Rule 145   uparams -> exprlog
Rule 146   uparams -> exprlog COMA uparams
Rule 147   empty -> <empty>

Terminals, with rules where they appear

COMA                 : 11 12 14 15 16 18 56 101 144 146
COMMENT              : 
CONSTANTES           : 32
CONTINUA             : 81
CORCHETE_EMPIEZA     : 24 26 104
CORCHETE_TERMINA     : 24 27 104
CTE_ALFA             : 100 129
CTE_ENTERA           : 28 34 35 89 90 127
CTE_ENTERA_NON_NUM   : 
CTE_REAL             : 36 37 128
CTE_REAL_ENDING_BAD  : 
CTE_REAL_NON_NUM     : 
CUANDO               : 95
CUMPLA               : 93
DE                   : 1 39 61 62 89 90 91 95
DECR                 : 89
DESDE                : 89 90 91
DIV                  : 119
EL                   : 89 90 91 95
FALSO                : 131
FIN                  : 1 39 61 62 87 95
FUNCION              : 45 46 62 62
HACER                : 83
HASTA                : 89 90 91 92
IDENT                : 11 12 13 14 15 16 17 18 19 20 21 29 34 35 36 37 45 47 56 57 61 62 94 95 126 133 135 136 141 142
IMPRIME              : 138
IMPRIMENL            : 139 140
INCR                 : 90
INICIO               : 61 62 87 95
INTERRUMPE           : 80
LEE                  : 141 142
LIMPIA               : 70
MAS                  : 115
MENOS                : 116 125
MIENTRAS             : 93
MOD                  : 120
MULTI                : 118
NO                   : 111
O                    : 107
OP_ASIG              : 28 29 34 35 36 37 94
OP_REL               : 113
OTRO                 : 96
PAREN_EMPIEZA        : 45 46 47 48 61 62 83 92 103 137 138 139 140 141 142
PAREN_TERMINA        : 45 46 47 48 61 62 83 92 103 135 136 138 139 141 142
POTENCIA             : 123
PROCEDIMIENTO        : 47 48 61 61
PROGRAMA             : 1 1
PROTOTIPOS           : 39 39
PUNTO                : 1
PUNTOS_DOBLES        : 4 5 9 10 45 46 50 52 62 96 98
PUNTO_COMA           : 4 5 7 8 9 10 34 35 36 37 39 45 46 47 48 54 61 62 65
QUE                  : 92 93
REGRESA              : 103
REPETIR              : 92
SE                   : 93
SEA                  : 98
SI                   : 83
SINO                 : 84
TIPO                 : 4 5 7 8 45 46 50 53 62
VALOR                : 89 90 91 95
VARIABLES            : 2
VERDADERO            : 130
Y                    : 109
error                : 7 8 9 10 19 20 21 26 27 46 48 52 53 66 67 91 136 140

Nonterminals, with rules where they appear

asigna               : 76 89 90 91
bckesp               : 83 84 89 90 91 93 96 98
block                : 1 61 62 63 67 87 92
constantes           : 1
cuando               : 74
desde                : 71
dimens               : 11 13 15 17 19 24 26 27 142
empty                : 3 6 22 23 30 33 38 40 49 51 55 60 82 85 97 99 102 105 121
estatuto             : 63 64 66 67 86
expo                 : 117 118 119 120 123
expr                 : 89 90 91 104 112 113 115 116
exprlog              : 31 83 92 93 94 103 107 143 144 145 146
funcion              : 59
funcproc             : 1 58 59
gpoconst             : 98 101
gpoexp               : 138 139 140 144
gpofuncproc          : 39 43 44
gpoids               : 4 5 7 8 9 10 19 20 21
gpoids2              : 11 12 14 15 16 18
gpopars              : 50 52 53 56
gposea               : 95 98
gpovars              : 2 4 7 9
grupoconst           : 32 35 37
imprime              : 77
imprimenl            : 78
lee                  : 79
lfunc                : 69 134
masgpoconst          : 100
mientras             : 73
multi                : 114 115 116 118 119 120
opasig               : 12 16 21
opno                 : 108 109
oprel                : 110 111 113
opy                  : 106 107 109
otro                 : 95
otrospars            : 50 52 53
params               : 45 46 47 48 54 61 62
parenemp             : 135 136
procedimiento        : 58
program              : 0
protfunc             : 41 44
protfuncproc         : 1
protproc             : 42 43
puntoc               : 63 64
regresa              : 75
repetir              : 72
si                   : 68
signo                : 122 123
sino                 : 83
termino              : 124 125
udim                 : 94 104 133
uparams              : 135 146
valor                : 24 26 27
variables            : 1 61 62

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (32) constantes -> . CONSTANTES grupoconst
    (33) constantes -> . empty
    (147) empty -> .

    CONSTANTES      shift and go to state 3
    VARIABLES       reduce using rule 147 (empty -> .)
    PROTOTIPOS      reduce using rule 147 (empty -> .)
    PROCEDIMIENTO   reduce using rule 147 (empty -> .)
    FUNCION         reduce using rule 147 (empty -> .)
    PROGRAMA        reduce using rule 147 (empty -> .)

    program                        shift and go to state 1
    constantes                     shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> constantes . variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (147) empty -> .

    VARIABLES       shift and go to state 6
    PROTOTIPOS      reduce using rule 147 (empty -> .)
    PROCEDIMIENTO   reduce using rule 147 (empty -> .)
    FUNCION         reduce using rule 147 (empty -> .)
    PROGRAMA        reduce using rule 147 (empty -> .)

    variables                      shift and go to state 5
    empty                          shift and go to state 7

state 3

    (32) constantes -> CONSTANTES . grupoconst
    (34) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (35) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (36) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (37) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (38) grupoconst -> . empty
    (147) empty -> .

    IDENT           shift and go to state 9
    VARIABLES       reduce using rule 147 (empty -> .)
    PROTOTIPOS      reduce using rule 147 (empty -> .)
    PROCEDIMIENTO   reduce using rule 147 (empty -> .)
    FUNCION         reduce using rule 147 (empty -> .)
    PROGRAMA        reduce using rule 147 (empty -> .)

    grupoconst                     shift and go to state 8
    empty                          shift and go to state 10

state 4

    (33) constantes -> empty .

    VARIABLES       reduce using rule 33 (constantes -> empty .)
    PROTOTIPOS      reduce using rule 33 (constantes -> empty .)
    PROCEDIMIENTO   reduce using rule 33 (constantes -> empty .)
    FUNCION         reduce using rule 33 (constantes -> empty .)
    PROGRAMA        reduce using rule 33 (constantes -> empty .)


state 5

    (1) program -> constantes variables . protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (39) protfuncproc -> . PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (40) protfuncproc -> . empty
    (147) empty -> .

    PROTOTIPOS      shift and go to state 12
    PROCEDIMIENTO   reduce using rule 147 (empty -> .)
    FUNCION         reduce using rule 147 (empty -> .)
    PROGRAMA        reduce using rule 147 (empty -> .)

    protfuncproc                   shift and go to state 11
    empty                          shift and go to state 13

state 6

    (2) variables -> VARIABLES . gpovars
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT dimens COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids2
    (19) gpoids -> . IDENT dimens error gpoids
    (20) gpoids -> . IDENT error gpoids
    (21) gpoids -> . IDENT opasig error gpoids
    (22) gpoids -> . empty
    (147) empty -> .

    IDENT           shift and go to state 17
    PROTOTIPOS      reduce using rule 147 (empty -> .)
    PROCEDIMIENTO   reduce using rule 147 (empty -> .)
    FUNCION         reduce using rule 147 (empty -> .)
    PROGRAMA        reduce using rule 147 (empty -> .)
    INICIO          reduce using rule 147 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

    gpovars                        shift and go to state 14
    gpoids                         shift and go to state 15
    empty                          shift and go to state 16

state 7

    (3) variables -> empty .

    PROTOTIPOS      reduce using rule 3 (variables -> empty .)
    PROCEDIMIENTO   reduce using rule 3 (variables -> empty .)
    FUNCION         reduce using rule 3 (variables -> empty .)
    PROGRAMA        reduce using rule 3 (variables -> empty .)
    INICIO          reduce using rule 3 (variables -> empty .)


state 8

    (32) constantes -> CONSTANTES grupoconst .

    VARIABLES       reduce using rule 32 (constantes -> CONSTANTES grupoconst .)
    PROTOTIPOS      reduce using rule 32 (constantes -> CONSTANTES grupoconst .)
    PROCEDIMIENTO   reduce using rule 32 (constantes -> CONSTANTES grupoconst .)
    FUNCION         reduce using rule 32 (constantes -> CONSTANTES grupoconst .)
    PROGRAMA        reduce using rule 32 (constantes -> CONSTANTES grupoconst .)


state 9

    (34) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA
    (35) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (36) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA
    (37) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA grupoconst

    OP_ASIG         shift and go to state 18


state 10

    (38) grupoconst -> empty .

    VARIABLES       reduce using rule 38 (grupoconst -> empty .)
    PROTOTIPOS      reduce using rule 38 (grupoconst -> empty .)
    PROCEDIMIENTO   reduce using rule 38 (grupoconst -> empty .)
    FUNCION         reduce using rule 38 (grupoconst -> empty .)
    PROGRAMA        reduce using rule 38 (grupoconst -> empty .)


state 11

    (1) program -> constantes variables protfuncproc . funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (58) funcproc -> . procedimiento funcproc
    (59) funcproc -> . funcion funcproc
    (60) funcproc -> . empty
    (61) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (62) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (147) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 147 (empty -> .)

    funcproc                       shift and go to state 19
    procedimiento                  shift and go to state 20
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 12

    (39) protfuncproc -> PROTOTIPOS . gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (41) gpofuncproc -> . protfunc
    (42) gpofuncproc -> . protproc
    (43) gpofuncproc -> . protproc gpofuncproc
    (44) gpofuncproc -> . protfunc gpofuncproc
    (45) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (46) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (47) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (48) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (49) protproc -> . empty
    (147) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29
    FIN             reduce using rule 147 (empty -> .)

  ! FUNCION         [ reduce using rule 147 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 147 (empty -> .) ]

    gpofuncproc                    shift and go to state 25
    protfunc                       shift and go to state 26
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 13

    (40) protfuncproc -> empty .

    PROCEDIMIENTO   reduce using rule 40 (protfuncproc -> empty .)
    FUNCION         reduce using rule 40 (protfuncproc -> empty .)
    PROGRAMA        reduce using rule 40 (protfuncproc -> empty .)


state 14

    (2) variables -> VARIABLES gpovars .

    PROTOTIPOS      reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROCEDIMIENTO   reduce using rule 2 (variables -> VARIABLES gpovars .)
    FUNCION         reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROGRAMA        reduce using rule 2 (variables -> VARIABLES gpovars .)
    INICIO          reduce using rule 2 (variables -> VARIABLES gpovars .)


state 15

    (4) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA
    (7) gpovars -> gpoids . error TIPO PUNTO_COMA gpovars
    (8) gpovars -> gpoids . error TIPO PUNTO_COMA
    (9) gpovars -> gpoids . PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> gpoids . PUNTOS_DOBLES error PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 31
    error           shift and go to state 32


state 16

    (6) gpovars -> empty .
    (22) gpoids -> empty .

    PROTOTIPOS      reduce using rule 6 (gpovars -> empty .)
    PROCEDIMIENTO   reduce using rule 6 (gpovars -> empty .)
    FUNCION         reduce using rule 6 (gpovars -> empty .)
    PROGRAMA        reduce using rule 6 (gpovars -> empty .)
    INICIO          reduce using rule 6 (gpovars -> empty .)
    PUNTOS_DOBLES   reduce using rule 22 (gpoids -> empty .)
    error           reduce using rule 22 (gpoids -> empty .)


state 17

    (11) gpoids -> IDENT . dimens COMA gpoids2
    (12) gpoids -> IDENT . opasig COMA gpoids2
    (13) gpoids -> IDENT . dimens
    (14) gpoids -> IDENT . COMA gpoids2
    (19) gpoids -> IDENT . dimens error gpoids
    (20) gpoids -> IDENT . error gpoids
    (21) gpoids -> IDENT . opasig error gpoids
    (24) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (25) dimens -> .
    (26) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (27) dimens -> . error valor CORCHETE_TERMINA dimens
    (28) opasig -> . OP_ASIG CTE_ENTERA
    (29) opasig -> . OP_ASIG IDENT
    (30) opasig -> . empty
    (147) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
    COMA            shift and go to state 34
    error           shift and go to state 36
    CORCHETE_EMPIEZA shift and go to state 37
    PUNTOS_DOBLES   reduce using rule 25 (dimens -> .)
    OP_ASIG         shift and go to state 38

  ! COMA            [ reduce using rule 25 (dimens -> .) ]
  ! error           [ reduce using rule 25 (dimens -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]

    dimens                         shift and go to state 33
    opasig                         shift and go to state 35
    empty                          shift and go to state 39

state 18

    (34) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA
    (35) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA grupoconst
    (36) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA
    (37) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA grupoconst

    CTE_ENTERA      shift and go to state 40
    CTE_REAL        shift and go to state 41


state 19

    (1) program -> constantes variables protfuncproc funcproc . PROGRAMA block FIN DE PROGRAMA PUNTO

    PROGRAMA        shift and go to state 42


state 20

    (58) funcproc -> procedimiento . funcproc
    (58) funcproc -> . procedimiento funcproc
    (59) funcproc -> . funcion funcproc
    (60) funcproc -> . empty
    (61) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (62) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (147) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 147 (empty -> .)

    procedimiento                  shift and go to state 20
    funcproc                       shift and go to state 43
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 21

    (59) funcproc -> funcion . funcproc
    (58) funcproc -> . procedimiento funcproc
    (59) funcproc -> . funcion funcproc
    (60) funcproc -> . empty
    (61) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (62) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (147) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 147 (empty -> .)

    funcion                        shift and go to state 21
    funcproc                       shift and go to state 44
    procedimiento                  shift and go to state 20
    empty                          shift and go to state 22

state 22

    (60) funcproc -> empty .

    PROGRAMA        reduce using rule 60 (funcproc -> empty .)


state 23

    (61) procedimiento -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    IDENT           shift and go to state 45


state 24

    (62) funcion -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    IDENT           shift and go to state 46


state 25

    (39) protfuncproc -> PROTOTIPOS gpofuncproc . FIN DE PROTOTIPOS PUNTO_COMA

    FIN             shift and go to state 47


state 26

    (41) gpofuncproc -> protfunc .
    (44) gpofuncproc -> protfunc . gpofuncproc
    (41) gpofuncproc -> . protfunc
    (42) gpofuncproc -> . protproc
    (43) gpofuncproc -> . protproc gpofuncproc
    (44) gpofuncproc -> . protfunc gpofuncproc
    (45) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (46) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (47) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (48) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (49) protproc -> . empty
    (147) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 41 (gpofuncproc -> protfunc .)
    FIN             reduce using rule 41 (gpofuncproc -> protfunc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 147 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]

    protfunc                       shift and go to state 26
    gpofuncproc                    shift and go to state 48
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 27

    (42) gpofuncproc -> protproc .
    (43) gpofuncproc -> protproc . gpofuncproc
    (41) gpofuncproc -> . protfunc
    (42) gpofuncproc -> . protproc
    (43) gpofuncproc -> . protproc gpofuncproc
    (44) gpofuncproc -> . protfunc gpofuncproc
    (45) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (46) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (47) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (48) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (49) protproc -> . empty
    (147) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 42 (gpofuncproc -> protproc .)
    FIN             reduce using rule 42 (gpofuncproc -> protproc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 147 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]

    protproc                       shift and go to state 27
    gpofuncproc                    shift and go to state 49
    protfunc                       shift and go to state 26
    empty                          shift and go to state 30

state 28

    (45) protfunc -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (46) protfunc -> FUNCION . error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    IDENT           shift and go to state 50
    error           shift and go to state 51


state 29

    (47) protproc -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (48) protproc -> PROCEDIMIENTO . error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    IDENT           shift and go to state 52
    error           shift and go to state 53


state 30

    (49) protproc -> empty .

    FUNCION         reduce using rule 49 (protproc -> empty .)
    PROCEDIMIENTO   reduce using rule 49 (protproc -> empty .)
    FIN             reduce using rule 49 (protproc -> empty .)


state 31

    (4) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA
    (9) gpovars -> gpoids PUNTOS_DOBLES . error PUNTO_COMA gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES . error PUNTO_COMA

    TIPO            shift and go to state 54
    error           shift and go to state 55


state 32

    (7) gpovars -> gpoids error . TIPO PUNTO_COMA gpovars
    (8) gpovars -> gpoids error . TIPO PUNTO_COMA

    TIPO            shift and go to state 56


state 33

    (11) gpoids -> IDENT dimens . COMA gpoids2
    (13) gpoids -> IDENT dimens .
    (19) gpoids -> IDENT dimens . error gpoids

    COMA            shift and go to state 57
    PUNTOS_DOBLES   reduce using rule 13 (gpoids -> IDENT dimens .)
    error           reduce using rule 13 (gpoids -> IDENT dimens .)

  ! error           [ shift and go to state 58 ]


state 34

    (14) gpoids -> IDENT COMA . gpoids2
    (15) gpoids2 -> . IDENT dimens COMA gpoids2
    (16) gpoids2 -> . IDENT opasig COMA gpoids2
    (17) gpoids2 -> . IDENT dimens
    (18) gpoids2 -> . IDENT COMA gpoids2
    (23) gpoids2 -> . empty
    (147) empty -> .

    IDENT           shift and go to state 59
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

    gpoids2                        shift and go to state 60
    empty                          shift and go to state 61

state 35

    (12) gpoids -> IDENT opasig . COMA gpoids2
    (21) gpoids -> IDENT opasig . error gpoids

    COMA            shift and go to state 62
    error           shift and go to state 63


state 36

    (20) gpoids -> IDENT error . gpoids
    (27) dimens -> error . valor CORCHETE_TERMINA dimens
    (11) gpoids -> . IDENT dimens COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids2
    (19) gpoids -> . IDENT dimens error gpoids
    (20) gpoids -> . IDENT error gpoids
    (21) gpoids -> . IDENT opasig error gpoids
    (22) gpoids -> . empty
    (31) valor -> . exprlog
    (147) empty -> .
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
    IDENT           shift and go to state 64
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    gpoids                         shift and go to state 65
    valor                          shift and go to state 66
    empty                          shift and go to state 67
    exprlog                        shift and go to state 68
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 37

    (24) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (26) dimens -> CORCHETE_EMPIEZA . valor error dimens
    (31) valor -> . exprlog
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    valor                          shift and go to state 85
    exprlog                        shift and go to state 68
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 38

    (28) opasig -> OP_ASIG . CTE_ENTERA
    (29) opasig -> OP_ASIG . IDENT

    CTE_ENTERA      shift and go to state 88
    IDENT           shift and go to state 89


state 39

    (30) opasig -> empty .

    COMA            reduce using rule 30 (opasig -> empty .)
    error           reduce using rule 30 (opasig -> empty .)


state 40

    (34) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA
    (35) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 90


state 41

    (36) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA
    (37) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 91


state 42

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA . block FIN DE PROGRAMA PUNTO
    (63) block -> . estatuto puntoc block
    (64) block -> . estatuto puntoc
    (66) block -> . estatuto error
    (67) block -> . estatuto error block
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118
    error           reduce using rule 147 (empty -> .)
    PUNTO_COMA      reduce using rule 147 (empty -> .)

    block                          shift and go to state 92
    estatuto                       shift and go to state 93
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 43

    (58) funcproc -> procedimiento funcproc .

    PROGRAMA        reduce using rule 58 (funcproc -> procedimiento funcproc .)


state 44

    (59) funcproc -> funcion funcproc .

    PROGRAMA        reduce using rule 59 (funcproc -> funcion funcproc .)


state 45

    (61) procedimiento -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 119


state 46

    (62) funcion -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 120


state 47

    (39) protfuncproc -> PROTOTIPOS gpofuncproc FIN . DE PROTOTIPOS PUNTO_COMA

    DE              shift and go to state 121


state 48

    (44) gpofuncproc -> protfunc gpofuncproc .

    FIN             reduce using rule 44 (gpofuncproc -> protfunc gpofuncproc .)


state 49

    (43) gpofuncproc -> protproc gpofuncproc .

    FIN             reduce using rule 43 (gpofuncproc -> protproc gpofuncproc .)


state 50

    (45) protfunc -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 122


state 51

    (46) protfunc -> FUNCION error . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 123


state 52

    (47) protproc -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 124


state 53

    (48) protproc -> PROCEDIMIENTO error . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 125


state 54

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 126


state 55

    (9) gpovars -> gpoids PUNTOS_DOBLES error . PUNTO_COMA gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES error . PUNTO_COMA

    PUNTO_COMA      shift and go to state 127


state 56

    (7) gpovars -> gpoids error TIPO . PUNTO_COMA gpovars
    (8) gpovars -> gpoids error TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 128


state 57

    (11) gpoids -> IDENT dimens COMA . gpoids2
    (15) gpoids2 -> . IDENT dimens COMA gpoids2
    (16) gpoids2 -> . IDENT opasig COMA gpoids2
    (17) gpoids2 -> . IDENT dimens
    (18) gpoids2 -> . IDENT COMA gpoids2
    (23) gpoids2 -> . empty
    (147) empty -> .

    IDENT           shift and go to state 59
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

    gpoids2                        shift and go to state 129
    empty                          shift and go to state 61

state 58

    (19) gpoids -> IDENT dimens error . gpoids
    (11) gpoids -> . IDENT dimens COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids2
    (19) gpoids -> . IDENT dimens error gpoids
    (20) gpoids -> . IDENT error gpoids
    (21) gpoids -> . IDENT opasig error gpoids
    (22) gpoids -> . empty
    (147) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

    gpoids                         shift and go to state 130
    empty                          shift and go to state 131

state 59

    (15) gpoids2 -> IDENT . dimens COMA gpoids2
    (16) gpoids2 -> IDENT . opasig COMA gpoids2
    (17) gpoids2 -> IDENT . dimens
    (18) gpoids2 -> IDENT . COMA gpoids2
    (24) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (25) dimens -> .
    (26) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (27) dimens -> . error valor CORCHETE_TERMINA dimens
    (28) opasig -> . OP_ASIG CTE_ENTERA
    (29) opasig -> . OP_ASIG IDENT
    (30) opasig -> . empty
    (147) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
    COMA            shift and go to state 133
    CORCHETE_EMPIEZA shift and go to state 37
    PUNTOS_DOBLES   reduce using rule 25 (dimens -> .)
    error           shift and go to state 135
    OP_ASIG         shift and go to state 38

  ! COMA            [ reduce using rule 25 (dimens -> .) ]
  ! error           [ reduce using rule 25 (dimens -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]

    dimens                         shift and go to state 132
    opasig                         shift and go to state 134
    empty                          shift and go to state 39

state 60

    (14) gpoids -> IDENT COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 14 (gpoids -> IDENT COMA gpoids2 .)
    error           reduce using rule 14 (gpoids -> IDENT COMA gpoids2 .)


state 61

    (23) gpoids2 -> empty .

    PUNTOS_DOBLES   reduce using rule 23 (gpoids2 -> empty .)
    error           reduce using rule 23 (gpoids2 -> empty .)


state 62

    (12) gpoids -> IDENT opasig COMA . gpoids2
    (15) gpoids2 -> . IDENT dimens COMA gpoids2
    (16) gpoids2 -> . IDENT opasig COMA gpoids2
    (17) gpoids2 -> . IDENT dimens
    (18) gpoids2 -> . IDENT COMA gpoids2
    (23) gpoids2 -> . empty
    (147) empty -> .

    IDENT           shift and go to state 59
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

    gpoids2                        shift and go to state 136
    empty                          shift and go to state 61

state 63

    (21) gpoids -> IDENT opasig error . gpoids
    (11) gpoids -> . IDENT dimens COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids2
    (19) gpoids -> . IDENT dimens error gpoids
    (20) gpoids -> . IDENT error gpoids
    (21) gpoids -> . IDENT opasig error gpoids
    (22) gpoids -> . empty
    (147) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

    gpoids                         shift and go to state 137
    empty                          shift and go to state 131

state 64

    (11) gpoids -> IDENT . dimens COMA gpoids2
    (12) gpoids -> IDENT . opasig COMA gpoids2
    (13) gpoids -> IDENT . dimens
    (14) gpoids -> IDENT . COMA gpoids2
    (19) gpoids -> IDENT . dimens error gpoids
    (20) gpoids -> IDENT . error gpoids
    (21) gpoids -> IDENT . opasig error gpoids
    (126) termino -> IDENT .
    (133) termino -> IDENT . udim
    (135) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (136) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (24) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (25) dimens -> .
    (26) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (27) dimens -> . error valor CORCHETE_TERMINA dimens
    (28) opasig -> . OP_ASIG CTE_ENTERA
    (29) opasig -> . OP_ASIG IDENT
    (30) opasig -> . empty
    (104) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (105) udim -> . empty
    (137) parenemp -> . PAREN_EMPIEZA
    (147) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for MAS resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for MENOS resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 126 (termino -> IDENT .)
    COMA            shift and go to state 34
    error           shift and go to state 36
    POTENCIA        reduce using rule 126 (termino -> IDENT .)
    MULTI           reduce using rule 126 (termino -> IDENT .)
    DIV             reduce using rule 126 (termino -> IDENT .)
    MOD             reduce using rule 126 (termino -> IDENT .)
    MAS             reduce using rule 126 (termino -> IDENT .)
    MENOS           reduce using rule 126 (termino -> IDENT .)
    OP_REL          reduce using rule 126 (termino -> IDENT .)
    Y               reduce using rule 126 (termino -> IDENT .)
    O               reduce using rule 126 (termino -> IDENT .)
    CORCHETE_TERMINA reduce using rule 126 (termino -> IDENT .)
    CORCHETE_EMPIEZA shift and go to state 140
    PUNTOS_DOBLES   reduce using rule 25 (dimens -> .)
    OP_ASIG         shift and go to state 38
    PAREN_EMPIEZA   shift and go to state 142

  ! COMA            [ reduce using rule 25 (dimens -> .) ]
  ! error           [ reduce using rule 25 (dimens -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 147 (empty -> .) ]
  ! MULTI           [ reduce using rule 147 (empty -> .) ]
  ! DIV             [ reduce using rule 147 (empty -> .) ]
  ! MOD             [ reduce using rule 147 (empty -> .) ]
  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]

    dimens                         shift and go to state 33
    opasig                         shift and go to state 35
    udim                           shift and go to state 138
    parenemp                       shift and go to state 139
    empty                          shift and go to state 141

state 65

    (20) gpoids -> IDENT error gpoids .

    PUNTOS_DOBLES   reduce using rule 20 (gpoids -> IDENT error gpoids .)
    error           reduce using rule 20 (gpoids -> IDENT error gpoids .)


state 66

    (27) dimens -> error valor . CORCHETE_TERMINA dimens

    CORCHETE_TERMINA shift and go to state 143


state 67

    (22) gpoids -> empty .
    (121) multi -> empty .

    PUNTOS_DOBLES   reduce using rule 22 (gpoids -> empty .)
    error           reduce using rule 22 (gpoids -> empty .)
    MAS             reduce using rule 121 (multi -> empty .)
    MENOS           reduce using rule 121 (multi -> empty .)
    OP_REL          reduce using rule 121 (multi -> empty .)
    Y               reduce using rule 121 (multi -> empty .)
    O               reduce using rule 121 (multi -> empty .)
    CORCHETE_TERMINA reduce using rule 121 (multi -> empty .)


state 68

    (31) valor -> exprlog .

    CORCHETE_TERMINA reduce using rule 31 (valor -> exprlog .)
    error           reduce using rule 31 (valor -> exprlog .)


state 69

    (106) exprlog -> opy .
    (107) exprlog -> opy . O exprlog

    CORCHETE_TERMINA reduce using rule 106 (exprlog -> opy .)
    error           reduce using rule 106 (exprlog -> opy .)
    COMA            reduce using rule 106 (exprlog -> opy .)
    PAREN_TERMINA   reduce using rule 106 (exprlog -> opy .)
    PUNTO_COMA      reduce using rule 106 (exprlog -> opy .)
    HASTA           reduce using rule 106 (exprlog -> opy .)
    SINO            reduce using rule 106 (exprlog -> opy .)
    FIN             reduce using rule 106 (exprlog -> opy .)
    SEA             reduce using rule 106 (exprlog -> opy .)
    OTRO            reduce using rule 106 (exprlog -> opy .)
    INICIO          reduce using rule 106 (exprlog -> opy .)
    LIMPIA          reduce using rule 106 (exprlog -> opy .)
    INTERRUMPE      reduce using rule 106 (exprlog -> opy .)
    CONTINUA        reduce using rule 106 (exprlog -> opy .)
    SI              reduce using rule 106 (exprlog -> opy .)
    IDENT           reduce using rule 106 (exprlog -> opy .)
    DESDE           reduce using rule 106 (exprlog -> opy .)
    REPETIR         reduce using rule 106 (exprlog -> opy .)
    MIENTRAS        reduce using rule 106 (exprlog -> opy .)
    CUANDO          reduce using rule 106 (exprlog -> opy .)
    REGRESA         reduce using rule 106 (exprlog -> opy .)
    IMPRIME         reduce using rule 106 (exprlog -> opy .)
    IMPRIMENL       reduce using rule 106 (exprlog -> opy .)
    LEE             reduce using rule 106 (exprlog -> opy .)
    O               shift and go to state 144


state 70

    (108) opy -> opno .
    (109) opy -> opno . Y opy

    O               reduce using rule 108 (opy -> opno .)
    CORCHETE_TERMINA reduce using rule 108 (opy -> opno .)
    error           reduce using rule 108 (opy -> opno .)
    COMA            reduce using rule 108 (opy -> opno .)
    PAREN_TERMINA   reduce using rule 108 (opy -> opno .)
    PUNTO_COMA      reduce using rule 108 (opy -> opno .)
    HASTA           reduce using rule 108 (opy -> opno .)
    SINO            reduce using rule 108 (opy -> opno .)
    FIN             reduce using rule 108 (opy -> opno .)
    SEA             reduce using rule 108 (opy -> opno .)
    OTRO            reduce using rule 108 (opy -> opno .)
    INICIO          reduce using rule 108 (opy -> opno .)
    LIMPIA          reduce using rule 108 (opy -> opno .)
    INTERRUMPE      reduce using rule 108 (opy -> opno .)
    CONTINUA        reduce using rule 108 (opy -> opno .)
    SI              reduce using rule 108 (opy -> opno .)
    IDENT           reduce using rule 108 (opy -> opno .)
    DESDE           reduce using rule 108 (opy -> opno .)
    REPETIR         reduce using rule 108 (opy -> opno .)
    MIENTRAS        reduce using rule 108 (opy -> opno .)
    CUANDO          reduce using rule 108 (opy -> opno .)
    REGRESA         reduce using rule 108 (opy -> opno .)
    IMPRIME         reduce using rule 108 (opy -> opno .)
    IMPRIMENL       reduce using rule 108 (opy -> opno .)
    LEE             reduce using rule 108 (opy -> opno .)
    Y               shift and go to state 145


state 71

    (110) opno -> oprel .

    Y               reduce using rule 110 (opno -> oprel .)
    O               reduce using rule 110 (opno -> oprel .)
    CORCHETE_TERMINA reduce using rule 110 (opno -> oprel .)
    error           reduce using rule 110 (opno -> oprel .)
    COMA            reduce using rule 110 (opno -> oprel .)
    PAREN_TERMINA   reduce using rule 110 (opno -> oprel .)
    PUNTO_COMA      reduce using rule 110 (opno -> oprel .)
    HASTA           reduce using rule 110 (opno -> oprel .)
    SINO            reduce using rule 110 (opno -> oprel .)
    FIN             reduce using rule 110 (opno -> oprel .)
    SEA             reduce using rule 110 (opno -> oprel .)
    OTRO            reduce using rule 110 (opno -> oprel .)
    INICIO          reduce using rule 110 (opno -> oprel .)
    LIMPIA          reduce using rule 110 (opno -> oprel .)
    INTERRUMPE      reduce using rule 110 (opno -> oprel .)
    CONTINUA        reduce using rule 110 (opno -> oprel .)
    SI              reduce using rule 110 (opno -> oprel .)
    IDENT           reduce using rule 110 (opno -> oprel .)
    DESDE           reduce using rule 110 (opno -> oprel .)
    REPETIR         reduce using rule 110 (opno -> oprel .)
    MIENTRAS        reduce using rule 110 (opno -> oprel .)
    CUANDO          reduce using rule 110 (opno -> oprel .)
    REGRESA         reduce using rule 110 (opno -> oprel .)
    IMPRIME         reduce using rule 110 (opno -> oprel .)
    IMPRIMENL       reduce using rule 110 (opno -> oprel .)
    LEE             reduce using rule 110 (opno -> oprel .)


state 72

    (111) opno -> NO . oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 132 (termino -> .)
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! HASTA           [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 147 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 147 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 147 (empty -> .) ]
  ! SI              [ reduce using rule 147 (empty -> .) ]
  ! IDENT           [ reduce using rule 147 (empty -> .) ]
  ! DESDE           [ reduce using rule 147 (empty -> .) ]
  ! REPETIR         [ reduce using rule 147 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 147 (empty -> .) ]
  ! CUANDO          [ reduce using rule 147 (empty -> .) ]
  ! REGRESA         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 147 (empty -> .) ]
  ! LEE             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]
  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    oprel                          shift and go to state 146
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 73

    (112) oprel -> expr .
    (113) oprel -> expr . OP_REL oprel

    Y               reduce using rule 112 (oprel -> expr .)
    O               reduce using rule 112 (oprel -> expr .)
    CORCHETE_TERMINA reduce using rule 112 (oprel -> expr .)
    error           reduce using rule 112 (oprel -> expr .)
    COMA            reduce using rule 112 (oprel -> expr .)
    PAREN_TERMINA   reduce using rule 112 (oprel -> expr .)
    PUNTO_COMA      reduce using rule 112 (oprel -> expr .)
    HASTA           reduce using rule 112 (oprel -> expr .)
    SINO            reduce using rule 112 (oprel -> expr .)
    FIN             reduce using rule 112 (oprel -> expr .)
    SEA             reduce using rule 112 (oprel -> expr .)
    OTRO            reduce using rule 112 (oprel -> expr .)
    INICIO          reduce using rule 112 (oprel -> expr .)
    LIMPIA          reduce using rule 112 (oprel -> expr .)
    INTERRUMPE      reduce using rule 112 (oprel -> expr .)
    CONTINUA        reduce using rule 112 (oprel -> expr .)
    SI              reduce using rule 112 (oprel -> expr .)
    IDENT           reduce using rule 112 (oprel -> expr .)
    DESDE           reduce using rule 112 (oprel -> expr .)
    REPETIR         reduce using rule 112 (oprel -> expr .)
    MIENTRAS        reduce using rule 112 (oprel -> expr .)
    CUANDO          reduce using rule 112 (oprel -> expr .)
    REGRESA         reduce using rule 112 (oprel -> expr .)
    IMPRIME         reduce using rule 112 (oprel -> expr .)
    IMPRIMENL       reduce using rule 112 (oprel -> expr .)
    LEE             reduce using rule 112 (oprel -> expr .)
    OP_REL          shift and go to state 147


state 74

    (114) expr -> multi .
    (115) expr -> multi . MAS expr
    (116) expr -> multi . MENOS expr

    OP_REL          reduce using rule 114 (expr -> multi .)
    Y               reduce using rule 114 (expr -> multi .)
    O               reduce using rule 114 (expr -> multi .)
    CORCHETE_TERMINA reduce using rule 114 (expr -> multi .)
    error           reduce using rule 114 (expr -> multi .)
    COMA            reduce using rule 114 (expr -> multi .)
    PAREN_TERMINA   reduce using rule 114 (expr -> multi .)
    PUNTO_COMA      reduce using rule 114 (expr -> multi .)
    HASTA           reduce using rule 114 (expr -> multi .)
    SINO            reduce using rule 114 (expr -> multi .)
    FIN             reduce using rule 114 (expr -> multi .)
    SEA             reduce using rule 114 (expr -> multi .)
    OTRO            reduce using rule 114 (expr -> multi .)
    INICIO          reduce using rule 114 (expr -> multi .)
    LIMPIA          reduce using rule 114 (expr -> multi .)
    INTERRUMPE      reduce using rule 114 (expr -> multi .)
    CONTINUA        reduce using rule 114 (expr -> multi .)
    SI              reduce using rule 114 (expr -> multi .)
    IDENT           reduce using rule 114 (expr -> multi .)
    DESDE           reduce using rule 114 (expr -> multi .)
    REPETIR         reduce using rule 114 (expr -> multi .)
    MIENTRAS        reduce using rule 114 (expr -> multi .)
    CUANDO          reduce using rule 114 (expr -> multi .)
    REGRESA         reduce using rule 114 (expr -> multi .)
    IMPRIME         reduce using rule 114 (expr -> multi .)
    IMPRIMENL       reduce using rule 114 (expr -> multi .)
    LEE             reduce using rule 114 (expr -> multi .)
    DECR            reduce using rule 114 (expr -> multi .)
    INCR            reduce using rule 114 (expr -> multi .)
    MAS             shift and go to state 148
    MENOS           shift and go to state 149


state 75

    (125) signo -> MENOS . termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    MENOS           reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)
    DECR            reduce using rule 132 (termino -> .)
    INCR            reduce using rule 132 (termino -> .)

  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    termino                        shift and go to state 150
    lfunc                          shift and go to state 84

state 76

    (117) multi -> expo .
    (118) multi -> expo . MULTI multi
    (119) multi -> expo . DIV multi
    (120) multi -> expo . MOD multi

    MAS             reduce using rule 117 (multi -> expo .)
    MENOS           reduce using rule 117 (multi -> expo .)
    OP_REL          reduce using rule 117 (multi -> expo .)
    Y               reduce using rule 117 (multi -> expo .)
    O               reduce using rule 117 (multi -> expo .)
    CORCHETE_TERMINA reduce using rule 117 (multi -> expo .)
    error           reduce using rule 117 (multi -> expo .)
    COMA            reduce using rule 117 (multi -> expo .)
    PAREN_TERMINA   reduce using rule 117 (multi -> expo .)
    PUNTO_COMA      reduce using rule 117 (multi -> expo .)
    HASTA           reduce using rule 117 (multi -> expo .)
    SINO            reduce using rule 117 (multi -> expo .)
    FIN             reduce using rule 117 (multi -> expo .)
    SEA             reduce using rule 117 (multi -> expo .)
    OTRO            reduce using rule 117 (multi -> expo .)
    INICIO          reduce using rule 117 (multi -> expo .)
    LIMPIA          reduce using rule 117 (multi -> expo .)
    INTERRUMPE      reduce using rule 117 (multi -> expo .)
    CONTINUA        reduce using rule 117 (multi -> expo .)
    SI              reduce using rule 117 (multi -> expo .)
    IDENT           reduce using rule 117 (multi -> expo .)
    DESDE           reduce using rule 117 (multi -> expo .)
    REPETIR         reduce using rule 117 (multi -> expo .)
    MIENTRAS        reduce using rule 117 (multi -> expo .)
    CUANDO          reduce using rule 117 (multi -> expo .)
    REGRESA         reduce using rule 117 (multi -> expo .)
    IMPRIME         reduce using rule 117 (multi -> expo .)
    IMPRIMENL       reduce using rule 117 (multi -> expo .)
    LEE             reduce using rule 117 (multi -> expo .)
    DECR            reduce using rule 117 (multi -> expo .)
    INCR            reduce using rule 117 (multi -> expo .)
    MULTI           shift and go to state 151
    DIV             shift and go to state 152
    MOD             shift and go to state 153


state 77

    (122) expo -> signo .
    (123) expo -> signo . POTENCIA expo

    MULTI           reduce using rule 122 (expo -> signo .)
    DIV             reduce using rule 122 (expo -> signo .)
    MOD             reduce using rule 122 (expo -> signo .)
    MAS             reduce using rule 122 (expo -> signo .)
    MENOS           reduce using rule 122 (expo -> signo .)
    OP_REL          reduce using rule 122 (expo -> signo .)
    Y               reduce using rule 122 (expo -> signo .)
    O               reduce using rule 122 (expo -> signo .)
    CORCHETE_TERMINA reduce using rule 122 (expo -> signo .)
    error           reduce using rule 122 (expo -> signo .)
    COMA            reduce using rule 122 (expo -> signo .)
    PAREN_TERMINA   reduce using rule 122 (expo -> signo .)
    PUNTO_COMA      reduce using rule 122 (expo -> signo .)
    HASTA           reduce using rule 122 (expo -> signo .)
    SINO            reduce using rule 122 (expo -> signo .)
    FIN             reduce using rule 122 (expo -> signo .)
    SEA             reduce using rule 122 (expo -> signo .)
    OTRO            reduce using rule 122 (expo -> signo .)
    INICIO          reduce using rule 122 (expo -> signo .)
    LIMPIA          reduce using rule 122 (expo -> signo .)
    INTERRUMPE      reduce using rule 122 (expo -> signo .)
    CONTINUA        reduce using rule 122 (expo -> signo .)
    SI              reduce using rule 122 (expo -> signo .)
    IDENT           reduce using rule 122 (expo -> signo .)
    DESDE           reduce using rule 122 (expo -> signo .)
    REPETIR         reduce using rule 122 (expo -> signo .)
    MIENTRAS        reduce using rule 122 (expo -> signo .)
    CUANDO          reduce using rule 122 (expo -> signo .)
    REGRESA         reduce using rule 122 (expo -> signo .)
    IMPRIME         reduce using rule 122 (expo -> signo .)
    IMPRIMENL       reduce using rule 122 (expo -> signo .)
    LEE             reduce using rule 122 (expo -> signo .)
    DECR            reduce using rule 122 (expo -> signo .)
    INCR            reduce using rule 122 (expo -> signo .)
    POTENCIA        shift and go to state 154


state 78

    (124) signo -> termino .

    POTENCIA        reduce using rule 124 (signo -> termino .)
    MULTI           reduce using rule 124 (signo -> termino .)
    DIV             reduce using rule 124 (signo -> termino .)
    MOD             reduce using rule 124 (signo -> termino .)
    MAS             reduce using rule 124 (signo -> termino .)
    MENOS           reduce using rule 124 (signo -> termino .)
    OP_REL          reduce using rule 124 (signo -> termino .)
    Y               reduce using rule 124 (signo -> termino .)
    O               reduce using rule 124 (signo -> termino .)
    CORCHETE_TERMINA reduce using rule 124 (signo -> termino .)
    error           reduce using rule 124 (signo -> termino .)
    COMA            reduce using rule 124 (signo -> termino .)
    PAREN_TERMINA   reduce using rule 124 (signo -> termino .)
    PUNTO_COMA      reduce using rule 124 (signo -> termino .)
    HASTA           reduce using rule 124 (signo -> termino .)
    SINO            reduce using rule 124 (signo -> termino .)
    FIN             reduce using rule 124 (signo -> termino .)
    SEA             reduce using rule 124 (signo -> termino .)
    OTRO            reduce using rule 124 (signo -> termino .)
    INICIO          reduce using rule 124 (signo -> termino .)
    LIMPIA          reduce using rule 124 (signo -> termino .)
    INTERRUMPE      reduce using rule 124 (signo -> termino .)
    CONTINUA        reduce using rule 124 (signo -> termino .)
    SI              reduce using rule 124 (signo -> termino .)
    IDENT           reduce using rule 124 (signo -> termino .)
    DESDE           reduce using rule 124 (signo -> termino .)
    REPETIR         reduce using rule 124 (signo -> termino .)
    MIENTRAS        reduce using rule 124 (signo -> termino .)
    CUANDO          reduce using rule 124 (signo -> termino .)
    REGRESA         reduce using rule 124 (signo -> termino .)
    IMPRIME         reduce using rule 124 (signo -> termino .)
    IMPRIMENL       reduce using rule 124 (signo -> termino .)
    LEE             reduce using rule 124 (signo -> termino .)
    DECR            reduce using rule 124 (signo -> termino .)
    INCR            reduce using rule 124 (signo -> termino .)


state 79

    (127) termino -> CTE_ENTERA .

    POTENCIA        reduce using rule 127 (termino -> CTE_ENTERA .)
    MULTI           reduce using rule 127 (termino -> CTE_ENTERA .)
    DIV             reduce using rule 127 (termino -> CTE_ENTERA .)
    MOD             reduce using rule 127 (termino -> CTE_ENTERA .)
    MAS             reduce using rule 127 (termino -> CTE_ENTERA .)
    MENOS           reduce using rule 127 (termino -> CTE_ENTERA .)
    OP_REL          reduce using rule 127 (termino -> CTE_ENTERA .)
    Y               reduce using rule 127 (termino -> CTE_ENTERA .)
    O               reduce using rule 127 (termino -> CTE_ENTERA .)
    CORCHETE_TERMINA reduce using rule 127 (termino -> CTE_ENTERA .)
    error           reduce using rule 127 (termino -> CTE_ENTERA .)
    COMA            reduce using rule 127 (termino -> CTE_ENTERA .)
    PAREN_TERMINA   reduce using rule 127 (termino -> CTE_ENTERA .)
    PUNTO_COMA      reduce using rule 127 (termino -> CTE_ENTERA .)
    HASTA           reduce using rule 127 (termino -> CTE_ENTERA .)
    SINO            reduce using rule 127 (termino -> CTE_ENTERA .)
    FIN             reduce using rule 127 (termino -> CTE_ENTERA .)
    SEA             reduce using rule 127 (termino -> CTE_ENTERA .)
    OTRO            reduce using rule 127 (termino -> CTE_ENTERA .)
    INICIO          reduce using rule 127 (termino -> CTE_ENTERA .)
    LIMPIA          reduce using rule 127 (termino -> CTE_ENTERA .)
    INTERRUMPE      reduce using rule 127 (termino -> CTE_ENTERA .)
    CONTINUA        reduce using rule 127 (termino -> CTE_ENTERA .)
    SI              reduce using rule 127 (termino -> CTE_ENTERA .)
    IDENT           reduce using rule 127 (termino -> CTE_ENTERA .)
    DESDE           reduce using rule 127 (termino -> CTE_ENTERA .)
    REPETIR         reduce using rule 127 (termino -> CTE_ENTERA .)
    MIENTRAS        reduce using rule 127 (termino -> CTE_ENTERA .)
    CUANDO          reduce using rule 127 (termino -> CTE_ENTERA .)
    REGRESA         reduce using rule 127 (termino -> CTE_ENTERA .)
    IMPRIME         reduce using rule 127 (termino -> CTE_ENTERA .)
    IMPRIMENL       reduce using rule 127 (termino -> CTE_ENTERA .)
    LEE             reduce using rule 127 (termino -> CTE_ENTERA .)
    DECR            reduce using rule 127 (termino -> CTE_ENTERA .)
    INCR            reduce using rule 127 (termino -> CTE_ENTERA .)


state 80

    (128) termino -> CTE_REAL .

    POTENCIA        reduce using rule 128 (termino -> CTE_REAL .)
    MULTI           reduce using rule 128 (termino -> CTE_REAL .)
    DIV             reduce using rule 128 (termino -> CTE_REAL .)
    MOD             reduce using rule 128 (termino -> CTE_REAL .)
    MAS             reduce using rule 128 (termino -> CTE_REAL .)
    MENOS           reduce using rule 128 (termino -> CTE_REAL .)
    OP_REL          reduce using rule 128 (termino -> CTE_REAL .)
    Y               reduce using rule 128 (termino -> CTE_REAL .)
    O               reduce using rule 128 (termino -> CTE_REAL .)
    CORCHETE_TERMINA reduce using rule 128 (termino -> CTE_REAL .)
    error           reduce using rule 128 (termino -> CTE_REAL .)
    COMA            reduce using rule 128 (termino -> CTE_REAL .)
    PAREN_TERMINA   reduce using rule 128 (termino -> CTE_REAL .)
    PUNTO_COMA      reduce using rule 128 (termino -> CTE_REAL .)
    HASTA           reduce using rule 128 (termino -> CTE_REAL .)
    SINO            reduce using rule 128 (termino -> CTE_REAL .)
    FIN             reduce using rule 128 (termino -> CTE_REAL .)
    SEA             reduce using rule 128 (termino -> CTE_REAL .)
    OTRO            reduce using rule 128 (termino -> CTE_REAL .)
    INICIO          reduce using rule 128 (termino -> CTE_REAL .)
    LIMPIA          reduce using rule 128 (termino -> CTE_REAL .)
    INTERRUMPE      reduce using rule 128 (termino -> CTE_REAL .)
    CONTINUA        reduce using rule 128 (termino -> CTE_REAL .)
    SI              reduce using rule 128 (termino -> CTE_REAL .)
    IDENT           reduce using rule 128 (termino -> CTE_REAL .)
    DESDE           reduce using rule 128 (termino -> CTE_REAL .)
    REPETIR         reduce using rule 128 (termino -> CTE_REAL .)
    MIENTRAS        reduce using rule 128 (termino -> CTE_REAL .)
    CUANDO          reduce using rule 128 (termino -> CTE_REAL .)
    REGRESA         reduce using rule 128 (termino -> CTE_REAL .)
    IMPRIME         reduce using rule 128 (termino -> CTE_REAL .)
    IMPRIMENL       reduce using rule 128 (termino -> CTE_REAL .)
    LEE             reduce using rule 128 (termino -> CTE_REAL .)
    DECR            reduce using rule 128 (termino -> CTE_REAL .)
    INCR            reduce using rule 128 (termino -> CTE_REAL .)


state 81

    (129) termino -> CTE_ALFA .

    POTENCIA        reduce using rule 129 (termino -> CTE_ALFA .)
    MULTI           reduce using rule 129 (termino -> CTE_ALFA .)
    DIV             reduce using rule 129 (termino -> CTE_ALFA .)
    MOD             reduce using rule 129 (termino -> CTE_ALFA .)
    MAS             reduce using rule 129 (termino -> CTE_ALFA .)
    MENOS           reduce using rule 129 (termino -> CTE_ALFA .)
    OP_REL          reduce using rule 129 (termino -> CTE_ALFA .)
    Y               reduce using rule 129 (termino -> CTE_ALFA .)
    O               reduce using rule 129 (termino -> CTE_ALFA .)
    CORCHETE_TERMINA reduce using rule 129 (termino -> CTE_ALFA .)
    error           reduce using rule 129 (termino -> CTE_ALFA .)
    COMA            reduce using rule 129 (termino -> CTE_ALFA .)
    PAREN_TERMINA   reduce using rule 129 (termino -> CTE_ALFA .)
    PUNTO_COMA      reduce using rule 129 (termino -> CTE_ALFA .)
    HASTA           reduce using rule 129 (termino -> CTE_ALFA .)
    SINO            reduce using rule 129 (termino -> CTE_ALFA .)
    FIN             reduce using rule 129 (termino -> CTE_ALFA .)
    SEA             reduce using rule 129 (termino -> CTE_ALFA .)
    OTRO            reduce using rule 129 (termino -> CTE_ALFA .)
    INICIO          reduce using rule 129 (termino -> CTE_ALFA .)
    LIMPIA          reduce using rule 129 (termino -> CTE_ALFA .)
    INTERRUMPE      reduce using rule 129 (termino -> CTE_ALFA .)
    CONTINUA        reduce using rule 129 (termino -> CTE_ALFA .)
    SI              reduce using rule 129 (termino -> CTE_ALFA .)
    IDENT           reduce using rule 129 (termino -> CTE_ALFA .)
    DESDE           reduce using rule 129 (termino -> CTE_ALFA .)
    REPETIR         reduce using rule 129 (termino -> CTE_ALFA .)
    MIENTRAS        reduce using rule 129 (termino -> CTE_ALFA .)
    CUANDO          reduce using rule 129 (termino -> CTE_ALFA .)
    REGRESA         reduce using rule 129 (termino -> CTE_ALFA .)
    IMPRIME         reduce using rule 129 (termino -> CTE_ALFA .)
    IMPRIMENL       reduce using rule 129 (termino -> CTE_ALFA .)
    LEE             reduce using rule 129 (termino -> CTE_ALFA .)
    DECR            reduce using rule 129 (termino -> CTE_ALFA .)
    INCR            reduce using rule 129 (termino -> CTE_ALFA .)


state 82

    (130) termino -> VERDADERO .

    POTENCIA        reduce using rule 130 (termino -> VERDADERO .)
    MULTI           reduce using rule 130 (termino -> VERDADERO .)
    DIV             reduce using rule 130 (termino -> VERDADERO .)
    MOD             reduce using rule 130 (termino -> VERDADERO .)
    MAS             reduce using rule 130 (termino -> VERDADERO .)
    MENOS           reduce using rule 130 (termino -> VERDADERO .)
    OP_REL          reduce using rule 130 (termino -> VERDADERO .)
    Y               reduce using rule 130 (termino -> VERDADERO .)
    O               reduce using rule 130 (termino -> VERDADERO .)
    CORCHETE_TERMINA reduce using rule 130 (termino -> VERDADERO .)
    error           reduce using rule 130 (termino -> VERDADERO .)
    COMA            reduce using rule 130 (termino -> VERDADERO .)
    PAREN_TERMINA   reduce using rule 130 (termino -> VERDADERO .)
    PUNTO_COMA      reduce using rule 130 (termino -> VERDADERO .)
    HASTA           reduce using rule 130 (termino -> VERDADERO .)
    SINO            reduce using rule 130 (termino -> VERDADERO .)
    FIN             reduce using rule 130 (termino -> VERDADERO .)
    SEA             reduce using rule 130 (termino -> VERDADERO .)
    OTRO            reduce using rule 130 (termino -> VERDADERO .)
    INICIO          reduce using rule 130 (termino -> VERDADERO .)
    LIMPIA          reduce using rule 130 (termino -> VERDADERO .)
    INTERRUMPE      reduce using rule 130 (termino -> VERDADERO .)
    CONTINUA        reduce using rule 130 (termino -> VERDADERO .)
    SI              reduce using rule 130 (termino -> VERDADERO .)
    IDENT           reduce using rule 130 (termino -> VERDADERO .)
    DESDE           reduce using rule 130 (termino -> VERDADERO .)
    REPETIR         reduce using rule 130 (termino -> VERDADERO .)
    MIENTRAS        reduce using rule 130 (termino -> VERDADERO .)
    CUANDO          reduce using rule 130 (termino -> VERDADERO .)
    REGRESA         reduce using rule 130 (termino -> VERDADERO .)
    IMPRIME         reduce using rule 130 (termino -> VERDADERO .)
    IMPRIMENL       reduce using rule 130 (termino -> VERDADERO .)
    LEE             reduce using rule 130 (termino -> VERDADERO .)
    DECR            reduce using rule 130 (termino -> VERDADERO .)
    INCR            reduce using rule 130 (termino -> VERDADERO .)


state 83

    (131) termino -> FALSO .

    POTENCIA        reduce using rule 131 (termino -> FALSO .)
    MULTI           reduce using rule 131 (termino -> FALSO .)
    DIV             reduce using rule 131 (termino -> FALSO .)
    MOD             reduce using rule 131 (termino -> FALSO .)
    MAS             reduce using rule 131 (termino -> FALSO .)
    MENOS           reduce using rule 131 (termino -> FALSO .)
    OP_REL          reduce using rule 131 (termino -> FALSO .)
    Y               reduce using rule 131 (termino -> FALSO .)
    O               reduce using rule 131 (termino -> FALSO .)
    CORCHETE_TERMINA reduce using rule 131 (termino -> FALSO .)
    error           reduce using rule 131 (termino -> FALSO .)
    COMA            reduce using rule 131 (termino -> FALSO .)
    PAREN_TERMINA   reduce using rule 131 (termino -> FALSO .)
    PUNTO_COMA      reduce using rule 131 (termino -> FALSO .)
    HASTA           reduce using rule 131 (termino -> FALSO .)
    SINO            reduce using rule 131 (termino -> FALSO .)
    FIN             reduce using rule 131 (termino -> FALSO .)
    SEA             reduce using rule 131 (termino -> FALSO .)
    OTRO            reduce using rule 131 (termino -> FALSO .)
    INICIO          reduce using rule 131 (termino -> FALSO .)
    LIMPIA          reduce using rule 131 (termino -> FALSO .)
    INTERRUMPE      reduce using rule 131 (termino -> FALSO .)
    CONTINUA        reduce using rule 131 (termino -> FALSO .)
    SI              reduce using rule 131 (termino -> FALSO .)
    IDENT           reduce using rule 131 (termino -> FALSO .)
    DESDE           reduce using rule 131 (termino -> FALSO .)
    REPETIR         reduce using rule 131 (termino -> FALSO .)
    MIENTRAS        reduce using rule 131 (termino -> FALSO .)
    CUANDO          reduce using rule 131 (termino -> FALSO .)
    REGRESA         reduce using rule 131 (termino -> FALSO .)
    IMPRIME         reduce using rule 131 (termino -> FALSO .)
    IMPRIMENL       reduce using rule 131 (termino -> FALSO .)
    LEE             reduce using rule 131 (termino -> FALSO .)
    DECR            reduce using rule 131 (termino -> FALSO .)
    INCR            reduce using rule 131 (termino -> FALSO .)


state 84

    (134) termino -> lfunc .

    POTENCIA        reduce using rule 134 (termino -> lfunc .)
    MULTI           reduce using rule 134 (termino -> lfunc .)
    DIV             reduce using rule 134 (termino -> lfunc .)
    MOD             reduce using rule 134 (termino -> lfunc .)
    MAS             reduce using rule 134 (termino -> lfunc .)
    MENOS           reduce using rule 134 (termino -> lfunc .)
    OP_REL          reduce using rule 134 (termino -> lfunc .)
    Y               reduce using rule 134 (termino -> lfunc .)
    O               reduce using rule 134 (termino -> lfunc .)
    CORCHETE_TERMINA reduce using rule 134 (termino -> lfunc .)
    error           reduce using rule 134 (termino -> lfunc .)
    COMA            reduce using rule 134 (termino -> lfunc .)
    PAREN_TERMINA   reduce using rule 134 (termino -> lfunc .)
    PUNTO_COMA      reduce using rule 134 (termino -> lfunc .)
    HASTA           reduce using rule 134 (termino -> lfunc .)
    SINO            reduce using rule 134 (termino -> lfunc .)
    FIN             reduce using rule 134 (termino -> lfunc .)
    SEA             reduce using rule 134 (termino -> lfunc .)
    OTRO            reduce using rule 134 (termino -> lfunc .)
    INICIO          reduce using rule 134 (termino -> lfunc .)
    LIMPIA          reduce using rule 134 (termino -> lfunc .)
    INTERRUMPE      reduce using rule 134 (termino -> lfunc .)
    CONTINUA        reduce using rule 134 (termino -> lfunc .)
    SI              reduce using rule 134 (termino -> lfunc .)
    IDENT           reduce using rule 134 (termino -> lfunc .)
    DESDE           reduce using rule 134 (termino -> lfunc .)
    REPETIR         reduce using rule 134 (termino -> lfunc .)
    MIENTRAS        reduce using rule 134 (termino -> lfunc .)
    CUANDO          reduce using rule 134 (termino -> lfunc .)
    REGRESA         reduce using rule 134 (termino -> lfunc .)
    IMPRIME         reduce using rule 134 (termino -> lfunc .)
    IMPRIMENL       reduce using rule 134 (termino -> lfunc .)
    LEE             reduce using rule 134 (termino -> lfunc .)
    DECR            reduce using rule 134 (termino -> lfunc .)
    INCR            reduce using rule 134 (termino -> lfunc .)


state 85

    (24) dimens -> CORCHETE_EMPIEZA valor . CORCHETE_TERMINA dimens
    (26) dimens -> CORCHETE_EMPIEZA valor . error dimens

    CORCHETE_TERMINA shift and go to state 155
    error           shift and go to state 156


state 86

    (121) multi -> empty .

    MAS             reduce using rule 121 (multi -> empty .)
    MENOS           reduce using rule 121 (multi -> empty .)
    OP_REL          reduce using rule 121 (multi -> empty .)
    Y               reduce using rule 121 (multi -> empty .)
    O               reduce using rule 121 (multi -> empty .)
    CORCHETE_TERMINA reduce using rule 121 (multi -> empty .)
    error           reduce using rule 121 (multi -> empty .)
    COMA            reduce using rule 121 (multi -> empty .)
    PAREN_TERMINA   reduce using rule 121 (multi -> empty .)
    PUNTO_COMA      reduce using rule 121 (multi -> empty .)
    HASTA           reduce using rule 121 (multi -> empty .)
    SINO            reduce using rule 121 (multi -> empty .)
    FIN             reduce using rule 121 (multi -> empty .)
    SEA             reduce using rule 121 (multi -> empty .)
    OTRO            reduce using rule 121 (multi -> empty .)
    INICIO          reduce using rule 121 (multi -> empty .)
    LIMPIA          reduce using rule 121 (multi -> empty .)
    INTERRUMPE      reduce using rule 121 (multi -> empty .)
    CONTINUA        reduce using rule 121 (multi -> empty .)
    SI              reduce using rule 121 (multi -> empty .)
    IDENT           reduce using rule 121 (multi -> empty .)
    DESDE           reduce using rule 121 (multi -> empty .)
    REPETIR         reduce using rule 121 (multi -> empty .)
    MIENTRAS        reduce using rule 121 (multi -> empty .)
    CUANDO          reduce using rule 121 (multi -> empty .)
    REGRESA         reduce using rule 121 (multi -> empty .)
    IMPRIME         reduce using rule 121 (multi -> empty .)
    IMPRIMENL       reduce using rule 121 (multi -> empty .)
    LEE             reduce using rule 121 (multi -> empty .)
    DECR            reduce using rule 121 (multi -> empty .)
    INCR            reduce using rule 121 (multi -> empty .)


state 87

    (126) termino -> IDENT .
    (133) termino -> IDENT . udim
    (135) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (136) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (104) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (105) udim -> . empty
    (137) parenemp -> . PAREN_EMPIEZA
    (147) empty -> .

  ! reduce/reduce conflict for POTENCIA resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for MAS resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for MENOS resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for error resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for COMA resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for HASTA resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for SINO resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for FIN resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for SEA resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for OTRO resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for INICIO resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for SI resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for IDENT resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for DESDE resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for REPETIR resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for CUANDO resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for REGRESA resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for LEE resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for DECR resolved using rule 126 (termino -> IDENT .)
  ! reduce/reduce conflict for INCR resolved using rule 126 (termino -> IDENT .)
    POTENCIA        reduce using rule 126 (termino -> IDENT .)
    MULTI           reduce using rule 126 (termino -> IDENT .)
    DIV             reduce using rule 126 (termino -> IDENT .)
    MOD             reduce using rule 126 (termino -> IDENT .)
    MAS             reduce using rule 126 (termino -> IDENT .)
    MENOS           reduce using rule 126 (termino -> IDENT .)
    OP_REL          reduce using rule 126 (termino -> IDENT .)
    Y               reduce using rule 126 (termino -> IDENT .)
    O               reduce using rule 126 (termino -> IDENT .)
    CORCHETE_TERMINA reduce using rule 126 (termino -> IDENT .)
    error           reduce using rule 126 (termino -> IDENT .)
    COMA            reduce using rule 126 (termino -> IDENT .)
    PAREN_TERMINA   reduce using rule 126 (termino -> IDENT .)
    PUNTO_COMA      reduce using rule 126 (termino -> IDENT .)
    HASTA           reduce using rule 126 (termino -> IDENT .)
    SINO            reduce using rule 126 (termino -> IDENT .)
    FIN             reduce using rule 126 (termino -> IDENT .)
    SEA             reduce using rule 126 (termino -> IDENT .)
    OTRO            reduce using rule 126 (termino -> IDENT .)
    INICIO          reduce using rule 126 (termino -> IDENT .)
    LIMPIA          reduce using rule 126 (termino -> IDENT .)
    INTERRUMPE      reduce using rule 126 (termino -> IDENT .)
    CONTINUA        reduce using rule 126 (termino -> IDENT .)
    SI              reduce using rule 126 (termino -> IDENT .)
    IDENT           reduce using rule 126 (termino -> IDENT .)
    DESDE           reduce using rule 126 (termino -> IDENT .)
    REPETIR         reduce using rule 126 (termino -> IDENT .)
    MIENTRAS        reduce using rule 126 (termino -> IDENT .)
    CUANDO          reduce using rule 126 (termino -> IDENT .)
    REGRESA         reduce using rule 126 (termino -> IDENT .)
    IMPRIME         reduce using rule 126 (termino -> IDENT .)
    IMPRIMENL       reduce using rule 126 (termino -> IDENT .)
    LEE             reduce using rule 126 (termino -> IDENT .)
    DECR            reduce using rule 126 (termino -> IDENT .)
    INCR            reduce using rule 126 (termino -> IDENT .)
    CORCHETE_EMPIEZA shift and go to state 157
    PAREN_EMPIEZA   shift and go to state 142

  ! POTENCIA        [ reduce using rule 147 (empty -> .) ]
  ! MULTI           [ reduce using rule 147 (empty -> .) ]
  ! DIV             [ reduce using rule 147 (empty -> .) ]
  ! MOD             [ reduce using rule 147 (empty -> .) ]
  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! HASTA           [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 147 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 147 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 147 (empty -> .) ]
  ! SI              [ reduce using rule 147 (empty -> .) ]
  ! IDENT           [ reduce using rule 147 (empty -> .) ]
  ! DESDE           [ reduce using rule 147 (empty -> .) ]
  ! REPETIR         [ reduce using rule 147 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 147 (empty -> .) ]
  ! CUANDO          [ reduce using rule 147 (empty -> .) ]
  ! REGRESA         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 147 (empty -> .) ]
  ! LEE             [ reduce using rule 147 (empty -> .) ]
  ! DECR            [ reduce using rule 147 (empty -> .) ]
  ! INCR            [ reduce using rule 147 (empty -> .) ]

    udim                           shift and go to state 138
    parenemp                       shift and go to state 139
    empty                          shift and go to state 158

state 88

    (28) opasig -> OP_ASIG CTE_ENTERA .

    COMA            reduce using rule 28 (opasig -> OP_ASIG CTE_ENTERA .)
    error           reduce using rule 28 (opasig -> OP_ASIG CTE_ENTERA .)


state 89

    (29) opasig -> OP_ASIG IDENT .

    COMA            reduce using rule 29 (opasig -> OP_ASIG IDENT .)
    error           reduce using rule 29 (opasig -> OP_ASIG IDENT .)


state 90

    (34) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .
    (35) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA . grupoconst
    (34) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (35) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (36) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (37) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (38) grupoconst -> . empty
    (147) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 34 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 34 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 34 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 34 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 34 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    VARIABLES       reduce using rule 34 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 34 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 34 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    FUNCION         reduce using rule 34 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROGRAMA        reduce using rule 34 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 147 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 147 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 147 (empty -> .) ]
  ! FUNCION         [ reduce using rule 147 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 147 (empty -> .) ]

    grupoconst                     shift and go to state 159
    empty                          shift and go to state 10

state 91

    (36) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .
    (37) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA . grupoconst
    (34) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (35) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (36) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (37) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (38) grupoconst -> . empty
    (147) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 36 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 36 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 36 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 36 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 36 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    VARIABLES       reduce using rule 36 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 36 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 36 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    FUNCION         reduce using rule 36 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROGRAMA        reduce using rule 36 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 147 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 147 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 147 (empty -> .) ]
  ! FUNCION         [ reduce using rule 147 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 147 (empty -> .) ]

    grupoconst                     shift and go to state 160
    empty                          shift and go to state 10

state 92

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block . FIN DE PROGRAMA PUNTO

    FIN             shift and go to state 161


state 93

    (63) block -> estatuto . puntoc block
    (64) block -> estatuto . puntoc
    (66) block -> estatuto . error
    (67) block -> estatuto . error block
    (65) puntoc -> . PUNTO_COMA

    error           shift and go to state 163
    PUNTO_COMA      shift and go to state 164

    puntoc                         shift and go to state 162

state 94

    (68) estatuto -> si .

    error           reduce using rule 68 (estatuto -> si .)
    PUNTO_COMA      reduce using rule 68 (estatuto -> si .)
    SINO            reduce using rule 68 (estatuto -> si .)
    FIN             reduce using rule 68 (estatuto -> si .)
    SEA             reduce using rule 68 (estatuto -> si .)
    OTRO            reduce using rule 68 (estatuto -> si .)


state 95

    (69) estatuto -> lfunc .

    error           reduce using rule 69 (estatuto -> lfunc .)
    PUNTO_COMA      reduce using rule 69 (estatuto -> lfunc .)
    SINO            reduce using rule 69 (estatuto -> lfunc .)
    FIN             reduce using rule 69 (estatuto -> lfunc .)
    SEA             reduce using rule 69 (estatuto -> lfunc .)
    OTRO            reduce using rule 69 (estatuto -> lfunc .)


state 96

    (70) estatuto -> LIMPIA .

    error           reduce using rule 70 (estatuto -> LIMPIA .)
    PUNTO_COMA      reduce using rule 70 (estatuto -> LIMPIA .)
    SINO            reduce using rule 70 (estatuto -> LIMPIA .)
    FIN             reduce using rule 70 (estatuto -> LIMPIA .)
    SEA             reduce using rule 70 (estatuto -> LIMPIA .)
    OTRO            reduce using rule 70 (estatuto -> LIMPIA .)


state 97

    (71) estatuto -> desde .

    error           reduce using rule 71 (estatuto -> desde .)
    PUNTO_COMA      reduce using rule 71 (estatuto -> desde .)
    SINO            reduce using rule 71 (estatuto -> desde .)
    FIN             reduce using rule 71 (estatuto -> desde .)
    SEA             reduce using rule 71 (estatuto -> desde .)
    OTRO            reduce using rule 71 (estatuto -> desde .)


state 98

    (72) estatuto -> repetir .

    error           reduce using rule 72 (estatuto -> repetir .)
    PUNTO_COMA      reduce using rule 72 (estatuto -> repetir .)
    SINO            reduce using rule 72 (estatuto -> repetir .)
    FIN             reduce using rule 72 (estatuto -> repetir .)
    SEA             reduce using rule 72 (estatuto -> repetir .)
    OTRO            reduce using rule 72 (estatuto -> repetir .)


state 99

    (73) estatuto -> mientras .

    error           reduce using rule 73 (estatuto -> mientras .)
    PUNTO_COMA      reduce using rule 73 (estatuto -> mientras .)
    SINO            reduce using rule 73 (estatuto -> mientras .)
    FIN             reduce using rule 73 (estatuto -> mientras .)
    SEA             reduce using rule 73 (estatuto -> mientras .)
    OTRO            reduce using rule 73 (estatuto -> mientras .)


state 100

    (74) estatuto -> cuando .

    error           reduce using rule 74 (estatuto -> cuando .)
    PUNTO_COMA      reduce using rule 74 (estatuto -> cuando .)
    SINO            reduce using rule 74 (estatuto -> cuando .)
    FIN             reduce using rule 74 (estatuto -> cuando .)
    SEA             reduce using rule 74 (estatuto -> cuando .)
    OTRO            reduce using rule 74 (estatuto -> cuando .)


state 101

    (75) estatuto -> regresa .

    error           reduce using rule 75 (estatuto -> regresa .)
    PUNTO_COMA      reduce using rule 75 (estatuto -> regresa .)
    SINO            reduce using rule 75 (estatuto -> regresa .)
    FIN             reduce using rule 75 (estatuto -> regresa .)
    SEA             reduce using rule 75 (estatuto -> regresa .)
    OTRO            reduce using rule 75 (estatuto -> regresa .)


state 102

    (76) estatuto -> asigna .

    error           reduce using rule 76 (estatuto -> asigna .)
    PUNTO_COMA      reduce using rule 76 (estatuto -> asigna .)
    SINO            reduce using rule 76 (estatuto -> asigna .)
    FIN             reduce using rule 76 (estatuto -> asigna .)
    SEA             reduce using rule 76 (estatuto -> asigna .)
    OTRO            reduce using rule 76 (estatuto -> asigna .)


state 103

    (77) estatuto -> imprime .

    error           reduce using rule 77 (estatuto -> imprime .)
    PUNTO_COMA      reduce using rule 77 (estatuto -> imprime .)
    SINO            reduce using rule 77 (estatuto -> imprime .)
    FIN             reduce using rule 77 (estatuto -> imprime .)
    SEA             reduce using rule 77 (estatuto -> imprime .)
    OTRO            reduce using rule 77 (estatuto -> imprime .)


state 104

    (78) estatuto -> imprimenl .

    error           reduce using rule 78 (estatuto -> imprimenl .)
    PUNTO_COMA      reduce using rule 78 (estatuto -> imprimenl .)
    SINO            reduce using rule 78 (estatuto -> imprimenl .)
    FIN             reduce using rule 78 (estatuto -> imprimenl .)
    SEA             reduce using rule 78 (estatuto -> imprimenl .)
    OTRO            reduce using rule 78 (estatuto -> imprimenl .)


state 105

    (79) estatuto -> lee .

    error           reduce using rule 79 (estatuto -> lee .)
    PUNTO_COMA      reduce using rule 79 (estatuto -> lee .)
    SINO            reduce using rule 79 (estatuto -> lee .)
    FIN             reduce using rule 79 (estatuto -> lee .)
    SEA             reduce using rule 79 (estatuto -> lee .)
    OTRO            reduce using rule 79 (estatuto -> lee .)


state 106

    (80) estatuto -> INTERRUMPE .

    error           reduce using rule 80 (estatuto -> INTERRUMPE .)
    PUNTO_COMA      reduce using rule 80 (estatuto -> INTERRUMPE .)
    SINO            reduce using rule 80 (estatuto -> INTERRUMPE .)
    FIN             reduce using rule 80 (estatuto -> INTERRUMPE .)
    SEA             reduce using rule 80 (estatuto -> INTERRUMPE .)
    OTRO            reduce using rule 80 (estatuto -> INTERRUMPE .)


state 107

    (81) estatuto -> CONTINUA .

    error           reduce using rule 81 (estatuto -> CONTINUA .)
    PUNTO_COMA      reduce using rule 81 (estatuto -> CONTINUA .)
    SINO            reduce using rule 81 (estatuto -> CONTINUA .)
    FIN             reduce using rule 81 (estatuto -> CONTINUA .)
    SEA             reduce using rule 81 (estatuto -> CONTINUA .)
    OTRO            reduce using rule 81 (estatuto -> CONTINUA .)


state 108

    (82) estatuto -> empty .

    error           reduce using rule 82 (estatuto -> empty .)
    PUNTO_COMA      reduce using rule 82 (estatuto -> empty .)
    SINO            reduce using rule 82 (estatuto -> empty .)
    FIN             reduce using rule 82 (estatuto -> empty .)
    SEA             reduce using rule 82 (estatuto -> empty .)
    OTRO            reduce using rule 82 (estatuto -> empty .)


state 109

    (83) si -> SI . PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino

    PAREN_EMPIEZA   shift and go to state 165


state 110

    (135) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (136) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (94) asigna -> IDENT . udim OP_ASIG exprlog
    (137) parenemp -> . PAREN_EMPIEZA
    (104) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (105) udim -> . empty
    (147) empty -> .

    PAREN_EMPIEZA   shift and go to state 142
    CORCHETE_EMPIEZA shift and go to state 157
    OP_ASIG         reduce using rule 147 (empty -> .)

    parenemp                       shift and go to state 139
    udim                           shift and go to state 166
    empty                          shift and go to state 158

state 111

    (89) desde -> DESDE . EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> DESDE . EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> DESDE . EL VALOR DE asigna HASTA expr error bckesp

    EL              shift and go to state 167


state 112

    (92) repetir -> REPETIR . block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (63) block -> . estatuto puntoc block
    (64) block -> . estatuto puntoc
    (66) block -> . estatuto error
    (67) block -> . estatuto error block
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118
    error           reduce using rule 147 (empty -> .)
    PUNTO_COMA      reduce using rule 147 (empty -> .)

    block                          shift and go to state 168
    estatuto                       shift and go to state 93
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 113

    (93) mientras -> MIENTRAS . SE CUMPLA QUE exprlog bckesp

    SE              shift and go to state 169


state 114

    (95) cuando -> CUANDO . EL VALOR DE IDENT INICIO gposea otro FIN

    EL              shift and go to state 170


state 115

    (103) regresa -> REGRESA . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 171


state 116

    (138) imprime -> IMPRIME . PAREN_EMPIEZA gpoexp PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 172


state 117

    (139) imprimenl -> IMPRIMENL . PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> IMPRIMENL . PAREN_EMPIEZA gpoexp error

    PAREN_EMPIEZA   shift and go to state 173


state 118

    (141) lee -> LEE . PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> LEE . PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 174


state 119

    (61) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (50) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (51) params -> . empty
    (52) params -> . gpopars PUNTOS_DOBLES error otrospars
    (53) params -> . gpopars error TIPO otrospars
    (56) gpopars -> . IDENT COMA gpopars
    (57) gpopars -> . IDENT
    (147) empty -> .

    IDENT           shift and go to state 175
    PAREN_TERMINA   reduce using rule 147 (empty -> .)

    params                         shift and go to state 176
    gpopars                        shift and go to state 177
    empty                          shift and go to state 178

state 120

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (50) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (51) params -> . empty
    (52) params -> . gpopars PUNTOS_DOBLES error otrospars
    (53) params -> . gpopars error TIPO otrospars
    (56) gpopars -> . IDENT COMA gpopars
    (57) gpopars -> . IDENT
    (147) empty -> .

    IDENT           shift and go to state 175
    PAREN_TERMINA   reduce using rule 147 (empty -> .)

    params                         shift and go to state 179
    gpopars                        shift and go to state 177
    empty                          shift and go to state 178

state 121

    (39) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE . PROTOTIPOS PUNTO_COMA

    PROTOTIPOS      shift and go to state 180


state 122

    (45) protfunc -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (50) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (51) params -> . empty
    (52) params -> . gpopars PUNTOS_DOBLES error otrospars
    (53) params -> . gpopars error TIPO otrospars
    (56) gpopars -> . IDENT COMA gpopars
    (57) gpopars -> . IDENT
    (147) empty -> .

    IDENT           shift and go to state 175
    PAREN_TERMINA   reduce using rule 147 (empty -> .)

    params                         shift and go to state 181
    gpopars                        shift and go to state 177
    empty                          shift and go to state 178

state 123

    (46) protfunc -> FUNCION error PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (50) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (51) params -> . empty
    (52) params -> . gpopars PUNTOS_DOBLES error otrospars
    (53) params -> . gpopars error TIPO otrospars
    (56) gpopars -> . IDENT COMA gpopars
    (57) gpopars -> . IDENT
    (147) empty -> .

    IDENT           shift and go to state 175
    PAREN_TERMINA   reduce using rule 147 (empty -> .)

    params                         shift and go to state 182
    gpopars                        shift and go to state 177
    empty                          shift and go to state 178

state 124

    (47) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (50) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (51) params -> . empty
    (52) params -> . gpopars PUNTOS_DOBLES error otrospars
    (53) params -> . gpopars error TIPO otrospars
    (56) gpopars -> . IDENT COMA gpopars
    (57) gpopars -> . IDENT
    (147) empty -> .

    IDENT           shift and go to state 175
    PAREN_TERMINA   reduce using rule 147 (empty -> .)

    params                         shift and go to state 183
    gpopars                        shift and go to state 177
    empty                          shift and go to state 178

state 125

    (48) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (50) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (51) params -> . empty
    (52) params -> . gpopars PUNTOS_DOBLES error otrospars
    (53) params -> . gpopars error TIPO otrospars
    (56) gpopars -> . IDENT COMA gpopars
    (57) gpopars -> . IDENT
    (147) empty -> .

    IDENT           shift and go to state 175
    PAREN_TERMINA   reduce using rule 147 (empty -> .)

    params                         shift and go to state 184
    gpopars                        shift and go to state 177
    empty                          shift and go to state 178

state 126

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA . gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT dimens COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids2
    (19) gpoids -> . IDENT dimens error gpoids
    (20) gpoids -> . IDENT error gpoids
    (21) gpoids -> . IDENT opasig error gpoids
    (22) gpoids -> . empty
    (147) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    INICIO          reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 147 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 147 (empty -> .) ]
  ! FUNCION         [ reduce using rule 147 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 185
    empty                          shift and go to state 16

state 127

    (9) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA . gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT dimens COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids2
    (19) gpoids -> . IDENT dimens error gpoids
    (20) gpoids -> . IDENT error gpoids
    (21) gpoids -> . IDENT opasig error gpoids
    (22) gpoids -> . empty
    (147) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    FUNCION         reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROGRAMA        reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    INICIO          reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 147 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 147 (empty -> .) ]
  ! FUNCION         [ reduce using rule 147 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 186
    empty                          shift and go to state 16

state 128

    (7) gpovars -> gpoids error TIPO PUNTO_COMA . gpovars
    (8) gpovars -> gpoids error TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT dimens COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids2
    (19) gpoids -> . IDENT dimens error gpoids
    (20) gpoids -> . IDENT error gpoids
    (21) gpoids -> . IDENT opasig error gpoids
    (22) gpoids -> . empty
    (147) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    INICIO          reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 147 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 147 (empty -> .) ]
  ! FUNCION         [ reduce using rule 147 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 187
    empty                          shift and go to state 16

state 129

    (11) gpoids -> IDENT dimens COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> IDENT dimens COMA gpoids2 .)
    error           reduce using rule 11 (gpoids -> IDENT dimens COMA gpoids2 .)


state 130

    (19) gpoids -> IDENT dimens error gpoids .

    PUNTOS_DOBLES   reduce using rule 19 (gpoids -> IDENT dimens error gpoids .)
    error           reduce using rule 19 (gpoids -> IDENT dimens error gpoids .)


state 131

    (22) gpoids -> empty .

    PUNTOS_DOBLES   reduce using rule 22 (gpoids -> empty .)
    error           reduce using rule 22 (gpoids -> empty .)


state 132

    (15) gpoids2 -> IDENT dimens . COMA gpoids2
    (17) gpoids2 -> IDENT dimens .

    COMA            shift and go to state 188
    PUNTOS_DOBLES   reduce using rule 17 (gpoids2 -> IDENT dimens .)
    error           reduce using rule 17 (gpoids2 -> IDENT dimens .)


state 133

    (18) gpoids2 -> IDENT COMA . gpoids2
    (15) gpoids2 -> . IDENT dimens COMA gpoids2
    (16) gpoids2 -> . IDENT opasig COMA gpoids2
    (17) gpoids2 -> . IDENT dimens
    (18) gpoids2 -> . IDENT COMA gpoids2
    (23) gpoids2 -> . empty
    (147) empty -> .

    IDENT           shift and go to state 59
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

    gpoids2                        shift and go to state 189
    empty                          shift and go to state 61

state 134

    (16) gpoids2 -> IDENT opasig . COMA gpoids2

    COMA            shift and go to state 190


state 135

    (27) dimens -> error . valor CORCHETE_TERMINA dimens
    (31) valor -> . exprlog
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    valor                          shift and go to state 66
    exprlog                        shift and go to state 68
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 136

    (12) gpoids -> IDENT opasig COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 12 (gpoids -> IDENT opasig COMA gpoids2 .)
    error           reduce using rule 12 (gpoids -> IDENT opasig COMA gpoids2 .)


state 137

    (21) gpoids -> IDENT opasig error gpoids .

    PUNTOS_DOBLES   reduce using rule 21 (gpoids -> IDENT opasig error gpoids .)
    error           reduce using rule 21 (gpoids -> IDENT opasig error gpoids .)


state 138

    (133) termino -> IDENT udim .

    POTENCIA        reduce using rule 133 (termino -> IDENT udim .)
    MULTI           reduce using rule 133 (termino -> IDENT udim .)
    DIV             reduce using rule 133 (termino -> IDENT udim .)
    MOD             reduce using rule 133 (termino -> IDENT udim .)
    MAS             reduce using rule 133 (termino -> IDENT udim .)
    MENOS           reduce using rule 133 (termino -> IDENT udim .)
    OP_REL          reduce using rule 133 (termino -> IDENT udim .)
    Y               reduce using rule 133 (termino -> IDENT udim .)
    O               reduce using rule 133 (termino -> IDENT udim .)
    CORCHETE_TERMINA reduce using rule 133 (termino -> IDENT udim .)
    error           reduce using rule 133 (termino -> IDENT udim .)
    COMA            reduce using rule 133 (termino -> IDENT udim .)
    PAREN_TERMINA   reduce using rule 133 (termino -> IDENT udim .)
    PUNTO_COMA      reduce using rule 133 (termino -> IDENT udim .)
    HASTA           reduce using rule 133 (termino -> IDENT udim .)
    SINO            reduce using rule 133 (termino -> IDENT udim .)
    FIN             reduce using rule 133 (termino -> IDENT udim .)
    SEA             reduce using rule 133 (termino -> IDENT udim .)
    OTRO            reduce using rule 133 (termino -> IDENT udim .)
    INICIO          reduce using rule 133 (termino -> IDENT udim .)
    LIMPIA          reduce using rule 133 (termino -> IDENT udim .)
    INTERRUMPE      reduce using rule 133 (termino -> IDENT udim .)
    CONTINUA        reduce using rule 133 (termino -> IDENT udim .)
    SI              reduce using rule 133 (termino -> IDENT udim .)
    IDENT           reduce using rule 133 (termino -> IDENT udim .)
    DESDE           reduce using rule 133 (termino -> IDENT udim .)
    REPETIR         reduce using rule 133 (termino -> IDENT udim .)
    MIENTRAS        reduce using rule 133 (termino -> IDENT udim .)
    CUANDO          reduce using rule 133 (termino -> IDENT udim .)
    REGRESA         reduce using rule 133 (termino -> IDENT udim .)
    IMPRIME         reduce using rule 133 (termino -> IDENT udim .)
    IMPRIMENL       reduce using rule 133 (termino -> IDENT udim .)
    LEE             reduce using rule 133 (termino -> IDENT udim .)
    DECR            reduce using rule 133 (termino -> IDENT udim .)
    INCR            reduce using rule 133 (termino -> IDENT udim .)


state 139

    (135) lfunc -> IDENT parenemp . uparams PAREN_TERMINA
    (136) lfunc -> IDENT parenemp . error PAREN_TERMINA
    (145) uparams -> . exprlog
    (146) uparams -> . exprlog COMA uparams
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
    error           shift and go to state 192
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    uparams                        shift and go to state 191
    exprlog                        shift and go to state 193
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 140

    (24) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (26) dimens -> CORCHETE_EMPIEZA . valor error dimens
    (104) udim -> CORCHETE_EMPIEZA . expr CORCHETE_TERMINA udim
    (31) valor -> . exprlog
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    valor                          shift and go to state 85
    expr                           shift and go to state 194
    exprlog                        shift and go to state 68
    multi                          shift and go to state 74
    opy                            shift and go to state 69
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    opno                           shift and go to state 70
    signo                          shift and go to state 77
    oprel                          shift and go to state 71
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 141

    (30) opasig -> empty .
    (105) udim -> empty .

    COMA            reduce using rule 30 (opasig -> empty .)
    error           reduce using rule 30 (opasig -> empty .)
    POTENCIA        reduce using rule 105 (udim -> empty .)
    MULTI           reduce using rule 105 (udim -> empty .)
    DIV             reduce using rule 105 (udim -> empty .)
    MOD             reduce using rule 105 (udim -> empty .)
    MAS             reduce using rule 105 (udim -> empty .)
    MENOS           reduce using rule 105 (udim -> empty .)
    OP_REL          reduce using rule 105 (udim -> empty .)
    Y               reduce using rule 105 (udim -> empty .)
    O               reduce using rule 105 (udim -> empty .)
    CORCHETE_TERMINA reduce using rule 105 (udim -> empty .)


state 142

    (137) parenemp -> PAREN_EMPIEZA .

    error           reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    NO              reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    MENOS           reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    IDENT           reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    CTE_ENTERA      reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    CTE_REAL        reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    CTE_ALFA        reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    VERDADERO       reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    FALSO           reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    PAREN_TERMINA   reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    COMA            reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    O               reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    Y               reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    OP_REL          reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    MAS             reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    MULTI           reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    DIV             reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    MOD             reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)
    POTENCIA        reduce using rule 137 (parenemp -> PAREN_EMPIEZA .)


state 143

    (27) dimens -> error valor CORCHETE_TERMINA . dimens
    (24) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (25) dimens -> .
    (26) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (27) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 37
    COMA            reduce using rule 25 (dimens -> .)
    PUNTOS_DOBLES   reduce using rule 25 (dimens -> .)
    PAREN_TERMINA   reduce using rule 25 (dimens -> .)
    error           shift and go to state 135

  ! error           [ reduce using rule 25 (dimens -> .) ]

    dimens                         shift and go to state 195

state 144

    (107) exprlog -> opy O . exprlog
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! HASTA           [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 147 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 147 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 147 (empty -> .) ]
  ! SI              [ reduce using rule 147 (empty -> .) ]
  ! IDENT           [ reduce using rule 147 (empty -> .) ]
  ! DESDE           [ reduce using rule 147 (empty -> .) ]
  ! REPETIR         [ reduce using rule 147 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 147 (empty -> .) ]
  ! CUANDO          [ reduce using rule 147 (empty -> .) ]
  ! REGRESA         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 147 (empty -> .) ]
  ! LEE             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]
  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    opy                            shift and go to state 69
    exprlog                        shift and go to state 196
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 145

    (109) opy -> opno Y . opy
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! HASTA           [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 147 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 147 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 147 (empty -> .) ]
  ! SI              [ reduce using rule 147 (empty -> .) ]
  ! IDENT           [ reduce using rule 147 (empty -> .) ]
  ! DESDE           [ reduce using rule 147 (empty -> .) ]
  ! REPETIR         [ reduce using rule 147 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 147 (empty -> .) ]
  ! CUANDO          [ reduce using rule 147 (empty -> .) ]
  ! REGRESA         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 147 (empty -> .) ]
  ! LEE             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]
  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    opno                           shift and go to state 70
    opy                            shift and go to state 197
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 146

    (111) opno -> NO oprel .

    Y               reduce using rule 111 (opno -> NO oprel .)
    O               reduce using rule 111 (opno -> NO oprel .)
    CORCHETE_TERMINA reduce using rule 111 (opno -> NO oprel .)
    error           reduce using rule 111 (opno -> NO oprel .)
    COMA            reduce using rule 111 (opno -> NO oprel .)
    PAREN_TERMINA   reduce using rule 111 (opno -> NO oprel .)
    PUNTO_COMA      reduce using rule 111 (opno -> NO oprel .)
    HASTA           reduce using rule 111 (opno -> NO oprel .)
    SINO            reduce using rule 111 (opno -> NO oprel .)
    FIN             reduce using rule 111 (opno -> NO oprel .)
    SEA             reduce using rule 111 (opno -> NO oprel .)
    OTRO            reduce using rule 111 (opno -> NO oprel .)
    INICIO          reduce using rule 111 (opno -> NO oprel .)
    LIMPIA          reduce using rule 111 (opno -> NO oprel .)
    INTERRUMPE      reduce using rule 111 (opno -> NO oprel .)
    CONTINUA        reduce using rule 111 (opno -> NO oprel .)
    SI              reduce using rule 111 (opno -> NO oprel .)
    IDENT           reduce using rule 111 (opno -> NO oprel .)
    DESDE           reduce using rule 111 (opno -> NO oprel .)
    REPETIR         reduce using rule 111 (opno -> NO oprel .)
    MIENTRAS        reduce using rule 111 (opno -> NO oprel .)
    CUANDO          reduce using rule 111 (opno -> NO oprel .)
    REGRESA         reduce using rule 111 (opno -> NO oprel .)
    IMPRIME         reduce using rule 111 (opno -> NO oprel .)
    IMPRIMENL       reduce using rule 111 (opno -> NO oprel .)
    LEE             reduce using rule 111 (opno -> NO oprel .)


state 147

    (113) oprel -> expr OP_REL . oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 132 (termino -> .)
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! HASTA           [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 147 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 147 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 147 (empty -> .) ]
  ! SI              [ reduce using rule 147 (empty -> .) ]
  ! IDENT           [ reduce using rule 147 (empty -> .) ]
  ! DESDE           [ reduce using rule 147 (empty -> .) ]
  ! REPETIR         [ reduce using rule 147 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 147 (empty -> .) ]
  ! CUANDO          [ reduce using rule 147 (empty -> .) ]
  ! REGRESA         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 147 (empty -> .) ]
  ! LEE             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]
  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    expr                           shift and go to state 73
    oprel                          shift and go to state 198
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 148

    (115) expr -> multi MAS . expr
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 132 (termino -> .)
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)
    DECR            reduce using rule 132 (termino -> .)
    INCR            reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! HASTA           [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 147 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 147 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 147 (empty -> .) ]
  ! SI              [ reduce using rule 147 (empty -> .) ]
  ! IDENT           [ reduce using rule 147 (empty -> .) ]
  ! DESDE           [ reduce using rule 147 (empty -> .) ]
  ! REPETIR         [ reduce using rule 147 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 147 (empty -> .) ]
  ! CUANDO          [ reduce using rule 147 (empty -> .) ]
  ! REGRESA         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 147 (empty -> .) ]
  ! LEE             [ reduce using rule 147 (empty -> .) ]
  ! DECR            [ reduce using rule 147 (empty -> .) ]
  ! INCR            [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]
  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    multi                          shift and go to state 74
    expr                           shift and go to state 199
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 149

    (116) expr -> multi MENOS . expr
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 132 (termino -> .)
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)
    DECR            reduce using rule 132 (termino -> .)
    INCR            reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! HASTA           [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 147 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 147 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 147 (empty -> .) ]
  ! SI              [ reduce using rule 147 (empty -> .) ]
  ! IDENT           [ reduce using rule 147 (empty -> .) ]
  ! DESDE           [ reduce using rule 147 (empty -> .) ]
  ! REPETIR         [ reduce using rule 147 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 147 (empty -> .) ]
  ! CUANDO          [ reduce using rule 147 (empty -> .) ]
  ! REGRESA         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 147 (empty -> .) ]
  ! LEE             [ reduce using rule 147 (empty -> .) ]
  ! DECR            [ reduce using rule 147 (empty -> .) ]
  ! INCR            [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]
  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    multi                          shift and go to state 74
    expr                           shift and go to state 200
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 150

    (125) signo -> MENOS termino .

    POTENCIA        reduce using rule 125 (signo -> MENOS termino .)
    MULTI           reduce using rule 125 (signo -> MENOS termino .)
    DIV             reduce using rule 125 (signo -> MENOS termino .)
    MOD             reduce using rule 125 (signo -> MENOS termino .)
    MAS             reduce using rule 125 (signo -> MENOS termino .)
    MENOS           reduce using rule 125 (signo -> MENOS termino .)
    OP_REL          reduce using rule 125 (signo -> MENOS termino .)
    Y               reduce using rule 125 (signo -> MENOS termino .)
    O               reduce using rule 125 (signo -> MENOS termino .)
    CORCHETE_TERMINA reduce using rule 125 (signo -> MENOS termino .)
    error           reduce using rule 125 (signo -> MENOS termino .)
    COMA            reduce using rule 125 (signo -> MENOS termino .)
    PAREN_TERMINA   reduce using rule 125 (signo -> MENOS termino .)
    PUNTO_COMA      reduce using rule 125 (signo -> MENOS termino .)
    HASTA           reduce using rule 125 (signo -> MENOS termino .)
    SINO            reduce using rule 125 (signo -> MENOS termino .)
    FIN             reduce using rule 125 (signo -> MENOS termino .)
    SEA             reduce using rule 125 (signo -> MENOS termino .)
    OTRO            reduce using rule 125 (signo -> MENOS termino .)
    INICIO          reduce using rule 125 (signo -> MENOS termino .)
    LIMPIA          reduce using rule 125 (signo -> MENOS termino .)
    INTERRUMPE      reduce using rule 125 (signo -> MENOS termino .)
    CONTINUA        reduce using rule 125 (signo -> MENOS termino .)
    SI              reduce using rule 125 (signo -> MENOS termino .)
    IDENT           reduce using rule 125 (signo -> MENOS termino .)
    DESDE           reduce using rule 125 (signo -> MENOS termino .)
    REPETIR         reduce using rule 125 (signo -> MENOS termino .)
    MIENTRAS        reduce using rule 125 (signo -> MENOS termino .)
    CUANDO          reduce using rule 125 (signo -> MENOS termino .)
    REGRESA         reduce using rule 125 (signo -> MENOS termino .)
    IMPRIME         reduce using rule 125 (signo -> MENOS termino .)
    IMPRIMENL       reduce using rule 125 (signo -> MENOS termino .)
    LEE             reduce using rule 125 (signo -> MENOS termino .)
    DECR            reduce using rule 125 (signo -> MENOS termino .)
    INCR            reduce using rule 125 (signo -> MENOS termino .)


state 151

    (118) multi -> expo MULTI . multi
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 132 (termino -> .)
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)
    DECR            reduce using rule 132 (termino -> .)
    INCR            reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! HASTA           [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 147 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 147 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 147 (empty -> .) ]
  ! SI              [ reduce using rule 147 (empty -> .) ]
  ! IDENT           [ reduce using rule 147 (empty -> .) ]
  ! DESDE           [ reduce using rule 147 (empty -> .) ]
  ! REPETIR         [ reduce using rule 147 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 147 (empty -> .) ]
  ! CUANDO          [ reduce using rule 147 (empty -> .) ]
  ! REGRESA         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 147 (empty -> .) ]
  ! LEE             [ reduce using rule 147 (empty -> .) ]
  ! DECR            [ reduce using rule 147 (empty -> .) ]
  ! INCR            [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]
  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    expo                           shift and go to state 76
    multi                          shift and go to state 201
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 152

    (119) multi -> expo DIV . multi
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 132 (termino -> .)
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)
    DECR            reduce using rule 132 (termino -> .)
    INCR            reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! HASTA           [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 147 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 147 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 147 (empty -> .) ]
  ! SI              [ reduce using rule 147 (empty -> .) ]
  ! IDENT           [ reduce using rule 147 (empty -> .) ]
  ! DESDE           [ reduce using rule 147 (empty -> .) ]
  ! REPETIR         [ reduce using rule 147 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 147 (empty -> .) ]
  ! CUANDO          [ reduce using rule 147 (empty -> .) ]
  ! REGRESA         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 147 (empty -> .) ]
  ! LEE             [ reduce using rule 147 (empty -> .) ]
  ! DECR            [ reduce using rule 147 (empty -> .) ]
  ! INCR            [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]
  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    expo                           shift and go to state 76
    multi                          shift and go to state 202
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 153

    (120) multi -> expo MOD . multi
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 132 (termino -> .)
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)
    DECR            reduce using rule 132 (termino -> .)
    INCR            reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! HASTA           [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 147 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 147 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 147 (empty -> .) ]
  ! SI              [ reduce using rule 147 (empty -> .) ]
  ! IDENT           [ reduce using rule 147 (empty -> .) ]
  ! DESDE           [ reduce using rule 147 (empty -> .) ]
  ! REPETIR         [ reduce using rule 147 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 147 (empty -> .) ]
  ! CUANDO          [ reduce using rule 147 (empty -> .) ]
  ! REGRESA         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 147 (empty -> .) ]
  ! LEE             [ reduce using rule 147 (empty -> .) ]
  ! DECR            [ reduce using rule 147 (empty -> .) ]
  ! INCR            [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]
  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    expo                           shift and go to state 76
    multi                          shift and go to state 203
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 154

    (123) expo -> signo POTENCIA . expo
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)
    DECR            reduce using rule 132 (termino -> .)
    INCR            reduce using rule 132 (termino -> .)

  ! MENOS           [ reduce using rule 132 (termino -> .) ]
  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    signo                          shift and go to state 77
    expo                           shift and go to state 204
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 155

    (24) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA . dimens
    (24) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (25) dimens -> .
    (26) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (27) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 37
    COMA            reduce using rule 25 (dimens -> .)
    PUNTOS_DOBLES   reduce using rule 25 (dimens -> .)
    PAREN_TERMINA   reduce using rule 25 (dimens -> .)
    error           shift and go to state 135

  ! error           [ reduce using rule 25 (dimens -> .) ]

    dimens                         shift and go to state 205

state 156

    (26) dimens -> CORCHETE_EMPIEZA valor error . dimens
    (24) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (25) dimens -> .
    (26) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (27) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 37
    COMA            reduce using rule 25 (dimens -> .)
    PUNTOS_DOBLES   reduce using rule 25 (dimens -> .)
    PAREN_TERMINA   reduce using rule 25 (dimens -> .)
    error           shift and go to state 135

  ! error           [ reduce using rule 25 (dimens -> .) ]

    dimens                         shift and go to state 206

state 157

    (104) udim -> CORCHETE_EMPIEZA . expr CORCHETE_TERMINA udim
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> .)
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    expr                           shift and go to state 207
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 158

    (105) udim -> empty .

    POTENCIA        reduce using rule 105 (udim -> empty .)
    MULTI           reduce using rule 105 (udim -> empty .)
    DIV             reduce using rule 105 (udim -> empty .)
    MOD             reduce using rule 105 (udim -> empty .)
    MAS             reduce using rule 105 (udim -> empty .)
    MENOS           reduce using rule 105 (udim -> empty .)
    OP_REL          reduce using rule 105 (udim -> empty .)
    Y               reduce using rule 105 (udim -> empty .)
    O               reduce using rule 105 (udim -> empty .)
    CORCHETE_TERMINA reduce using rule 105 (udim -> empty .)
    error           reduce using rule 105 (udim -> empty .)
    COMA            reduce using rule 105 (udim -> empty .)
    PAREN_TERMINA   reduce using rule 105 (udim -> empty .)
    PUNTO_COMA      reduce using rule 105 (udim -> empty .)
    HASTA           reduce using rule 105 (udim -> empty .)
    SINO            reduce using rule 105 (udim -> empty .)
    FIN             reduce using rule 105 (udim -> empty .)
    SEA             reduce using rule 105 (udim -> empty .)
    OTRO            reduce using rule 105 (udim -> empty .)
    INICIO          reduce using rule 105 (udim -> empty .)
    LIMPIA          reduce using rule 105 (udim -> empty .)
    INTERRUMPE      reduce using rule 105 (udim -> empty .)
    CONTINUA        reduce using rule 105 (udim -> empty .)
    SI              reduce using rule 105 (udim -> empty .)
    IDENT           reduce using rule 105 (udim -> empty .)
    DESDE           reduce using rule 105 (udim -> empty .)
    REPETIR         reduce using rule 105 (udim -> empty .)
    MIENTRAS        reduce using rule 105 (udim -> empty .)
    CUANDO          reduce using rule 105 (udim -> empty .)
    REGRESA         reduce using rule 105 (udim -> empty .)
    IMPRIME         reduce using rule 105 (udim -> empty .)
    IMPRIMENL       reduce using rule 105 (udim -> empty .)
    LEE             reduce using rule 105 (udim -> empty .)
    DECR            reduce using rule 105 (udim -> empty .)
    INCR            reduce using rule 105 (udim -> empty .)
    OP_ASIG         reduce using rule 105 (udim -> empty .)


state 159

    (35) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 35 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 35 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 35 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 35 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 35 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)


state 160

    (37) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 37 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 37 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 37 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 37 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 37 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)


state 161

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN . DE PROGRAMA PUNTO

    DE              shift and go to state 208


state 162

    (63) block -> estatuto puntoc . block
    (64) block -> estatuto puntoc .
    (63) block -> . estatuto puntoc block
    (64) block -> . estatuto puntoc
    (66) block -> . estatuto error
    (67) block -> . estatuto error block
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

    FIN             reduce using rule 64 (block -> estatuto puntoc .)
    HASTA           reduce using rule 64 (block -> estatuto puntoc .)
    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118
    error           reduce using rule 147 (empty -> .)
    PUNTO_COMA      reduce using rule 147 (empty -> .)

    estatuto                       shift and go to state 93
    block                          shift and go to state 209
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 163

    (66) block -> estatuto error .
    (67) block -> estatuto error . block
    (63) block -> . estatuto puntoc block
    (64) block -> . estatuto puntoc
    (66) block -> . estatuto error
    (67) block -> . estatuto error block
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

    FIN             reduce using rule 66 (block -> estatuto error .)
    HASTA           reduce using rule 66 (block -> estatuto error .)
    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118
    error           reduce using rule 147 (empty -> .)
    PUNTO_COMA      reduce using rule 147 (empty -> .)

    estatuto                       shift and go to state 93
    block                          shift and go to state 210
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 164

    (65) puntoc -> PUNTO_COMA .

    LIMPIA          reduce using rule 65 (puntoc -> PUNTO_COMA .)
    INTERRUMPE      reduce using rule 65 (puntoc -> PUNTO_COMA .)
    CONTINUA        reduce using rule 65 (puntoc -> PUNTO_COMA .)
    SI              reduce using rule 65 (puntoc -> PUNTO_COMA .)
    IDENT           reduce using rule 65 (puntoc -> PUNTO_COMA .)
    DESDE           reduce using rule 65 (puntoc -> PUNTO_COMA .)
    REPETIR         reduce using rule 65 (puntoc -> PUNTO_COMA .)
    MIENTRAS        reduce using rule 65 (puntoc -> PUNTO_COMA .)
    CUANDO          reduce using rule 65 (puntoc -> PUNTO_COMA .)
    REGRESA         reduce using rule 65 (puntoc -> PUNTO_COMA .)
    IMPRIME         reduce using rule 65 (puntoc -> PUNTO_COMA .)
    IMPRIMENL       reduce using rule 65 (puntoc -> PUNTO_COMA .)
    LEE             reduce using rule 65 (puntoc -> PUNTO_COMA .)
    error           reduce using rule 65 (puntoc -> PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 65 (puntoc -> PUNTO_COMA .)
    FIN             reduce using rule 65 (puntoc -> PUNTO_COMA .)
    HASTA           reduce using rule 65 (puntoc -> PUNTO_COMA .)


state 165

    (83) si -> SI PAREN_EMPIEZA . exprlog PAREN_TERMINA HACER bckesp sino
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    exprlog                        shift and go to state 211
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 166

    (94) asigna -> IDENT udim . OP_ASIG exprlog

    OP_ASIG         shift and go to state 212


state 167

    (89) desde -> DESDE EL . VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> DESDE EL . VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> DESDE EL . VALOR DE asigna HASTA expr error bckesp

    VALOR           shift and go to state 213


state 168

    (92) repetir -> REPETIR block . HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    HASTA           shift and go to state 214


state 169

    (93) mientras -> MIENTRAS SE . CUMPLA QUE exprlog bckesp

    CUMPLA          shift and go to state 215


state 170

    (95) cuando -> CUANDO EL . VALOR DE IDENT INICIO gposea otro FIN

    VALOR           shift and go to state 216


state 171

    (103) regresa -> REGRESA PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    exprlog                        shift and go to state 217
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 172

    (138) imprime -> IMPRIME PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (143) gpoexp -> . exprlog
    (144) gpoexp -> . exprlog COMA gpoexp
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    gpoexp                         shift and go to state 218
    exprlog                        shift and go to state 219
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 173

    (139) imprimenl -> IMPRIMENL PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (140) imprimenl -> IMPRIMENL PAREN_EMPIEZA . gpoexp error
    (143) gpoexp -> . exprlog
    (144) gpoexp -> . exprlog COMA gpoexp
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    gpoexp                         shift and go to state 220
    exprlog                        shift and go to state 219
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 174

    (141) lee -> LEE PAREN_EMPIEZA . IDENT PAREN_TERMINA
    (142) lee -> LEE PAREN_EMPIEZA . IDENT dimens PAREN_TERMINA

    IDENT           shift and go to state 221


state 175

    (56) gpopars -> IDENT . COMA gpopars
    (57) gpopars -> IDENT .

    COMA            shift and go to state 222
    PUNTOS_DOBLES   reduce using rule 57 (gpopars -> IDENT .)
    error           reduce using rule 57 (gpopars -> IDENT .)


state 176

    (61) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 223


state 177

    (50) params -> gpopars . PUNTOS_DOBLES TIPO otrospars
    (52) params -> gpopars . PUNTOS_DOBLES error otrospars
    (53) params -> gpopars . error TIPO otrospars

    PUNTOS_DOBLES   shift and go to state 224
    error           shift and go to state 225


state 178

    (51) params -> empty .

    PAREN_TERMINA   reduce using rule 51 (params -> empty .)


state 179

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_TERMINA   shift and go to state 226


state 180

    (39) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 227


state 181

    (45) protfunc -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 228


state 182

    (46) protfunc -> FUNCION error PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 229


state 183

    (47) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 230


state 184

    (48) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 231


state 185

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)


state 186

    (9) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    INICIO          reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)


state 187

    (7) gpovars -> gpoids error TIPO PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)


state 188

    (15) gpoids2 -> IDENT dimens COMA . gpoids2
    (15) gpoids2 -> . IDENT dimens COMA gpoids2
    (16) gpoids2 -> . IDENT opasig COMA gpoids2
    (17) gpoids2 -> . IDENT dimens
    (18) gpoids2 -> . IDENT COMA gpoids2
    (23) gpoids2 -> . empty
    (147) empty -> .

    IDENT           shift and go to state 59
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

    gpoids2                        shift and go to state 232
    empty                          shift and go to state 61

state 189

    (18) gpoids2 -> IDENT COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 18 (gpoids2 -> IDENT COMA gpoids2 .)
    error           reduce using rule 18 (gpoids2 -> IDENT COMA gpoids2 .)


state 190

    (16) gpoids2 -> IDENT opasig COMA . gpoids2
    (15) gpoids2 -> . IDENT dimens COMA gpoids2
    (16) gpoids2 -> . IDENT opasig COMA gpoids2
    (17) gpoids2 -> . IDENT dimens
    (18) gpoids2 -> . IDENT COMA gpoids2
    (23) gpoids2 -> . empty
    (147) empty -> .

    IDENT           shift and go to state 59
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)

    gpoids2                        shift and go to state 233
    empty                          shift and go to state 61

state 191

    (135) lfunc -> IDENT parenemp uparams . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 234


state 192

    (136) lfunc -> IDENT parenemp error . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 235


state 193

    (145) uparams -> exprlog .
    (146) uparams -> exprlog . COMA uparams

    PAREN_TERMINA   reduce using rule 145 (uparams -> exprlog .)
    COMA            shift and go to state 236


state 194

    (104) udim -> CORCHETE_EMPIEZA expr . CORCHETE_TERMINA udim
    (112) oprel -> expr .
    (113) oprel -> expr . OP_REL oprel

  ! shift/reduce conflict for CORCHETE_TERMINA resolved as shift
    CORCHETE_TERMINA shift and go to state 237
    Y               reduce using rule 112 (oprel -> expr .)
    O               reduce using rule 112 (oprel -> expr .)
    error           reduce using rule 112 (oprel -> expr .)
    OP_REL          shift and go to state 147

  ! CORCHETE_TERMINA [ reduce using rule 112 (oprel -> expr .) ]


state 195

    (27) dimens -> error valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 27 (dimens -> error valor CORCHETE_TERMINA dimens .)
    error           reduce using rule 27 (dimens -> error valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 27 (dimens -> error valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 27 (dimens -> error valor CORCHETE_TERMINA dimens .)


state 196

    (107) exprlog -> opy O exprlog .

    CORCHETE_TERMINA reduce using rule 107 (exprlog -> opy O exprlog .)
    error           reduce using rule 107 (exprlog -> opy O exprlog .)
    COMA            reduce using rule 107 (exprlog -> opy O exprlog .)
    PAREN_TERMINA   reduce using rule 107 (exprlog -> opy O exprlog .)
    PUNTO_COMA      reduce using rule 107 (exprlog -> opy O exprlog .)
    HASTA           reduce using rule 107 (exprlog -> opy O exprlog .)
    SINO            reduce using rule 107 (exprlog -> opy O exprlog .)
    FIN             reduce using rule 107 (exprlog -> opy O exprlog .)
    SEA             reduce using rule 107 (exprlog -> opy O exprlog .)
    OTRO            reduce using rule 107 (exprlog -> opy O exprlog .)
    INICIO          reduce using rule 107 (exprlog -> opy O exprlog .)
    LIMPIA          reduce using rule 107 (exprlog -> opy O exprlog .)
    INTERRUMPE      reduce using rule 107 (exprlog -> opy O exprlog .)
    CONTINUA        reduce using rule 107 (exprlog -> opy O exprlog .)
    SI              reduce using rule 107 (exprlog -> opy O exprlog .)
    IDENT           reduce using rule 107 (exprlog -> opy O exprlog .)
    DESDE           reduce using rule 107 (exprlog -> opy O exprlog .)
    REPETIR         reduce using rule 107 (exprlog -> opy O exprlog .)
    MIENTRAS        reduce using rule 107 (exprlog -> opy O exprlog .)
    CUANDO          reduce using rule 107 (exprlog -> opy O exprlog .)
    REGRESA         reduce using rule 107 (exprlog -> opy O exprlog .)
    IMPRIME         reduce using rule 107 (exprlog -> opy O exprlog .)
    IMPRIMENL       reduce using rule 107 (exprlog -> opy O exprlog .)
    LEE             reduce using rule 107 (exprlog -> opy O exprlog .)


state 197

    (109) opy -> opno Y opy .

    O               reduce using rule 109 (opy -> opno Y opy .)
    CORCHETE_TERMINA reduce using rule 109 (opy -> opno Y opy .)
    error           reduce using rule 109 (opy -> opno Y opy .)
    COMA            reduce using rule 109 (opy -> opno Y opy .)
    PAREN_TERMINA   reduce using rule 109 (opy -> opno Y opy .)
    PUNTO_COMA      reduce using rule 109 (opy -> opno Y opy .)
    HASTA           reduce using rule 109 (opy -> opno Y opy .)
    SINO            reduce using rule 109 (opy -> opno Y opy .)
    FIN             reduce using rule 109 (opy -> opno Y opy .)
    SEA             reduce using rule 109 (opy -> opno Y opy .)
    OTRO            reduce using rule 109 (opy -> opno Y opy .)
    INICIO          reduce using rule 109 (opy -> opno Y opy .)
    LIMPIA          reduce using rule 109 (opy -> opno Y opy .)
    INTERRUMPE      reduce using rule 109 (opy -> opno Y opy .)
    CONTINUA        reduce using rule 109 (opy -> opno Y opy .)
    SI              reduce using rule 109 (opy -> opno Y opy .)
    IDENT           reduce using rule 109 (opy -> opno Y opy .)
    DESDE           reduce using rule 109 (opy -> opno Y opy .)
    REPETIR         reduce using rule 109 (opy -> opno Y opy .)
    MIENTRAS        reduce using rule 109 (opy -> opno Y opy .)
    CUANDO          reduce using rule 109 (opy -> opno Y opy .)
    REGRESA         reduce using rule 109 (opy -> opno Y opy .)
    IMPRIME         reduce using rule 109 (opy -> opno Y opy .)
    IMPRIMENL       reduce using rule 109 (opy -> opno Y opy .)
    LEE             reduce using rule 109 (opy -> opno Y opy .)


state 198

    (113) oprel -> expr OP_REL oprel .

    Y               reduce using rule 113 (oprel -> expr OP_REL oprel .)
    O               reduce using rule 113 (oprel -> expr OP_REL oprel .)
    CORCHETE_TERMINA reduce using rule 113 (oprel -> expr OP_REL oprel .)
    error           reduce using rule 113 (oprel -> expr OP_REL oprel .)
    COMA            reduce using rule 113 (oprel -> expr OP_REL oprel .)
    PAREN_TERMINA   reduce using rule 113 (oprel -> expr OP_REL oprel .)
    PUNTO_COMA      reduce using rule 113 (oprel -> expr OP_REL oprel .)
    HASTA           reduce using rule 113 (oprel -> expr OP_REL oprel .)
    SINO            reduce using rule 113 (oprel -> expr OP_REL oprel .)
    FIN             reduce using rule 113 (oprel -> expr OP_REL oprel .)
    SEA             reduce using rule 113 (oprel -> expr OP_REL oprel .)
    OTRO            reduce using rule 113 (oprel -> expr OP_REL oprel .)
    INICIO          reduce using rule 113 (oprel -> expr OP_REL oprel .)
    LIMPIA          reduce using rule 113 (oprel -> expr OP_REL oprel .)
    INTERRUMPE      reduce using rule 113 (oprel -> expr OP_REL oprel .)
    CONTINUA        reduce using rule 113 (oprel -> expr OP_REL oprel .)
    SI              reduce using rule 113 (oprel -> expr OP_REL oprel .)
    IDENT           reduce using rule 113 (oprel -> expr OP_REL oprel .)
    DESDE           reduce using rule 113 (oprel -> expr OP_REL oprel .)
    REPETIR         reduce using rule 113 (oprel -> expr OP_REL oprel .)
    MIENTRAS        reduce using rule 113 (oprel -> expr OP_REL oprel .)
    CUANDO          reduce using rule 113 (oprel -> expr OP_REL oprel .)
    REGRESA         reduce using rule 113 (oprel -> expr OP_REL oprel .)
    IMPRIME         reduce using rule 113 (oprel -> expr OP_REL oprel .)
    IMPRIMENL       reduce using rule 113 (oprel -> expr OP_REL oprel .)
    LEE             reduce using rule 113 (oprel -> expr OP_REL oprel .)


state 199

    (115) expr -> multi MAS expr .

    OP_REL          reduce using rule 115 (expr -> multi MAS expr .)
    Y               reduce using rule 115 (expr -> multi MAS expr .)
    O               reduce using rule 115 (expr -> multi MAS expr .)
    CORCHETE_TERMINA reduce using rule 115 (expr -> multi MAS expr .)
    error           reduce using rule 115 (expr -> multi MAS expr .)
    COMA            reduce using rule 115 (expr -> multi MAS expr .)
    PAREN_TERMINA   reduce using rule 115 (expr -> multi MAS expr .)
    PUNTO_COMA      reduce using rule 115 (expr -> multi MAS expr .)
    HASTA           reduce using rule 115 (expr -> multi MAS expr .)
    SINO            reduce using rule 115 (expr -> multi MAS expr .)
    FIN             reduce using rule 115 (expr -> multi MAS expr .)
    SEA             reduce using rule 115 (expr -> multi MAS expr .)
    OTRO            reduce using rule 115 (expr -> multi MAS expr .)
    INICIO          reduce using rule 115 (expr -> multi MAS expr .)
    LIMPIA          reduce using rule 115 (expr -> multi MAS expr .)
    INTERRUMPE      reduce using rule 115 (expr -> multi MAS expr .)
    CONTINUA        reduce using rule 115 (expr -> multi MAS expr .)
    SI              reduce using rule 115 (expr -> multi MAS expr .)
    IDENT           reduce using rule 115 (expr -> multi MAS expr .)
    DESDE           reduce using rule 115 (expr -> multi MAS expr .)
    REPETIR         reduce using rule 115 (expr -> multi MAS expr .)
    MIENTRAS        reduce using rule 115 (expr -> multi MAS expr .)
    CUANDO          reduce using rule 115 (expr -> multi MAS expr .)
    REGRESA         reduce using rule 115 (expr -> multi MAS expr .)
    IMPRIME         reduce using rule 115 (expr -> multi MAS expr .)
    IMPRIMENL       reduce using rule 115 (expr -> multi MAS expr .)
    LEE             reduce using rule 115 (expr -> multi MAS expr .)
    DECR            reduce using rule 115 (expr -> multi MAS expr .)
    INCR            reduce using rule 115 (expr -> multi MAS expr .)


state 200

    (116) expr -> multi MENOS expr .

    OP_REL          reduce using rule 116 (expr -> multi MENOS expr .)
    Y               reduce using rule 116 (expr -> multi MENOS expr .)
    O               reduce using rule 116 (expr -> multi MENOS expr .)
    CORCHETE_TERMINA reduce using rule 116 (expr -> multi MENOS expr .)
    error           reduce using rule 116 (expr -> multi MENOS expr .)
    COMA            reduce using rule 116 (expr -> multi MENOS expr .)
    PAREN_TERMINA   reduce using rule 116 (expr -> multi MENOS expr .)
    PUNTO_COMA      reduce using rule 116 (expr -> multi MENOS expr .)
    HASTA           reduce using rule 116 (expr -> multi MENOS expr .)
    SINO            reduce using rule 116 (expr -> multi MENOS expr .)
    FIN             reduce using rule 116 (expr -> multi MENOS expr .)
    SEA             reduce using rule 116 (expr -> multi MENOS expr .)
    OTRO            reduce using rule 116 (expr -> multi MENOS expr .)
    INICIO          reduce using rule 116 (expr -> multi MENOS expr .)
    LIMPIA          reduce using rule 116 (expr -> multi MENOS expr .)
    INTERRUMPE      reduce using rule 116 (expr -> multi MENOS expr .)
    CONTINUA        reduce using rule 116 (expr -> multi MENOS expr .)
    SI              reduce using rule 116 (expr -> multi MENOS expr .)
    IDENT           reduce using rule 116 (expr -> multi MENOS expr .)
    DESDE           reduce using rule 116 (expr -> multi MENOS expr .)
    REPETIR         reduce using rule 116 (expr -> multi MENOS expr .)
    MIENTRAS        reduce using rule 116 (expr -> multi MENOS expr .)
    CUANDO          reduce using rule 116 (expr -> multi MENOS expr .)
    REGRESA         reduce using rule 116 (expr -> multi MENOS expr .)
    IMPRIME         reduce using rule 116 (expr -> multi MENOS expr .)
    IMPRIMENL       reduce using rule 116 (expr -> multi MENOS expr .)
    LEE             reduce using rule 116 (expr -> multi MENOS expr .)
    DECR            reduce using rule 116 (expr -> multi MENOS expr .)
    INCR            reduce using rule 116 (expr -> multi MENOS expr .)


state 201

    (118) multi -> expo MULTI multi .

    MAS             reduce using rule 118 (multi -> expo MULTI multi .)
    MENOS           reduce using rule 118 (multi -> expo MULTI multi .)
    OP_REL          reduce using rule 118 (multi -> expo MULTI multi .)
    Y               reduce using rule 118 (multi -> expo MULTI multi .)
    O               reduce using rule 118 (multi -> expo MULTI multi .)
    CORCHETE_TERMINA reduce using rule 118 (multi -> expo MULTI multi .)
    error           reduce using rule 118 (multi -> expo MULTI multi .)
    COMA            reduce using rule 118 (multi -> expo MULTI multi .)
    PAREN_TERMINA   reduce using rule 118 (multi -> expo MULTI multi .)
    PUNTO_COMA      reduce using rule 118 (multi -> expo MULTI multi .)
    HASTA           reduce using rule 118 (multi -> expo MULTI multi .)
    SINO            reduce using rule 118 (multi -> expo MULTI multi .)
    FIN             reduce using rule 118 (multi -> expo MULTI multi .)
    SEA             reduce using rule 118 (multi -> expo MULTI multi .)
    OTRO            reduce using rule 118 (multi -> expo MULTI multi .)
    INICIO          reduce using rule 118 (multi -> expo MULTI multi .)
    LIMPIA          reduce using rule 118 (multi -> expo MULTI multi .)
    INTERRUMPE      reduce using rule 118 (multi -> expo MULTI multi .)
    CONTINUA        reduce using rule 118 (multi -> expo MULTI multi .)
    SI              reduce using rule 118 (multi -> expo MULTI multi .)
    IDENT           reduce using rule 118 (multi -> expo MULTI multi .)
    DESDE           reduce using rule 118 (multi -> expo MULTI multi .)
    REPETIR         reduce using rule 118 (multi -> expo MULTI multi .)
    MIENTRAS        reduce using rule 118 (multi -> expo MULTI multi .)
    CUANDO          reduce using rule 118 (multi -> expo MULTI multi .)
    REGRESA         reduce using rule 118 (multi -> expo MULTI multi .)
    IMPRIME         reduce using rule 118 (multi -> expo MULTI multi .)
    IMPRIMENL       reduce using rule 118 (multi -> expo MULTI multi .)
    LEE             reduce using rule 118 (multi -> expo MULTI multi .)
    DECR            reduce using rule 118 (multi -> expo MULTI multi .)
    INCR            reduce using rule 118 (multi -> expo MULTI multi .)


state 202

    (119) multi -> expo DIV multi .

    MAS             reduce using rule 119 (multi -> expo DIV multi .)
    MENOS           reduce using rule 119 (multi -> expo DIV multi .)
    OP_REL          reduce using rule 119 (multi -> expo DIV multi .)
    Y               reduce using rule 119 (multi -> expo DIV multi .)
    O               reduce using rule 119 (multi -> expo DIV multi .)
    CORCHETE_TERMINA reduce using rule 119 (multi -> expo DIV multi .)
    error           reduce using rule 119 (multi -> expo DIV multi .)
    COMA            reduce using rule 119 (multi -> expo DIV multi .)
    PAREN_TERMINA   reduce using rule 119 (multi -> expo DIV multi .)
    PUNTO_COMA      reduce using rule 119 (multi -> expo DIV multi .)
    HASTA           reduce using rule 119 (multi -> expo DIV multi .)
    SINO            reduce using rule 119 (multi -> expo DIV multi .)
    FIN             reduce using rule 119 (multi -> expo DIV multi .)
    SEA             reduce using rule 119 (multi -> expo DIV multi .)
    OTRO            reduce using rule 119 (multi -> expo DIV multi .)
    INICIO          reduce using rule 119 (multi -> expo DIV multi .)
    LIMPIA          reduce using rule 119 (multi -> expo DIV multi .)
    INTERRUMPE      reduce using rule 119 (multi -> expo DIV multi .)
    CONTINUA        reduce using rule 119 (multi -> expo DIV multi .)
    SI              reduce using rule 119 (multi -> expo DIV multi .)
    IDENT           reduce using rule 119 (multi -> expo DIV multi .)
    DESDE           reduce using rule 119 (multi -> expo DIV multi .)
    REPETIR         reduce using rule 119 (multi -> expo DIV multi .)
    MIENTRAS        reduce using rule 119 (multi -> expo DIV multi .)
    CUANDO          reduce using rule 119 (multi -> expo DIV multi .)
    REGRESA         reduce using rule 119 (multi -> expo DIV multi .)
    IMPRIME         reduce using rule 119 (multi -> expo DIV multi .)
    IMPRIMENL       reduce using rule 119 (multi -> expo DIV multi .)
    LEE             reduce using rule 119 (multi -> expo DIV multi .)
    DECR            reduce using rule 119 (multi -> expo DIV multi .)
    INCR            reduce using rule 119 (multi -> expo DIV multi .)


state 203

    (120) multi -> expo MOD multi .

    MAS             reduce using rule 120 (multi -> expo MOD multi .)
    MENOS           reduce using rule 120 (multi -> expo MOD multi .)
    OP_REL          reduce using rule 120 (multi -> expo MOD multi .)
    Y               reduce using rule 120 (multi -> expo MOD multi .)
    O               reduce using rule 120 (multi -> expo MOD multi .)
    CORCHETE_TERMINA reduce using rule 120 (multi -> expo MOD multi .)
    error           reduce using rule 120 (multi -> expo MOD multi .)
    COMA            reduce using rule 120 (multi -> expo MOD multi .)
    PAREN_TERMINA   reduce using rule 120 (multi -> expo MOD multi .)
    PUNTO_COMA      reduce using rule 120 (multi -> expo MOD multi .)
    HASTA           reduce using rule 120 (multi -> expo MOD multi .)
    SINO            reduce using rule 120 (multi -> expo MOD multi .)
    FIN             reduce using rule 120 (multi -> expo MOD multi .)
    SEA             reduce using rule 120 (multi -> expo MOD multi .)
    OTRO            reduce using rule 120 (multi -> expo MOD multi .)
    INICIO          reduce using rule 120 (multi -> expo MOD multi .)
    LIMPIA          reduce using rule 120 (multi -> expo MOD multi .)
    INTERRUMPE      reduce using rule 120 (multi -> expo MOD multi .)
    CONTINUA        reduce using rule 120 (multi -> expo MOD multi .)
    SI              reduce using rule 120 (multi -> expo MOD multi .)
    IDENT           reduce using rule 120 (multi -> expo MOD multi .)
    DESDE           reduce using rule 120 (multi -> expo MOD multi .)
    REPETIR         reduce using rule 120 (multi -> expo MOD multi .)
    MIENTRAS        reduce using rule 120 (multi -> expo MOD multi .)
    CUANDO          reduce using rule 120 (multi -> expo MOD multi .)
    REGRESA         reduce using rule 120 (multi -> expo MOD multi .)
    IMPRIME         reduce using rule 120 (multi -> expo MOD multi .)
    IMPRIMENL       reduce using rule 120 (multi -> expo MOD multi .)
    LEE             reduce using rule 120 (multi -> expo MOD multi .)
    DECR            reduce using rule 120 (multi -> expo MOD multi .)
    INCR            reduce using rule 120 (multi -> expo MOD multi .)


state 204

    (123) expo -> signo POTENCIA expo .

    MULTI           reduce using rule 123 (expo -> signo POTENCIA expo .)
    DIV             reduce using rule 123 (expo -> signo POTENCIA expo .)
    MOD             reduce using rule 123 (expo -> signo POTENCIA expo .)
    MAS             reduce using rule 123 (expo -> signo POTENCIA expo .)
    MENOS           reduce using rule 123 (expo -> signo POTENCIA expo .)
    OP_REL          reduce using rule 123 (expo -> signo POTENCIA expo .)
    Y               reduce using rule 123 (expo -> signo POTENCIA expo .)
    O               reduce using rule 123 (expo -> signo POTENCIA expo .)
    CORCHETE_TERMINA reduce using rule 123 (expo -> signo POTENCIA expo .)
    error           reduce using rule 123 (expo -> signo POTENCIA expo .)
    COMA            reduce using rule 123 (expo -> signo POTENCIA expo .)
    PAREN_TERMINA   reduce using rule 123 (expo -> signo POTENCIA expo .)
    PUNTO_COMA      reduce using rule 123 (expo -> signo POTENCIA expo .)
    HASTA           reduce using rule 123 (expo -> signo POTENCIA expo .)
    SINO            reduce using rule 123 (expo -> signo POTENCIA expo .)
    FIN             reduce using rule 123 (expo -> signo POTENCIA expo .)
    SEA             reduce using rule 123 (expo -> signo POTENCIA expo .)
    OTRO            reduce using rule 123 (expo -> signo POTENCIA expo .)
    INICIO          reduce using rule 123 (expo -> signo POTENCIA expo .)
    LIMPIA          reduce using rule 123 (expo -> signo POTENCIA expo .)
    INTERRUMPE      reduce using rule 123 (expo -> signo POTENCIA expo .)
    CONTINUA        reduce using rule 123 (expo -> signo POTENCIA expo .)
    SI              reduce using rule 123 (expo -> signo POTENCIA expo .)
    IDENT           reduce using rule 123 (expo -> signo POTENCIA expo .)
    DESDE           reduce using rule 123 (expo -> signo POTENCIA expo .)
    REPETIR         reduce using rule 123 (expo -> signo POTENCIA expo .)
    MIENTRAS        reduce using rule 123 (expo -> signo POTENCIA expo .)
    CUANDO          reduce using rule 123 (expo -> signo POTENCIA expo .)
    REGRESA         reduce using rule 123 (expo -> signo POTENCIA expo .)
    IMPRIME         reduce using rule 123 (expo -> signo POTENCIA expo .)
    IMPRIMENL       reduce using rule 123 (expo -> signo POTENCIA expo .)
    LEE             reduce using rule 123 (expo -> signo POTENCIA expo .)
    DECR            reduce using rule 123 (expo -> signo POTENCIA expo .)
    INCR            reduce using rule 123 (expo -> signo POTENCIA expo .)


state 205

    (24) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 24 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    error           reduce using rule 24 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 24 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 24 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)


state 206

    (26) dimens -> CORCHETE_EMPIEZA valor error dimens .

    COMA            reduce using rule 26 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    error           reduce using rule 26 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    PUNTOS_DOBLES   reduce using rule 26 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    PAREN_TERMINA   reduce using rule 26 (dimens -> CORCHETE_EMPIEZA valor error dimens .)


state 207

    (104) udim -> CORCHETE_EMPIEZA expr . CORCHETE_TERMINA udim

    CORCHETE_TERMINA shift and go to state 237


state 208

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE . PROGRAMA PUNTO

    PROGRAMA        shift and go to state 238


state 209

    (63) block -> estatuto puntoc block .

    FIN             reduce using rule 63 (block -> estatuto puntoc block .)
    HASTA           reduce using rule 63 (block -> estatuto puntoc block .)


state 210

    (67) block -> estatuto error block .

    FIN             reduce using rule 67 (block -> estatuto error block .)
    HASTA           reduce using rule 67 (block -> estatuto error block .)


state 211

    (83) si -> SI PAREN_EMPIEZA exprlog . PAREN_TERMINA HACER bckesp sino

    PAREN_TERMINA   shift and go to state 239


state 212

    (94) asigna -> IDENT udim OP_ASIG . exprlog
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    HASTA           reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! HASTA           [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    exprlog                        shift and go to state 240
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 213

    (89) desde -> DESDE EL VALOR . DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> DESDE EL VALOR . DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> DESDE EL VALOR . DE asigna HASTA expr error bckesp

    DE              shift and go to state 241


state 214

    (92) repetir -> REPETIR block HASTA . QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    QUE             shift and go to state 242


state 215

    (93) mientras -> MIENTRAS SE CUMPLA . QUE exprlog bckesp

    QUE             shift and go to state 243


state 216

    (95) cuando -> CUANDO EL VALOR . DE IDENT INICIO gposea otro FIN

    DE              shift and go to state 244


state 217

    (103) regresa -> REGRESA PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 245


state 218

    (138) imprime -> IMPRIME PAREN_EMPIEZA gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 246


state 219

    (143) gpoexp -> exprlog .
    (144) gpoexp -> exprlog . COMA gpoexp

    PAREN_TERMINA   reduce using rule 143 (gpoexp -> exprlog .)
    error           reduce using rule 143 (gpoexp -> exprlog .)
    COMA            shift and go to state 247


state 220

    (139) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp . PAREN_TERMINA
    (140) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp . error

    PAREN_TERMINA   shift and go to state 248
    error           shift and go to state 249


state 221

    (141) lee -> LEE PAREN_EMPIEZA IDENT . PAREN_TERMINA
    (142) lee -> LEE PAREN_EMPIEZA IDENT . dimens PAREN_TERMINA
    (24) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (25) dimens -> .
    (26) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (27) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for PAREN_TERMINA resolved as shift
    PAREN_TERMINA   shift and go to state 250
    CORCHETE_EMPIEZA shift and go to state 37
    error           shift and go to state 135

  ! PAREN_TERMINA   [ reduce using rule 25 (dimens -> .) ]

    dimens                         shift and go to state 251

state 222

    (56) gpopars -> IDENT COMA . gpopars
    (56) gpopars -> . IDENT COMA gpopars
    (57) gpopars -> . IDENT

    IDENT           shift and go to state 175

    gpopars                        shift and go to state 252

state 223

    (61) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (147) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 147 (empty -> .)

    variables                      shift and go to state 253
    empty                          shift and go to state 7

state 224

    (50) params -> gpopars PUNTOS_DOBLES . TIPO otrospars
    (52) params -> gpopars PUNTOS_DOBLES . error otrospars

    TIPO            shift and go to state 254
    error           shift and go to state 255


state 225

    (53) params -> gpopars error . TIPO otrospars

    TIPO            shift and go to state 256


state 226

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 257


state 227

    (39) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 39 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    FUNCION         reduce using rule 39 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    PROGRAMA        reduce using rule 39 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)


state 228

    (45) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 258


state 229

    (46) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 259


state 230

    (47) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 260


state 231

    (48) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 261


state 232

    (15) gpoids2 -> IDENT dimens COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 15 (gpoids2 -> IDENT dimens COMA gpoids2 .)
    error           reduce using rule 15 (gpoids2 -> IDENT dimens COMA gpoids2 .)


state 233

    (16) gpoids2 -> IDENT opasig COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 16 (gpoids2 -> IDENT opasig COMA gpoids2 .)
    error           reduce using rule 16 (gpoids2 -> IDENT opasig COMA gpoids2 .)


state 234

    (135) lfunc -> IDENT parenemp uparams PAREN_TERMINA .

    POTENCIA        reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MULTI           reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DIV             reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MOD             reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MAS             reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MENOS           reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OP_REL          reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    Y               reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    O               reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CORCHETE_TERMINA reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    error           reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    COMA            reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    HASTA           reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SINO            reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    FIN             reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SEA             reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OTRO            reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INICIO          reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    LIMPIA          reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CONTINUA        reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SI              reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IDENT           reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DESDE           reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    REPETIR         reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MIENTRAS        reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CUANDO          reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    REGRESA         reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IMPRIME         reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    LEE             reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DECR            reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INCR            reduce using rule 135 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)


state 235

    (136) lfunc -> IDENT parenemp error PAREN_TERMINA .

    POTENCIA        reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MULTI           reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DIV             reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MOD             reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MAS             reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MENOS           reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OP_REL          reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    Y               reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    O               reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CORCHETE_TERMINA reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    error           reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    COMA            reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    HASTA           reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SINO            reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    FIN             reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SEA             reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OTRO            reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INICIO          reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    LIMPIA          reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CONTINUA        reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SI              reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IDENT           reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DESDE           reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    REPETIR         reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MIENTRAS        reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CUANDO          reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    REGRESA         reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IMPRIME         reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    LEE             reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DECR            reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INCR            reduce using rule 136 (lfunc -> IDENT parenemp error PAREN_TERMINA .)


state 236

    (146) uparams -> exprlog COMA . uparams
    (145) uparams -> . exprlog
    (146) uparams -> . exprlog COMA uparams
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    exprlog                        shift and go to state 193
    uparams                        shift and go to state 262
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 237

    (104) udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA . udim
    (104) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (105) udim -> . empty
    (147) empty -> .

    CORCHETE_EMPIEZA shift and go to state 157
    POTENCIA        reduce using rule 147 (empty -> .)
    MULTI           reduce using rule 147 (empty -> .)
    DIV             reduce using rule 147 (empty -> .)
    MOD             reduce using rule 147 (empty -> .)
    MAS             reduce using rule 147 (empty -> .)
    MENOS           reduce using rule 147 (empty -> .)
    OP_REL          reduce using rule 147 (empty -> .)
    Y               reduce using rule 147 (empty -> .)
    O               reduce using rule 147 (empty -> .)
    CORCHETE_TERMINA reduce using rule 147 (empty -> .)
    error           reduce using rule 147 (empty -> .)
    COMA            reduce using rule 147 (empty -> .)
    PAREN_TERMINA   reduce using rule 147 (empty -> .)
    PUNTO_COMA      reduce using rule 147 (empty -> .)
    HASTA           reduce using rule 147 (empty -> .)
    SINO            reduce using rule 147 (empty -> .)
    FIN             reduce using rule 147 (empty -> .)
    SEA             reduce using rule 147 (empty -> .)
    OTRO            reduce using rule 147 (empty -> .)
    INICIO          reduce using rule 147 (empty -> .)
    LIMPIA          reduce using rule 147 (empty -> .)
    INTERRUMPE      reduce using rule 147 (empty -> .)
    CONTINUA        reduce using rule 147 (empty -> .)
    SI              reduce using rule 147 (empty -> .)
    IDENT           reduce using rule 147 (empty -> .)
    DESDE           reduce using rule 147 (empty -> .)
    REPETIR         reduce using rule 147 (empty -> .)
    MIENTRAS        reduce using rule 147 (empty -> .)
    CUANDO          reduce using rule 147 (empty -> .)
    REGRESA         reduce using rule 147 (empty -> .)
    IMPRIME         reduce using rule 147 (empty -> .)
    IMPRIMENL       reduce using rule 147 (empty -> .)
    LEE             reduce using rule 147 (empty -> .)
    DECR            reduce using rule 147 (empty -> .)
    INCR            reduce using rule 147 (empty -> .)
    OP_ASIG         reduce using rule 147 (empty -> .)

    udim                           shift and go to state 263
    empty                          shift and go to state 158

state 238

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA . PUNTO

    PUNTO           shift and go to state 264


state 239

    (83) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA . HACER bckesp sino

    HACER           shift and go to state 265


state 240

    (94) asigna -> IDENT udim OP_ASIG exprlog .

    error           reduce using rule 94 (asigna -> IDENT udim OP_ASIG exprlog .)
    PUNTO_COMA      reduce using rule 94 (asigna -> IDENT udim OP_ASIG exprlog .)
    HASTA           reduce using rule 94 (asigna -> IDENT udim OP_ASIG exprlog .)
    SINO            reduce using rule 94 (asigna -> IDENT udim OP_ASIG exprlog .)
    FIN             reduce using rule 94 (asigna -> IDENT udim OP_ASIG exprlog .)
    SEA             reduce using rule 94 (asigna -> IDENT udim OP_ASIG exprlog .)
    OTRO            reduce using rule 94 (asigna -> IDENT udim OP_ASIG exprlog .)


state 241

    (89) desde -> DESDE EL VALOR DE . asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> DESDE EL VALOR DE . asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> DESDE EL VALOR DE . asigna HASTA expr error bckesp
    (94) asigna -> . IDENT udim OP_ASIG exprlog

    IDENT           shift and go to state 267

    asigna                         shift and go to state 266

state 242

    (92) repetir -> REPETIR block HASTA QUE . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 268


state 243

    (93) mientras -> MIENTRAS SE CUMPLA QUE . exprlog bckesp
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    INICIO          reduce using rule 132 (termino -> .)
    LIMPIA          reduce using rule 132 (termino -> .)
    INTERRUMPE      reduce using rule 132 (termino -> .)
    CONTINUA        reduce using rule 132 (termino -> .)
    SI              reduce using rule 132 (termino -> .)
    DESDE           reduce using rule 132 (termino -> .)
    REPETIR         reduce using rule 132 (termino -> .)
    MIENTRAS        reduce using rule 132 (termino -> .)
    CUANDO          reduce using rule 132 (termino -> .)
    REGRESA         reduce using rule 132 (termino -> .)
    IMPRIME         reduce using rule 132 (termino -> .)
    IMPRIMENL       reduce using rule 132 (termino -> .)
    LEE             reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)
    PUNTO_COMA      reduce using rule 132 (termino -> .)
    SINO            reduce using rule 132 (termino -> .)
    FIN             reduce using rule 132 (termino -> .)
    SEA             reduce using rule 132 (termino -> .)
    OTRO            reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! INICIO          [ reduce using rule 147 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 147 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 147 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 147 (empty -> .) ]
  ! SI              [ reduce using rule 147 (empty -> .) ]
  ! IDENT           [ reduce using rule 147 (empty -> .) ]
  ! DESDE           [ reduce using rule 147 (empty -> .) ]
  ! REPETIR         [ reduce using rule 147 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 147 (empty -> .) ]
  ! CUANDO          [ reduce using rule 147 (empty -> .) ]
  ! REGRESA         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 147 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 147 (empty -> .) ]
  ! LEE             [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]
  ! IDENT           [ reduce using rule 132 (termino -> .) ]

    exprlog                        shift and go to state 269
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 244

    (95) cuando -> CUANDO EL VALOR DE . IDENT INICIO gposea otro FIN

    IDENT           shift and go to state 270


state 245

    (103) regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .

    error           reduce using rule 103 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 103 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 103 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 103 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 103 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 103 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 246

    (138) imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    error           reduce using rule 138 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 138 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 138 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 138 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 138 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 138 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 247

    (144) gpoexp -> exprlog COMA . gpoexp
    (143) gpoexp -> . exprlog
    (144) gpoexp -> . exprlog COMA gpoexp
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    COMA            reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! COMA            [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    exprlog                        shift and go to state 219
    gpoexp                         shift and go to state 271
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 248

    (139) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    error           reduce using rule 139 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 139 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 139 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 139 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 139 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 139 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 249

    (140) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .

    error           reduce using rule 140 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    PUNTO_COMA      reduce using rule 140 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    SINO            reduce using rule 140 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    FIN             reduce using rule 140 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    SEA             reduce using rule 140 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    OTRO            reduce using rule 140 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)


state 250

    (141) lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .

    error           reduce using rule 141 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 141 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SINO            reduce using rule 141 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    FIN             reduce using rule 141 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SEA             reduce using rule 141 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    OTRO            reduce using rule 141 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)


state 251

    (142) lee -> LEE PAREN_EMPIEZA IDENT dimens . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 272


state 252

    (56) gpopars -> IDENT COMA gpopars .

    PUNTOS_DOBLES   reduce using rule 56 (gpopars -> IDENT COMA gpopars .)
    error           reduce using rule 56 (gpopars -> IDENT COMA gpopars .)


state 253

    (61) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables . INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    INICIO          shift and go to state 273


state 254

    (50) params -> gpopars PUNTOS_DOBLES TIPO . otrospars
    (54) otrospars -> . PUNTO_COMA params
    (55) otrospars -> . empty
    (147) empty -> .

    PUNTO_COMA      shift and go to state 275
    PAREN_TERMINA   reduce using rule 147 (empty -> .)

    otrospars                      shift and go to state 274
    empty                          shift and go to state 276

state 255

    (52) params -> gpopars PUNTOS_DOBLES error . otrospars
    (54) otrospars -> . PUNTO_COMA params
    (55) otrospars -> . empty
    (147) empty -> .

    PUNTO_COMA      shift and go to state 275
    PAREN_TERMINA   reduce using rule 147 (empty -> .)

    otrospars                      shift and go to state 277
    empty                          shift and go to state 276

state 256

    (53) params -> gpopars error TIPO . otrospars
    (54) otrospars -> . PUNTO_COMA params
    (55) otrospars -> . empty
    (147) empty -> .

    PUNTO_COMA      shift and go to state 275
    PAREN_TERMINA   reduce using rule 147 (empty -> .)

    otrospars                      shift and go to state 278
    empty                          shift and go to state 276

state 257

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    TIPO            shift and go to state 279


state 258

    (45) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 280


state 259

    (46) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 281


state 260

    (47) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    FUNCION         reduce using rule 47 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 47 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FIN             reduce using rule 47 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 261

    (48) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    FUNCION         reduce using rule 48 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 48 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FIN             reduce using rule 48 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 262

    (146) uparams -> exprlog COMA uparams .

    PAREN_TERMINA   reduce using rule 146 (uparams -> exprlog COMA uparams .)


state 263

    (104) udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .

    POTENCIA        reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MULTI           reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DIV             reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MOD             reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MAS             reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MENOS           reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OP_REL          reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    Y               reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    O               reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CORCHETE_TERMINA reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    error           reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    COMA            reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    PAREN_TERMINA   reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    PUNTO_COMA      reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    HASTA           reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SINO            reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    FIN             reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SEA             reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OTRO            reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INICIO          reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    LIMPIA          reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INTERRUMPE      reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CONTINUA        reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SI              reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IDENT           reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DESDE           reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    REPETIR         reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MIENTRAS        reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CUANDO          reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    REGRESA         reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IMPRIME         reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IMPRIMENL       reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    LEE             reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DECR            reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INCR            reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OP_ASIG         reduce using rule 104 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)


state 264

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO .

    $end            reduce using rule 1 (program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO .)


state 265

    (83) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER . bckesp sino
    (86) bckesp -> . estatuto
    (87) bckesp -> . INICIO block FIN
    (88) bckesp -> .
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 88 (bckesp -> .)
    INICIO          shift and go to state 284
    SINO            reduce using rule 88 (bckesp -> .)
    error           reduce using rule 88 (bckesp -> .)
    PUNTO_COMA      reduce using rule 88 (bckesp -> .)
    FIN             reduce using rule 88 (bckesp -> .)
    SEA             reduce using rule 88 (bckesp -> .)
    OTRO            reduce using rule 88 (bckesp -> .)
    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118

  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]

    bckesp                         shift and go to state 282
    estatuto                       shift and go to state 283
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 266

    (89) desde -> DESDE EL VALOR DE asigna . HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> DESDE EL VALOR DE asigna . HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> DESDE EL VALOR DE asigna . HASTA expr error bckesp

    HASTA           shift and go to state 285


state 267

    (94) asigna -> IDENT . udim OP_ASIG exprlog
    (104) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (105) udim -> . empty
    (147) empty -> .

    CORCHETE_EMPIEZA shift and go to state 157
    OP_ASIG         reduce using rule 147 (empty -> .)

    udim                           shift and go to state 166
    empty                          shift and go to state 158

state 268

    (92) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (106) exprlog -> . opy
    (107) exprlog -> . opy O exprlog
    (108) opy -> . opno
    (109) opy -> . opno Y opy
    (110) opno -> . oprel
    (111) opno -> . NO oprel
    (112) oprel -> . expr
    (113) oprel -> . expr OP_REL oprel
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> .)
    NO              shift and go to state 72
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    OP_REL          reduce using rule 132 (termino -> .)
    Y               reduce using rule 132 (termino -> .)
    O               reduce using rule 132 (termino -> .)
    PAREN_TERMINA   reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! OP_REL          [ reduce using rule 147 (empty -> .) ]
  ! Y               [ reduce using rule 147 (empty -> .) ]
  ! O               [ reduce using rule 147 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    exprlog                        shift and go to state 286
    opy                            shift and go to state 69
    opno                           shift and go to state 70
    oprel                          shift and go to state 71
    expr                           shift and go to state 73
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 269

    (93) mientras -> MIENTRAS SE CUMPLA QUE exprlog . bckesp
    (86) bckesp -> . estatuto
    (87) bckesp -> . INICIO block FIN
    (88) bckesp -> .
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 88 (bckesp -> .)
    INICIO          shift and go to state 284
    SINO            reduce using rule 88 (bckesp -> .)
    error           reduce using rule 88 (bckesp -> .)
    PUNTO_COMA      reduce using rule 88 (bckesp -> .)
    FIN             reduce using rule 88 (bckesp -> .)
    SEA             reduce using rule 88 (bckesp -> .)
    OTRO            reduce using rule 88 (bckesp -> .)
    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118

  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]

    bckesp                         shift and go to state 287
    estatuto                       shift and go to state 283
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 270

    (95) cuando -> CUANDO EL VALOR DE IDENT . INICIO gposea otro FIN

    INICIO          shift and go to state 288


state 271

    (144) gpoexp -> exprlog COMA gpoexp .

    PAREN_TERMINA   reduce using rule 144 (gpoexp -> exprlog COMA gpoexp .)
    error           reduce using rule 144 (gpoexp -> exprlog COMA gpoexp .)


state 272

    (142) lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .

    error           reduce using rule 142 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 142 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SINO            reduce using rule 142 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    FIN             reduce using rule 142 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SEA             reduce using rule 142 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    OTRO            reduce using rule 142 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)


state 273

    (61) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO . block FIN DE PROCEDIMIENTO PUNTO_COMA
    (63) block -> . estatuto puntoc block
    (64) block -> . estatuto puntoc
    (66) block -> . estatuto error
    (67) block -> . estatuto error block
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118
    error           reduce using rule 147 (empty -> .)
    PUNTO_COMA      reduce using rule 147 (empty -> .)

    block                          shift and go to state 289
    estatuto                       shift and go to state 93
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 274

    (50) params -> gpopars PUNTOS_DOBLES TIPO otrospars .

    PAREN_TERMINA   reduce using rule 50 (params -> gpopars PUNTOS_DOBLES TIPO otrospars .)


state 275

    (54) otrospars -> PUNTO_COMA . params
    (50) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (51) params -> . empty
    (52) params -> . gpopars PUNTOS_DOBLES error otrospars
    (53) params -> . gpopars error TIPO otrospars
    (56) gpopars -> . IDENT COMA gpopars
    (57) gpopars -> . IDENT
    (147) empty -> .

    IDENT           shift and go to state 175
    PAREN_TERMINA   reduce using rule 147 (empty -> .)

    params                         shift and go to state 290
    gpopars                        shift and go to state 177
    empty                          shift and go to state 178

state 276

    (55) otrospars -> empty .

    PAREN_TERMINA   reduce using rule 55 (otrospars -> empty .)


state 277

    (52) params -> gpopars PUNTOS_DOBLES error otrospars .

    PAREN_TERMINA   reduce using rule 52 (params -> gpopars PUNTOS_DOBLES error otrospars .)


state 278

    (53) params -> gpopars error TIPO otrospars .

    PAREN_TERMINA   reduce using rule 53 (params -> gpopars error TIPO otrospars .)


state 279

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . variables INICIO block FIN DE FUNCION PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (147) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 147 (empty -> .)

    variables                      shift and go to state 291
    empty                          shift and go to state 7

state 280

    (45) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 292


state 281

    (46) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 293


state 282

    (83) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp . sino
    (84) sino -> . SINO bckesp
    (85) sino -> . empty
    (147) empty -> .

  ! shift/reduce conflict for SINO resolved as shift
    SINO            shift and go to state 295
    error           reduce using rule 147 (empty -> .)
    PUNTO_COMA      reduce using rule 147 (empty -> .)
    FIN             reduce using rule 147 (empty -> .)
    SEA             reduce using rule 147 (empty -> .)
    OTRO            reduce using rule 147 (empty -> .)

  ! SINO            [ reduce using rule 147 (empty -> .) ]

    sino                           shift and go to state 294
    empty                          shift and go to state 296

state 283

    (86) bckesp -> estatuto .

    SINO            reduce using rule 86 (bckesp -> estatuto .)
    error           reduce using rule 86 (bckesp -> estatuto .)
    PUNTO_COMA      reduce using rule 86 (bckesp -> estatuto .)
    FIN             reduce using rule 86 (bckesp -> estatuto .)
    SEA             reduce using rule 86 (bckesp -> estatuto .)
    OTRO            reduce using rule 86 (bckesp -> estatuto .)


state 284

    (87) bckesp -> INICIO . block FIN
    (63) block -> . estatuto puntoc block
    (64) block -> . estatuto puntoc
    (66) block -> . estatuto error
    (67) block -> . estatuto error block
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118
    error           reduce using rule 147 (empty -> .)
    PUNTO_COMA      reduce using rule 147 (empty -> .)

    block                          shift and go to state 297
    estatuto                       shift and go to state 93
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 285

    (89) desde -> DESDE EL VALOR DE asigna HASTA . expr DECR CTE_ENTERA bckesp
    (90) desde -> DESDE EL VALOR DE asigna HASTA . expr INCR CTE_ENTERA bckesp
    (91) desde -> DESDE EL VALOR DE asigna HASTA . expr error bckesp
    (114) expr -> . multi
    (115) expr -> . multi MAS expr
    (116) expr -> . multi MENOS expr
    (117) multi -> . expo
    (118) multi -> . expo MULTI multi
    (119) multi -> . expo DIV multi
    (120) multi -> . expo MOD multi
    (121) multi -> . empty
    (122) expo -> . signo
    (123) expo -> . signo POTENCIA expo
    (147) empty -> .
    (124) signo -> . termino
    (125) signo -> . MENOS termino
    (126) termino -> . IDENT
    (127) termino -> . CTE_ENTERA
    (128) termino -> . CTE_REAL
    (129) termino -> . CTE_ALFA
    (130) termino -> . VERDADERO
    (131) termino -> . FALSO
    (132) termino -> .
    (133) termino -> . IDENT udim
    (134) termino -> . lfunc
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for DECR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 132 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> .)
    MENOS           shift and go to state 75
    IDENT           shift and go to state 87
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83
    POTENCIA        reduce using rule 132 (termino -> .)
    MULTI           reduce using rule 132 (termino -> .)
    DIV             reduce using rule 132 (termino -> .)
    MOD             reduce using rule 132 (termino -> .)
    MAS             reduce using rule 132 (termino -> .)
    DECR            reduce using rule 132 (termino -> .)
    INCR            reduce using rule 132 (termino -> .)
    error           reduce using rule 132 (termino -> .)

  ! MAS             [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 147 (empty -> .) ]
  ! DECR            [ reduce using rule 147 (empty -> .) ]
  ! INCR            [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! MENOS           [ reduce using rule 132 (termino -> .) ]

    expr                           shift and go to state 298
    multi                          shift and go to state 74
    expo                           shift and go to state 76
    empty                          shift and go to state 86
    signo                          shift and go to state 77
    termino                        shift and go to state 78
    lfunc                          shift and go to state 84

state 286

    (92) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 299


state 287

    (93) mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .

    error           reduce using rule 93 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    PUNTO_COMA      reduce using rule 93 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SINO            reduce using rule 93 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    FIN             reduce using rule 93 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SEA             reduce using rule 93 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    OTRO            reduce using rule 93 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)


state 288

    (95) cuando -> CUANDO EL VALOR DE IDENT INICIO . gposea otro FIN
    (98) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (99) gposea -> . empty
    (147) empty -> .

    SEA             shift and go to state 301
    OTRO            reduce using rule 147 (empty -> .)
    FIN             reduce using rule 147 (empty -> .)

    gposea                         shift and go to state 300
    empty                          shift and go to state 302

state 289

    (61) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block . FIN DE PROCEDIMIENTO PUNTO_COMA

    FIN             shift and go to state 303


state 290

    (54) otrospars -> PUNTO_COMA params .

    PAREN_TERMINA   reduce using rule 54 (otrospars -> PUNTO_COMA params .)


state 291

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables . INICIO block FIN DE FUNCION PUNTO_COMA

    INICIO          shift and go to state 304


state 292

    (45) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    FUNCION         reduce using rule 45 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 45 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FIN             reduce using rule 45 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 293

    (46) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    FUNCION         reduce using rule 46 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 46 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FIN             reduce using rule 46 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 294

    (83) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .

    error           reduce using rule 83 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    PUNTO_COMA      reduce using rule 83 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SINO            reduce using rule 83 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    FIN             reduce using rule 83 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SEA             reduce using rule 83 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    OTRO            reduce using rule 83 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)


state 295

    (84) sino -> SINO . bckesp
    (86) bckesp -> . estatuto
    (87) bckesp -> . INICIO block FIN
    (88) bckesp -> .
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 88 (bckesp -> .)
    INICIO          shift and go to state 284
    SINO            reduce using rule 88 (bckesp -> .)
    error           reduce using rule 88 (bckesp -> .)
    PUNTO_COMA      reduce using rule 88 (bckesp -> .)
    FIN             reduce using rule 88 (bckesp -> .)
    SEA             reduce using rule 88 (bckesp -> .)
    OTRO            reduce using rule 88 (bckesp -> .)
    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118

  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]

    bckesp                         shift and go to state 305
    estatuto                       shift and go to state 283
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 296

    (85) sino -> empty .

    SINO            reduce using rule 85 (sino -> empty .)
    error           reduce using rule 85 (sino -> empty .)
    PUNTO_COMA      reduce using rule 85 (sino -> empty .)
    FIN             reduce using rule 85 (sino -> empty .)
    SEA             reduce using rule 85 (sino -> empty .)
    OTRO            reduce using rule 85 (sino -> empty .)


state 297

    (87) bckesp -> INICIO block . FIN

    FIN             shift and go to state 306


state 298

    (89) desde -> DESDE EL VALOR DE asigna HASTA expr . DECR CTE_ENTERA bckesp
    (90) desde -> DESDE EL VALOR DE asigna HASTA expr . INCR CTE_ENTERA bckesp
    (91) desde -> DESDE EL VALOR DE asigna HASTA expr . error bckesp

    DECR            shift and go to state 307
    INCR            shift and go to state 308
    error           shift and go to state 309


state 299

    (92) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .

    error           reduce using rule 92 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 92 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 92 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 92 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 92 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 92 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 300

    (95) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea . otro FIN
    (96) otro -> . OTRO PUNTOS_DOBLES bckesp
    (97) otro -> . empty
    (147) empty -> .

    OTRO            shift and go to state 311
    FIN             reduce using rule 147 (empty -> .)

    otro                           shift and go to state 310
    empty                          shift and go to state 312

state 301

    (98) gposea -> SEA . gpoconst PUNTOS_DOBLES bckesp gposea
    (100) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 314

    gpoconst                       shift and go to state 313

state 302

    (99) gposea -> empty .

    OTRO            reduce using rule 99 (gposea -> empty .)
    FIN             reduce using rule 99 (gposea -> empty .)


state 303

    (61) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN . DE PROCEDIMIENTO PUNTO_COMA

    DE              shift and go to state 315


state 304

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO . block FIN DE FUNCION PUNTO_COMA
    (63) block -> . estatuto puntoc block
    (64) block -> . estatuto puntoc
    (66) block -> . estatuto error
    (67) block -> . estatuto error block
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118
    error           reduce using rule 147 (empty -> .)
    PUNTO_COMA      reduce using rule 147 (empty -> .)

    block                          shift and go to state 316
    estatuto                       shift and go to state 93
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 305

    (84) sino -> SINO bckesp .

    SINO            reduce using rule 84 (sino -> SINO bckesp .)
    error           reduce using rule 84 (sino -> SINO bckesp .)
    PUNTO_COMA      reduce using rule 84 (sino -> SINO bckesp .)
    FIN             reduce using rule 84 (sino -> SINO bckesp .)
    SEA             reduce using rule 84 (sino -> SINO bckesp .)
    OTRO            reduce using rule 84 (sino -> SINO bckesp .)


state 306

    (87) bckesp -> INICIO block FIN .

    SINO            reduce using rule 87 (bckesp -> INICIO block FIN .)
    error           reduce using rule 87 (bckesp -> INICIO block FIN .)
    PUNTO_COMA      reduce using rule 87 (bckesp -> INICIO block FIN .)
    FIN             reduce using rule 87 (bckesp -> INICIO block FIN .)
    SEA             reduce using rule 87 (bckesp -> INICIO block FIN .)
    OTRO            reduce using rule 87 (bckesp -> INICIO block FIN .)


state 307

    (89) desde -> DESDE EL VALOR DE asigna HASTA expr DECR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 317


state 308

    (90) desde -> DESDE EL VALOR DE asigna HASTA expr INCR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 318


state 309

    (91) desde -> DESDE EL VALOR DE asigna HASTA expr error . bckesp
    (86) bckesp -> . estatuto
    (87) bckesp -> . INICIO block FIN
    (88) bckesp -> .
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 88 (bckesp -> .)
    INICIO          shift and go to state 284
    SINO            reduce using rule 88 (bckesp -> .)
    error           reduce using rule 88 (bckesp -> .)
    PUNTO_COMA      reduce using rule 88 (bckesp -> .)
    FIN             reduce using rule 88 (bckesp -> .)
    SEA             reduce using rule 88 (bckesp -> .)
    OTRO            reduce using rule 88 (bckesp -> .)
    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118

  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]

    asigna                         shift and go to state 102
    bckesp                         shift and go to state 319
    estatuto                       shift and go to state 283
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 310

    (95) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro . FIN

    FIN             shift and go to state 320


state 311

    (96) otro -> OTRO . PUNTOS_DOBLES bckesp

    PUNTOS_DOBLES   shift and go to state 321


state 312

    (97) otro -> empty .

    FIN             reduce using rule 97 (otro -> empty .)


state 313

    (98) gposea -> SEA gpoconst . PUNTOS_DOBLES bckesp gposea

    PUNTOS_DOBLES   shift and go to state 322


state 314

    (100) gpoconst -> CTE_ALFA . masgpoconst
    (101) masgpoconst -> . COMA gpoconst
    (102) masgpoconst -> . empty
    (147) empty -> .

    COMA            shift and go to state 324
    PUNTOS_DOBLES   reduce using rule 147 (empty -> .)

    masgpoconst                    shift and go to state 323
    empty                          shift and go to state 325

state 315

    (61) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE . PROCEDIMIENTO PUNTO_COMA

    PROCEDIMIENTO   shift and go to state 326


state 316

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block . FIN DE FUNCION PUNTO_COMA

    FIN             shift and go to state 327


state 317

    (89) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA . bckesp
    (86) bckesp -> . estatuto
    (87) bckesp -> . INICIO block FIN
    (88) bckesp -> .
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 88 (bckesp -> .)
    INICIO          shift and go to state 284
    SINO            reduce using rule 88 (bckesp -> .)
    error           reduce using rule 88 (bckesp -> .)
    PUNTO_COMA      reduce using rule 88 (bckesp -> .)
    FIN             reduce using rule 88 (bckesp -> .)
    SEA             reduce using rule 88 (bckesp -> .)
    OTRO            reduce using rule 88 (bckesp -> .)
    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118

  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]

    asigna                         shift and go to state 102
    bckesp                         shift and go to state 328
    estatuto                       shift and go to state 283
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 318

    (90) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA . bckesp
    (86) bckesp -> . estatuto
    (87) bckesp -> . INICIO block FIN
    (88) bckesp -> .
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 88 (bckesp -> .)
    INICIO          shift and go to state 284
    SINO            reduce using rule 88 (bckesp -> .)
    error           reduce using rule 88 (bckesp -> .)
    PUNTO_COMA      reduce using rule 88 (bckesp -> .)
    FIN             reduce using rule 88 (bckesp -> .)
    SEA             reduce using rule 88 (bckesp -> .)
    OTRO            reduce using rule 88 (bckesp -> .)
    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118

  ! SINO            [ reduce using rule 147 (empty -> .) ]
  ! error           [ reduce using rule 147 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]
  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]

    asigna                         shift and go to state 102
    bckesp                         shift and go to state 329
    estatuto                       shift and go to state 283
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 319

    (91) desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .

    error           reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    PUNTO_COMA      reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    SINO            reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    FIN             reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    SEA             reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    OTRO            reduce using rule 91 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)


state 320

    (95) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .

    error           reduce using rule 95 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    PUNTO_COMA      reduce using rule 95 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SINO            reduce using rule 95 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    FIN             reduce using rule 95 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SEA             reduce using rule 95 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    OTRO            reduce using rule 95 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)


state 321

    (96) otro -> OTRO PUNTOS_DOBLES . bckesp
    (86) bckesp -> . estatuto
    (87) bckesp -> . INICIO block FIN
    (88) bckesp -> .
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 88 (bckesp -> .)
    INICIO          shift and go to state 284
    FIN             reduce using rule 88 (bckesp -> .)
    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118

  ! FIN             [ reduce using rule 147 (empty -> .) ]

    bckesp                         shift and go to state 330
    estatuto                       shift and go to state 283
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 322

    (98) gposea -> SEA gpoconst PUNTOS_DOBLES . bckesp gposea
    (86) bckesp -> . estatuto
    (87) bckesp -> . INICIO block FIN
    (88) bckesp -> .
    (68) estatuto -> . si
    (69) estatuto -> . lfunc
    (70) estatuto -> . LIMPIA
    (71) estatuto -> . desde
    (72) estatuto -> . repetir
    (73) estatuto -> . mientras
    (74) estatuto -> . cuando
    (75) estatuto -> . regresa
    (76) estatuto -> . asigna
    (77) estatuto -> . imprime
    (78) estatuto -> . imprimenl
    (79) estatuto -> . lee
    (80) estatuto -> . INTERRUMPE
    (81) estatuto -> . CONTINUA
    (82) estatuto -> . empty
    (83) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (135) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (136) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (89) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (90) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (91) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (92) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (93) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (95) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (103) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (94) asigna -> . IDENT udim OP_ASIG exprlog
    (138) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (139) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (140) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (141) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (142) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (147) empty -> .

  ! reduce/reduce conflict for SEA resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 88 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 88 (bckesp -> .)
    INICIO          shift and go to state 284
    SEA             reduce using rule 88 (bckesp -> .)
    OTRO            reduce using rule 88 (bckesp -> .)
    FIN             reduce using rule 88 (bckesp -> .)
    LIMPIA          shift and go to state 96
    INTERRUMPE      shift and go to state 106
    CONTINUA        shift and go to state 107
    SI              shift and go to state 109
    IDENT           shift and go to state 110
    DESDE           shift and go to state 111
    REPETIR         shift and go to state 112
    MIENTRAS        shift and go to state 113
    CUANDO          shift and go to state 114
    REGRESA         shift and go to state 115
    IMPRIME         shift and go to state 116
    IMPRIMENL       shift and go to state 117
    LEE             shift and go to state 118

  ! SEA             [ reduce using rule 147 (empty -> .) ]
  ! OTRO            [ reduce using rule 147 (empty -> .) ]
  ! FIN             [ reduce using rule 147 (empty -> .) ]

    bckesp                         shift and go to state 331
    estatuto                       shift and go to state 283
    si                             shift and go to state 94
    lfunc                          shift and go to state 95
    desde                          shift and go to state 97
    repetir                        shift and go to state 98
    mientras                       shift and go to state 99
    cuando                         shift and go to state 100
    regresa                        shift and go to state 101
    asigna                         shift and go to state 102
    imprime                        shift and go to state 103
    imprimenl                      shift and go to state 104
    lee                            shift and go to state 105
    empty                          shift and go to state 108

state 323

    (100) gpoconst -> CTE_ALFA masgpoconst .

    PUNTOS_DOBLES   reduce using rule 100 (gpoconst -> CTE_ALFA masgpoconst .)


state 324

    (101) masgpoconst -> COMA . gpoconst
    (100) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 314

    gpoconst                       shift and go to state 332

state 325

    (102) masgpoconst -> empty .

    PUNTOS_DOBLES   reduce using rule 102 (masgpoconst -> empty .)


state 326

    (61) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 333


state 327

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN . DE FUNCION PUNTO_COMA

    DE              shift and go to state 334


state 328

    (89) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .

    error           reduce using rule 89 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    PUNTO_COMA      reduce using rule 89 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SINO            reduce using rule 89 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    FIN             reduce using rule 89 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SEA             reduce using rule 89 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 89 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)


state 329

    (90) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .

    error           reduce using rule 90 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    PUNTO_COMA      reduce using rule 90 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SINO            reduce using rule 90 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    FIN             reduce using rule 90 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SEA             reduce using rule 90 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 90 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)


state 330

    (96) otro -> OTRO PUNTOS_DOBLES bckesp .

    FIN             reduce using rule 96 (otro -> OTRO PUNTOS_DOBLES bckesp .)


state 331

    (98) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp . gposea
    (98) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (99) gposea -> . empty
    (147) empty -> .

    SEA             shift and go to state 301
    OTRO            reduce using rule 147 (empty -> .)
    FIN             reduce using rule 147 (empty -> .)

    gposea                         shift and go to state 335
    empty                          shift and go to state 302

state 332

    (101) masgpoconst -> COMA gpoconst .

    PUNTOS_DOBLES   reduce using rule 101 (masgpoconst -> COMA gpoconst .)


state 333

    (61) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 61 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    FUNCION         reduce using rule 61 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    PROGRAMA        reduce using rule 61 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)


state 334

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE . FUNCION PUNTO_COMA

    FUNCION         shift and go to state 336


state 335

    (98) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .

    OTRO            reduce using rule 98 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)
    FIN             reduce using rule 98 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)


state 336

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION . PUNTO_COMA

    PUNTO_COMA      shift and go to state 337


state 337

    (62) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 62 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    FUNCION         reduce using rule 62 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    PROGRAMA        reduce using rule 62 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 12 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 12 resolved as shift
WARNING: shift/reduce conflict for COMA in state 17 resolved as shift
WARNING: shift/reduce conflict for error in state 17 resolved as shift
WARNING: shift/reduce conflict for COMA in state 17 resolved as shift
WARNING: shift/reduce conflict for error in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 26 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 26 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 27 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 27 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 36 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 36 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 37 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 37 resolved as shift
WARNING: shift/reduce conflict for COMA in state 59 resolved as shift
WARNING: shift/reduce conflict for error in state 59 resolved as shift
WARNING: shift/reduce conflict for COMA in state 59 resolved as shift
WARNING: shift/reduce conflict for COMA in state 64 resolved as shift
WARNING: shift/reduce conflict for error in state 64 resolved as shift
WARNING: shift/reduce conflict for COMA in state 64 resolved as shift
WARNING: shift/reduce conflict for error in state 64 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 72 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 72 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 72 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 72 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 75 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 135 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 135 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 139 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 139 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 140 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 140 resolved as shift
WARNING: shift/reduce conflict for error in state 143 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 144 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 144 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 144 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 144 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 145 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 145 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 145 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 145 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 147 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 147 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 147 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 147 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 148 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 148 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 148 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 148 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 149 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 149 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 149 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 149 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 151 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 151 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 151 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 151 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 152 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 152 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 152 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 152 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 153 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 153 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 153 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 153 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 154 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 154 resolved as shift
WARNING: shift/reduce conflict for error in state 155 resolved as shift
WARNING: shift/reduce conflict for error in state 156 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 157 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 157 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 165 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 165 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 171 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 171 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 172 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 172 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 173 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 173 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_TERMINA in state 194 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 212 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 212 resolved as shift
WARNING: shift/reduce conflict for PAREN_TERMINA in state 221 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 236 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 236 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 243 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 243 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 243 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 243 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 247 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 247 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 268 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 268 resolved as shift
WARNING: shift/reduce conflict for SINO in state 282 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 285 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 285 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (gpofuncproc -> protfunc)
WARNING: rejected rule (empty -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (gpofuncproc -> protproc)
WARNING: rejected rule (empty -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 36 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 36
WARNING: reduce/reduce conflict in state 37 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 37
WARNING: reduce/reduce conflict in state 64 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 72 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 72
WARNING: reduce/reduce conflict in state 87 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 87
WARNING: reduce/reduce conflict in state 90 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 90
WARNING: reduce/reduce conflict in state 91 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 91
WARNING: reduce/reduce conflict in state 126 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 126
WARNING: reduce/reduce conflict in state 127 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 127
WARNING: reduce/reduce conflict in state 128 resolved using rule (gpovars -> gpoids error TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 128
WARNING: reduce/reduce conflict in state 135 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 135
WARNING: reduce/reduce conflict in state 139 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 139
WARNING: reduce/reduce conflict in state 140 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 140
WARNING: reduce/reduce conflict in state 144 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 144
WARNING: reduce/reduce conflict in state 145 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 147 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 147
WARNING: reduce/reduce conflict in state 148 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 148
WARNING: reduce/reduce conflict in state 149 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 149
WARNING: reduce/reduce conflict in state 151 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 151
WARNING: reduce/reduce conflict in state 152 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 152
WARNING: reduce/reduce conflict in state 153 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 157 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 157
WARNING: reduce/reduce conflict in state 165 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 165
WARNING: reduce/reduce conflict in state 171 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 171
WARNING: reduce/reduce conflict in state 172 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 172
WARNING: reduce/reduce conflict in state 173 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 173
WARNING: reduce/reduce conflict in state 212 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 212
WARNING: reduce/reduce conflict in state 236 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 236
WARNING: reduce/reduce conflict in state 243 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 243
WARNING: reduce/reduce conflict in state 247 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 247
WARNING: reduce/reduce conflict in state 265 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 265
WARNING: reduce/reduce conflict in state 268 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 268
WARNING: reduce/reduce conflict in state 269 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 269
WARNING: reduce/reduce conflict in state 285 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 285
WARNING: reduce/reduce conflict in state 295 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 295
WARNING: reduce/reduce conflict in state 309 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 309
WARNING: reduce/reduce conflict in state 317 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 317
WARNING: reduce/reduce conflict in state 318 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 318
WARNING: reduce/reduce conflict in state 321 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 321
WARNING: reduce/reduce conflict in state 322 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 322
