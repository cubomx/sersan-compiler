Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CTE_ENTERA_NON_NUM
    CTE_REAL_ENDING_BAD
    CTE_REAL_NON_NUM
    OP_ARIT
    OP_LOG
    PAL_RES
    PUNTO

Grammar

Rule 0     S' -> program
Rule 1     program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
Rule 2     variables -> VARIABLES gpovars
Rule 3     variables -> empty
Rule 4     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
Rule 5     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 6     gpovars -> empty
Rule 7     gpoids -> IDENT dimens COMA gpoids
Rule 8     gpoids -> IDENT dimens
Rule 9     gpoids -> IDENT opasig COMA gpoids
Rule 10    gpoids -> IDENT COMA gpoids
Rule 11    gpoids -> empty
Rule 12    dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
Rule 13    dimens -> empty
Rule 14    opasig -> OP_ASIG CTE_ENTERA
Rule 15    opasig -> OP_ASIG IDENT
Rule 16    opasig -> empty
Rule 17    valor -> CTE_ENTERA
Rule 18    valor -> IDENT
Rule 19    constantes -> CONSTANTES grupoconst
Rule 20    constantes -> empty
Rule 21    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA
Rule 22    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
Rule 23    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
Rule 24    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
Rule 25    grupoconst -> empty
Rule 26    protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
Rule 27    protfuncproc -> empty
Rule 28    gpofuncproc -> protfunc
Rule 29    gpofuncproc -> protproc
Rule 30    gpofuncproc -> protproc gpofuncproc
Rule 31    gpofuncproc -> protfunc gpofuncproc
Rule 32    protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 33    protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 34    protproc -> empty
Rule 35    params -> gpopars PUNTOS_DOBLES TIPO otrospars
Rule 36    params -> empty
Rule 37    otrospars -> PUNTO_COMA params
Rule 38    otrospars -> empty
Rule 39    gpopars -> IDENT maspars
Rule 40    maspars -> COMA gpopars
Rule 41    maspars -> empty
Rule 42    funcproc -> procedimiento funcproc
Rule 43    funcproc -> funcion funcproc
Rule 44    funcproc -> empty
Rule 45    procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
Rule 46    funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
Rule 47    block -> estatuto PUNTO_COMA block
Rule 48    block -> empty
Rule 49    estatuto -> si
Rule 50    estatuto -> LIMPIA
Rule 51    estatuto -> desde
Rule 52    estatuto -> repetir
Rule 53    estatuto -> mientras
Rule 54    estatuto -> cuando
Rule 55    estatuto -> regresa
Rule 56    estatuto -> asigna
Rule 57    estatuto -> lproc
Rule 58    estatuto -> imprime
Rule 59    estatuto -> imprimenl
Rule 60    estatuto -> lee
Rule 61    estatuto -> INTERRUMPE
Rule 62    estatuto -> CONTINUA
Rule 63    estatuto -> empty
Rule 64    si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
Rule 65    sino -> SINO bckesp
Rule 66    sino -> empty
Rule 67    bckesp -> estatuto
Rule 68    bckesp -> INICIO block FIN
Rule 69    bckesp -> empty
Rule 70    desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
Rule 71    desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
Rule 72    repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 73    mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp
Rule 74    asigna -> IDENT udim OP_ASIG exprlog
Rule 75    cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
Rule 76    otro -> OTRO PUNTOS_DOBLES bckesp
Rule 77    otro -> empty
Rule 78    gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea
Rule 79    gposea -> empty
Rule 80    gpoconst -> CTE_ALFA masgpoconst
Rule 81    masgpoconst -> COMA gpoconst
Rule 82    masgpoconst -> empty
Rule 83    regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 84    udim -> expr udim
Rule 85    udim -> empty
Rule 86    exprlog -> opy o
Rule 87    o -> O exprlog
Rule 88    o -> empty
Rule 89    opy -> opno
Rule 90    opy -> opno Y opy
Rule 91    opno -> oprel
Rule 92    opno -> NO oprel
Rule 93    oprel -> expr
Rule 94    oprel -> expr OP_REL oprel
Rule 95    expr -> multi
Rule 96    expr -> MAS expr
Rule 97    expr -> MENOS expr
Rule 98    multi -> expo
Rule 99    multi -> expo MULTI multi
Rule 100   multi -> expo DIV multi
Rule 101   multi -> expo MOD multi
Rule 102   multi -> empty
Rule 103   expo -> signo
Rule 104   expo -> signo POTENCIA expo
Rule 105   signo -> termino
Rule 106   signo -> MENOS termino
Rule 107   termino -> IDENT
Rule 108   termino -> IDENT lfunc
Rule 109   termino -> IDENT udim
Rule 110   termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 111   termino -> CTE_ENTERA
Rule 112   termino -> CTE_REAL
Rule 113   termino -> CTE_ALFA
Rule 114   termino -> VERDADERO
Rule 115   termino -> FALSO
Rule 116   lproc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
Rule 117   lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
Rule 118   imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 119   imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 120   lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
Rule 121   lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
Rule 122   gpoexp -> exprlog
Rule 123   gpoexp -> exprlog COMA gpoexp
Rule 124   uparams -> exprlog
Rule 125   uparams -> exprlog COMA uparams
Rule 126   uparams -> empty
Rule 127   empty -> <empty>

Terminals, with rules where they appear

COMA                 : 7 9 10 40 81 123 125
COMMENT              : 
CONSTANTES           : 19
CONTINUA             : 62
CORCHETE_EMPIEZA     : 12
CORCHETE_TERMINA     : 12
CTE_ALFA             : 80 113
CTE_ENTERA           : 14 17 22 24 70 71 111
CTE_ENTERA_NON_NUM   : 
CTE_REAL             : 21 23 112
CTE_REAL_ENDING_BAD  : 
CTE_REAL_NON_NUM     : 
CUANDO               : 75
CUMPLA               : 73
DE                   : 1 26 45 46 70 71 75
DECR                 : 71
DESDE                : 70 71
DIV                  : 100
EL                   : 70 71 75
FALSO                : 115
FIN                  : 1 26 45 46 68 75
FUNCION              : 32 46 46
HACER                : 64
HASTA                : 70 71 72
IDENT                : 7 8 9 10 15 18 21 22 23 24 32 33 39 45 46 74 75 107 108 109 116 117 120 121
IMPRIME              : 118
IMPRIMENL            : 119
INCR                 : 70
INICIO               : 45 46 68 75
INTERRUMPE           : 61
LEE                  : 120 121
LIMPIA               : 50
MAS                  : 96
MENOS                : 97 106
MIENTRAS             : 73
MOD                  : 101
MULTI                : 99
NO                   : 92
O                    : 87
OP_ARIT              : 
OP_ASIG              : 14 15 21 22 23 24 74
OP_LOG               : 
OP_REL               : 94
OTRO                 : 76
PAL_RES              : 
PAREN_EMPIEZA        : 32 33 45 46 64 72 83 110 116 117 118 119 120 121
PAREN_TERMINA        : 32 33 45 46 64 72 83 110 116 117 118 119 120 121
POTENCIA             : 104
PROCEDIMIENTO        : 33 45 45
PROGRAMA             : 1 1
PROTOTIPOS           : 26 26
PUNTO                : 
PUNTOS_DOBLES        : 4 5 32 35 46 76 78
PUNTO_COMA           : 4 5 21 22 23 24 26 32 33 37 45 46 47
QUE                  : 72 73
REGRESA              : 83
REPETIR              : 72
SE                   : 73
SEA                  : 78
SI                   : 64
SINO                 : 65
TIPO                 : 4 5 32 35 46
VALOR                : 70 71 75
VARIABLES            : 2
VERDADERO            : 114
Y                    : 90
error                : 

Nonterminals, with rules where they appear

asigna               : 56 70 71
bckesp               : 64 65 70 71 73 76 78
block                : 1 45 46 47 68 72
constantes           : 1
cuando               : 54
desde                : 51
dimens               : 7 8 12 121
empty                : 3 6 11 13 16 20 25 27 34 36 38 41 44 48 63 66 69 77 79 82 85 88 102 126
estatuto             : 47 67
expo                 : 98 99 100 101 104
expr                 : 70 71 84 93 94 96 97
exprlog              : 64 72 73 74 83 87 110 122 123 124 125
funcion              : 43
funcproc             : 1 42 43
gpoconst             : 78 81
gpoexp               : 118 119 123
gpofuncproc          : 26 30 31
gpoids               : 4 5 7 9 10
gpopars              : 35 40
gposea               : 75 78
gpovars              : 2 4
grupoconst           : 19 23 24
imprime              : 58
imprimenl            : 59
lee                  : 60
lfunc                : 108
lproc                : 57
masgpoconst          : 80
maspars              : 39
mientras             : 53
multi                : 95 99 100 101
o                    : 86
opasig               : 9
opno                 : 89 90
oprel                : 91 92 94
opy                  : 86 90
otro                 : 75
otrospars            : 35
params               : 32 33 37 45 46
procedimiento        : 42
program              : 0
protfunc             : 28 31
protfuncproc         : 1
protproc             : 29 30
regresa              : 55
repetir              : 52
si                   : 49
signo                : 103 104
sino                 : 64
termino              : 105 106
udim                 : 74 84 109
uparams              : 116 117 125
valor                : 12
variables            : 1 45 46

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
    (19) constantes -> . CONSTANTES grupoconst
    (20) constantes -> . empty
    (127) empty -> .

    CONSTANTES      shift and go to state 3
    VARIABLES       reduce using rule 127 (empty -> .)
    PROTOTIPOS      reduce using rule 127 (empty -> .)
    PROCEDIMIENTO   reduce using rule 127 (empty -> .)
    FUNCION         reduce using rule 127 (empty -> .)
    PROGRAMA        reduce using rule 127 (empty -> .)

    program                        shift and go to state 1
    constantes                     shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> constantes . variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (127) empty -> .

    VARIABLES       shift and go to state 6
    PROTOTIPOS      reduce using rule 127 (empty -> .)
    PROCEDIMIENTO   reduce using rule 127 (empty -> .)
    FUNCION         reduce using rule 127 (empty -> .)
    PROGRAMA        reduce using rule 127 (empty -> .)

    variables                      shift and go to state 5
    empty                          shift and go to state 7

state 3

    (19) constantes -> CONSTANTES . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (127) empty -> .

    IDENT           shift and go to state 9
    VARIABLES       reduce using rule 127 (empty -> .)
    PROTOTIPOS      reduce using rule 127 (empty -> .)
    PROCEDIMIENTO   reduce using rule 127 (empty -> .)
    FUNCION         reduce using rule 127 (empty -> .)
    PROGRAMA        reduce using rule 127 (empty -> .)

    grupoconst                     shift and go to state 8
    empty                          shift and go to state 10

state 4

    (20) constantes -> empty .

    VARIABLES       reduce using rule 20 (constantes -> empty .)
    PROTOTIPOS      reduce using rule 20 (constantes -> empty .)
    PROCEDIMIENTO   reduce using rule 20 (constantes -> empty .)
    FUNCION         reduce using rule 20 (constantes -> empty .)
    PROGRAMA        reduce using rule 20 (constantes -> empty .)


state 5

    (1) program -> constantes variables . protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
    (26) protfuncproc -> . PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (27) protfuncproc -> . empty
    (127) empty -> .

    PROTOTIPOS      shift and go to state 12
    PROCEDIMIENTO   reduce using rule 127 (empty -> .)
    FUNCION         reduce using rule 127 (empty -> .)
    PROGRAMA        reduce using rule 127 (empty -> .)

    protfuncproc                   shift and go to state 11
    empty                          shift and go to state 13

state 6

    (2) variables -> VARIABLES . gpovars
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (127) empty -> .

    IDENT           shift and go to state 17
    PROTOTIPOS      reduce using rule 127 (empty -> .)
    PROCEDIMIENTO   reduce using rule 127 (empty -> .)
    FUNCION         reduce using rule 127 (empty -> .)
    PROGRAMA        reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    gpovars                        shift and go to state 14
    gpoids                         shift and go to state 15
    empty                          shift and go to state 16

state 7

    (3) variables -> empty .

    PROTOTIPOS      reduce using rule 3 (variables -> empty .)
    PROCEDIMIENTO   reduce using rule 3 (variables -> empty .)
    FUNCION         reduce using rule 3 (variables -> empty .)
    PROGRAMA        reduce using rule 3 (variables -> empty .)
    INICIO          reduce using rule 3 (variables -> empty .)


state 8

    (19) constantes -> CONSTANTES grupoconst .

    VARIABLES       reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    PROTOTIPOS      reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    PROCEDIMIENTO   reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    FUNCION         reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    PROGRAMA        reduce using rule 19 (constantes -> CONSTANTES grupoconst .)


state 9

    (21) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst

    OP_ASIG         shift and go to state 18


state 10

    (25) grupoconst -> empty .

    VARIABLES       reduce using rule 25 (grupoconst -> empty .)
    PROTOTIPOS      reduce using rule 25 (grupoconst -> empty .)
    PROCEDIMIENTO   reduce using rule 25 (grupoconst -> empty .)
    FUNCION         reduce using rule 25 (grupoconst -> empty .)
    PROGRAMA        reduce using rule 25 (grupoconst -> empty .)


state 11

    (1) program -> constantes variables protfuncproc . funcproc PROGRAMA block FIN DE PROGRAMA
    (42) funcproc -> . procedimiento funcproc
    (43) funcproc -> . funcion funcproc
    (44) funcproc -> . empty
    (45) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (46) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (127) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 127 (empty -> .)

    funcproc                       shift and go to state 19
    procedimiento                  shift and go to state 20
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 12

    (26) protfuncproc -> PROTOTIPOS . gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (28) gpofuncproc -> . protfunc
    (29) gpofuncproc -> . protproc
    (30) gpofuncproc -> . protproc gpofuncproc
    (31) gpofuncproc -> . protfunc gpofuncproc
    (32) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (33) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (34) protproc -> . empty
    (127) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29
    FIN             reduce using rule 127 (empty -> .)

  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]

    gpofuncproc                    shift and go to state 25
    protfunc                       shift and go to state 26
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 13

    (27) protfuncproc -> empty .

    PROCEDIMIENTO   reduce using rule 27 (protfuncproc -> empty .)
    FUNCION         reduce using rule 27 (protfuncproc -> empty .)
    PROGRAMA        reduce using rule 27 (protfuncproc -> empty .)


state 14

    (2) variables -> VARIABLES gpovars .

    PROTOTIPOS      reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROCEDIMIENTO   reduce using rule 2 (variables -> VARIABLES gpovars .)
    FUNCION         reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROGRAMA        reduce using rule 2 (variables -> VARIABLES gpovars .)
    INICIO          reduce using rule 2 (variables -> VARIABLES gpovars .)


state 15

    (4) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 31


state 16

    (6) gpovars -> empty .
    (11) gpoids -> empty .

    PROTOTIPOS      reduce using rule 6 (gpovars -> empty .)
    PROCEDIMIENTO   reduce using rule 6 (gpovars -> empty .)
    FUNCION         reduce using rule 6 (gpovars -> empty .)
    PROGRAMA        reduce using rule 6 (gpovars -> empty .)
    INICIO          reduce using rule 6 (gpovars -> empty .)
    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> empty .)


state 17

    (7) gpoids -> IDENT . dimens COMA gpoids
    (8) gpoids -> IDENT . dimens
    (9) gpoids -> IDENT . opasig COMA gpoids
    (10) gpoids -> IDENT . COMA gpoids
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (14) opasig -> . OP_ASIG CTE_ENTERA
    (15) opasig -> . OP_ASIG IDENT
    (16) opasig -> . empty
    (127) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
    COMA            shift and go to state 33
    CORCHETE_EMPIEZA shift and go to state 35
    OP_ASIG         shift and go to state 37
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

  ! COMA            [ reduce using rule 127 (empty -> .) ]

    dimens                         shift and go to state 32
    opasig                         shift and go to state 34
    empty                          shift and go to state 36

state 18

    (21) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA
    (22) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA grupoconst

    CTE_REAL        shift and go to state 38
    CTE_ENTERA      shift and go to state 39


state 19

    (1) program -> constantes variables protfuncproc funcproc . PROGRAMA block FIN DE PROGRAMA

    PROGRAMA        shift and go to state 40


state 20

    (42) funcproc -> procedimiento . funcproc
    (42) funcproc -> . procedimiento funcproc
    (43) funcproc -> . funcion funcproc
    (44) funcproc -> . empty
    (45) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (46) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (127) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 127 (empty -> .)

    procedimiento                  shift and go to state 20
    funcproc                       shift and go to state 41
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 21

    (43) funcproc -> funcion . funcproc
    (42) funcproc -> . procedimiento funcproc
    (43) funcproc -> . funcion funcproc
    (44) funcproc -> . empty
    (45) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (46) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (127) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 127 (empty -> .)

    funcion                        shift and go to state 21
    funcproc                       shift and go to state 42
    procedimiento                  shift and go to state 20
    empty                          shift and go to state 22

state 22

    (44) funcproc -> empty .

    PROGRAMA        reduce using rule 44 (funcproc -> empty .)


state 23

    (45) procedimiento -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    IDENT           shift and go to state 43


state 24

    (46) funcion -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    IDENT           shift and go to state 44


state 25

    (26) protfuncproc -> PROTOTIPOS gpofuncproc . FIN DE PROTOTIPOS PUNTO_COMA

    FIN             shift and go to state 45


state 26

    (28) gpofuncproc -> protfunc .
    (31) gpofuncproc -> protfunc . gpofuncproc
    (28) gpofuncproc -> . protfunc
    (29) gpofuncproc -> . protproc
    (30) gpofuncproc -> . protproc gpofuncproc
    (31) gpofuncproc -> . protfunc gpofuncproc
    (32) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (33) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (34) protproc -> . empty
    (127) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 28 (gpofuncproc -> protfunc .)
    FIN             reduce using rule 28 (gpofuncproc -> protfunc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]
  ! FIN             [ reduce using rule 127 (empty -> .) ]

    protfunc                       shift and go to state 26
    gpofuncproc                    shift and go to state 46
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 27

    (29) gpofuncproc -> protproc .
    (30) gpofuncproc -> protproc . gpofuncproc
    (28) gpofuncproc -> . protfunc
    (29) gpofuncproc -> . protproc
    (30) gpofuncproc -> . protproc gpofuncproc
    (31) gpofuncproc -> . protfunc gpofuncproc
    (32) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (33) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (34) protproc -> . empty
    (127) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 29 (gpofuncproc -> protproc .)
    FIN             reduce using rule 29 (gpofuncproc -> protproc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]
  ! FIN             [ reduce using rule 127 (empty -> .) ]

    protproc                       shift and go to state 27
    gpofuncproc                    shift and go to state 47
    protfunc                       shift and go to state 26
    empty                          shift and go to state 30

state 28

    (32) protfunc -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    IDENT           shift and go to state 48


state 29

    (33) protproc -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    IDENT           shift and go to state 49


state 30

    (34) protproc -> empty .

    FUNCION         reduce using rule 34 (protproc -> empty .)
    PROCEDIMIENTO   reduce using rule 34 (protproc -> empty .)
    FIN             reduce using rule 34 (protproc -> empty .)


state 31

    (4) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 50


state 32

    (7) gpoids -> IDENT dimens . COMA gpoids
    (8) gpoids -> IDENT dimens .

    COMA            shift and go to state 51
    PUNTOS_DOBLES   reduce using rule 8 (gpoids -> IDENT dimens .)


state 33

    (10) gpoids -> IDENT COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (127) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    gpoids                         shift and go to state 52
    empty                          shift and go to state 53

state 34

    (9) gpoids -> IDENT opasig . COMA gpoids

    COMA            shift and go to state 54


state 35

    (12) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (17) valor -> . CTE_ENTERA
    (18) valor -> . IDENT

    CTE_ENTERA      shift and go to state 56
    IDENT           shift and go to state 57

    valor                          shift and go to state 55

state 36

    (13) dimens -> empty .
    (16) opasig -> empty .

  ! reduce/reduce conflict for COMA resolved using rule 13 (dimens -> empty .)
    COMA            reduce using rule 13 (dimens -> empty .)
    PUNTOS_DOBLES   reduce using rule 13 (dimens -> empty .)

  ! COMA            [ reduce using rule 16 (opasig -> empty .) ]


state 37

    (14) opasig -> OP_ASIG . CTE_ENTERA
    (15) opasig -> OP_ASIG . IDENT

    CTE_ENTERA      shift and go to state 58
    IDENT           shift and go to state 59


state 38

    (21) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA
    (23) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 60


state 39

    (22) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA
    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 61


state 40

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA . block FIN DE PROGRAMA
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    block                          shift and go to state 62
    estatuto                       shift and go to state 63
    empty                          shift and go to state 64
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 41

    (42) funcproc -> procedimiento funcproc .

    PROGRAMA        reduce using rule 42 (funcproc -> procedimiento funcproc .)


state 42

    (43) funcproc -> funcion funcproc .

    PROGRAMA        reduce using rule 43 (funcproc -> funcion funcproc .)


state 43

    (45) procedimiento -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 89


state 44

    (46) funcion -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 90


state 45

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN . DE PROTOTIPOS PUNTO_COMA

    DE              shift and go to state 91


state 46

    (31) gpofuncproc -> protfunc gpofuncproc .

    FIN             reduce using rule 31 (gpofuncproc -> protfunc gpofuncproc .)


state 47

    (30) gpofuncproc -> protproc gpofuncproc .

    FIN             reduce using rule 30 (gpofuncproc -> protproc gpofuncproc .)


state 48

    (32) protfunc -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 92


state 49

    (33) protproc -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 93


state 50

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 94


state 51

    (7) gpoids -> IDENT dimens COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (127) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    gpoids                         shift and go to state 95
    empty                          shift and go to state 53

state 52

    (10) gpoids -> IDENT COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 10 (gpoids -> IDENT COMA gpoids .)


state 53

    (11) gpoids -> empty .

    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> empty .)


state 54

    (9) gpoids -> IDENT opasig COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (127) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    gpoids                         shift and go to state 96
    empty                          shift and go to state 53

state 55

    (12) dimens -> CORCHETE_EMPIEZA valor . CORCHETE_TERMINA dimens

    CORCHETE_TERMINA shift and go to state 97


state 56

    (17) valor -> CTE_ENTERA .

    CORCHETE_TERMINA reduce using rule 17 (valor -> CTE_ENTERA .)


state 57

    (18) valor -> IDENT .

    CORCHETE_TERMINA reduce using rule 18 (valor -> IDENT .)


state 58

    (14) opasig -> OP_ASIG CTE_ENTERA .

    COMA            reduce using rule 14 (opasig -> OP_ASIG CTE_ENTERA .)


state 59

    (15) opasig -> OP_ASIG IDENT .

    COMA            reduce using rule 15 (opasig -> OP_ASIG IDENT .)


state 60

    (21) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .
    (23) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (127) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    VARIABLES       reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    FUNCION         reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROGRAMA        reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 127 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]
  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 127 (empty -> .) ]

    grupoconst                     shift and go to state 98
    empty                          shift and go to state 10

state 61

    (22) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .
    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (127) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    VARIABLES       reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    FUNCION         reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROGRAMA        reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 127 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]
  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 127 (empty -> .) ]

    grupoconst                     shift and go to state 99
    empty                          shift and go to state 10

state 62

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block . FIN DE PROGRAMA

    FIN             shift and go to state 100


state 63

    (47) block -> estatuto . PUNTO_COMA block

    PUNTO_COMA      shift and go to state 101


state 64

    (48) block -> empty .
    (63) estatuto -> empty .

    FIN             reduce using rule 48 (block -> empty .)
    HASTA           reduce using rule 48 (block -> empty .)
    PUNTO_COMA      reduce using rule 63 (estatuto -> empty .)


state 65

    (49) estatuto -> si .

    PUNTO_COMA      reduce using rule 49 (estatuto -> si .)
    SINO            reduce using rule 49 (estatuto -> si .)
    FIN             reduce using rule 49 (estatuto -> si .)
    SEA             reduce using rule 49 (estatuto -> si .)
    OTRO            reduce using rule 49 (estatuto -> si .)


state 66

    (50) estatuto -> LIMPIA .

    PUNTO_COMA      reduce using rule 50 (estatuto -> LIMPIA .)
    SINO            reduce using rule 50 (estatuto -> LIMPIA .)
    FIN             reduce using rule 50 (estatuto -> LIMPIA .)
    SEA             reduce using rule 50 (estatuto -> LIMPIA .)
    OTRO            reduce using rule 50 (estatuto -> LIMPIA .)


state 67

    (51) estatuto -> desde .

    PUNTO_COMA      reduce using rule 51 (estatuto -> desde .)
    SINO            reduce using rule 51 (estatuto -> desde .)
    FIN             reduce using rule 51 (estatuto -> desde .)
    SEA             reduce using rule 51 (estatuto -> desde .)
    OTRO            reduce using rule 51 (estatuto -> desde .)


state 68

    (52) estatuto -> repetir .

    PUNTO_COMA      reduce using rule 52 (estatuto -> repetir .)
    SINO            reduce using rule 52 (estatuto -> repetir .)
    FIN             reduce using rule 52 (estatuto -> repetir .)
    SEA             reduce using rule 52 (estatuto -> repetir .)
    OTRO            reduce using rule 52 (estatuto -> repetir .)


state 69

    (53) estatuto -> mientras .

    PUNTO_COMA      reduce using rule 53 (estatuto -> mientras .)
    SINO            reduce using rule 53 (estatuto -> mientras .)
    FIN             reduce using rule 53 (estatuto -> mientras .)
    SEA             reduce using rule 53 (estatuto -> mientras .)
    OTRO            reduce using rule 53 (estatuto -> mientras .)


state 70

    (54) estatuto -> cuando .

    PUNTO_COMA      reduce using rule 54 (estatuto -> cuando .)
    SINO            reduce using rule 54 (estatuto -> cuando .)
    FIN             reduce using rule 54 (estatuto -> cuando .)
    SEA             reduce using rule 54 (estatuto -> cuando .)
    OTRO            reduce using rule 54 (estatuto -> cuando .)


state 71

    (55) estatuto -> regresa .

    PUNTO_COMA      reduce using rule 55 (estatuto -> regresa .)
    SINO            reduce using rule 55 (estatuto -> regresa .)
    FIN             reduce using rule 55 (estatuto -> regresa .)
    SEA             reduce using rule 55 (estatuto -> regresa .)
    OTRO            reduce using rule 55 (estatuto -> regresa .)


state 72

    (56) estatuto -> asigna .

    PUNTO_COMA      reduce using rule 56 (estatuto -> asigna .)
    SINO            reduce using rule 56 (estatuto -> asigna .)
    FIN             reduce using rule 56 (estatuto -> asigna .)
    SEA             reduce using rule 56 (estatuto -> asigna .)
    OTRO            reduce using rule 56 (estatuto -> asigna .)


state 73

    (57) estatuto -> lproc .

    PUNTO_COMA      reduce using rule 57 (estatuto -> lproc .)
    SINO            reduce using rule 57 (estatuto -> lproc .)
    FIN             reduce using rule 57 (estatuto -> lproc .)
    SEA             reduce using rule 57 (estatuto -> lproc .)
    OTRO            reduce using rule 57 (estatuto -> lproc .)


state 74

    (58) estatuto -> imprime .

    PUNTO_COMA      reduce using rule 58 (estatuto -> imprime .)
    SINO            reduce using rule 58 (estatuto -> imprime .)
    FIN             reduce using rule 58 (estatuto -> imprime .)
    SEA             reduce using rule 58 (estatuto -> imprime .)
    OTRO            reduce using rule 58 (estatuto -> imprime .)


state 75

    (59) estatuto -> imprimenl .

    PUNTO_COMA      reduce using rule 59 (estatuto -> imprimenl .)
    SINO            reduce using rule 59 (estatuto -> imprimenl .)
    FIN             reduce using rule 59 (estatuto -> imprimenl .)
    SEA             reduce using rule 59 (estatuto -> imprimenl .)
    OTRO            reduce using rule 59 (estatuto -> imprimenl .)


state 76

    (60) estatuto -> lee .

    PUNTO_COMA      reduce using rule 60 (estatuto -> lee .)
    SINO            reduce using rule 60 (estatuto -> lee .)
    FIN             reduce using rule 60 (estatuto -> lee .)
    SEA             reduce using rule 60 (estatuto -> lee .)
    OTRO            reduce using rule 60 (estatuto -> lee .)


state 77

    (61) estatuto -> INTERRUMPE .

    PUNTO_COMA      reduce using rule 61 (estatuto -> INTERRUMPE .)
    SINO            reduce using rule 61 (estatuto -> INTERRUMPE .)
    FIN             reduce using rule 61 (estatuto -> INTERRUMPE .)
    SEA             reduce using rule 61 (estatuto -> INTERRUMPE .)
    OTRO            reduce using rule 61 (estatuto -> INTERRUMPE .)


state 78

    (62) estatuto -> CONTINUA .

    PUNTO_COMA      reduce using rule 62 (estatuto -> CONTINUA .)
    SINO            reduce using rule 62 (estatuto -> CONTINUA .)
    FIN             reduce using rule 62 (estatuto -> CONTINUA .)
    SEA             reduce using rule 62 (estatuto -> CONTINUA .)
    OTRO            reduce using rule 62 (estatuto -> CONTINUA .)


state 79

    (64) si -> SI . PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino

    PAREN_EMPIEZA   shift and go to state 102


state 80

    (70) desde -> DESDE . EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> DESDE . EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp

    EL              shift and go to state 103


state 81

    (72) repetir -> REPETIR . block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    HASTA           reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    block                          shift and go to state 104
    estatuto                       shift and go to state 63
    empty                          shift and go to state 64
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 82

    (73) mientras -> MIENTRAS . SE CUMPLA QUE exprlog bckesp

    SE              shift and go to state 105


state 83

    (75) cuando -> CUANDO . EL VALOR DE IDENT INICIO gposea otro FIN

    EL              shift and go to state 106


state 84

    (74) asigna -> IDENT . udim OP_ASIG exprlog
    (116) lproc -> IDENT . PAREN_EMPIEZA uparams PAREN_TERMINA
    (84) udim -> . expr udim
    (85) udim -> . empty
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (127) empty -> .
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    PAREN_EMPIEZA   shift and go to state 109
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_ASIG         reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]

    udim                           shift and go to state 108
    expr                           shift and go to state 110
    empty                          shift and go to state 111
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 85

    (83) regresa -> REGRESA . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 123


state 86

    (118) imprime -> IMPRIME . PAREN_EMPIEZA gpoexp PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 124


state 87

    (119) imprimenl -> IMPRIMENL . PAREN_EMPIEZA gpoexp PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 125


state 88

    (120) lee -> LEE . PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> LEE . PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 126


state 89

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (127) empty -> .

    IDENT           shift and go to state 127
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    params                         shift and go to state 128
    gpopars                        shift and go to state 129
    empty                          shift and go to state 130

state 90

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (127) empty -> .

    IDENT           shift and go to state 127
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    params                         shift and go to state 131
    gpopars                        shift and go to state 129
    empty                          shift and go to state 130

state 91

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE . PROTOTIPOS PUNTO_COMA

    PROTOTIPOS      shift and go to state 132


state 92

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (127) empty -> .

    IDENT           shift and go to state 127
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    params                         shift and go to state 133
    gpopars                        shift and go to state 129
    empty                          shift and go to state 130

state 93

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (127) empty -> .

    IDENT           shift and go to state 127
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    params                         shift and go to state 134
    gpopars                        shift and go to state 129
    empty                          shift and go to state 130

state 94

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA . gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (127) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    INICIO          reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]
  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 127 (empty -> .) ]
  ! INICIO          [ reduce using rule 127 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 135
    empty                          shift and go to state 16

state 95

    (7) gpoids -> IDENT dimens COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 7 (gpoids -> IDENT dimens COMA gpoids .)


state 96

    (9) gpoids -> IDENT opasig COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 9 (gpoids -> IDENT opasig COMA gpoids .)


state 97

    (12) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA . dimens
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (127) empty -> .

    CORCHETE_EMPIEZA shift and go to state 35
    COMA            reduce using rule 127 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    dimens                         shift and go to state 136
    empty                          shift and go to state 137

state 98

    (23) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)


state 99

    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)


state 100

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN . DE PROGRAMA

    DE              shift and go to state 138


state 101

    (47) block -> estatuto PUNTO_COMA . block
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    estatuto                       shift and go to state 63
    block                          shift and go to state 139
    empty                          shift and go to state 64
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 102

    (64) si -> SI PAREN_EMPIEZA . exprlog PAREN_TERMINA HACER bckesp sino
    (86) exprlog -> . opy o
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 141
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 103

    (70) desde -> DESDE EL . VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> DESDE EL . VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp

    VALOR           shift and go to state 148


state 104

    (72) repetir -> REPETIR block . HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    HASTA           shift and go to state 149


state 105

    (73) mientras -> MIENTRAS SE . CUMPLA QUE exprlog bckesp

    CUMPLA          shift and go to state 150


state 106

    (75) cuando -> CUANDO EL . VALOR DE IDENT INICIO gposea otro FIN

    VALOR           shift and go to state 151


state 107

    (107) termino -> IDENT .
    (108) termino -> IDENT . lfunc
    (109) termino -> IDENT . udim
    (117) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (84) udim -> . expr udim
    (85) udim -> . empty
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (127) empty -> .
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! reduce/reduce conflict for POTENCIA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 107 (termino -> IDENT .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for PAREN_EMPIEZA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_ENTERA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_REAL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_ALFA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for VERDADERO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for FALSO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_ASIG resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for COMA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for HASTA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SINO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for FIN resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SEA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for OTRO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INICIO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SI resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DESDE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for REPETIR resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CUANDO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for REGRESA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for LEE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INCR resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DECR resolved using rule 107 (termino -> IDENT .)
    POTENCIA        reduce using rule 107 (termino -> IDENT .)
    MULTI           reduce using rule 107 (termino -> IDENT .)
    DIV             reduce using rule 107 (termino -> IDENT .)
    MOD             reduce using rule 107 (termino -> IDENT .)
    CTE_ENTERA      reduce using rule 107 (termino -> IDENT .)
    CTE_REAL        reduce using rule 107 (termino -> IDENT .)
    CTE_ALFA        reduce using rule 107 (termino -> IDENT .)
    VERDADERO       reduce using rule 107 (termino -> IDENT .)
    FALSO           reduce using rule 107 (termino -> IDENT .)
    OP_ASIG         reduce using rule 107 (termino -> IDENT .)
    OP_REL          reduce using rule 107 (termino -> IDENT .)
    Y               reduce using rule 107 (termino -> IDENT .)
    O               reduce using rule 107 (termino -> IDENT .)
    PAREN_TERMINA   reduce using rule 107 (termino -> IDENT .)
    COMA            reduce using rule 107 (termino -> IDENT .)
    PUNTO_COMA      reduce using rule 107 (termino -> IDENT .)
    HASTA           reduce using rule 107 (termino -> IDENT .)
    SINO            reduce using rule 107 (termino -> IDENT .)
    FIN             reduce using rule 107 (termino -> IDENT .)
    SEA             reduce using rule 107 (termino -> IDENT .)
    OTRO            reduce using rule 107 (termino -> IDENT .)
    INICIO          reduce using rule 107 (termino -> IDENT .)
    LIMPIA          reduce using rule 107 (termino -> IDENT .)
    INTERRUMPE      reduce using rule 107 (termino -> IDENT .)
    CONTINUA        reduce using rule 107 (termino -> IDENT .)
    SI              reduce using rule 107 (termino -> IDENT .)
    DESDE           reduce using rule 107 (termino -> IDENT .)
    REPETIR         reduce using rule 107 (termino -> IDENT .)
    MIENTRAS        reduce using rule 107 (termino -> IDENT .)
    CUANDO          reduce using rule 107 (termino -> IDENT .)
    REGRESA         reduce using rule 107 (termino -> IDENT .)
    IMPRIME         reduce using rule 107 (termino -> IDENT .)
    IMPRIMENL       reduce using rule 107 (termino -> IDENT .)
    LEE             reduce using rule 107 (termino -> IDENT .)
    INCR            reduce using rule 107 (termino -> IDENT .)
    DECR            reduce using rule 107 (termino -> IDENT .)
    IDENT           shift and go to state 152
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    PAREN_EMPIEZA   shift and go to state 140

  ! MAS             [ reduce using rule 107 (termino -> IDENT .) ]
  ! MENOS           [ reduce using rule 107 (termino -> IDENT .) ]
  ! IDENT           [ reduce using rule 107 (termino -> IDENT .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 107 (termino -> IDENT .) ]
  ! POTENCIA        [ reduce using rule 127 (empty -> .) ]
  ! MULTI           [ reduce using rule 127 (empty -> .) ]
  ! DIV             [ reduce using rule 127 (empty -> .) ]
  ! MOD             [ reduce using rule 127 (empty -> .) ]
  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! OP_ASIG         [ reduce using rule 127 (empty -> .) ]
  ! OP_REL          [ reduce using rule 127 (empty -> .) ]
  ! Y               [ reduce using rule 127 (empty -> .) ]
  ! O               [ reduce using rule 127 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 127 (empty -> .) ]
  ! COMA            [ reduce using rule 127 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 127 (empty -> .) ]
  ! HASTA           [ reduce using rule 127 (empty -> .) ]
  ! SINO            [ reduce using rule 127 (empty -> .) ]
  ! FIN             [ reduce using rule 127 (empty -> .) ]
  ! SEA             [ reduce using rule 127 (empty -> .) ]
  ! OTRO            [ reduce using rule 127 (empty -> .) ]
  ! INICIO          [ reduce using rule 127 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 127 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 127 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! DESDE           [ reduce using rule 127 (empty -> .) ]
  ! REPETIR         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! CUANDO          [ reduce using rule 127 (empty -> .) ]
  ! REGRESA         [ reduce using rule 127 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 127 (empty -> .) ]
  ! LEE             [ reduce using rule 127 (empty -> .) ]
  ! INCR            [ reduce using rule 127 (empty -> .) ]
  ! DECR            [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ shift and go to state 118 ]
  ! CTE_REAL        [ shift and go to state 119 ]
  ! CTE_ALFA        [ shift and go to state 120 ]
  ! VERDADERO       [ shift and go to state 121 ]
  ! FALSO           [ shift and go to state 122 ]

    lfunc                          shift and go to state 153
    udim                           shift and go to state 154
    expr                           shift and go to state 110
    empty                          shift and go to state 111
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 108

    (74) asigna -> IDENT udim . OP_ASIG exprlog

    OP_ASIG         shift and go to state 155


state 109

    (116) lproc -> IDENT PAREN_EMPIEZA . uparams PAREN_TERMINA
    (110) termino -> PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (124) uparams -> . exprlog
    (125) uparams -> . exprlog COMA uparams
    (126) uparams -> . empty
    (86) exprlog -> . opy o
    (127) empty -> .
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    uparams                        shift and go to state 156
    exprlog                        shift and go to state 157
    empty                          shift and go to state 158
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 110

    (84) udim -> expr . udim
    (84) udim -> . expr udim
    (85) udim -> . empty
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (127) empty -> .
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]

    expr                           shift and go to state 110
    udim                           shift and go to state 159
    empty                          shift and go to state 111
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 111

    (85) udim -> empty .
    (102) multi -> empty .

  ! reduce/reduce conflict for MAS resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for MENOS resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for PAREN_EMPIEZA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for CTE_ENTERA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for CTE_REAL resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for CTE_ALFA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for VERDADERO resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for FALSO resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for OP_ASIG resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for MULTI resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for DIV resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for MOD resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for OP_REL resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for Y resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for O resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for COMA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for HASTA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for SINO resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for FIN resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for SEA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for OTRO resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for INICIO resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for SI resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for DESDE resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for REPETIR resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for CUANDO resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for REGRESA resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for LEE resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for INCR resolved using rule 85 (udim -> empty .)
  ! reduce/reduce conflict for DECR resolved using rule 85 (udim -> empty .)
    OP_ASIG         reduce using rule 85 (udim -> empty .)
    POTENCIA        reduce using rule 85 (udim -> empty .)
    MULTI           reduce using rule 85 (udim -> empty .)
    DIV             reduce using rule 85 (udim -> empty .)
    MOD             reduce using rule 85 (udim -> empty .)
    MAS             reduce using rule 85 (udim -> empty .)
    MENOS           reduce using rule 85 (udim -> empty .)
    IDENT           reduce using rule 85 (udim -> empty .)
    PAREN_EMPIEZA   reduce using rule 85 (udim -> empty .)
    CTE_ENTERA      reduce using rule 85 (udim -> empty .)
    CTE_REAL        reduce using rule 85 (udim -> empty .)
    CTE_ALFA        reduce using rule 85 (udim -> empty .)
    VERDADERO       reduce using rule 85 (udim -> empty .)
    FALSO           reduce using rule 85 (udim -> empty .)
    OP_REL          reduce using rule 85 (udim -> empty .)
    Y               reduce using rule 85 (udim -> empty .)
    O               reduce using rule 85 (udim -> empty .)
    PAREN_TERMINA   reduce using rule 85 (udim -> empty .)
    COMA            reduce using rule 85 (udim -> empty .)
    PUNTO_COMA      reduce using rule 85 (udim -> empty .)
    HASTA           reduce using rule 85 (udim -> empty .)
    SINO            reduce using rule 85 (udim -> empty .)
    FIN             reduce using rule 85 (udim -> empty .)
    SEA             reduce using rule 85 (udim -> empty .)
    OTRO            reduce using rule 85 (udim -> empty .)
    INICIO          reduce using rule 85 (udim -> empty .)
    LIMPIA          reduce using rule 85 (udim -> empty .)
    INTERRUMPE      reduce using rule 85 (udim -> empty .)
    CONTINUA        reduce using rule 85 (udim -> empty .)
    SI              reduce using rule 85 (udim -> empty .)
    DESDE           reduce using rule 85 (udim -> empty .)
    REPETIR         reduce using rule 85 (udim -> empty .)
    MIENTRAS        reduce using rule 85 (udim -> empty .)
    CUANDO          reduce using rule 85 (udim -> empty .)
    REGRESA         reduce using rule 85 (udim -> empty .)
    IMPRIME         reduce using rule 85 (udim -> empty .)
    IMPRIMENL       reduce using rule 85 (udim -> empty .)
    LEE             reduce using rule 85 (udim -> empty .)
    INCR            reduce using rule 85 (udim -> empty .)
    DECR            reduce using rule 85 (udim -> empty .)

  ! MAS             [ reduce using rule 102 (multi -> empty .) ]
  ! MENOS           [ reduce using rule 102 (multi -> empty .) ]
  ! IDENT           [ reduce using rule 102 (multi -> empty .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 102 (multi -> empty .) ]
  ! CTE_ENTERA      [ reduce using rule 102 (multi -> empty .) ]
  ! CTE_REAL        [ reduce using rule 102 (multi -> empty .) ]
  ! CTE_ALFA        [ reduce using rule 102 (multi -> empty .) ]
  ! VERDADERO       [ reduce using rule 102 (multi -> empty .) ]
  ! FALSO           [ reduce using rule 102 (multi -> empty .) ]
  ! OP_ASIG         [ reduce using rule 102 (multi -> empty .) ]
  ! POTENCIA        [ reduce using rule 102 (multi -> empty .) ]
  ! MULTI           [ reduce using rule 102 (multi -> empty .) ]
  ! DIV             [ reduce using rule 102 (multi -> empty .) ]
  ! MOD             [ reduce using rule 102 (multi -> empty .) ]
  ! OP_REL          [ reduce using rule 102 (multi -> empty .) ]
  ! Y               [ reduce using rule 102 (multi -> empty .) ]
  ! O               [ reduce using rule 102 (multi -> empty .) ]
  ! PAREN_TERMINA   [ reduce using rule 102 (multi -> empty .) ]
  ! COMA            [ reduce using rule 102 (multi -> empty .) ]
  ! PUNTO_COMA      [ reduce using rule 102 (multi -> empty .) ]
  ! HASTA           [ reduce using rule 102 (multi -> empty .) ]
  ! SINO            [ reduce using rule 102 (multi -> empty .) ]
  ! FIN             [ reduce using rule 102 (multi -> empty .) ]
  ! SEA             [ reduce using rule 102 (multi -> empty .) ]
  ! OTRO            [ reduce using rule 102 (multi -> empty .) ]
  ! INICIO          [ reduce using rule 102 (multi -> empty .) ]
  ! LIMPIA          [ reduce using rule 102 (multi -> empty .) ]
  ! INTERRUMPE      [ reduce using rule 102 (multi -> empty .) ]
  ! CONTINUA        [ reduce using rule 102 (multi -> empty .) ]
  ! SI              [ reduce using rule 102 (multi -> empty .) ]
  ! DESDE           [ reduce using rule 102 (multi -> empty .) ]
  ! REPETIR         [ reduce using rule 102 (multi -> empty .) ]
  ! MIENTRAS        [ reduce using rule 102 (multi -> empty .) ]
  ! CUANDO          [ reduce using rule 102 (multi -> empty .) ]
  ! REGRESA         [ reduce using rule 102 (multi -> empty .) ]
  ! IMPRIME         [ reduce using rule 102 (multi -> empty .) ]
  ! IMPRIMENL       [ reduce using rule 102 (multi -> empty .) ]
  ! LEE             [ reduce using rule 102 (multi -> empty .) ]
  ! INCR            [ reduce using rule 102 (multi -> empty .) ]
  ! DECR            [ reduce using rule 102 (multi -> empty .) ]


state 112

    (95) expr -> multi .

    MAS             reduce using rule 95 (expr -> multi .)
    MENOS           reduce using rule 95 (expr -> multi .)
    IDENT           reduce using rule 95 (expr -> multi .)
    PAREN_EMPIEZA   reduce using rule 95 (expr -> multi .)
    CTE_ENTERA      reduce using rule 95 (expr -> multi .)
    CTE_REAL        reduce using rule 95 (expr -> multi .)
    CTE_ALFA        reduce using rule 95 (expr -> multi .)
    VERDADERO       reduce using rule 95 (expr -> multi .)
    FALSO           reduce using rule 95 (expr -> multi .)
    OP_ASIG         reduce using rule 95 (expr -> multi .)
    OP_REL          reduce using rule 95 (expr -> multi .)
    Y               reduce using rule 95 (expr -> multi .)
    O               reduce using rule 95 (expr -> multi .)
    PAREN_TERMINA   reduce using rule 95 (expr -> multi .)
    POTENCIA        reduce using rule 95 (expr -> multi .)
    MULTI           reduce using rule 95 (expr -> multi .)
    DIV             reduce using rule 95 (expr -> multi .)
    MOD             reduce using rule 95 (expr -> multi .)
    COMA            reduce using rule 95 (expr -> multi .)
    PUNTO_COMA      reduce using rule 95 (expr -> multi .)
    HASTA           reduce using rule 95 (expr -> multi .)
    SINO            reduce using rule 95 (expr -> multi .)
    FIN             reduce using rule 95 (expr -> multi .)
    SEA             reduce using rule 95 (expr -> multi .)
    OTRO            reduce using rule 95 (expr -> multi .)
    INICIO          reduce using rule 95 (expr -> multi .)
    LIMPIA          reduce using rule 95 (expr -> multi .)
    INTERRUMPE      reduce using rule 95 (expr -> multi .)
    CONTINUA        reduce using rule 95 (expr -> multi .)
    SI              reduce using rule 95 (expr -> multi .)
    DESDE           reduce using rule 95 (expr -> multi .)
    REPETIR         reduce using rule 95 (expr -> multi .)
    MIENTRAS        reduce using rule 95 (expr -> multi .)
    CUANDO          reduce using rule 95 (expr -> multi .)
    REGRESA         reduce using rule 95 (expr -> multi .)
    IMPRIME         reduce using rule 95 (expr -> multi .)
    IMPRIMENL       reduce using rule 95 (expr -> multi .)
    LEE             reduce using rule 95 (expr -> multi .)
    INCR            reduce using rule 95 (expr -> multi .)
    DECR            reduce using rule 95 (expr -> multi .)


state 113

    (96) expr -> MAS . expr
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]

    expr                           shift and go to state 160
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 114

    (97) expr -> MENOS . expr
    (106) signo -> MENOS . termino
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)

  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]

    expr                           shift and go to state 161
    termino                        shift and go to state 162
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116

state 115

    (98) multi -> expo .
    (99) multi -> expo . MULTI multi
    (100) multi -> expo . DIV multi
    (101) multi -> expo . MOD multi

  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    MAS             reduce using rule 98 (multi -> expo .)
    MENOS           reduce using rule 98 (multi -> expo .)
    IDENT           reduce using rule 98 (multi -> expo .)
    PAREN_EMPIEZA   reduce using rule 98 (multi -> expo .)
    CTE_ENTERA      reduce using rule 98 (multi -> expo .)
    CTE_REAL        reduce using rule 98 (multi -> expo .)
    CTE_ALFA        reduce using rule 98 (multi -> expo .)
    VERDADERO       reduce using rule 98 (multi -> expo .)
    FALSO           reduce using rule 98 (multi -> expo .)
    OP_ASIG         reduce using rule 98 (multi -> expo .)
    OP_REL          reduce using rule 98 (multi -> expo .)
    Y               reduce using rule 98 (multi -> expo .)
    O               reduce using rule 98 (multi -> expo .)
    PAREN_TERMINA   reduce using rule 98 (multi -> expo .)
    POTENCIA        reduce using rule 98 (multi -> expo .)
    COMA            reduce using rule 98 (multi -> expo .)
    PUNTO_COMA      reduce using rule 98 (multi -> expo .)
    HASTA           reduce using rule 98 (multi -> expo .)
    SINO            reduce using rule 98 (multi -> expo .)
    FIN             reduce using rule 98 (multi -> expo .)
    SEA             reduce using rule 98 (multi -> expo .)
    OTRO            reduce using rule 98 (multi -> expo .)
    INICIO          reduce using rule 98 (multi -> expo .)
    LIMPIA          reduce using rule 98 (multi -> expo .)
    INTERRUMPE      reduce using rule 98 (multi -> expo .)
    CONTINUA        reduce using rule 98 (multi -> expo .)
    SI              reduce using rule 98 (multi -> expo .)
    DESDE           reduce using rule 98 (multi -> expo .)
    REPETIR         reduce using rule 98 (multi -> expo .)
    MIENTRAS        reduce using rule 98 (multi -> expo .)
    CUANDO          reduce using rule 98 (multi -> expo .)
    REGRESA         reduce using rule 98 (multi -> expo .)
    IMPRIME         reduce using rule 98 (multi -> expo .)
    IMPRIMENL       reduce using rule 98 (multi -> expo .)
    LEE             reduce using rule 98 (multi -> expo .)
    INCR            reduce using rule 98 (multi -> expo .)
    DECR            reduce using rule 98 (multi -> expo .)
    MULTI           shift and go to state 163
    DIV             shift and go to state 164
    MOD             shift and go to state 165

  ! MULTI           [ reduce using rule 98 (multi -> expo .) ]
  ! DIV             [ reduce using rule 98 (multi -> expo .) ]
  ! MOD             [ reduce using rule 98 (multi -> expo .) ]


state 116

    (103) expo -> signo .
    (104) expo -> signo . POTENCIA expo

  ! shift/reduce conflict for POTENCIA resolved as shift
    MULTI           reduce using rule 103 (expo -> signo .)
    DIV             reduce using rule 103 (expo -> signo .)
    MOD             reduce using rule 103 (expo -> signo .)
    MAS             reduce using rule 103 (expo -> signo .)
    MENOS           reduce using rule 103 (expo -> signo .)
    IDENT           reduce using rule 103 (expo -> signo .)
    PAREN_EMPIEZA   reduce using rule 103 (expo -> signo .)
    CTE_ENTERA      reduce using rule 103 (expo -> signo .)
    CTE_REAL        reduce using rule 103 (expo -> signo .)
    CTE_ALFA        reduce using rule 103 (expo -> signo .)
    VERDADERO       reduce using rule 103 (expo -> signo .)
    FALSO           reduce using rule 103 (expo -> signo .)
    OP_ASIG         reduce using rule 103 (expo -> signo .)
    OP_REL          reduce using rule 103 (expo -> signo .)
    Y               reduce using rule 103 (expo -> signo .)
    O               reduce using rule 103 (expo -> signo .)
    PAREN_TERMINA   reduce using rule 103 (expo -> signo .)
    COMA            reduce using rule 103 (expo -> signo .)
    PUNTO_COMA      reduce using rule 103 (expo -> signo .)
    HASTA           reduce using rule 103 (expo -> signo .)
    SINO            reduce using rule 103 (expo -> signo .)
    FIN             reduce using rule 103 (expo -> signo .)
    SEA             reduce using rule 103 (expo -> signo .)
    OTRO            reduce using rule 103 (expo -> signo .)
    INICIO          reduce using rule 103 (expo -> signo .)
    LIMPIA          reduce using rule 103 (expo -> signo .)
    INTERRUMPE      reduce using rule 103 (expo -> signo .)
    CONTINUA        reduce using rule 103 (expo -> signo .)
    SI              reduce using rule 103 (expo -> signo .)
    DESDE           reduce using rule 103 (expo -> signo .)
    REPETIR         reduce using rule 103 (expo -> signo .)
    MIENTRAS        reduce using rule 103 (expo -> signo .)
    CUANDO          reduce using rule 103 (expo -> signo .)
    REGRESA         reduce using rule 103 (expo -> signo .)
    IMPRIME         reduce using rule 103 (expo -> signo .)
    IMPRIMENL       reduce using rule 103 (expo -> signo .)
    LEE             reduce using rule 103 (expo -> signo .)
    INCR            reduce using rule 103 (expo -> signo .)
    DECR            reduce using rule 103 (expo -> signo .)
    POTENCIA        shift and go to state 166

  ! POTENCIA        [ reduce using rule 103 (expo -> signo .) ]


state 117

    (105) signo -> termino .

    POTENCIA        reduce using rule 105 (signo -> termino .)
    MULTI           reduce using rule 105 (signo -> termino .)
    DIV             reduce using rule 105 (signo -> termino .)
    MOD             reduce using rule 105 (signo -> termino .)
    MAS             reduce using rule 105 (signo -> termino .)
    MENOS           reduce using rule 105 (signo -> termino .)
    IDENT           reduce using rule 105 (signo -> termino .)
    PAREN_EMPIEZA   reduce using rule 105 (signo -> termino .)
    CTE_ENTERA      reduce using rule 105 (signo -> termino .)
    CTE_REAL        reduce using rule 105 (signo -> termino .)
    CTE_ALFA        reduce using rule 105 (signo -> termino .)
    VERDADERO       reduce using rule 105 (signo -> termino .)
    FALSO           reduce using rule 105 (signo -> termino .)
    OP_ASIG         reduce using rule 105 (signo -> termino .)
    OP_REL          reduce using rule 105 (signo -> termino .)
    Y               reduce using rule 105 (signo -> termino .)
    O               reduce using rule 105 (signo -> termino .)
    PAREN_TERMINA   reduce using rule 105 (signo -> termino .)
    COMA            reduce using rule 105 (signo -> termino .)
    PUNTO_COMA      reduce using rule 105 (signo -> termino .)
    HASTA           reduce using rule 105 (signo -> termino .)
    SINO            reduce using rule 105 (signo -> termino .)
    FIN             reduce using rule 105 (signo -> termino .)
    SEA             reduce using rule 105 (signo -> termino .)
    OTRO            reduce using rule 105 (signo -> termino .)
    INICIO          reduce using rule 105 (signo -> termino .)
    LIMPIA          reduce using rule 105 (signo -> termino .)
    INTERRUMPE      reduce using rule 105 (signo -> termino .)
    CONTINUA        reduce using rule 105 (signo -> termino .)
    SI              reduce using rule 105 (signo -> termino .)
    DESDE           reduce using rule 105 (signo -> termino .)
    REPETIR         reduce using rule 105 (signo -> termino .)
    MIENTRAS        reduce using rule 105 (signo -> termino .)
    CUANDO          reduce using rule 105 (signo -> termino .)
    REGRESA         reduce using rule 105 (signo -> termino .)
    IMPRIME         reduce using rule 105 (signo -> termino .)
    IMPRIMENL       reduce using rule 105 (signo -> termino .)
    LEE             reduce using rule 105 (signo -> termino .)
    INCR            reduce using rule 105 (signo -> termino .)
    DECR            reduce using rule 105 (signo -> termino .)


state 118

    (111) termino -> CTE_ENTERA .

    POTENCIA        reduce using rule 111 (termino -> CTE_ENTERA .)
    MULTI           reduce using rule 111 (termino -> CTE_ENTERA .)
    DIV             reduce using rule 111 (termino -> CTE_ENTERA .)
    MOD             reduce using rule 111 (termino -> CTE_ENTERA .)
    MAS             reduce using rule 111 (termino -> CTE_ENTERA .)
    MENOS           reduce using rule 111 (termino -> CTE_ENTERA .)
    IDENT           reduce using rule 111 (termino -> CTE_ENTERA .)
    PAREN_EMPIEZA   reduce using rule 111 (termino -> CTE_ENTERA .)
    CTE_ENTERA      reduce using rule 111 (termino -> CTE_ENTERA .)
    CTE_REAL        reduce using rule 111 (termino -> CTE_ENTERA .)
    CTE_ALFA        reduce using rule 111 (termino -> CTE_ENTERA .)
    VERDADERO       reduce using rule 111 (termino -> CTE_ENTERA .)
    FALSO           reduce using rule 111 (termino -> CTE_ENTERA .)
    OP_ASIG         reduce using rule 111 (termino -> CTE_ENTERA .)
    OP_REL          reduce using rule 111 (termino -> CTE_ENTERA .)
    Y               reduce using rule 111 (termino -> CTE_ENTERA .)
    O               reduce using rule 111 (termino -> CTE_ENTERA .)
    PAREN_TERMINA   reduce using rule 111 (termino -> CTE_ENTERA .)
    COMA            reduce using rule 111 (termino -> CTE_ENTERA .)
    PUNTO_COMA      reduce using rule 111 (termino -> CTE_ENTERA .)
    HASTA           reduce using rule 111 (termino -> CTE_ENTERA .)
    SINO            reduce using rule 111 (termino -> CTE_ENTERA .)
    FIN             reduce using rule 111 (termino -> CTE_ENTERA .)
    SEA             reduce using rule 111 (termino -> CTE_ENTERA .)
    OTRO            reduce using rule 111 (termino -> CTE_ENTERA .)
    INICIO          reduce using rule 111 (termino -> CTE_ENTERA .)
    LIMPIA          reduce using rule 111 (termino -> CTE_ENTERA .)
    INTERRUMPE      reduce using rule 111 (termino -> CTE_ENTERA .)
    CONTINUA        reduce using rule 111 (termino -> CTE_ENTERA .)
    SI              reduce using rule 111 (termino -> CTE_ENTERA .)
    DESDE           reduce using rule 111 (termino -> CTE_ENTERA .)
    REPETIR         reduce using rule 111 (termino -> CTE_ENTERA .)
    MIENTRAS        reduce using rule 111 (termino -> CTE_ENTERA .)
    CUANDO          reduce using rule 111 (termino -> CTE_ENTERA .)
    REGRESA         reduce using rule 111 (termino -> CTE_ENTERA .)
    IMPRIME         reduce using rule 111 (termino -> CTE_ENTERA .)
    IMPRIMENL       reduce using rule 111 (termino -> CTE_ENTERA .)
    LEE             reduce using rule 111 (termino -> CTE_ENTERA .)
    INCR            reduce using rule 111 (termino -> CTE_ENTERA .)
    DECR            reduce using rule 111 (termino -> CTE_ENTERA .)


state 119

    (112) termino -> CTE_REAL .

    POTENCIA        reduce using rule 112 (termino -> CTE_REAL .)
    MULTI           reduce using rule 112 (termino -> CTE_REAL .)
    DIV             reduce using rule 112 (termino -> CTE_REAL .)
    MOD             reduce using rule 112 (termino -> CTE_REAL .)
    MAS             reduce using rule 112 (termino -> CTE_REAL .)
    MENOS           reduce using rule 112 (termino -> CTE_REAL .)
    IDENT           reduce using rule 112 (termino -> CTE_REAL .)
    PAREN_EMPIEZA   reduce using rule 112 (termino -> CTE_REAL .)
    CTE_ENTERA      reduce using rule 112 (termino -> CTE_REAL .)
    CTE_REAL        reduce using rule 112 (termino -> CTE_REAL .)
    CTE_ALFA        reduce using rule 112 (termino -> CTE_REAL .)
    VERDADERO       reduce using rule 112 (termino -> CTE_REAL .)
    FALSO           reduce using rule 112 (termino -> CTE_REAL .)
    OP_ASIG         reduce using rule 112 (termino -> CTE_REAL .)
    OP_REL          reduce using rule 112 (termino -> CTE_REAL .)
    Y               reduce using rule 112 (termino -> CTE_REAL .)
    O               reduce using rule 112 (termino -> CTE_REAL .)
    PAREN_TERMINA   reduce using rule 112 (termino -> CTE_REAL .)
    COMA            reduce using rule 112 (termino -> CTE_REAL .)
    PUNTO_COMA      reduce using rule 112 (termino -> CTE_REAL .)
    HASTA           reduce using rule 112 (termino -> CTE_REAL .)
    SINO            reduce using rule 112 (termino -> CTE_REAL .)
    FIN             reduce using rule 112 (termino -> CTE_REAL .)
    SEA             reduce using rule 112 (termino -> CTE_REAL .)
    OTRO            reduce using rule 112 (termino -> CTE_REAL .)
    INICIO          reduce using rule 112 (termino -> CTE_REAL .)
    LIMPIA          reduce using rule 112 (termino -> CTE_REAL .)
    INTERRUMPE      reduce using rule 112 (termino -> CTE_REAL .)
    CONTINUA        reduce using rule 112 (termino -> CTE_REAL .)
    SI              reduce using rule 112 (termino -> CTE_REAL .)
    DESDE           reduce using rule 112 (termino -> CTE_REAL .)
    REPETIR         reduce using rule 112 (termino -> CTE_REAL .)
    MIENTRAS        reduce using rule 112 (termino -> CTE_REAL .)
    CUANDO          reduce using rule 112 (termino -> CTE_REAL .)
    REGRESA         reduce using rule 112 (termino -> CTE_REAL .)
    IMPRIME         reduce using rule 112 (termino -> CTE_REAL .)
    IMPRIMENL       reduce using rule 112 (termino -> CTE_REAL .)
    LEE             reduce using rule 112 (termino -> CTE_REAL .)
    INCR            reduce using rule 112 (termino -> CTE_REAL .)
    DECR            reduce using rule 112 (termino -> CTE_REAL .)


state 120

    (113) termino -> CTE_ALFA .

    POTENCIA        reduce using rule 113 (termino -> CTE_ALFA .)
    MULTI           reduce using rule 113 (termino -> CTE_ALFA .)
    DIV             reduce using rule 113 (termino -> CTE_ALFA .)
    MOD             reduce using rule 113 (termino -> CTE_ALFA .)
    MAS             reduce using rule 113 (termino -> CTE_ALFA .)
    MENOS           reduce using rule 113 (termino -> CTE_ALFA .)
    IDENT           reduce using rule 113 (termino -> CTE_ALFA .)
    PAREN_EMPIEZA   reduce using rule 113 (termino -> CTE_ALFA .)
    CTE_ENTERA      reduce using rule 113 (termino -> CTE_ALFA .)
    CTE_REAL        reduce using rule 113 (termino -> CTE_ALFA .)
    CTE_ALFA        reduce using rule 113 (termino -> CTE_ALFA .)
    VERDADERO       reduce using rule 113 (termino -> CTE_ALFA .)
    FALSO           reduce using rule 113 (termino -> CTE_ALFA .)
    OP_ASIG         reduce using rule 113 (termino -> CTE_ALFA .)
    OP_REL          reduce using rule 113 (termino -> CTE_ALFA .)
    Y               reduce using rule 113 (termino -> CTE_ALFA .)
    O               reduce using rule 113 (termino -> CTE_ALFA .)
    PAREN_TERMINA   reduce using rule 113 (termino -> CTE_ALFA .)
    COMA            reduce using rule 113 (termino -> CTE_ALFA .)
    PUNTO_COMA      reduce using rule 113 (termino -> CTE_ALFA .)
    HASTA           reduce using rule 113 (termino -> CTE_ALFA .)
    SINO            reduce using rule 113 (termino -> CTE_ALFA .)
    FIN             reduce using rule 113 (termino -> CTE_ALFA .)
    SEA             reduce using rule 113 (termino -> CTE_ALFA .)
    OTRO            reduce using rule 113 (termino -> CTE_ALFA .)
    INICIO          reduce using rule 113 (termino -> CTE_ALFA .)
    LIMPIA          reduce using rule 113 (termino -> CTE_ALFA .)
    INTERRUMPE      reduce using rule 113 (termino -> CTE_ALFA .)
    CONTINUA        reduce using rule 113 (termino -> CTE_ALFA .)
    SI              reduce using rule 113 (termino -> CTE_ALFA .)
    DESDE           reduce using rule 113 (termino -> CTE_ALFA .)
    REPETIR         reduce using rule 113 (termino -> CTE_ALFA .)
    MIENTRAS        reduce using rule 113 (termino -> CTE_ALFA .)
    CUANDO          reduce using rule 113 (termino -> CTE_ALFA .)
    REGRESA         reduce using rule 113 (termino -> CTE_ALFA .)
    IMPRIME         reduce using rule 113 (termino -> CTE_ALFA .)
    IMPRIMENL       reduce using rule 113 (termino -> CTE_ALFA .)
    LEE             reduce using rule 113 (termino -> CTE_ALFA .)
    INCR            reduce using rule 113 (termino -> CTE_ALFA .)
    DECR            reduce using rule 113 (termino -> CTE_ALFA .)


state 121

    (114) termino -> VERDADERO .

    POTENCIA        reduce using rule 114 (termino -> VERDADERO .)
    MULTI           reduce using rule 114 (termino -> VERDADERO .)
    DIV             reduce using rule 114 (termino -> VERDADERO .)
    MOD             reduce using rule 114 (termino -> VERDADERO .)
    MAS             reduce using rule 114 (termino -> VERDADERO .)
    MENOS           reduce using rule 114 (termino -> VERDADERO .)
    IDENT           reduce using rule 114 (termino -> VERDADERO .)
    PAREN_EMPIEZA   reduce using rule 114 (termino -> VERDADERO .)
    CTE_ENTERA      reduce using rule 114 (termino -> VERDADERO .)
    CTE_REAL        reduce using rule 114 (termino -> VERDADERO .)
    CTE_ALFA        reduce using rule 114 (termino -> VERDADERO .)
    VERDADERO       reduce using rule 114 (termino -> VERDADERO .)
    FALSO           reduce using rule 114 (termino -> VERDADERO .)
    OP_ASIG         reduce using rule 114 (termino -> VERDADERO .)
    OP_REL          reduce using rule 114 (termino -> VERDADERO .)
    Y               reduce using rule 114 (termino -> VERDADERO .)
    O               reduce using rule 114 (termino -> VERDADERO .)
    PAREN_TERMINA   reduce using rule 114 (termino -> VERDADERO .)
    COMA            reduce using rule 114 (termino -> VERDADERO .)
    PUNTO_COMA      reduce using rule 114 (termino -> VERDADERO .)
    HASTA           reduce using rule 114 (termino -> VERDADERO .)
    SINO            reduce using rule 114 (termino -> VERDADERO .)
    FIN             reduce using rule 114 (termino -> VERDADERO .)
    SEA             reduce using rule 114 (termino -> VERDADERO .)
    OTRO            reduce using rule 114 (termino -> VERDADERO .)
    INICIO          reduce using rule 114 (termino -> VERDADERO .)
    LIMPIA          reduce using rule 114 (termino -> VERDADERO .)
    INTERRUMPE      reduce using rule 114 (termino -> VERDADERO .)
    CONTINUA        reduce using rule 114 (termino -> VERDADERO .)
    SI              reduce using rule 114 (termino -> VERDADERO .)
    DESDE           reduce using rule 114 (termino -> VERDADERO .)
    REPETIR         reduce using rule 114 (termino -> VERDADERO .)
    MIENTRAS        reduce using rule 114 (termino -> VERDADERO .)
    CUANDO          reduce using rule 114 (termino -> VERDADERO .)
    REGRESA         reduce using rule 114 (termino -> VERDADERO .)
    IMPRIME         reduce using rule 114 (termino -> VERDADERO .)
    IMPRIMENL       reduce using rule 114 (termino -> VERDADERO .)
    LEE             reduce using rule 114 (termino -> VERDADERO .)
    INCR            reduce using rule 114 (termino -> VERDADERO .)
    DECR            reduce using rule 114 (termino -> VERDADERO .)


state 122

    (115) termino -> FALSO .

    POTENCIA        reduce using rule 115 (termino -> FALSO .)
    MULTI           reduce using rule 115 (termino -> FALSO .)
    DIV             reduce using rule 115 (termino -> FALSO .)
    MOD             reduce using rule 115 (termino -> FALSO .)
    MAS             reduce using rule 115 (termino -> FALSO .)
    MENOS           reduce using rule 115 (termino -> FALSO .)
    IDENT           reduce using rule 115 (termino -> FALSO .)
    PAREN_EMPIEZA   reduce using rule 115 (termino -> FALSO .)
    CTE_ENTERA      reduce using rule 115 (termino -> FALSO .)
    CTE_REAL        reduce using rule 115 (termino -> FALSO .)
    CTE_ALFA        reduce using rule 115 (termino -> FALSO .)
    VERDADERO       reduce using rule 115 (termino -> FALSO .)
    FALSO           reduce using rule 115 (termino -> FALSO .)
    OP_ASIG         reduce using rule 115 (termino -> FALSO .)
    OP_REL          reduce using rule 115 (termino -> FALSO .)
    Y               reduce using rule 115 (termino -> FALSO .)
    O               reduce using rule 115 (termino -> FALSO .)
    PAREN_TERMINA   reduce using rule 115 (termino -> FALSO .)
    COMA            reduce using rule 115 (termino -> FALSO .)
    PUNTO_COMA      reduce using rule 115 (termino -> FALSO .)
    HASTA           reduce using rule 115 (termino -> FALSO .)
    SINO            reduce using rule 115 (termino -> FALSO .)
    FIN             reduce using rule 115 (termino -> FALSO .)
    SEA             reduce using rule 115 (termino -> FALSO .)
    OTRO            reduce using rule 115 (termino -> FALSO .)
    INICIO          reduce using rule 115 (termino -> FALSO .)
    LIMPIA          reduce using rule 115 (termino -> FALSO .)
    INTERRUMPE      reduce using rule 115 (termino -> FALSO .)
    CONTINUA        reduce using rule 115 (termino -> FALSO .)
    SI              reduce using rule 115 (termino -> FALSO .)
    DESDE           reduce using rule 115 (termino -> FALSO .)
    REPETIR         reduce using rule 115 (termino -> FALSO .)
    MIENTRAS        reduce using rule 115 (termino -> FALSO .)
    CUANDO          reduce using rule 115 (termino -> FALSO .)
    REGRESA         reduce using rule 115 (termino -> FALSO .)
    IMPRIME         reduce using rule 115 (termino -> FALSO .)
    IMPRIMENL       reduce using rule 115 (termino -> FALSO .)
    LEE             reduce using rule 115 (termino -> FALSO .)
    INCR            reduce using rule 115 (termino -> FALSO .)
    DECR            reduce using rule 115 (termino -> FALSO .)


state 123

    (83) regresa -> REGRESA PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (86) exprlog -> . opy o
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 167
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 124

    (118) imprime -> IMPRIME PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (122) gpoexp -> . exprlog
    (123) gpoexp -> . exprlog COMA gpoexp
    (86) exprlog -> . opy o
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    gpoexp                         shift and go to state 168
    exprlog                        shift and go to state 169
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 125

    (119) imprimenl -> IMPRIMENL PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (122) gpoexp -> . exprlog
    (123) gpoexp -> . exprlog COMA gpoexp
    (86) exprlog -> . opy o
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    gpoexp                         shift and go to state 170
    exprlog                        shift and go to state 169
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 126

    (120) lee -> LEE PAREN_EMPIEZA . IDENT PAREN_TERMINA
    (121) lee -> LEE PAREN_EMPIEZA . IDENT dimens PAREN_TERMINA

    IDENT           shift and go to state 171


state 127

    (39) gpopars -> IDENT . maspars
    (40) maspars -> . COMA gpopars
    (41) maspars -> . empty
    (127) empty -> .

    COMA            shift and go to state 173
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    maspars                        shift and go to state 172
    empty                          shift and go to state 174

state 128

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 175


state 129

    (35) params -> gpopars . PUNTOS_DOBLES TIPO otrospars

    PUNTOS_DOBLES   shift and go to state 176


state 130

    (36) params -> empty .

    PAREN_TERMINA   reduce using rule 36 (params -> empty .)


state 131

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_TERMINA   shift and go to state 177


state 132

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 178


state 133

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 179


state 134

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 180


state 135

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)


state 136

    (12) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)


state 137

    (13) dimens -> empty .

    COMA            reduce using rule 13 (dimens -> empty .)
    PUNTOS_DOBLES   reduce using rule 13 (dimens -> empty .)
    PAREN_TERMINA   reduce using rule 13 (dimens -> empty .)


state 138

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE . PROGRAMA

    PROGRAMA        shift and go to state 181


state 139

    (47) block -> estatuto PUNTO_COMA block .

    FIN             reduce using rule 47 (block -> estatuto PUNTO_COMA block .)
    HASTA           reduce using rule 47 (block -> estatuto PUNTO_COMA block .)


state 140

    (110) termino -> PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (86) exprlog -> . opy o
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 182
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 141

    (64) si -> SI PAREN_EMPIEZA exprlog . PAREN_TERMINA HACER bckesp sino

    PAREN_TERMINA   shift and go to state 183


state 142

    (86) exprlog -> opy . o
    (87) o -> . O exprlog
    (88) o -> . empty
    (127) empty -> .

    O               shift and go to state 185
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IDENT           reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)

    o                              shift and go to state 184
    empty                          shift and go to state 186

state 143

    (89) opy -> opno .
    (90) opy -> opno . Y opy

    O               reduce using rule 89 (opy -> opno .)
    PAREN_TERMINA   reduce using rule 89 (opy -> opno .)
    COMA            reduce using rule 89 (opy -> opno .)
    PUNTO_COMA      reduce using rule 89 (opy -> opno .)
    HASTA           reduce using rule 89 (opy -> opno .)
    SINO            reduce using rule 89 (opy -> opno .)
    FIN             reduce using rule 89 (opy -> opno .)
    SEA             reduce using rule 89 (opy -> opno .)
    OTRO            reduce using rule 89 (opy -> opno .)
    INICIO          reduce using rule 89 (opy -> opno .)
    LIMPIA          reduce using rule 89 (opy -> opno .)
    INTERRUMPE      reduce using rule 89 (opy -> opno .)
    CONTINUA        reduce using rule 89 (opy -> opno .)
    SI              reduce using rule 89 (opy -> opno .)
    DESDE           reduce using rule 89 (opy -> opno .)
    REPETIR         reduce using rule 89 (opy -> opno .)
    MIENTRAS        reduce using rule 89 (opy -> opno .)
    CUANDO          reduce using rule 89 (opy -> opno .)
    REGRESA         reduce using rule 89 (opy -> opno .)
    IDENT           reduce using rule 89 (opy -> opno .)
    IMPRIME         reduce using rule 89 (opy -> opno .)
    IMPRIMENL       reduce using rule 89 (opy -> opno .)
    LEE             reduce using rule 89 (opy -> opno .)
    Y               shift and go to state 187


state 144

    (91) opno -> oprel .

    Y               reduce using rule 91 (opno -> oprel .)
    O               reduce using rule 91 (opno -> oprel .)
    PAREN_TERMINA   reduce using rule 91 (opno -> oprel .)
    COMA            reduce using rule 91 (opno -> oprel .)
    PUNTO_COMA      reduce using rule 91 (opno -> oprel .)
    HASTA           reduce using rule 91 (opno -> oprel .)
    SINO            reduce using rule 91 (opno -> oprel .)
    FIN             reduce using rule 91 (opno -> oprel .)
    SEA             reduce using rule 91 (opno -> oprel .)
    OTRO            reduce using rule 91 (opno -> oprel .)
    INICIO          reduce using rule 91 (opno -> oprel .)
    LIMPIA          reduce using rule 91 (opno -> oprel .)
    INTERRUMPE      reduce using rule 91 (opno -> oprel .)
    CONTINUA        reduce using rule 91 (opno -> oprel .)
    SI              reduce using rule 91 (opno -> oprel .)
    DESDE           reduce using rule 91 (opno -> oprel .)
    REPETIR         reduce using rule 91 (opno -> oprel .)
    MIENTRAS        reduce using rule 91 (opno -> oprel .)
    CUANDO          reduce using rule 91 (opno -> oprel .)
    REGRESA         reduce using rule 91 (opno -> oprel .)
    IDENT           reduce using rule 91 (opno -> oprel .)
    IMPRIME         reduce using rule 91 (opno -> oprel .)
    IMPRIMENL       reduce using rule 91 (opno -> oprel .)
    LEE             reduce using rule 91 (opno -> oprel .)


state 145

    (92) opno -> NO . oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for IDENT resolved as shift
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! IDENT           [ reduce using rule 127 (empty -> .) ]

    oprel                          shift and go to state 188
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 146

    (93) oprel -> expr .
    (94) oprel -> expr . OP_REL oprel

    Y               reduce using rule 93 (oprel -> expr .)
    O               reduce using rule 93 (oprel -> expr .)
    PAREN_TERMINA   reduce using rule 93 (oprel -> expr .)
    COMA            reduce using rule 93 (oprel -> expr .)
    PUNTO_COMA      reduce using rule 93 (oprel -> expr .)
    HASTA           reduce using rule 93 (oprel -> expr .)
    SINO            reduce using rule 93 (oprel -> expr .)
    FIN             reduce using rule 93 (oprel -> expr .)
    SEA             reduce using rule 93 (oprel -> expr .)
    OTRO            reduce using rule 93 (oprel -> expr .)
    INICIO          reduce using rule 93 (oprel -> expr .)
    LIMPIA          reduce using rule 93 (oprel -> expr .)
    INTERRUMPE      reduce using rule 93 (oprel -> expr .)
    CONTINUA        reduce using rule 93 (oprel -> expr .)
    SI              reduce using rule 93 (oprel -> expr .)
    DESDE           reduce using rule 93 (oprel -> expr .)
    REPETIR         reduce using rule 93 (oprel -> expr .)
    MIENTRAS        reduce using rule 93 (oprel -> expr .)
    CUANDO          reduce using rule 93 (oprel -> expr .)
    REGRESA         reduce using rule 93 (oprel -> expr .)
    IDENT           reduce using rule 93 (oprel -> expr .)
    IMPRIME         reduce using rule 93 (oprel -> expr .)
    IMPRIMENL       reduce using rule 93 (oprel -> expr .)
    LEE             reduce using rule 93 (oprel -> expr .)
    OP_REL          shift and go to state 189


state 147

    (102) multi -> empty .

    OP_REL          reduce using rule 102 (multi -> empty .)
    Y               reduce using rule 102 (multi -> empty .)
    O               reduce using rule 102 (multi -> empty .)
    PAREN_TERMINA   reduce using rule 102 (multi -> empty .)
    POTENCIA        reduce using rule 102 (multi -> empty .)
    MULTI           reduce using rule 102 (multi -> empty .)
    DIV             reduce using rule 102 (multi -> empty .)
    MOD             reduce using rule 102 (multi -> empty .)
    MAS             reduce using rule 102 (multi -> empty .)
    MENOS           reduce using rule 102 (multi -> empty .)
    IDENT           reduce using rule 102 (multi -> empty .)
    PAREN_EMPIEZA   reduce using rule 102 (multi -> empty .)
    CTE_ENTERA      reduce using rule 102 (multi -> empty .)
    CTE_REAL        reduce using rule 102 (multi -> empty .)
    CTE_ALFA        reduce using rule 102 (multi -> empty .)
    VERDADERO       reduce using rule 102 (multi -> empty .)
    FALSO           reduce using rule 102 (multi -> empty .)
    OP_ASIG         reduce using rule 102 (multi -> empty .)
    COMA            reduce using rule 102 (multi -> empty .)
    PUNTO_COMA      reduce using rule 102 (multi -> empty .)
    HASTA           reduce using rule 102 (multi -> empty .)
    SINO            reduce using rule 102 (multi -> empty .)
    FIN             reduce using rule 102 (multi -> empty .)
    SEA             reduce using rule 102 (multi -> empty .)
    OTRO            reduce using rule 102 (multi -> empty .)
    INICIO          reduce using rule 102 (multi -> empty .)
    LIMPIA          reduce using rule 102 (multi -> empty .)
    INTERRUMPE      reduce using rule 102 (multi -> empty .)
    CONTINUA        reduce using rule 102 (multi -> empty .)
    SI              reduce using rule 102 (multi -> empty .)
    DESDE           reduce using rule 102 (multi -> empty .)
    REPETIR         reduce using rule 102 (multi -> empty .)
    MIENTRAS        reduce using rule 102 (multi -> empty .)
    CUANDO          reduce using rule 102 (multi -> empty .)
    REGRESA         reduce using rule 102 (multi -> empty .)
    IMPRIME         reduce using rule 102 (multi -> empty .)
    IMPRIMENL       reduce using rule 102 (multi -> empty .)
    LEE             reduce using rule 102 (multi -> empty .)
    INCR            reduce using rule 102 (multi -> empty .)
    DECR            reduce using rule 102 (multi -> empty .)


state 148

    (70) desde -> DESDE EL VALOR . DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> DESDE EL VALOR . DE asigna HASTA expr DECR CTE_ENTERA bckesp

    DE              shift and go to state 190


state 149

    (72) repetir -> REPETIR block HASTA . QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    QUE             shift and go to state 191


state 150

    (73) mientras -> MIENTRAS SE CUMPLA . QUE exprlog bckesp

    QUE             shift and go to state 192


state 151

    (75) cuando -> CUANDO EL VALOR . DE IDENT INICIO gposea otro FIN

    DE              shift and go to state 193


state 152

    (117) lfunc -> IDENT . PAREN_EMPIEZA uparams PAREN_TERMINA
    (107) termino -> IDENT .
    (108) termino -> IDENT . lfunc
    (109) termino -> IDENT . udim
    (117) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (84) udim -> . expr udim
    (85) udim -> . empty
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (127) empty -> .
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! reduce/reduce conflict for POTENCIA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 107 (termino -> IDENT .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! reduce/reduce conflict for CTE_ENTERA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_REAL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_ALFA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for VERDADERO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for FALSO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_ASIG resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for COMA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for HASTA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SINO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for FIN resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SEA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for OTRO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INICIO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SI resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DESDE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for REPETIR resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CUANDO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for REGRESA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for LEE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INCR resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DECR resolved using rule 107 (termino -> IDENT .)
    PAREN_EMPIEZA   shift and go to state 194
    POTENCIA        reduce using rule 107 (termino -> IDENT .)
    MULTI           reduce using rule 107 (termino -> IDENT .)
    DIV             reduce using rule 107 (termino -> IDENT .)
    MOD             reduce using rule 107 (termino -> IDENT .)
    CTE_ENTERA      reduce using rule 107 (termino -> IDENT .)
    CTE_REAL        reduce using rule 107 (termino -> IDENT .)
    CTE_ALFA        reduce using rule 107 (termino -> IDENT .)
    VERDADERO       reduce using rule 107 (termino -> IDENT .)
    FALSO           reduce using rule 107 (termino -> IDENT .)
    OP_ASIG         reduce using rule 107 (termino -> IDENT .)
    OP_REL          reduce using rule 107 (termino -> IDENT .)
    Y               reduce using rule 107 (termino -> IDENT .)
    O               reduce using rule 107 (termino -> IDENT .)
    PAREN_TERMINA   reduce using rule 107 (termino -> IDENT .)
    COMA            reduce using rule 107 (termino -> IDENT .)
    PUNTO_COMA      reduce using rule 107 (termino -> IDENT .)
    HASTA           reduce using rule 107 (termino -> IDENT .)
    SINO            reduce using rule 107 (termino -> IDENT .)
    FIN             reduce using rule 107 (termino -> IDENT .)
    SEA             reduce using rule 107 (termino -> IDENT .)
    OTRO            reduce using rule 107 (termino -> IDENT .)
    INICIO          reduce using rule 107 (termino -> IDENT .)
    LIMPIA          reduce using rule 107 (termino -> IDENT .)
    INTERRUMPE      reduce using rule 107 (termino -> IDENT .)
    CONTINUA        reduce using rule 107 (termino -> IDENT .)
    SI              reduce using rule 107 (termino -> IDENT .)
    DESDE           reduce using rule 107 (termino -> IDENT .)
    REPETIR         reduce using rule 107 (termino -> IDENT .)
    MIENTRAS        reduce using rule 107 (termino -> IDENT .)
    CUANDO          reduce using rule 107 (termino -> IDENT .)
    REGRESA         reduce using rule 107 (termino -> IDENT .)
    IMPRIME         reduce using rule 107 (termino -> IDENT .)
    IMPRIMENL       reduce using rule 107 (termino -> IDENT .)
    LEE             reduce using rule 107 (termino -> IDENT .)
    INCR            reduce using rule 107 (termino -> IDENT .)
    DECR            reduce using rule 107 (termino -> IDENT .)
    IDENT           shift and go to state 152
    MAS             shift and go to state 113
    MENOS           shift and go to state 114

  ! MAS             [ reduce using rule 107 (termino -> IDENT .) ]
  ! MENOS           [ reduce using rule 107 (termino -> IDENT .) ]
  ! IDENT           [ reduce using rule 107 (termino -> IDENT .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 107 (termino -> IDENT .) ]
  ! POTENCIA        [ reduce using rule 127 (empty -> .) ]
  ! MULTI           [ reduce using rule 127 (empty -> .) ]
  ! DIV             [ reduce using rule 127 (empty -> .) ]
  ! MOD             [ reduce using rule 127 (empty -> .) ]
  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! OP_ASIG         [ reduce using rule 127 (empty -> .) ]
  ! OP_REL          [ reduce using rule 127 (empty -> .) ]
  ! Y               [ reduce using rule 127 (empty -> .) ]
  ! O               [ reduce using rule 127 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 127 (empty -> .) ]
  ! COMA            [ reduce using rule 127 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 127 (empty -> .) ]
  ! HASTA           [ reduce using rule 127 (empty -> .) ]
  ! SINO            [ reduce using rule 127 (empty -> .) ]
  ! FIN             [ reduce using rule 127 (empty -> .) ]
  ! SEA             [ reduce using rule 127 (empty -> .) ]
  ! OTRO            [ reduce using rule 127 (empty -> .) ]
  ! INICIO          [ reduce using rule 127 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 127 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 127 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! DESDE           [ reduce using rule 127 (empty -> .) ]
  ! REPETIR         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! CUANDO          [ reduce using rule 127 (empty -> .) ]
  ! REGRESA         [ reduce using rule 127 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 127 (empty -> .) ]
  ! LEE             [ reduce using rule 127 (empty -> .) ]
  ! INCR            [ reduce using rule 127 (empty -> .) ]
  ! DECR            [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ shift and go to state 118 ]
  ! CTE_REAL        [ shift and go to state 119 ]
  ! CTE_ALFA        [ shift and go to state 120 ]
  ! VERDADERO       [ shift and go to state 121 ]
  ! FALSO           [ shift and go to state 122 ]

    lfunc                          shift and go to state 153
    udim                           shift and go to state 154
    expr                           shift and go to state 110
    empty                          shift and go to state 111
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 153

    (108) termino -> IDENT lfunc .

    POTENCIA        reduce using rule 108 (termino -> IDENT lfunc .)
    MULTI           reduce using rule 108 (termino -> IDENT lfunc .)
    DIV             reduce using rule 108 (termino -> IDENT lfunc .)
    MOD             reduce using rule 108 (termino -> IDENT lfunc .)
    MAS             reduce using rule 108 (termino -> IDENT lfunc .)
    MENOS           reduce using rule 108 (termino -> IDENT lfunc .)
    IDENT           reduce using rule 108 (termino -> IDENT lfunc .)
    PAREN_EMPIEZA   reduce using rule 108 (termino -> IDENT lfunc .)
    CTE_ENTERA      reduce using rule 108 (termino -> IDENT lfunc .)
    CTE_REAL        reduce using rule 108 (termino -> IDENT lfunc .)
    CTE_ALFA        reduce using rule 108 (termino -> IDENT lfunc .)
    VERDADERO       reduce using rule 108 (termino -> IDENT lfunc .)
    FALSO           reduce using rule 108 (termino -> IDENT lfunc .)
    OP_ASIG         reduce using rule 108 (termino -> IDENT lfunc .)
    OP_REL          reduce using rule 108 (termino -> IDENT lfunc .)
    Y               reduce using rule 108 (termino -> IDENT lfunc .)
    O               reduce using rule 108 (termino -> IDENT lfunc .)
    PAREN_TERMINA   reduce using rule 108 (termino -> IDENT lfunc .)
    COMA            reduce using rule 108 (termino -> IDENT lfunc .)
    PUNTO_COMA      reduce using rule 108 (termino -> IDENT lfunc .)
    HASTA           reduce using rule 108 (termino -> IDENT lfunc .)
    SINO            reduce using rule 108 (termino -> IDENT lfunc .)
    FIN             reduce using rule 108 (termino -> IDENT lfunc .)
    SEA             reduce using rule 108 (termino -> IDENT lfunc .)
    OTRO            reduce using rule 108 (termino -> IDENT lfunc .)
    INICIO          reduce using rule 108 (termino -> IDENT lfunc .)
    LIMPIA          reduce using rule 108 (termino -> IDENT lfunc .)
    INTERRUMPE      reduce using rule 108 (termino -> IDENT lfunc .)
    CONTINUA        reduce using rule 108 (termino -> IDENT lfunc .)
    SI              reduce using rule 108 (termino -> IDENT lfunc .)
    DESDE           reduce using rule 108 (termino -> IDENT lfunc .)
    REPETIR         reduce using rule 108 (termino -> IDENT lfunc .)
    MIENTRAS        reduce using rule 108 (termino -> IDENT lfunc .)
    CUANDO          reduce using rule 108 (termino -> IDENT lfunc .)
    REGRESA         reduce using rule 108 (termino -> IDENT lfunc .)
    IMPRIME         reduce using rule 108 (termino -> IDENT lfunc .)
    IMPRIMENL       reduce using rule 108 (termino -> IDENT lfunc .)
    LEE             reduce using rule 108 (termino -> IDENT lfunc .)
    INCR            reduce using rule 108 (termino -> IDENT lfunc .)
    DECR            reduce using rule 108 (termino -> IDENT lfunc .)


state 154

    (109) termino -> IDENT udim .

    POTENCIA        reduce using rule 109 (termino -> IDENT udim .)
    MULTI           reduce using rule 109 (termino -> IDENT udim .)
    DIV             reduce using rule 109 (termino -> IDENT udim .)
    MOD             reduce using rule 109 (termino -> IDENT udim .)
    MAS             reduce using rule 109 (termino -> IDENT udim .)
    MENOS           reduce using rule 109 (termino -> IDENT udim .)
    IDENT           reduce using rule 109 (termino -> IDENT udim .)
    PAREN_EMPIEZA   reduce using rule 109 (termino -> IDENT udim .)
    CTE_ENTERA      reduce using rule 109 (termino -> IDENT udim .)
    CTE_REAL        reduce using rule 109 (termino -> IDENT udim .)
    CTE_ALFA        reduce using rule 109 (termino -> IDENT udim .)
    VERDADERO       reduce using rule 109 (termino -> IDENT udim .)
    FALSO           reduce using rule 109 (termino -> IDENT udim .)
    OP_ASIG         reduce using rule 109 (termino -> IDENT udim .)
    OP_REL          reduce using rule 109 (termino -> IDENT udim .)
    Y               reduce using rule 109 (termino -> IDENT udim .)
    O               reduce using rule 109 (termino -> IDENT udim .)
    PAREN_TERMINA   reduce using rule 109 (termino -> IDENT udim .)
    COMA            reduce using rule 109 (termino -> IDENT udim .)
    PUNTO_COMA      reduce using rule 109 (termino -> IDENT udim .)
    HASTA           reduce using rule 109 (termino -> IDENT udim .)
    SINO            reduce using rule 109 (termino -> IDENT udim .)
    FIN             reduce using rule 109 (termino -> IDENT udim .)
    SEA             reduce using rule 109 (termino -> IDENT udim .)
    OTRO            reduce using rule 109 (termino -> IDENT udim .)
    INICIO          reduce using rule 109 (termino -> IDENT udim .)
    LIMPIA          reduce using rule 109 (termino -> IDENT udim .)
    INTERRUMPE      reduce using rule 109 (termino -> IDENT udim .)
    CONTINUA        reduce using rule 109 (termino -> IDENT udim .)
    SI              reduce using rule 109 (termino -> IDENT udim .)
    DESDE           reduce using rule 109 (termino -> IDENT udim .)
    REPETIR         reduce using rule 109 (termino -> IDENT udim .)
    MIENTRAS        reduce using rule 109 (termino -> IDENT udim .)
    CUANDO          reduce using rule 109 (termino -> IDENT udim .)
    REGRESA         reduce using rule 109 (termino -> IDENT udim .)
    IMPRIME         reduce using rule 109 (termino -> IDENT udim .)
    IMPRIMENL       reduce using rule 109 (termino -> IDENT udim .)
    LEE             reduce using rule 109 (termino -> IDENT udim .)
    INCR            reduce using rule 109 (termino -> IDENT udim .)
    DECR            reduce using rule 109 (termino -> IDENT udim .)


state 155

    (74) asigna -> IDENT udim OP_ASIG . exprlog
    (86) exprlog -> . opy o
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 195
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 156

    (116) lproc -> IDENT PAREN_EMPIEZA uparams . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 196


state 157

    (110) termino -> PAREN_EMPIEZA exprlog . PAREN_TERMINA
    (124) uparams -> exprlog .
    (125) uparams -> exprlog . COMA uparams

  ! shift/reduce conflict for PAREN_TERMINA resolved as shift
    PAREN_TERMINA   shift and go to state 197
    COMA            shift and go to state 198

  ! PAREN_TERMINA   [ reduce using rule 124 (uparams -> exprlog .) ]


state 158

    (126) uparams -> empty .
    (102) multi -> empty .

  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 102 (multi -> empty .)
    OP_REL          reduce using rule 102 (multi -> empty .)
    Y               reduce using rule 102 (multi -> empty .)
    O               reduce using rule 102 (multi -> empty .)
    PAREN_TERMINA   reduce using rule 102 (multi -> empty .)
    COMA            reduce using rule 102 (multi -> empty .)

  ! PAREN_TERMINA   [ reduce using rule 126 (uparams -> empty .) ]


state 159

    (84) udim -> expr udim .

    OP_ASIG         reduce using rule 84 (udim -> expr udim .)
    POTENCIA        reduce using rule 84 (udim -> expr udim .)
    MULTI           reduce using rule 84 (udim -> expr udim .)
    DIV             reduce using rule 84 (udim -> expr udim .)
    MOD             reduce using rule 84 (udim -> expr udim .)
    MAS             reduce using rule 84 (udim -> expr udim .)
    MENOS           reduce using rule 84 (udim -> expr udim .)
    IDENT           reduce using rule 84 (udim -> expr udim .)
    PAREN_EMPIEZA   reduce using rule 84 (udim -> expr udim .)
    CTE_ENTERA      reduce using rule 84 (udim -> expr udim .)
    CTE_REAL        reduce using rule 84 (udim -> expr udim .)
    CTE_ALFA        reduce using rule 84 (udim -> expr udim .)
    VERDADERO       reduce using rule 84 (udim -> expr udim .)
    FALSO           reduce using rule 84 (udim -> expr udim .)
    OP_REL          reduce using rule 84 (udim -> expr udim .)
    Y               reduce using rule 84 (udim -> expr udim .)
    O               reduce using rule 84 (udim -> expr udim .)
    PAREN_TERMINA   reduce using rule 84 (udim -> expr udim .)
    COMA            reduce using rule 84 (udim -> expr udim .)
    PUNTO_COMA      reduce using rule 84 (udim -> expr udim .)
    HASTA           reduce using rule 84 (udim -> expr udim .)
    SINO            reduce using rule 84 (udim -> expr udim .)
    FIN             reduce using rule 84 (udim -> expr udim .)
    SEA             reduce using rule 84 (udim -> expr udim .)
    OTRO            reduce using rule 84 (udim -> expr udim .)
    INICIO          reduce using rule 84 (udim -> expr udim .)
    LIMPIA          reduce using rule 84 (udim -> expr udim .)
    INTERRUMPE      reduce using rule 84 (udim -> expr udim .)
    CONTINUA        reduce using rule 84 (udim -> expr udim .)
    SI              reduce using rule 84 (udim -> expr udim .)
    DESDE           reduce using rule 84 (udim -> expr udim .)
    REPETIR         reduce using rule 84 (udim -> expr udim .)
    MIENTRAS        reduce using rule 84 (udim -> expr udim .)
    CUANDO          reduce using rule 84 (udim -> expr udim .)
    REGRESA         reduce using rule 84 (udim -> expr udim .)
    IMPRIME         reduce using rule 84 (udim -> expr udim .)
    IMPRIMENL       reduce using rule 84 (udim -> expr udim .)
    LEE             reduce using rule 84 (udim -> expr udim .)
    INCR            reduce using rule 84 (udim -> expr udim .)
    DECR            reduce using rule 84 (udim -> expr udim .)


state 160

    (96) expr -> MAS expr .

    MAS             reduce using rule 96 (expr -> MAS expr .)
    MENOS           reduce using rule 96 (expr -> MAS expr .)
    IDENT           reduce using rule 96 (expr -> MAS expr .)
    PAREN_EMPIEZA   reduce using rule 96 (expr -> MAS expr .)
    CTE_ENTERA      reduce using rule 96 (expr -> MAS expr .)
    CTE_REAL        reduce using rule 96 (expr -> MAS expr .)
    CTE_ALFA        reduce using rule 96 (expr -> MAS expr .)
    VERDADERO       reduce using rule 96 (expr -> MAS expr .)
    FALSO           reduce using rule 96 (expr -> MAS expr .)
    OP_ASIG         reduce using rule 96 (expr -> MAS expr .)
    OP_REL          reduce using rule 96 (expr -> MAS expr .)
    Y               reduce using rule 96 (expr -> MAS expr .)
    O               reduce using rule 96 (expr -> MAS expr .)
    PAREN_TERMINA   reduce using rule 96 (expr -> MAS expr .)
    POTENCIA        reduce using rule 96 (expr -> MAS expr .)
    MULTI           reduce using rule 96 (expr -> MAS expr .)
    DIV             reduce using rule 96 (expr -> MAS expr .)
    MOD             reduce using rule 96 (expr -> MAS expr .)
    COMA            reduce using rule 96 (expr -> MAS expr .)
    PUNTO_COMA      reduce using rule 96 (expr -> MAS expr .)
    HASTA           reduce using rule 96 (expr -> MAS expr .)
    SINO            reduce using rule 96 (expr -> MAS expr .)
    FIN             reduce using rule 96 (expr -> MAS expr .)
    SEA             reduce using rule 96 (expr -> MAS expr .)
    OTRO            reduce using rule 96 (expr -> MAS expr .)
    INICIO          reduce using rule 96 (expr -> MAS expr .)
    LIMPIA          reduce using rule 96 (expr -> MAS expr .)
    INTERRUMPE      reduce using rule 96 (expr -> MAS expr .)
    CONTINUA        reduce using rule 96 (expr -> MAS expr .)
    SI              reduce using rule 96 (expr -> MAS expr .)
    DESDE           reduce using rule 96 (expr -> MAS expr .)
    REPETIR         reduce using rule 96 (expr -> MAS expr .)
    MIENTRAS        reduce using rule 96 (expr -> MAS expr .)
    CUANDO          reduce using rule 96 (expr -> MAS expr .)
    REGRESA         reduce using rule 96 (expr -> MAS expr .)
    IMPRIME         reduce using rule 96 (expr -> MAS expr .)
    IMPRIMENL       reduce using rule 96 (expr -> MAS expr .)
    LEE             reduce using rule 96 (expr -> MAS expr .)
    INCR            reduce using rule 96 (expr -> MAS expr .)
    DECR            reduce using rule 96 (expr -> MAS expr .)


state 161

    (97) expr -> MENOS expr .

    MAS             reduce using rule 97 (expr -> MENOS expr .)
    MENOS           reduce using rule 97 (expr -> MENOS expr .)
    IDENT           reduce using rule 97 (expr -> MENOS expr .)
    PAREN_EMPIEZA   reduce using rule 97 (expr -> MENOS expr .)
    CTE_ENTERA      reduce using rule 97 (expr -> MENOS expr .)
    CTE_REAL        reduce using rule 97 (expr -> MENOS expr .)
    CTE_ALFA        reduce using rule 97 (expr -> MENOS expr .)
    VERDADERO       reduce using rule 97 (expr -> MENOS expr .)
    FALSO           reduce using rule 97 (expr -> MENOS expr .)
    OP_ASIG         reduce using rule 97 (expr -> MENOS expr .)
    OP_REL          reduce using rule 97 (expr -> MENOS expr .)
    Y               reduce using rule 97 (expr -> MENOS expr .)
    O               reduce using rule 97 (expr -> MENOS expr .)
    PAREN_TERMINA   reduce using rule 97 (expr -> MENOS expr .)
    POTENCIA        reduce using rule 97 (expr -> MENOS expr .)
    MULTI           reduce using rule 97 (expr -> MENOS expr .)
    DIV             reduce using rule 97 (expr -> MENOS expr .)
    MOD             reduce using rule 97 (expr -> MENOS expr .)
    COMA            reduce using rule 97 (expr -> MENOS expr .)
    PUNTO_COMA      reduce using rule 97 (expr -> MENOS expr .)
    HASTA           reduce using rule 97 (expr -> MENOS expr .)
    SINO            reduce using rule 97 (expr -> MENOS expr .)
    FIN             reduce using rule 97 (expr -> MENOS expr .)
    SEA             reduce using rule 97 (expr -> MENOS expr .)
    OTRO            reduce using rule 97 (expr -> MENOS expr .)
    INICIO          reduce using rule 97 (expr -> MENOS expr .)
    LIMPIA          reduce using rule 97 (expr -> MENOS expr .)
    INTERRUMPE      reduce using rule 97 (expr -> MENOS expr .)
    CONTINUA        reduce using rule 97 (expr -> MENOS expr .)
    SI              reduce using rule 97 (expr -> MENOS expr .)
    DESDE           reduce using rule 97 (expr -> MENOS expr .)
    REPETIR         reduce using rule 97 (expr -> MENOS expr .)
    MIENTRAS        reduce using rule 97 (expr -> MENOS expr .)
    CUANDO          reduce using rule 97 (expr -> MENOS expr .)
    REGRESA         reduce using rule 97 (expr -> MENOS expr .)
    IMPRIME         reduce using rule 97 (expr -> MENOS expr .)
    IMPRIMENL       reduce using rule 97 (expr -> MENOS expr .)
    LEE             reduce using rule 97 (expr -> MENOS expr .)
    INCR            reduce using rule 97 (expr -> MENOS expr .)
    DECR            reduce using rule 97 (expr -> MENOS expr .)


state 162

    (106) signo -> MENOS termino .
    (105) signo -> termino .

  ! reduce/reduce conflict for POTENCIA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for MULTI resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for DIV resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for MOD resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for MAS resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for MENOS resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for IDENT resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for PAREN_EMPIEZA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for CTE_ENTERA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for CTE_REAL resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for CTE_ALFA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for VERDADERO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for FALSO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for OP_ASIG resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for OP_REL resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for Y resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for O resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for COMA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for HASTA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for SINO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for FIN resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for SEA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for OTRO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for INICIO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for SI resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for DESDE resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for REPETIR resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for CUANDO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for REGRESA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for LEE resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for INCR resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for DECR resolved using rule 105 (signo -> termino .)
    POTENCIA        reduce using rule 105 (signo -> termino .)
    MULTI           reduce using rule 105 (signo -> termino .)
    DIV             reduce using rule 105 (signo -> termino .)
    MOD             reduce using rule 105 (signo -> termino .)
    MAS             reduce using rule 105 (signo -> termino .)
    MENOS           reduce using rule 105 (signo -> termino .)
    IDENT           reduce using rule 105 (signo -> termino .)
    PAREN_EMPIEZA   reduce using rule 105 (signo -> termino .)
    CTE_ENTERA      reduce using rule 105 (signo -> termino .)
    CTE_REAL        reduce using rule 105 (signo -> termino .)
    CTE_ALFA        reduce using rule 105 (signo -> termino .)
    VERDADERO       reduce using rule 105 (signo -> termino .)
    FALSO           reduce using rule 105 (signo -> termino .)
    OP_ASIG         reduce using rule 105 (signo -> termino .)
    OP_REL          reduce using rule 105 (signo -> termino .)
    Y               reduce using rule 105 (signo -> termino .)
    O               reduce using rule 105 (signo -> termino .)
    PAREN_TERMINA   reduce using rule 105 (signo -> termino .)
    COMA            reduce using rule 105 (signo -> termino .)
    PUNTO_COMA      reduce using rule 105 (signo -> termino .)
    HASTA           reduce using rule 105 (signo -> termino .)
    SINO            reduce using rule 105 (signo -> termino .)
    FIN             reduce using rule 105 (signo -> termino .)
    SEA             reduce using rule 105 (signo -> termino .)
    OTRO            reduce using rule 105 (signo -> termino .)
    INICIO          reduce using rule 105 (signo -> termino .)
    LIMPIA          reduce using rule 105 (signo -> termino .)
    INTERRUMPE      reduce using rule 105 (signo -> termino .)
    CONTINUA        reduce using rule 105 (signo -> termino .)
    SI              reduce using rule 105 (signo -> termino .)
    DESDE           reduce using rule 105 (signo -> termino .)
    REPETIR         reduce using rule 105 (signo -> termino .)
    MIENTRAS        reduce using rule 105 (signo -> termino .)
    CUANDO          reduce using rule 105 (signo -> termino .)
    REGRESA         reduce using rule 105 (signo -> termino .)
    IMPRIME         reduce using rule 105 (signo -> termino .)
    IMPRIMENL       reduce using rule 105 (signo -> termino .)
    LEE             reduce using rule 105 (signo -> termino .)
    INCR            reduce using rule 105 (signo -> termino .)
    DECR            reduce using rule 105 (signo -> termino .)

  ! POTENCIA        [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! MULTI           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! DIV             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! MOD             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! MAS             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! MENOS           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! IDENT           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! CTE_ENTERA      [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! CTE_REAL        [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! CTE_ALFA        [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! VERDADERO       [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! FALSO           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! OP_ASIG         [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! OP_REL          [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! Y               [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! O               [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! PAREN_TERMINA   [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! COMA            [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! PUNTO_COMA      [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! HASTA           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! SINO            [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! FIN             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! SEA             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! OTRO            [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! INICIO          [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! LIMPIA          [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! INTERRUMPE      [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! CONTINUA        [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! SI              [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! DESDE           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! REPETIR         [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! MIENTRAS        [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! CUANDO          [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! REGRESA         [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! IMPRIME         [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! IMPRIMENL       [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! LEE             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! INCR            [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! DECR            [ reduce using rule 106 (signo -> MENOS termino .) ]


state 163

    (99) multi -> expo MULTI . multi
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    MAS             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    MENOS           shift and go to state 200
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]

    expo                           shift and go to state 115
    multi                          shift and go to state 199
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 164

    (100) multi -> expo DIV . multi
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    MAS             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    MENOS           shift and go to state 200
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]

    expo                           shift and go to state 115
    multi                          shift and go to state 201
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 165

    (101) multi -> expo MOD . multi
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    MAS             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    MENOS           shift and go to state 200
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]

    expo                           shift and go to state 115
    multi                          shift and go to state 202
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 166

    (104) expo -> signo POTENCIA . expo
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    MENOS           shift and go to state 200
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    signo                          shift and go to state 116
    expo                           shift and go to state 203
    termino                        shift and go to state 117

state 167

    (83) regresa -> REGRESA PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 204


state 168

    (118) imprime -> IMPRIME PAREN_EMPIEZA gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 205


state 169

    (122) gpoexp -> exprlog .
    (123) gpoexp -> exprlog . COMA gpoexp

    PAREN_TERMINA   reduce using rule 122 (gpoexp -> exprlog .)
    COMA            shift and go to state 206


state 170

    (119) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 207


state 171

    (120) lee -> LEE PAREN_EMPIEZA IDENT . PAREN_TERMINA
    (121) lee -> LEE PAREN_EMPIEZA IDENT . dimens PAREN_TERMINA
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (127) empty -> .

  ! shift/reduce conflict for PAREN_TERMINA resolved as shift
    PAREN_TERMINA   shift and go to state 208
    CORCHETE_EMPIEZA shift and go to state 35

  ! PAREN_TERMINA   [ reduce using rule 127 (empty -> .) ]

    dimens                         shift and go to state 209
    empty                          shift and go to state 137

state 172

    (39) gpopars -> IDENT maspars .

    PUNTOS_DOBLES   reduce using rule 39 (gpopars -> IDENT maspars .)


state 173

    (40) maspars -> COMA . gpopars
    (39) gpopars -> . IDENT maspars

    IDENT           shift and go to state 127

    gpopars                        shift and go to state 210

state 174

    (41) maspars -> empty .

    PUNTOS_DOBLES   reduce using rule 41 (maspars -> empty .)


state 175

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (127) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 127 (empty -> .)

    variables                      shift and go to state 211
    empty                          shift and go to state 7

state 176

    (35) params -> gpopars PUNTOS_DOBLES . TIPO otrospars

    TIPO            shift and go to state 212


state 177

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 213


state 178

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 26 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    FUNCION         reduce using rule 26 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    PROGRAMA        reduce using rule 26 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)


state 179

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 214


state 180

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 215


state 181

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA .

    $end            reduce using rule 1 (program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA .)


state 182

    (110) termino -> PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 197


state 183

    (64) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA . HACER bckesp sino

    HACER           shift and go to state 216


state 184

    (86) exprlog -> opy o .

    PAREN_TERMINA   reduce using rule 86 (exprlog -> opy o .)
    COMA            reduce using rule 86 (exprlog -> opy o .)
    PUNTO_COMA      reduce using rule 86 (exprlog -> opy o .)
    HASTA           reduce using rule 86 (exprlog -> opy o .)
    SINO            reduce using rule 86 (exprlog -> opy o .)
    FIN             reduce using rule 86 (exprlog -> opy o .)
    SEA             reduce using rule 86 (exprlog -> opy o .)
    OTRO            reduce using rule 86 (exprlog -> opy o .)
    INICIO          reduce using rule 86 (exprlog -> opy o .)
    LIMPIA          reduce using rule 86 (exprlog -> opy o .)
    INTERRUMPE      reduce using rule 86 (exprlog -> opy o .)
    CONTINUA        reduce using rule 86 (exprlog -> opy o .)
    SI              reduce using rule 86 (exprlog -> opy o .)
    DESDE           reduce using rule 86 (exprlog -> opy o .)
    REPETIR         reduce using rule 86 (exprlog -> opy o .)
    MIENTRAS        reduce using rule 86 (exprlog -> opy o .)
    CUANDO          reduce using rule 86 (exprlog -> opy o .)
    REGRESA         reduce using rule 86 (exprlog -> opy o .)
    IDENT           reduce using rule 86 (exprlog -> opy o .)
    IMPRIME         reduce using rule 86 (exprlog -> opy o .)
    IMPRIMENL       reduce using rule 86 (exprlog -> opy o .)
    LEE             reduce using rule 86 (exprlog -> opy o .)


state 185

    (87) o -> O . exprlog
    (86) exprlog -> . opy o
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! IDENT           [ reduce using rule 127 (empty -> .) ]

    exprlog                        shift and go to state 217
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 186

    (88) o -> empty .

    PAREN_TERMINA   reduce using rule 88 (o -> empty .)
    COMA            reduce using rule 88 (o -> empty .)
    PUNTO_COMA      reduce using rule 88 (o -> empty .)
    HASTA           reduce using rule 88 (o -> empty .)
    SINO            reduce using rule 88 (o -> empty .)
    FIN             reduce using rule 88 (o -> empty .)
    SEA             reduce using rule 88 (o -> empty .)
    OTRO            reduce using rule 88 (o -> empty .)
    INICIO          reduce using rule 88 (o -> empty .)
    LIMPIA          reduce using rule 88 (o -> empty .)
    INTERRUMPE      reduce using rule 88 (o -> empty .)
    CONTINUA        reduce using rule 88 (o -> empty .)
    SI              reduce using rule 88 (o -> empty .)
    DESDE           reduce using rule 88 (o -> empty .)
    REPETIR         reduce using rule 88 (o -> empty .)
    MIENTRAS        reduce using rule 88 (o -> empty .)
    CUANDO          reduce using rule 88 (o -> empty .)
    REGRESA         reduce using rule 88 (o -> empty .)
    IDENT           reduce using rule 88 (o -> empty .)
    IMPRIME         reduce using rule 88 (o -> empty .)
    IMPRIMENL       reduce using rule 88 (o -> empty .)
    LEE             reduce using rule 88 (o -> empty .)


state 187

    (90) opy -> opno Y . opy
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! IDENT           [ reduce using rule 127 (empty -> .) ]

    opno                           shift and go to state 143
    opy                            shift and go to state 218
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 188

    (92) opno -> NO oprel .

    Y               reduce using rule 92 (opno -> NO oprel .)
    O               reduce using rule 92 (opno -> NO oprel .)
    PAREN_TERMINA   reduce using rule 92 (opno -> NO oprel .)
    COMA            reduce using rule 92 (opno -> NO oprel .)
    PUNTO_COMA      reduce using rule 92 (opno -> NO oprel .)
    HASTA           reduce using rule 92 (opno -> NO oprel .)
    SINO            reduce using rule 92 (opno -> NO oprel .)
    FIN             reduce using rule 92 (opno -> NO oprel .)
    SEA             reduce using rule 92 (opno -> NO oprel .)
    OTRO            reduce using rule 92 (opno -> NO oprel .)
    INICIO          reduce using rule 92 (opno -> NO oprel .)
    LIMPIA          reduce using rule 92 (opno -> NO oprel .)
    INTERRUMPE      reduce using rule 92 (opno -> NO oprel .)
    CONTINUA        reduce using rule 92 (opno -> NO oprel .)
    SI              reduce using rule 92 (opno -> NO oprel .)
    DESDE           reduce using rule 92 (opno -> NO oprel .)
    REPETIR         reduce using rule 92 (opno -> NO oprel .)
    MIENTRAS        reduce using rule 92 (opno -> NO oprel .)
    CUANDO          reduce using rule 92 (opno -> NO oprel .)
    REGRESA         reduce using rule 92 (opno -> NO oprel .)
    IDENT           reduce using rule 92 (opno -> NO oprel .)
    IMPRIME         reduce using rule 92 (opno -> NO oprel .)
    IMPRIMENL       reduce using rule 92 (opno -> NO oprel .)
    LEE             reduce using rule 92 (opno -> NO oprel .)


state 189

    (94) oprel -> expr OP_REL . oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for IDENT resolved as shift
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! IDENT           [ reduce using rule 127 (empty -> .) ]

    expr                           shift and go to state 146
    oprel                          shift and go to state 219
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 190

    (70) desde -> DESDE EL VALOR DE . asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> DESDE EL VALOR DE . asigna HASTA expr DECR CTE_ENTERA bckesp
    (74) asigna -> . IDENT udim OP_ASIG exprlog

    IDENT           shift and go to state 221

    asigna                         shift and go to state 220

state 191

    (72) repetir -> REPETIR block HASTA QUE . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 222


state 192

    (73) mientras -> MIENTRAS SE CUMPLA QUE . exprlog bckesp
    (86) exprlog -> . opy o
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! IDENT           [ reduce using rule 127 (empty -> .) ]

    exprlog                        shift and go to state 223
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 193

    (75) cuando -> CUANDO EL VALOR DE . IDENT INICIO gposea otro FIN

    IDENT           shift and go to state 224


state 194

    (117) lfunc -> IDENT PAREN_EMPIEZA . uparams PAREN_TERMINA
    (110) termino -> PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (124) uparams -> . exprlog
    (125) uparams -> . exprlog COMA uparams
    (126) uparams -> . empty
    (86) exprlog -> . opy o
    (127) empty -> .
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    uparams                        shift and go to state 225
    exprlog                        shift and go to state 157
    empty                          shift and go to state 158
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 195

    (74) asigna -> IDENT udim OP_ASIG exprlog .

    PUNTO_COMA      reduce using rule 74 (asigna -> IDENT udim OP_ASIG exprlog .)
    HASTA           reduce using rule 74 (asigna -> IDENT udim OP_ASIG exprlog .)
    SINO            reduce using rule 74 (asigna -> IDENT udim OP_ASIG exprlog .)
    FIN             reduce using rule 74 (asigna -> IDENT udim OP_ASIG exprlog .)
    SEA             reduce using rule 74 (asigna -> IDENT udim OP_ASIG exprlog .)
    OTRO            reduce using rule 74 (asigna -> IDENT udim OP_ASIG exprlog .)


state 196

    (116) lproc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 116 (lproc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    SINO            reduce using rule 116 (lproc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    FIN             reduce using rule 116 (lproc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    SEA             reduce using rule 116 (lproc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    OTRO            reduce using rule 116 (lproc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)


state 197

    (110) termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .

    POTENCIA        reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MULTI           reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    DIV             reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MOD             reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MAS             reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MENOS           reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IDENT           reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PAREN_EMPIEZA   reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CTE_ENTERA      reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CTE_REAL        reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CTE_ALFA        reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    VERDADERO       reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FALSO           reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OP_ASIG         reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OP_REL          reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    Y               reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    O               reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    COMA            reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    HASTA           reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INICIO          reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    LIMPIA          reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CONTINUA        reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SI              reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    DESDE           reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    REPETIR         reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MIENTRAS        reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CUANDO          reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    REGRESA         reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IMPRIME         reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    LEE             reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INCR            reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    DECR            reduce using rule 110 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 198

    (125) uparams -> exprlog COMA . uparams
    (124) uparams -> . exprlog
    (125) uparams -> . exprlog COMA uparams
    (126) uparams -> . empty
    (86) exprlog -> . opy o
    (127) empty -> .
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 226
    uparams                        shift and go to state 227
    empty                          shift and go to state 158
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 199

    (99) multi -> expo MULTI multi .

    MAS             reduce using rule 99 (multi -> expo MULTI multi .)
    MENOS           reduce using rule 99 (multi -> expo MULTI multi .)
    IDENT           reduce using rule 99 (multi -> expo MULTI multi .)
    PAREN_EMPIEZA   reduce using rule 99 (multi -> expo MULTI multi .)
    CTE_ENTERA      reduce using rule 99 (multi -> expo MULTI multi .)
    CTE_REAL        reduce using rule 99 (multi -> expo MULTI multi .)
    CTE_ALFA        reduce using rule 99 (multi -> expo MULTI multi .)
    VERDADERO       reduce using rule 99 (multi -> expo MULTI multi .)
    FALSO           reduce using rule 99 (multi -> expo MULTI multi .)
    OP_ASIG         reduce using rule 99 (multi -> expo MULTI multi .)
    OP_REL          reduce using rule 99 (multi -> expo MULTI multi .)
    Y               reduce using rule 99 (multi -> expo MULTI multi .)
    O               reduce using rule 99 (multi -> expo MULTI multi .)
    PAREN_TERMINA   reduce using rule 99 (multi -> expo MULTI multi .)
    POTENCIA        reduce using rule 99 (multi -> expo MULTI multi .)
    MULTI           reduce using rule 99 (multi -> expo MULTI multi .)
    DIV             reduce using rule 99 (multi -> expo MULTI multi .)
    MOD             reduce using rule 99 (multi -> expo MULTI multi .)
    COMA            reduce using rule 99 (multi -> expo MULTI multi .)
    PUNTO_COMA      reduce using rule 99 (multi -> expo MULTI multi .)
    HASTA           reduce using rule 99 (multi -> expo MULTI multi .)
    SINO            reduce using rule 99 (multi -> expo MULTI multi .)
    FIN             reduce using rule 99 (multi -> expo MULTI multi .)
    SEA             reduce using rule 99 (multi -> expo MULTI multi .)
    OTRO            reduce using rule 99 (multi -> expo MULTI multi .)
    INICIO          reduce using rule 99 (multi -> expo MULTI multi .)
    LIMPIA          reduce using rule 99 (multi -> expo MULTI multi .)
    INTERRUMPE      reduce using rule 99 (multi -> expo MULTI multi .)
    CONTINUA        reduce using rule 99 (multi -> expo MULTI multi .)
    SI              reduce using rule 99 (multi -> expo MULTI multi .)
    DESDE           reduce using rule 99 (multi -> expo MULTI multi .)
    REPETIR         reduce using rule 99 (multi -> expo MULTI multi .)
    MIENTRAS        reduce using rule 99 (multi -> expo MULTI multi .)
    CUANDO          reduce using rule 99 (multi -> expo MULTI multi .)
    REGRESA         reduce using rule 99 (multi -> expo MULTI multi .)
    IMPRIME         reduce using rule 99 (multi -> expo MULTI multi .)
    IMPRIMENL       reduce using rule 99 (multi -> expo MULTI multi .)
    LEE             reduce using rule 99 (multi -> expo MULTI multi .)
    INCR            reduce using rule 99 (multi -> expo MULTI multi .)
    DECR            reduce using rule 99 (multi -> expo MULTI multi .)


state 200

    (106) signo -> MENOS . termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    termino                        shift and go to state 228

state 201

    (100) multi -> expo DIV multi .

    MAS             reduce using rule 100 (multi -> expo DIV multi .)
    MENOS           reduce using rule 100 (multi -> expo DIV multi .)
    IDENT           reduce using rule 100 (multi -> expo DIV multi .)
    PAREN_EMPIEZA   reduce using rule 100 (multi -> expo DIV multi .)
    CTE_ENTERA      reduce using rule 100 (multi -> expo DIV multi .)
    CTE_REAL        reduce using rule 100 (multi -> expo DIV multi .)
    CTE_ALFA        reduce using rule 100 (multi -> expo DIV multi .)
    VERDADERO       reduce using rule 100 (multi -> expo DIV multi .)
    FALSO           reduce using rule 100 (multi -> expo DIV multi .)
    OP_ASIG         reduce using rule 100 (multi -> expo DIV multi .)
    OP_REL          reduce using rule 100 (multi -> expo DIV multi .)
    Y               reduce using rule 100 (multi -> expo DIV multi .)
    O               reduce using rule 100 (multi -> expo DIV multi .)
    PAREN_TERMINA   reduce using rule 100 (multi -> expo DIV multi .)
    POTENCIA        reduce using rule 100 (multi -> expo DIV multi .)
    MULTI           reduce using rule 100 (multi -> expo DIV multi .)
    DIV             reduce using rule 100 (multi -> expo DIV multi .)
    MOD             reduce using rule 100 (multi -> expo DIV multi .)
    COMA            reduce using rule 100 (multi -> expo DIV multi .)
    PUNTO_COMA      reduce using rule 100 (multi -> expo DIV multi .)
    HASTA           reduce using rule 100 (multi -> expo DIV multi .)
    SINO            reduce using rule 100 (multi -> expo DIV multi .)
    FIN             reduce using rule 100 (multi -> expo DIV multi .)
    SEA             reduce using rule 100 (multi -> expo DIV multi .)
    OTRO            reduce using rule 100 (multi -> expo DIV multi .)
    INICIO          reduce using rule 100 (multi -> expo DIV multi .)
    LIMPIA          reduce using rule 100 (multi -> expo DIV multi .)
    INTERRUMPE      reduce using rule 100 (multi -> expo DIV multi .)
    CONTINUA        reduce using rule 100 (multi -> expo DIV multi .)
    SI              reduce using rule 100 (multi -> expo DIV multi .)
    DESDE           reduce using rule 100 (multi -> expo DIV multi .)
    REPETIR         reduce using rule 100 (multi -> expo DIV multi .)
    MIENTRAS        reduce using rule 100 (multi -> expo DIV multi .)
    CUANDO          reduce using rule 100 (multi -> expo DIV multi .)
    REGRESA         reduce using rule 100 (multi -> expo DIV multi .)
    IMPRIME         reduce using rule 100 (multi -> expo DIV multi .)
    IMPRIMENL       reduce using rule 100 (multi -> expo DIV multi .)
    LEE             reduce using rule 100 (multi -> expo DIV multi .)
    INCR            reduce using rule 100 (multi -> expo DIV multi .)
    DECR            reduce using rule 100 (multi -> expo DIV multi .)


state 202

    (101) multi -> expo MOD multi .

    MAS             reduce using rule 101 (multi -> expo MOD multi .)
    MENOS           reduce using rule 101 (multi -> expo MOD multi .)
    IDENT           reduce using rule 101 (multi -> expo MOD multi .)
    PAREN_EMPIEZA   reduce using rule 101 (multi -> expo MOD multi .)
    CTE_ENTERA      reduce using rule 101 (multi -> expo MOD multi .)
    CTE_REAL        reduce using rule 101 (multi -> expo MOD multi .)
    CTE_ALFA        reduce using rule 101 (multi -> expo MOD multi .)
    VERDADERO       reduce using rule 101 (multi -> expo MOD multi .)
    FALSO           reduce using rule 101 (multi -> expo MOD multi .)
    OP_ASIG         reduce using rule 101 (multi -> expo MOD multi .)
    OP_REL          reduce using rule 101 (multi -> expo MOD multi .)
    Y               reduce using rule 101 (multi -> expo MOD multi .)
    O               reduce using rule 101 (multi -> expo MOD multi .)
    PAREN_TERMINA   reduce using rule 101 (multi -> expo MOD multi .)
    POTENCIA        reduce using rule 101 (multi -> expo MOD multi .)
    MULTI           reduce using rule 101 (multi -> expo MOD multi .)
    DIV             reduce using rule 101 (multi -> expo MOD multi .)
    MOD             reduce using rule 101 (multi -> expo MOD multi .)
    COMA            reduce using rule 101 (multi -> expo MOD multi .)
    PUNTO_COMA      reduce using rule 101 (multi -> expo MOD multi .)
    HASTA           reduce using rule 101 (multi -> expo MOD multi .)
    SINO            reduce using rule 101 (multi -> expo MOD multi .)
    FIN             reduce using rule 101 (multi -> expo MOD multi .)
    SEA             reduce using rule 101 (multi -> expo MOD multi .)
    OTRO            reduce using rule 101 (multi -> expo MOD multi .)
    INICIO          reduce using rule 101 (multi -> expo MOD multi .)
    LIMPIA          reduce using rule 101 (multi -> expo MOD multi .)
    INTERRUMPE      reduce using rule 101 (multi -> expo MOD multi .)
    CONTINUA        reduce using rule 101 (multi -> expo MOD multi .)
    SI              reduce using rule 101 (multi -> expo MOD multi .)
    DESDE           reduce using rule 101 (multi -> expo MOD multi .)
    REPETIR         reduce using rule 101 (multi -> expo MOD multi .)
    MIENTRAS        reduce using rule 101 (multi -> expo MOD multi .)
    CUANDO          reduce using rule 101 (multi -> expo MOD multi .)
    REGRESA         reduce using rule 101 (multi -> expo MOD multi .)
    IMPRIME         reduce using rule 101 (multi -> expo MOD multi .)
    IMPRIMENL       reduce using rule 101 (multi -> expo MOD multi .)
    LEE             reduce using rule 101 (multi -> expo MOD multi .)
    INCR            reduce using rule 101 (multi -> expo MOD multi .)
    DECR            reduce using rule 101 (multi -> expo MOD multi .)


state 203

    (104) expo -> signo POTENCIA expo .

    MULTI           reduce using rule 104 (expo -> signo POTENCIA expo .)
    DIV             reduce using rule 104 (expo -> signo POTENCIA expo .)
    MOD             reduce using rule 104 (expo -> signo POTENCIA expo .)
    MAS             reduce using rule 104 (expo -> signo POTENCIA expo .)
    MENOS           reduce using rule 104 (expo -> signo POTENCIA expo .)
    IDENT           reduce using rule 104 (expo -> signo POTENCIA expo .)
    PAREN_EMPIEZA   reduce using rule 104 (expo -> signo POTENCIA expo .)
    CTE_ENTERA      reduce using rule 104 (expo -> signo POTENCIA expo .)
    CTE_REAL        reduce using rule 104 (expo -> signo POTENCIA expo .)
    CTE_ALFA        reduce using rule 104 (expo -> signo POTENCIA expo .)
    VERDADERO       reduce using rule 104 (expo -> signo POTENCIA expo .)
    FALSO           reduce using rule 104 (expo -> signo POTENCIA expo .)
    OP_ASIG         reduce using rule 104 (expo -> signo POTENCIA expo .)
    OP_REL          reduce using rule 104 (expo -> signo POTENCIA expo .)
    Y               reduce using rule 104 (expo -> signo POTENCIA expo .)
    O               reduce using rule 104 (expo -> signo POTENCIA expo .)
    PAREN_TERMINA   reduce using rule 104 (expo -> signo POTENCIA expo .)
    POTENCIA        reduce using rule 104 (expo -> signo POTENCIA expo .)
    COMA            reduce using rule 104 (expo -> signo POTENCIA expo .)
    PUNTO_COMA      reduce using rule 104 (expo -> signo POTENCIA expo .)
    HASTA           reduce using rule 104 (expo -> signo POTENCIA expo .)
    SINO            reduce using rule 104 (expo -> signo POTENCIA expo .)
    FIN             reduce using rule 104 (expo -> signo POTENCIA expo .)
    SEA             reduce using rule 104 (expo -> signo POTENCIA expo .)
    OTRO            reduce using rule 104 (expo -> signo POTENCIA expo .)
    INICIO          reduce using rule 104 (expo -> signo POTENCIA expo .)
    LIMPIA          reduce using rule 104 (expo -> signo POTENCIA expo .)
    INTERRUMPE      reduce using rule 104 (expo -> signo POTENCIA expo .)
    CONTINUA        reduce using rule 104 (expo -> signo POTENCIA expo .)
    SI              reduce using rule 104 (expo -> signo POTENCIA expo .)
    DESDE           reduce using rule 104 (expo -> signo POTENCIA expo .)
    REPETIR         reduce using rule 104 (expo -> signo POTENCIA expo .)
    MIENTRAS        reduce using rule 104 (expo -> signo POTENCIA expo .)
    CUANDO          reduce using rule 104 (expo -> signo POTENCIA expo .)
    REGRESA         reduce using rule 104 (expo -> signo POTENCIA expo .)
    IMPRIME         reduce using rule 104 (expo -> signo POTENCIA expo .)
    IMPRIMENL       reduce using rule 104 (expo -> signo POTENCIA expo .)
    LEE             reduce using rule 104 (expo -> signo POTENCIA expo .)
    INCR            reduce using rule 104 (expo -> signo POTENCIA expo .)
    DECR            reduce using rule 104 (expo -> signo POTENCIA expo .)


state 204

    (83) regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 83 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 83 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 83 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 83 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 83 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 205

    (118) imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 118 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 118 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 118 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 118 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 118 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 206

    (123) gpoexp -> exprlog COMA . gpoexp
    (122) gpoexp -> . exprlog
    (123) gpoexp -> . exprlog COMA gpoexp
    (86) exprlog -> . opy o
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 169
    gpoexp                         shift and go to state 229
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 207

    (119) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 119 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 119 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 119 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 119 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 119 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 208

    (120) lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 120 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SINO            reduce using rule 120 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    FIN             reduce using rule 120 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SEA             reduce using rule 120 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    OTRO            reduce using rule 120 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)


state 209

    (121) lee -> LEE PAREN_EMPIEZA IDENT dimens . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 230


state 210

    (40) maspars -> COMA gpopars .

    PUNTOS_DOBLES   reduce using rule 40 (maspars -> COMA gpopars .)


state 211

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables . INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    INICIO          shift and go to state 231


state 212

    (35) params -> gpopars PUNTOS_DOBLES TIPO . otrospars
    (37) otrospars -> . PUNTO_COMA params
    (38) otrospars -> . empty
    (127) empty -> .

    PUNTO_COMA      shift and go to state 233
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    otrospars                      shift and go to state 232
    empty                          shift and go to state 234

state 213

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    TIPO            shift and go to state 235


state 214

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 236


state 215

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    FUNCION         reduce using rule 33 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 33 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FIN             reduce using rule 33 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 216

    (64) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER . bckesp sino
    (67) bckesp -> . estatuto
    (68) bckesp -> . INICIO block FIN
    (69) bckesp -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 239
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SINO            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    bckesp                         shift and go to state 237
    estatuto                       shift and go to state 238
    empty                          shift and go to state 240
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 217

    (87) o -> O exprlog .

    PAREN_TERMINA   reduce using rule 87 (o -> O exprlog .)
    COMA            reduce using rule 87 (o -> O exprlog .)
    PUNTO_COMA      reduce using rule 87 (o -> O exprlog .)
    HASTA           reduce using rule 87 (o -> O exprlog .)
    SINO            reduce using rule 87 (o -> O exprlog .)
    FIN             reduce using rule 87 (o -> O exprlog .)
    SEA             reduce using rule 87 (o -> O exprlog .)
    OTRO            reduce using rule 87 (o -> O exprlog .)
    INICIO          reduce using rule 87 (o -> O exprlog .)
    LIMPIA          reduce using rule 87 (o -> O exprlog .)
    INTERRUMPE      reduce using rule 87 (o -> O exprlog .)
    CONTINUA        reduce using rule 87 (o -> O exprlog .)
    SI              reduce using rule 87 (o -> O exprlog .)
    DESDE           reduce using rule 87 (o -> O exprlog .)
    REPETIR         reduce using rule 87 (o -> O exprlog .)
    MIENTRAS        reduce using rule 87 (o -> O exprlog .)
    CUANDO          reduce using rule 87 (o -> O exprlog .)
    REGRESA         reduce using rule 87 (o -> O exprlog .)
    IDENT           reduce using rule 87 (o -> O exprlog .)
    IMPRIME         reduce using rule 87 (o -> O exprlog .)
    IMPRIMENL       reduce using rule 87 (o -> O exprlog .)
    LEE             reduce using rule 87 (o -> O exprlog .)


state 218

    (90) opy -> opno Y opy .

    O               reduce using rule 90 (opy -> opno Y opy .)
    PAREN_TERMINA   reduce using rule 90 (opy -> opno Y opy .)
    COMA            reduce using rule 90 (opy -> opno Y opy .)
    PUNTO_COMA      reduce using rule 90 (opy -> opno Y opy .)
    HASTA           reduce using rule 90 (opy -> opno Y opy .)
    SINO            reduce using rule 90 (opy -> opno Y opy .)
    FIN             reduce using rule 90 (opy -> opno Y opy .)
    SEA             reduce using rule 90 (opy -> opno Y opy .)
    OTRO            reduce using rule 90 (opy -> opno Y opy .)
    INICIO          reduce using rule 90 (opy -> opno Y opy .)
    LIMPIA          reduce using rule 90 (opy -> opno Y opy .)
    INTERRUMPE      reduce using rule 90 (opy -> opno Y opy .)
    CONTINUA        reduce using rule 90 (opy -> opno Y opy .)
    SI              reduce using rule 90 (opy -> opno Y opy .)
    DESDE           reduce using rule 90 (opy -> opno Y opy .)
    REPETIR         reduce using rule 90 (opy -> opno Y opy .)
    MIENTRAS        reduce using rule 90 (opy -> opno Y opy .)
    CUANDO          reduce using rule 90 (opy -> opno Y opy .)
    REGRESA         reduce using rule 90 (opy -> opno Y opy .)
    IDENT           reduce using rule 90 (opy -> opno Y opy .)
    IMPRIME         reduce using rule 90 (opy -> opno Y opy .)
    IMPRIMENL       reduce using rule 90 (opy -> opno Y opy .)
    LEE             reduce using rule 90 (opy -> opno Y opy .)


state 219

    (94) oprel -> expr OP_REL oprel .

    Y               reduce using rule 94 (oprel -> expr OP_REL oprel .)
    O               reduce using rule 94 (oprel -> expr OP_REL oprel .)
    PAREN_TERMINA   reduce using rule 94 (oprel -> expr OP_REL oprel .)
    COMA            reduce using rule 94 (oprel -> expr OP_REL oprel .)
    PUNTO_COMA      reduce using rule 94 (oprel -> expr OP_REL oprel .)
    HASTA           reduce using rule 94 (oprel -> expr OP_REL oprel .)
    SINO            reduce using rule 94 (oprel -> expr OP_REL oprel .)
    FIN             reduce using rule 94 (oprel -> expr OP_REL oprel .)
    SEA             reduce using rule 94 (oprel -> expr OP_REL oprel .)
    OTRO            reduce using rule 94 (oprel -> expr OP_REL oprel .)
    INICIO          reduce using rule 94 (oprel -> expr OP_REL oprel .)
    LIMPIA          reduce using rule 94 (oprel -> expr OP_REL oprel .)
    INTERRUMPE      reduce using rule 94 (oprel -> expr OP_REL oprel .)
    CONTINUA        reduce using rule 94 (oprel -> expr OP_REL oprel .)
    SI              reduce using rule 94 (oprel -> expr OP_REL oprel .)
    DESDE           reduce using rule 94 (oprel -> expr OP_REL oprel .)
    REPETIR         reduce using rule 94 (oprel -> expr OP_REL oprel .)
    MIENTRAS        reduce using rule 94 (oprel -> expr OP_REL oprel .)
    CUANDO          reduce using rule 94 (oprel -> expr OP_REL oprel .)
    REGRESA         reduce using rule 94 (oprel -> expr OP_REL oprel .)
    IDENT           reduce using rule 94 (oprel -> expr OP_REL oprel .)
    IMPRIME         reduce using rule 94 (oprel -> expr OP_REL oprel .)
    IMPRIMENL       reduce using rule 94 (oprel -> expr OP_REL oprel .)
    LEE             reduce using rule 94 (oprel -> expr OP_REL oprel .)


state 220

    (70) desde -> DESDE EL VALOR DE asigna . HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> DESDE EL VALOR DE asigna . HASTA expr DECR CTE_ENTERA bckesp

    HASTA           shift and go to state 241


state 221

    (74) asigna -> IDENT . udim OP_ASIG exprlog
    (84) udim -> . expr udim
    (85) udim -> . empty
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (127) empty -> .
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_ASIG         reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]

    udim                           shift and go to state 108
    expr                           shift and go to state 110
    empty                          shift and go to state 111
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 222

    (72) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (86) exprlog -> . opy o
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 242
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 223

    (73) mientras -> MIENTRAS SE CUMPLA QUE exprlog . bckesp
    (67) bckesp -> . estatuto
    (68) bckesp -> . INICIO block FIN
    (69) bckesp -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 239
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SINO            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    bckesp                         shift and go to state 243
    estatuto                       shift and go to state 238
    empty                          shift and go to state 240
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 224

    (75) cuando -> CUANDO EL VALOR DE IDENT . INICIO gposea otro FIN

    INICIO          shift and go to state 244


state 225

    (117) lfunc -> IDENT PAREN_EMPIEZA uparams . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 245


state 226

    (124) uparams -> exprlog .
    (125) uparams -> exprlog . COMA uparams

    PAREN_TERMINA   reduce using rule 124 (uparams -> exprlog .)
    COMA            shift and go to state 198


state 227

    (125) uparams -> exprlog COMA uparams .

    PAREN_TERMINA   reduce using rule 125 (uparams -> exprlog COMA uparams .)


state 228

    (106) signo -> MENOS termino .

    POTENCIA        reduce using rule 106 (signo -> MENOS termino .)
    MULTI           reduce using rule 106 (signo -> MENOS termino .)
    DIV             reduce using rule 106 (signo -> MENOS termino .)
    MOD             reduce using rule 106 (signo -> MENOS termino .)
    MAS             reduce using rule 106 (signo -> MENOS termino .)
    MENOS           reduce using rule 106 (signo -> MENOS termino .)
    IDENT           reduce using rule 106 (signo -> MENOS termino .)
    PAREN_EMPIEZA   reduce using rule 106 (signo -> MENOS termino .)
    CTE_ENTERA      reduce using rule 106 (signo -> MENOS termino .)
    CTE_REAL        reduce using rule 106 (signo -> MENOS termino .)
    CTE_ALFA        reduce using rule 106 (signo -> MENOS termino .)
    VERDADERO       reduce using rule 106 (signo -> MENOS termino .)
    FALSO           reduce using rule 106 (signo -> MENOS termino .)
    OP_ASIG         reduce using rule 106 (signo -> MENOS termino .)
    OP_REL          reduce using rule 106 (signo -> MENOS termino .)
    Y               reduce using rule 106 (signo -> MENOS termino .)
    O               reduce using rule 106 (signo -> MENOS termino .)
    PAREN_TERMINA   reduce using rule 106 (signo -> MENOS termino .)
    COMA            reduce using rule 106 (signo -> MENOS termino .)
    PUNTO_COMA      reduce using rule 106 (signo -> MENOS termino .)
    HASTA           reduce using rule 106 (signo -> MENOS termino .)
    SINO            reduce using rule 106 (signo -> MENOS termino .)
    FIN             reduce using rule 106 (signo -> MENOS termino .)
    SEA             reduce using rule 106 (signo -> MENOS termino .)
    OTRO            reduce using rule 106 (signo -> MENOS termino .)
    INICIO          reduce using rule 106 (signo -> MENOS termino .)
    LIMPIA          reduce using rule 106 (signo -> MENOS termino .)
    INTERRUMPE      reduce using rule 106 (signo -> MENOS termino .)
    CONTINUA        reduce using rule 106 (signo -> MENOS termino .)
    SI              reduce using rule 106 (signo -> MENOS termino .)
    DESDE           reduce using rule 106 (signo -> MENOS termino .)
    REPETIR         reduce using rule 106 (signo -> MENOS termino .)
    MIENTRAS        reduce using rule 106 (signo -> MENOS termino .)
    CUANDO          reduce using rule 106 (signo -> MENOS termino .)
    REGRESA         reduce using rule 106 (signo -> MENOS termino .)
    IMPRIME         reduce using rule 106 (signo -> MENOS termino .)
    IMPRIMENL       reduce using rule 106 (signo -> MENOS termino .)
    LEE             reduce using rule 106 (signo -> MENOS termino .)
    INCR            reduce using rule 106 (signo -> MENOS termino .)
    DECR            reduce using rule 106 (signo -> MENOS termino .)


state 229

    (123) gpoexp -> exprlog COMA gpoexp .

    PAREN_TERMINA   reduce using rule 123 (gpoexp -> exprlog COMA gpoexp .)


state 230

    (121) lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 121 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SINO            reduce using rule 121 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    FIN             reduce using rule 121 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SEA             reduce using rule 121 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    OTRO            reduce using rule 121 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)


state 231

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO . block FIN DE PROCEDIMIENTO PUNTO_COMA
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    block                          shift and go to state 246
    estatuto                       shift and go to state 63
    empty                          shift and go to state 64
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 232

    (35) params -> gpopars PUNTOS_DOBLES TIPO otrospars .

    PAREN_TERMINA   reduce using rule 35 (params -> gpopars PUNTOS_DOBLES TIPO otrospars .)


state 233

    (37) otrospars -> PUNTO_COMA . params
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (127) empty -> .

    IDENT           shift and go to state 127
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    params                         shift and go to state 247
    gpopars                        shift and go to state 129
    empty                          shift and go to state 130

state 234

    (38) otrospars -> empty .

    PAREN_TERMINA   reduce using rule 38 (otrospars -> empty .)


state 235

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . variables INICIO block FIN DE FUNCION PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (127) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 127 (empty -> .)

    variables                      shift and go to state 248
    empty                          shift and go to state 7

state 236

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 249


state 237

    (64) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp . sino
    (65) sino -> . SINO bckesp
    (66) sino -> . empty
    (127) empty -> .

  ! shift/reduce conflict for SINO resolved as shift
    SINO            shift and go to state 251
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)

  ! SINO            [ reduce using rule 127 (empty -> .) ]

    sino                           shift and go to state 250
    empty                          shift and go to state 252

state 238

    (67) bckesp -> estatuto .

    SINO            reduce using rule 67 (bckesp -> estatuto .)
    PUNTO_COMA      reduce using rule 67 (bckesp -> estatuto .)
    FIN             reduce using rule 67 (bckesp -> estatuto .)
    SEA             reduce using rule 67 (bckesp -> estatuto .)
    OTRO            reduce using rule 67 (bckesp -> estatuto .)


state 239

    (68) bckesp -> INICIO . block FIN
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    block                          shift and go to state 253
    estatuto                       shift and go to state 63
    empty                          shift and go to state 64
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 240

    (69) bckesp -> empty .
    (63) estatuto -> empty .

  ! reduce/reduce conflict for SINO resolved using rule 63 (estatuto -> empty .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 63 (estatuto -> empty .)
  ! reduce/reduce conflict for FIN resolved using rule 63 (estatuto -> empty .)
  ! reduce/reduce conflict for SEA resolved using rule 63 (estatuto -> empty .)
  ! reduce/reduce conflict for OTRO resolved using rule 63 (estatuto -> empty .)
    SINO            reduce using rule 63 (estatuto -> empty .)
    PUNTO_COMA      reduce using rule 63 (estatuto -> empty .)
    FIN             reduce using rule 63 (estatuto -> empty .)
    SEA             reduce using rule 63 (estatuto -> empty .)
    OTRO            reduce using rule 63 (estatuto -> empty .)

  ! SINO            [ reduce using rule 69 (bckesp -> empty .) ]
  ! PUNTO_COMA      [ reduce using rule 69 (bckesp -> empty .) ]
  ! FIN             [ reduce using rule 69 (bckesp -> empty .) ]
  ! SEA             [ reduce using rule 69 (bckesp -> empty .) ]
  ! OTRO            [ reduce using rule 69 (bckesp -> empty .) ]


state 241

    (70) desde -> DESDE EL VALOR DE asigna HASTA . expr INCR CTE_ENTERA bckesp
    (71) desde -> DESDE EL VALOR DE asigna HASTA . expr DECR CTE_ENTERA bckesp
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (111) termino -> . CTE_ENTERA
    (112) termino -> . CTE_REAL
    (113) termino -> . CTE_ALFA
    (114) termino -> . VERDADERO
    (115) termino -> . FALSO

    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    expr                           shift and go to state 254
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    empty                          shift and go to state 147
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 242

    (72) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 255


state 243

    (73) mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .

    PUNTO_COMA      reduce using rule 73 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SINO            reduce using rule 73 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    FIN             reduce using rule 73 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SEA             reduce using rule 73 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    OTRO            reduce using rule 73 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)


state 244

    (75) cuando -> CUANDO EL VALOR DE IDENT INICIO . gposea otro FIN
    (78) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (79) gposea -> . empty
    (127) empty -> .

    SEA             shift and go to state 257
    OTRO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)

    gposea                         shift and go to state 256
    empty                          shift and go to state 258

state 245

    (117) lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .

    POTENCIA        reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MULTI           reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    DIV             reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MOD             reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MAS             reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MENOS           reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    IDENT           reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    PAREN_EMPIEZA   reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CTE_ENTERA      reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CTE_REAL        reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CTE_ALFA        reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    VERDADERO       reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    FALSO           reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    OP_ASIG         reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    OP_REL          reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    Y               reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    O               reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    COMA            reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    HASTA           reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    SINO            reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    FIN             reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    SEA             reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    OTRO            reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    INICIO          reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    LIMPIA          reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CONTINUA        reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    SI              reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    DESDE           reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    REPETIR         reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MIENTRAS        reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CUANDO          reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    REGRESA         reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    IMPRIME         reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    LEE             reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    INCR            reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    DECR            reduce using rule 117 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)


state 246

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block . FIN DE PROCEDIMIENTO PUNTO_COMA

    FIN             shift and go to state 259


state 247

    (37) otrospars -> PUNTO_COMA params .

    PAREN_TERMINA   reduce using rule 37 (otrospars -> PUNTO_COMA params .)


state 248

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables . INICIO block FIN DE FUNCION PUNTO_COMA

    INICIO          shift and go to state 260


state 249

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    FUNCION         reduce using rule 32 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 32 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FIN             reduce using rule 32 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 250

    (64) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .

    PUNTO_COMA      reduce using rule 64 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SINO            reduce using rule 64 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    FIN             reduce using rule 64 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SEA             reduce using rule 64 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    OTRO            reduce using rule 64 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)


state 251

    (65) sino -> SINO . bckesp
    (67) bckesp -> . estatuto
    (68) bckesp -> . INICIO block FIN
    (69) bckesp -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 239
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SINO            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    bckesp                         shift and go to state 261
    estatuto                       shift and go to state 238
    empty                          shift and go to state 240
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 252

    (66) sino -> empty .

    SINO            reduce using rule 66 (sino -> empty .)
    PUNTO_COMA      reduce using rule 66 (sino -> empty .)
    FIN             reduce using rule 66 (sino -> empty .)
    SEA             reduce using rule 66 (sino -> empty .)
    OTRO            reduce using rule 66 (sino -> empty .)


state 253

    (68) bckesp -> INICIO block . FIN

    FIN             shift and go to state 262


state 254

    (70) desde -> DESDE EL VALOR DE asigna HASTA expr . INCR CTE_ENTERA bckesp
    (71) desde -> DESDE EL VALOR DE asigna HASTA expr . DECR CTE_ENTERA bckesp

    INCR            shift and go to state 263
    DECR            shift and go to state 264


state 255

    (72) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 72 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 72 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 72 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 72 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 72 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 256

    (75) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea . otro FIN
    (76) otro -> . OTRO PUNTOS_DOBLES bckesp
    (77) otro -> . empty
    (127) empty -> .

    OTRO            shift and go to state 266
    FIN             reduce using rule 127 (empty -> .)

    otro                           shift and go to state 265
    empty                          shift and go to state 267

state 257

    (78) gposea -> SEA . gpoconst PUNTOS_DOBLES bckesp gposea
    (80) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 269

    gpoconst                       shift and go to state 268

state 258

    (79) gposea -> empty .

    OTRO            reduce using rule 79 (gposea -> empty .)
    FIN             reduce using rule 79 (gposea -> empty .)


state 259

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN . DE PROCEDIMIENTO PUNTO_COMA

    DE              shift and go to state 270


state 260

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO . block FIN DE FUNCION PUNTO_COMA
    (47) block -> . estatuto PUNTO_COMA block
    (48) block -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    block                          shift and go to state 271
    estatuto                       shift and go to state 63
    empty                          shift and go to state 64
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 261

    (65) sino -> SINO bckesp .

    SINO            reduce using rule 65 (sino -> SINO bckesp .)
    PUNTO_COMA      reduce using rule 65 (sino -> SINO bckesp .)
    FIN             reduce using rule 65 (sino -> SINO bckesp .)
    SEA             reduce using rule 65 (sino -> SINO bckesp .)
    OTRO            reduce using rule 65 (sino -> SINO bckesp .)


state 262

    (68) bckesp -> INICIO block FIN .

    SINO            reduce using rule 68 (bckesp -> INICIO block FIN .)
    PUNTO_COMA      reduce using rule 68 (bckesp -> INICIO block FIN .)
    FIN             reduce using rule 68 (bckesp -> INICIO block FIN .)
    SEA             reduce using rule 68 (bckesp -> INICIO block FIN .)
    OTRO            reduce using rule 68 (bckesp -> INICIO block FIN .)


state 263

    (70) desde -> DESDE EL VALOR DE asigna HASTA expr INCR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 272


state 264

    (71) desde -> DESDE EL VALOR DE asigna HASTA expr DECR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 273


state 265

    (75) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro . FIN

    FIN             shift and go to state 274


state 266

    (76) otro -> OTRO . PUNTOS_DOBLES bckesp

    PUNTOS_DOBLES   shift and go to state 275


state 267

    (77) otro -> empty .

    FIN             reduce using rule 77 (otro -> empty .)


state 268

    (78) gposea -> SEA gpoconst . PUNTOS_DOBLES bckesp gposea

    PUNTOS_DOBLES   shift and go to state 276


state 269

    (80) gpoconst -> CTE_ALFA . masgpoconst
    (81) masgpoconst -> . COMA gpoconst
    (82) masgpoconst -> . empty
    (127) empty -> .

    COMA            shift and go to state 278
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    masgpoconst                    shift and go to state 277
    empty                          shift and go to state 279

state 270

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE . PROCEDIMIENTO PUNTO_COMA

    PROCEDIMIENTO   shift and go to state 280


state 271

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block . FIN DE FUNCION PUNTO_COMA

    FIN             shift and go to state 281


state 272

    (70) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA . bckesp
    (67) bckesp -> . estatuto
    (68) bckesp -> . INICIO block FIN
    (69) bckesp -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 239
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SINO            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    asigna                         shift and go to state 72
    bckesp                         shift and go to state 282
    estatuto                       shift and go to state 238
    empty                          shift and go to state 240
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 273

    (71) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA . bckesp
    (67) bckesp -> . estatuto
    (68) bckesp -> . INICIO block FIN
    (69) bckesp -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 239
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SINO            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    asigna                         shift and go to state 72
    bckesp                         shift and go to state 283
    estatuto                       shift and go to state 238
    empty                          shift and go to state 240
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 274

    (75) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .

    PUNTO_COMA      reduce using rule 75 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SINO            reduce using rule 75 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    FIN             reduce using rule 75 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SEA             reduce using rule 75 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    OTRO            reduce using rule 75 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)


state 275

    (76) otro -> OTRO PUNTOS_DOBLES . bckesp
    (67) bckesp -> . estatuto
    (68) bckesp -> . INICIO block FIN
    (69) bckesp -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 239
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    bckesp                         shift and go to state 284
    estatuto                       shift and go to state 238
    empty                          shift and go to state 240
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 276

    (78) gposea -> SEA gpoconst PUNTOS_DOBLES . bckesp gposea
    (67) bckesp -> . estatuto
    (68) bckesp -> . INICIO block FIN
    (69) bckesp -> . empty
    (49) estatuto -> . si
    (50) estatuto -> . LIMPIA
    (51) estatuto -> . desde
    (52) estatuto -> . repetir
    (53) estatuto -> . mientras
    (54) estatuto -> . cuando
    (55) estatuto -> . regresa
    (56) estatuto -> . asigna
    (57) estatuto -> . lproc
    (58) estatuto -> . imprime
    (59) estatuto -> . imprimenl
    (60) estatuto -> . lee
    (61) estatuto -> . INTERRUMPE
    (62) estatuto -> . CONTINUA
    (63) estatuto -> . empty
    (127) empty -> .
    (64) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (70) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (72) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (73) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (75) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (83) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) asigna -> . IDENT udim OP_ASIG exprlog
    (116) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (118) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (119) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 239
    LIMPIA          shift and go to state 66
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    DESDE           shift and go to state 80
    REPETIR         shift and go to state 81
    MIENTRAS        shift and go to state 82
    CUANDO          shift and go to state 83
    REGRESA         shift and go to state 85
    IDENT           shift and go to state 84
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    bckesp                         shift and go to state 285
    estatuto                       shift and go to state 238
    empty                          shift and go to state 240
    si                             shift and go to state 65
    desde                          shift and go to state 67
    repetir                        shift and go to state 68
    mientras                       shift and go to state 69
    cuando                         shift and go to state 70
    regresa                        shift and go to state 71
    asigna                         shift and go to state 72
    lproc                          shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 277

    (80) gpoconst -> CTE_ALFA masgpoconst .

    PUNTOS_DOBLES   reduce using rule 80 (gpoconst -> CTE_ALFA masgpoconst .)


state 278

    (81) masgpoconst -> COMA . gpoconst
    (80) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 269

    gpoconst                       shift and go to state 286

state 279

    (82) masgpoconst -> empty .

    PUNTOS_DOBLES   reduce using rule 82 (masgpoconst -> empty .)


state 280

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 287


state 281

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN . DE FUNCION PUNTO_COMA

    DE              shift and go to state 288


state 282

    (70) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .

    PUNTO_COMA      reduce using rule 70 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SINO            reduce using rule 70 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    FIN             reduce using rule 70 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SEA             reduce using rule 70 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 70 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)


state 283

    (71) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .

    PUNTO_COMA      reduce using rule 71 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SINO            reduce using rule 71 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    FIN             reduce using rule 71 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SEA             reduce using rule 71 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 71 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)


state 284

    (76) otro -> OTRO PUNTOS_DOBLES bckesp .

    FIN             reduce using rule 76 (otro -> OTRO PUNTOS_DOBLES bckesp .)


state 285

    (78) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp . gposea
    (78) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (79) gposea -> . empty
    (127) empty -> .

    SEA             shift and go to state 257
    OTRO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)

    gposea                         shift and go to state 289
    empty                          shift and go to state 258

state 286

    (81) masgpoconst -> COMA gpoconst .

    PUNTOS_DOBLES   reduce using rule 81 (masgpoconst -> COMA gpoconst .)


state 287

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 45 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    FUNCION         reduce using rule 45 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    PROGRAMA        reduce using rule 45 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)


state 288

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE . FUNCION PUNTO_COMA

    FUNCION         shift and go to state 290


state 289

    (78) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .

    OTRO            reduce using rule 78 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)
    FIN             reduce using rule 78 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)


state 290

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION . PUNTO_COMA

    PUNTO_COMA      shift and go to state 291


state 291

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 46 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    FUNCION         reduce using rule 46 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    PROGRAMA        reduce using rule 46 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 12 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 12 resolved as shift
WARNING: shift/reduce conflict for COMA in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 26 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 26 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 27 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 27 resolved as shift
WARNING: shift/reduce conflict for MAS in state 84 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 84 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 84 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 84 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 84 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 84 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 84 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 84 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 84 resolved as shift
WARNING: shift/reduce conflict for MAS in state 107 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 107 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 107 resolved as shift
WARNING: shift/reduce conflict for MAS in state 110 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 110 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 110 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 110 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 110 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 110 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 110 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 110 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 110 resolved as shift
WARNING: shift/reduce conflict for MAS in state 113 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 113 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 113 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 113 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 113 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 113 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 113 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 113 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 113 resolved as shift
WARNING: shift/reduce conflict for MAS in state 114 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 114 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 114 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 114 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 114 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 114 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 114 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 114 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 114 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 115 resolved as shift
WARNING: shift/reduce conflict for DIV in state 115 resolved as shift
WARNING: shift/reduce conflict for MOD in state 115 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 116 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 145 resolved as shift
WARNING: shift/reduce conflict for MAS in state 152 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 152 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 152 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 152 resolved as shift
WARNING: shift/reduce conflict for PAREN_TERMINA in state 157 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 163 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 163 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 163 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 163 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 163 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 163 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 163 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 163 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 164 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 164 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 164 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 164 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 164 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 164 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 164 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 164 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 165 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 165 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 165 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 165 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 165 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 165 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 165 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 165 resolved as shift
WARNING: shift/reduce conflict for PAREN_TERMINA in state 171 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 185 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 187 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 189 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 192 resolved as shift
WARNING: shift/reduce conflict for MAS in state 221 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 221 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 221 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 221 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 221 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 221 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 221 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 221 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 221 resolved as shift
WARNING: shift/reduce conflict for SINO in state 237 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (gpofuncproc -> protfunc)
WARNING: rejected rule (empty -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (gpofuncproc -> protproc)
WARNING: rejected rule (empty -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 36 resolved using rule (dimens -> empty)
WARNING: rejected rule (opasig -> empty) in state 36
WARNING: reduce/reduce conflict in state 60 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 60
WARNING: reduce/reduce conflict in state 61 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 61
WARNING: reduce/reduce conflict in state 94 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 94
WARNING: reduce/reduce conflict in state 107 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 107
WARNING: reduce/reduce conflict in state 111 resolved using rule (udim -> empty)
WARNING: rejected rule (multi -> empty) in state 111
WARNING: reduce/reduce conflict in state 152 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 152
WARNING: reduce/reduce conflict in state 158 resolved using rule (multi -> empty)
WARNING: rejected rule (uparams -> empty) in state 158
WARNING: reduce/reduce conflict in state 162 resolved using rule (signo -> termino)
WARNING: rejected rule (signo -> MENOS termino) in state 162
WARNING: reduce/reduce conflict in state 240 resolved using rule (estatuto -> empty)
WARNING: rejected rule (bckesp -> empty) in state 240
WARNING: Rule (opasig -> empty) is never reduced
WARNING: Rule (uparams -> empty) is never reduced
WARNING: Rule (bckesp -> empty) is never reduced
