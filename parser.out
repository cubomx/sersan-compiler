Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CTE_ENTERA_NON_NUM
    CTE_REAL_ENDING_BAD
    CTE_REAL_NON_NUM
    OP_ARIT
    OP_LOG
    PAL_RES
    PUNTO

Grammar

Rule 0     S' -> program
Rule 1     program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
Rule 2     variables -> VARIABLES gpovars
Rule 3     variables -> empty
Rule 4     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
Rule 5     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 6     gpovars -> empty
Rule 7     gpoids -> IDENT dimens COMA gpoids
Rule 8     gpoids -> IDENT dimens
Rule 9     gpoids -> IDENT opasig COMA gpoids
Rule 10    gpoids -> IDENT COMA gpoids
Rule 11    gpoids -> empty
Rule 12    dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
Rule 13    dimens -> empty
Rule 14    opasig -> OP_ASIG CTE_ENTERA
Rule 15    opasig -> OP_ASIG IDENT
Rule 16    opasig -> empty
Rule 17    valor -> CTE_ENTERA
Rule 18    valor -> IDENT
Rule 19    constantes -> CONSTANTES grupoconst
Rule 20    constantes -> empty
Rule 21    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA
Rule 22    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
Rule 23    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
Rule 24    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
Rule 25    grupoconst -> empty
Rule 26    protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
Rule 27    protfuncproc -> empty
Rule 28    gpofuncproc -> protfunc
Rule 29    gpofuncproc -> protproc
Rule 30    gpofuncproc -> protproc gpofuncproc
Rule 31    gpofuncproc -> protfunc gpofuncproc
Rule 32    protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 33    protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 34    protproc -> empty
Rule 35    params -> gpopars PUNTOS_DOBLES TIPO otrospars
Rule 36    params -> empty
Rule 37    otrospars -> PUNTO_COMA params
Rule 38    otrospars -> empty
Rule 39    gpopars -> IDENT maspars
Rule 40    maspars -> COMA gpopars
Rule 41    maspars -> empty
Rule 42    funcproc -> procedimiento funcproc
Rule 43    funcproc -> funcion funcproc
Rule 44    funcproc -> empty
Rule 45    procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
Rule 46    funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
Rule 47    block -> estatuto puntoc block
Rule 48    puntoc -> PUNTO_COMA
Rule 49    block -> empty
Rule 50    estatuto -> si
Rule 51    estatuto -> lfunc
Rule 52    estatuto -> LIMPIA
Rule 53    estatuto -> desde
Rule 54    estatuto -> repetir
Rule 55    estatuto -> mientras
Rule 56    estatuto -> cuando
Rule 57    estatuto -> regresa
Rule 58    estatuto -> asigna
Rule 59    estatuto -> imprime
Rule 60    estatuto -> imprimenl
Rule 61    estatuto -> lee
Rule 62    estatuto -> INTERRUMPE
Rule 63    estatuto -> CONTINUA
Rule 64    estatuto -> empty
Rule 65    si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
Rule 66    sino -> SINO bckesp
Rule 67    sino -> empty
Rule 68    bckesp -> estatuto
Rule 69    bckesp -> INICIO block FIN
Rule 70    bckesp -> empty
Rule 71    desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
Rule 72    desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
Rule 73    repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 74    mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp
Rule 75    asigna -> IDENT udim OP_ASIG exprlog
Rule 76    cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
Rule 77    otro -> OTRO PUNTOS_DOBLES bckesp
Rule 78    otro -> empty
Rule 79    gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea
Rule 80    gposea -> empty
Rule 81    gpoconst -> CTE_ALFA masgpoconst
Rule 82    masgpoconst -> COMA gpoconst
Rule 83    masgpoconst -> empty
Rule 84    regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 85    udim -> expr udim
Rule 86    udim -> empty
Rule 87    exprlog -> opy
Rule 88    exprlog -> opy O exprlog
Rule 89    opy -> opno
Rule 90    opy -> opno Y opy
Rule 91    opno -> oprel
Rule 92    opno -> NO oprel
Rule 93    oprel -> expr
Rule 94    oprel -> expr OP_REL oprel
Rule 95    expr -> multi
Rule 96    expr -> MAS expr
Rule 97    expr -> MENOS expr
Rule 98    multi -> expo
Rule 99    multi -> expo MULTI multi
Rule 100   multi -> expo DIV multi
Rule 101   multi -> expo MOD multi
Rule 102   multi -> empty
Rule 103   expo -> signo
Rule 104   expo -> signo POTENCIA expo
Rule 105   signo -> termino
Rule 106   signo -> MENOS termino
Rule 107   termino -> IDENT
Rule 108   termino -> IDENT lfunc
Rule 109   termino -> IDENT udim
Rule 110   termino -> CTE_ENTERA
Rule 111   termino -> CTE_REAL
Rule 112   termino -> CTE_ALFA
Rule 113   termino -> VERDADERO
Rule 114   termino -> FALSO
Rule 115   termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 116   lfunc -> IDENT parenemp uparams PAREN_TERMINA
Rule 117   lfunc -> IDENT parenemp error PAREN_TERMINA
Rule 118   parenemp -> PAREN_EMPIEZA
Rule 119   imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 120   imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 121   lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
Rule 122   lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
Rule 123   gpoexp -> exprlog
Rule 124   gpoexp -> exprlog COMA gpoexp
Rule 125   uparams -> exprlog
Rule 126   uparams -> exprlog COMA uparams
Rule 127   empty -> <empty>

Terminals, with rules where they appear

COMA                 : 7 9 10 40 82 124 126
COMMENT              : 
CONSTANTES           : 19
CONTINUA             : 63
CORCHETE_EMPIEZA     : 12
CORCHETE_TERMINA     : 12
CTE_ALFA             : 81 112
CTE_ENTERA           : 14 17 22 24 71 72 110
CTE_ENTERA_NON_NUM   : 
CTE_REAL             : 21 23 111
CTE_REAL_ENDING_BAD  : 
CTE_REAL_NON_NUM     : 
CUANDO               : 76
CUMPLA               : 74
DE                   : 1 26 45 46 71 72 76
DECR                 : 72
DESDE                : 71 72
DIV                  : 100
EL                   : 71 72 76
FALSO                : 114
FIN                  : 1 26 45 46 69 76
FUNCION              : 32 46 46
HACER                : 65
HASTA                : 71 72 73
IDENT                : 7 8 9 10 15 18 21 22 23 24 32 33 39 45 46 75 76 107 108 109 116 117 121 122
IMPRIME              : 119
IMPRIMENL            : 120
INCR                 : 71
INICIO               : 45 46 69 76
INTERRUMPE           : 62
LEE                  : 121 122
LIMPIA               : 52
MAS                  : 96
MENOS                : 97 106
MIENTRAS             : 74
MOD                  : 101
MULTI                : 99
NO                   : 92
O                    : 88
OP_ARIT              : 
OP_ASIG              : 14 15 21 22 23 24 75
OP_LOG               : 
OP_REL               : 94
OTRO                 : 77
PAL_RES              : 
PAREN_EMPIEZA        : 32 33 45 46 65 73 84 115 118 119 120 121 122
PAREN_TERMINA        : 32 33 45 46 65 73 84 115 116 117 119 120 121 122
POTENCIA             : 104
PROCEDIMIENTO        : 33 45 45
PROGRAMA             : 1 1
PROTOTIPOS           : 26 26
PUNTO                : 
PUNTOS_DOBLES        : 4 5 32 35 46 77 79
PUNTO_COMA           : 4 5 21 22 23 24 26 32 33 37 45 46 48
QUE                  : 73 74
REGRESA              : 84
REPETIR              : 73
SE                   : 74
SEA                  : 79
SI                   : 65
SINO                 : 66
TIPO                 : 4 5 32 35 46
VALOR                : 71 72 76
VARIABLES            : 2
VERDADERO            : 113
Y                    : 90
error                : 117

Nonterminals, with rules where they appear

asigna               : 58 71 72
bckesp               : 65 66 71 72 74 77 79
block                : 1 45 46 47 69 73
constantes           : 1
cuando               : 56
desde                : 53
dimens               : 7 8 12 122
empty                : 3 6 11 13 16 20 25 27 34 36 38 41 44 49 64 67 70 78 80 83 86 102
estatuto             : 47 68
expo                 : 98 99 100 101 104
expr                 : 71 72 85 93 94 96 97
exprlog              : 65 73 74 75 84 88 115 123 124 125 126
funcion              : 43
funcproc             : 1 42 43
gpoconst             : 79 82
gpoexp               : 119 120 124
gpofuncproc          : 26 30 31
gpoids               : 4 5 7 9 10
gpopars              : 35 40
gposea               : 76 79
gpovars              : 2 4
grupoconst           : 19 23 24
imprime              : 59
imprimenl            : 60
lee                  : 61
lfunc                : 51 108
masgpoconst          : 81
maspars              : 39
mientras             : 55
multi                : 95 99 100 101
opasig               : 9
opno                 : 89 90
oprel                : 91 92 94
opy                  : 87 88 90
otro                 : 76
otrospars            : 35
params               : 32 33 37 45 46
parenemp             : 116 117
procedimiento        : 42
program              : 0
protfunc             : 28 31
protfuncproc         : 1
protproc             : 29 30
puntoc               : 47
regresa              : 57
repetir              : 54
si                   : 50
signo                : 103 104
sino                 : 65
termino              : 105 106
udim                 : 75 85 109
uparams              : 116 126
valor                : 12
variables            : 1 45 46

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
    (19) constantes -> . CONSTANTES grupoconst
    (20) constantes -> . empty
    (127) empty -> .

    CONSTANTES      shift and go to state 3
    VARIABLES       reduce using rule 127 (empty -> .)
    PROTOTIPOS      reduce using rule 127 (empty -> .)
    PROCEDIMIENTO   reduce using rule 127 (empty -> .)
    FUNCION         reduce using rule 127 (empty -> .)
    PROGRAMA        reduce using rule 127 (empty -> .)

    program                        shift and go to state 1
    constantes                     shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> constantes . variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (127) empty -> .

    VARIABLES       shift and go to state 6
    PROTOTIPOS      reduce using rule 127 (empty -> .)
    PROCEDIMIENTO   reduce using rule 127 (empty -> .)
    FUNCION         reduce using rule 127 (empty -> .)
    PROGRAMA        reduce using rule 127 (empty -> .)

    variables                      shift and go to state 5
    empty                          shift and go to state 7

state 3

    (19) constantes -> CONSTANTES . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (127) empty -> .

    IDENT           shift and go to state 9
    VARIABLES       reduce using rule 127 (empty -> .)
    PROTOTIPOS      reduce using rule 127 (empty -> .)
    PROCEDIMIENTO   reduce using rule 127 (empty -> .)
    FUNCION         reduce using rule 127 (empty -> .)
    PROGRAMA        reduce using rule 127 (empty -> .)

    grupoconst                     shift and go to state 8
    empty                          shift and go to state 10

state 4

    (20) constantes -> empty .

    VARIABLES       reduce using rule 20 (constantes -> empty .)
    PROTOTIPOS      reduce using rule 20 (constantes -> empty .)
    PROCEDIMIENTO   reduce using rule 20 (constantes -> empty .)
    FUNCION         reduce using rule 20 (constantes -> empty .)
    PROGRAMA        reduce using rule 20 (constantes -> empty .)


state 5

    (1) program -> constantes variables . protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
    (26) protfuncproc -> . PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (27) protfuncproc -> . empty
    (127) empty -> .

    PROTOTIPOS      shift and go to state 12
    PROCEDIMIENTO   reduce using rule 127 (empty -> .)
    FUNCION         reduce using rule 127 (empty -> .)
    PROGRAMA        reduce using rule 127 (empty -> .)

    protfuncproc                   shift and go to state 11
    empty                          shift and go to state 13

state 6

    (2) variables -> VARIABLES . gpovars
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (127) empty -> .

    IDENT           shift and go to state 17
    PROTOTIPOS      reduce using rule 127 (empty -> .)
    PROCEDIMIENTO   reduce using rule 127 (empty -> .)
    FUNCION         reduce using rule 127 (empty -> .)
    PROGRAMA        reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    gpovars                        shift and go to state 14
    gpoids                         shift and go to state 15
    empty                          shift and go to state 16

state 7

    (3) variables -> empty .

    PROTOTIPOS      reduce using rule 3 (variables -> empty .)
    PROCEDIMIENTO   reduce using rule 3 (variables -> empty .)
    FUNCION         reduce using rule 3 (variables -> empty .)
    PROGRAMA        reduce using rule 3 (variables -> empty .)
    INICIO          reduce using rule 3 (variables -> empty .)


state 8

    (19) constantes -> CONSTANTES grupoconst .

    VARIABLES       reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    PROTOTIPOS      reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    PROCEDIMIENTO   reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    FUNCION         reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    PROGRAMA        reduce using rule 19 (constantes -> CONSTANTES grupoconst .)


state 9

    (21) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst

    OP_ASIG         shift and go to state 18


state 10

    (25) grupoconst -> empty .

    VARIABLES       reduce using rule 25 (grupoconst -> empty .)
    PROTOTIPOS      reduce using rule 25 (grupoconst -> empty .)
    PROCEDIMIENTO   reduce using rule 25 (grupoconst -> empty .)
    FUNCION         reduce using rule 25 (grupoconst -> empty .)
    PROGRAMA        reduce using rule 25 (grupoconst -> empty .)


state 11

    (1) program -> constantes variables protfuncproc . funcproc PROGRAMA block FIN DE PROGRAMA
    (42) funcproc -> . procedimiento funcproc
    (43) funcproc -> . funcion funcproc
    (44) funcproc -> . empty
    (45) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (46) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (127) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 127 (empty -> .)

    funcproc                       shift and go to state 19
    procedimiento                  shift and go to state 20
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 12

    (26) protfuncproc -> PROTOTIPOS . gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (28) gpofuncproc -> . protfunc
    (29) gpofuncproc -> . protproc
    (30) gpofuncproc -> . protproc gpofuncproc
    (31) gpofuncproc -> . protfunc gpofuncproc
    (32) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (33) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (34) protproc -> . empty
    (127) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29
    FIN             reduce using rule 127 (empty -> .)

  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]

    gpofuncproc                    shift and go to state 25
    protfunc                       shift and go to state 26
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 13

    (27) protfuncproc -> empty .

    PROCEDIMIENTO   reduce using rule 27 (protfuncproc -> empty .)
    FUNCION         reduce using rule 27 (protfuncproc -> empty .)
    PROGRAMA        reduce using rule 27 (protfuncproc -> empty .)


state 14

    (2) variables -> VARIABLES gpovars .

    PROTOTIPOS      reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROCEDIMIENTO   reduce using rule 2 (variables -> VARIABLES gpovars .)
    FUNCION         reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROGRAMA        reduce using rule 2 (variables -> VARIABLES gpovars .)
    INICIO          reduce using rule 2 (variables -> VARIABLES gpovars .)


state 15

    (4) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 31


state 16

    (6) gpovars -> empty .
    (11) gpoids -> empty .

    PROTOTIPOS      reduce using rule 6 (gpovars -> empty .)
    PROCEDIMIENTO   reduce using rule 6 (gpovars -> empty .)
    FUNCION         reduce using rule 6 (gpovars -> empty .)
    PROGRAMA        reduce using rule 6 (gpovars -> empty .)
    INICIO          reduce using rule 6 (gpovars -> empty .)
    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> empty .)


state 17

    (7) gpoids -> IDENT . dimens COMA gpoids
    (8) gpoids -> IDENT . dimens
    (9) gpoids -> IDENT . opasig COMA gpoids
    (10) gpoids -> IDENT . COMA gpoids
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (14) opasig -> . OP_ASIG CTE_ENTERA
    (15) opasig -> . OP_ASIG IDENT
    (16) opasig -> . empty
    (127) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
    COMA            shift and go to state 33
    CORCHETE_EMPIEZA shift and go to state 35
    OP_ASIG         shift and go to state 37
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

  ! COMA            [ reduce using rule 127 (empty -> .) ]

    dimens                         shift and go to state 32
    opasig                         shift and go to state 34
    empty                          shift and go to state 36

state 18

    (21) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA
    (22) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA grupoconst

    CTE_REAL        shift and go to state 38
    CTE_ENTERA      shift and go to state 39


state 19

    (1) program -> constantes variables protfuncproc funcproc . PROGRAMA block FIN DE PROGRAMA

    PROGRAMA        shift and go to state 40


state 20

    (42) funcproc -> procedimiento . funcproc
    (42) funcproc -> . procedimiento funcproc
    (43) funcproc -> . funcion funcproc
    (44) funcproc -> . empty
    (45) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (46) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (127) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 127 (empty -> .)

    procedimiento                  shift and go to state 20
    funcproc                       shift and go to state 41
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 21

    (43) funcproc -> funcion . funcproc
    (42) funcproc -> . procedimiento funcproc
    (43) funcproc -> . funcion funcproc
    (44) funcproc -> . empty
    (45) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (46) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (127) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 127 (empty -> .)

    funcion                        shift and go to state 21
    funcproc                       shift and go to state 42
    procedimiento                  shift and go to state 20
    empty                          shift and go to state 22

state 22

    (44) funcproc -> empty .

    PROGRAMA        reduce using rule 44 (funcproc -> empty .)


state 23

    (45) procedimiento -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    IDENT           shift and go to state 43


state 24

    (46) funcion -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    IDENT           shift and go to state 44


state 25

    (26) protfuncproc -> PROTOTIPOS gpofuncproc . FIN DE PROTOTIPOS PUNTO_COMA

    FIN             shift and go to state 45


state 26

    (28) gpofuncproc -> protfunc .
    (31) gpofuncproc -> protfunc . gpofuncproc
    (28) gpofuncproc -> . protfunc
    (29) gpofuncproc -> . protproc
    (30) gpofuncproc -> . protproc gpofuncproc
    (31) gpofuncproc -> . protfunc gpofuncproc
    (32) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (33) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (34) protproc -> . empty
    (127) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 28 (gpofuncproc -> protfunc .)
    FIN             reduce using rule 28 (gpofuncproc -> protfunc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]
  ! FIN             [ reduce using rule 127 (empty -> .) ]

    protfunc                       shift and go to state 26
    gpofuncproc                    shift and go to state 46
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 27

    (29) gpofuncproc -> protproc .
    (30) gpofuncproc -> protproc . gpofuncproc
    (28) gpofuncproc -> . protfunc
    (29) gpofuncproc -> . protproc
    (30) gpofuncproc -> . protproc gpofuncproc
    (31) gpofuncproc -> . protfunc gpofuncproc
    (32) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (33) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (34) protproc -> . empty
    (127) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 29 (gpofuncproc -> protproc .)
    FIN             reduce using rule 29 (gpofuncproc -> protproc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]
  ! FIN             [ reduce using rule 127 (empty -> .) ]

    protproc                       shift and go to state 27
    gpofuncproc                    shift and go to state 47
    protfunc                       shift and go to state 26
    empty                          shift and go to state 30

state 28

    (32) protfunc -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    IDENT           shift and go to state 48


state 29

    (33) protproc -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    IDENT           shift and go to state 49


state 30

    (34) protproc -> empty .

    FUNCION         reduce using rule 34 (protproc -> empty .)
    PROCEDIMIENTO   reduce using rule 34 (protproc -> empty .)
    FIN             reduce using rule 34 (protproc -> empty .)


state 31

    (4) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 50


state 32

    (7) gpoids -> IDENT dimens . COMA gpoids
    (8) gpoids -> IDENT dimens .

    COMA            shift and go to state 51
    PUNTOS_DOBLES   reduce using rule 8 (gpoids -> IDENT dimens .)


state 33

    (10) gpoids -> IDENT COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (127) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    gpoids                         shift and go to state 52
    empty                          shift and go to state 53

state 34

    (9) gpoids -> IDENT opasig . COMA gpoids

    COMA            shift and go to state 54


state 35

    (12) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (17) valor -> . CTE_ENTERA
    (18) valor -> . IDENT

    CTE_ENTERA      shift and go to state 56
    IDENT           shift and go to state 57

    valor                          shift and go to state 55

state 36

    (13) dimens -> empty .
    (16) opasig -> empty .

  ! reduce/reduce conflict for COMA resolved using rule 13 (dimens -> empty .)
    COMA            reduce using rule 13 (dimens -> empty .)
    PUNTOS_DOBLES   reduce using rule 13 (dimens -> empty .)

  ! COMA            [ reduce using rule 16 (opasig -> empty .) ]


state 37

    (14) opasig -> OP_ASIG . CTE_ENTERA
    (15) opasig -> OP_ASIG . IDENT

    CTE_ENTERA      shift and go to state 58
    IDENT           shift and go to state 59


state 38

    (21) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA
    (23) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 60


state 39

    (22) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA
    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 61


state 40

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA . block FIN DE PROGRAMA
    (47) block -> . estatuto puntoc block
    (49) block -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    block                          shift and go to state 62
    estatuto                       shift and go to state 63
    empty                          shift and go to state 64
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    asigna                         shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 41

    (42) funcproc -> procedimiento funcproc .

    PROGRAMA        reduce using rule 42 (funcproc -> procedimiento funcproc .)


state 42

    (43) funcproc -> funcion funcproc .

    PROGRAMA        reduce using rule 43 (funcproc -> funcion funcproc .)


state 43

    (45) procedimiento -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 89


state 44

    (46) funcion -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 90


state 45

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN . DE PROTOTIPOS PUNTO_COMA

    DE              shift and go to state 91


state 46

    (31) gpofuncproc -> protfunc gpofuncproc .

    FIN             reduce using rule 31 (gpofuncproc -> protfunc gpofuncproc .)


state 47

    (30) gpofuncproc -> protproc gpofuncproc .

    FIN             reduce using rule 30 (gpofuncproc -> protproc gpofuncproc .)


state 48

    (32) protfunc -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 92


state 49

    (33) protproc -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 93


state 50

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 94


state 51

    (7) gpoids -> IDENT dimens COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (127) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    gpoids                         shift and go to state 95
    empty                          shift and go to state 53

state 52

    (10) gpoids -> IDENT COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 10 (gpoids -> IDENT COMA gpoids .)


state 53

    (11) gpoids -> empty .

    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> empty .)


state 54

    (9) gpoids -> IDENT opasig COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (127) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    gpoids                         shift and go to state 96
    empty                          shift and go to state 53

state 55

    (12) dimens -> CORCHETE_EMPIEZA valor . CORCHETE_TERMINA dimens

    CORCHETE_TERMINA shift and go to state 97


state 56

    (17) valor -> CTE_ENTERA .

    CORCHETE_TERMINA reduce using rule 17 (valor -> CTE_ENTERA .)


state 57

    (18) valor -> IDENT .

    CORCHETE_TERMINA reduce using rule 18 (valor -> IDENT .)


state 58

    (14) opasig -> OP_ASIG CTE_ENTERA .

    COMA            reduce using rule 14 (opasig -> OP_ASIG CTE_ENTERA .)


state 59

    (15) opasig -> OP_ASIG IDENT .

    COMA            reduce using rule 15 (opasig -> OP_ASIG IDENT .)


state 60

    (21) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .
    (23) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (127) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    VARIABLES       reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    FUNCION         reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROGRAMA        reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 127 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]
  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 127 (empty -> .) ]

    grupoconst                     shift and go to state 98
    empty                          shift and go to state 10

state 61

    (22) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .
    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (127) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    VARIABLES       reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    FUNCION         reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROGRAMA        reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 127 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]
  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 127 (empty -> .) ]

    grupoconst                     shift and go to state 99
    empty                          shift and go to state 10

state 62

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block . FIN DE PROGRAMA

    FIN             shift and go to state 100


state 63

    (47) block -> estatuto . puntoc block
    (48) puntoc -> . PUNTO_COMA

    PUNTO_COMA      shift and go to state 102

    puntoc                         shift and go to state 101

state 64

    (49) block -> empty .
    (64) estatuto -> empty .

    FIN             reduce using rule 49 (block -> empty .)
    HASTA           reduce using rule 49 (block -> empty .)
    PUNTO_COMA      reduce using rule 64 (estatuto -> empty .)


state 65

    (50) estatuto -> si .

    PUNTO_COMA      reduce using rule 50 (estatuto -> si .)
    SINO            reduce using rule 50 (estatuto -> si .)
    FIN             reduce using rule 50 (estatuto -> si .)
    SEA             reduce using rule 50 (estatuto -> si .)
    OTRO            reduce using rule 50 (estatuto -> si .)


state 66

    (51) estatuto -> lfunc .

    PUNTO_COMA      reduce using rule 51 (estatuto -> lfunc .)
    SINO            reduce using rule 51 (estatuto -> lfunc .)
    FIN             reduce using rule 51 (estatuto -> lfunc .)
    SEA             reduce using rule 51 (estatuto -> lfunc .)
    OTRO            reduce using rule 51 (estatuto -> lfunc .)


state 67

    (52) estatuto -> LIMPIA .

    PUNTO_COMA      reduce using rule 52 (estatuto -> LIMPIA .)
    SINO            reduce using rule 52 (estatuto -> LIMPIA .)
    FIN             reduce using rule 52 (estatuto -> LIMPIA .)
    SEA             reduce using rule 52 (estatuto -> LIMPIA .)
    OTRO            reduce using rule 52 (estatuto -> LIMPIA .)


state 68

    (53) estatuto -> desde .

    PUNTO_COMA      reduce using rule 53 (estatuto -> desde .)
    SINO            reduce using rule 53 (estatuto -> desde .)
    FIN             reduce using rule 53 (estatuto -> desde .)
    SEA             reduce using rule 53 (estatuto -> desde .)
    OTRO            reduce using rule 53 (estatuto -> desde .)


state 69

    (54) estatuto -> repetir .

    PUNTO_COMA      reduce using rule 54 (estatuto -> repetir .)
    SINO            reduce using rule 54 (estatuto -> repetir .)
    FIN             reduce using rule 54 (estatuto -> repetir .)
    SEA             reduce using rule 54 (estatuto -> repetir .)
    OTRO            reduce using rule 54 (estatuto -> repetir .)


state 70

    (55) estatuto -> mientras .

    PUNTO_COMA      reduce using rule 55 (estatuto -> mientras .)
    SINO            reduce using rule 55 (estatuto -> mientras .)
    FIN             reduce using rule 55 (estatuto -> mientras .)
    SEA             reduce using rule 55 (estatuto -> mientras .)
    OTRO            reduce using rule 55 (estatuto -> mientras .)


state 71

    (56) estatuto -> cuando .

    PUNTO_COMA      reduce using rule 56 (estatuto -> cuando .)
    SINO            reduce using rule 56 (estatuto -> cuando .)
    FIN             reduce using rule 56 (estatuto -> cuando .)
    SEA             reduce using rule 56 (estatuto -> cuando .)
    OTRO            reduce using rule 56 (estatuto -> cuando .)


state 72

    (57) estatuto -> regresa .

    PUNTO_COMA      reduce using rule 57 (estatuto -> regresa .)
    SINO            reduce using rule 57 (estatuto -> regresa .)
    FIN             reduce using rule 57 (estatuto -> regresa .)
    SEA             reduce using rule 57 (estatuto -> regresa .)
    OTRO            reduce using rule 57 (estatuto -> regresa .)


state 73

    (58) estatuto -> asigna .

    PUNTO_COMA      reduce using rule 58 (estatuto -> asigna .)
    SINO            reduce using rule 58 (estatuto -> asigna .)
    FIN             reduce using rule 58 (estatuto -> asigna .)
    SEA             reduce using rule 58 (estatuto -> asigna .)
    OTRO            reduce using rule 58 (estatuto -> asigna .)


state 74

    (59) estatuto -> imprime .

    PUNTO_COMA      reduce using rule 59 (estatuto -> imprime .)
    SINO            reduce using rule 59 (estatuto -> imprime .)
    FIN             reduce using rule 59 (estatuto -> imprime .)
    SEA             reduce using rule 59 (estatuto -> imprime .)
    OTRO            reduce using rule 59 (estatuto -> imprime .)


state 75

    (60) estatuto -> imprimenl .

    PUNTO_COMA      reduce using rule 60 (estatuto -> imprimenl .)
    SINO            reduce using rule 60 (estatuto -> imprimenl .)
    FIN             reduce using rule 60 (estatuto -> imprimenl .)
    SEA             reduce using rule 60 (estatuto -> imprimenl .)
    OTRO            reduce using rule 60 (estatuto -> imprimenl .)


state 76

    (61) estatuto -> lee .

    PUNTO_COMA      reduce using rule 61 (estatuto -> lee .)
    SINO            reduce using rule 61 (estatuto -> lee .)
    FIN             reduce using rule 61 (estatuto -> lee .)
    SEA             reduce using rule 61 (estatuto -> lee .)
    OTRO            reduce using rule 61 (estatuto -> lee .)


state 77

    (62) estatuto -> INTERRUMPE .

    PUNTO_COMA      reduce using rule 62 (estatuto -> INTERRUMPE .)
    SINO            reduce using rule 62 (estatuto -> INTERRUMPE .)
    FIN             reduce using rule 62 (estatuto -> INTERRUMPE .)
    SEA             reduce using rule 62 (estatuto -> INTERRUMPE .)
    OTRO            reduce using rule 62 (estatuto -> INTERRUMPE .)


state 78

    (63) estatuto -> CONTINUA .

    PUNTO_COMA      reduce using rule 63 (estatuto -> CONTINUA .)
    SINO            reduce using rule 63 (estatuto -> CONTINUA .)
    FIN             reduce using rule 63 (estatuto -> CONTINUA .)
    SEA             reduce using rule 63 (estatuto -> CONTINUA .)
    OTRO            reduce using rule 63 (estatuto -> CONTINUA .)


state 79

    (65) si -> SI . PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino

    PAREN_EMPIEZA   shift and go to state 103


state 80

    (116) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (117) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (75) asigna -> IDENT . udim OP_ASIG exprlog
    (118) parenemp -> . PAREN_EMPIEZA
    (85) udim -> . expr udim
    (86) udim -> . empty
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (127) empty -> .
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    PAREN_EMPIEZA   shift and go to state 107
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_ASIG         reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120

  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]

    parenemp                       shift and go to state 105
    udim                           shift and go to state 106
    expr                           shift and go to state 108
    empty                          shift and go to state 109
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 81

    (71) desde -> DESDE . EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> DESDE . EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp

    EL              shift and go to state 121


state 82

    (73) repetir -> REPETIR . block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (47) block -> . estatuto puntoc block
    (49) block -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    HASTA           reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    block                          shift and go to state 122
    estatuto                       shift and go to state 63
    empty                          shift and go to state 64
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    asigna                         shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 83

    (74) mientras -> MIENTRAS . SE CUMPLA QUE exprlog bckesp

    SE              shift and go to state 123


state 84

    (76) cuando -> CUANDO . EL VALOR DE IDENT INICIO gposea otro FIN

    EL              shift and go to state 124


state 85

    (84) regresa -> REGRESA . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 125


state 86

    (119) imprime -> IMPRIME . PAREN_EMPIEZA gpoexp PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 126


state 87

    (120) imprimenl -> IMPRIMENL . PAREN_EMPIEZA gpoexp PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 127


state 88

    (121) lee -> LEE . PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> LEE . PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 128


state 89

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (127) empty -> .

    IDENT           shift and go to state 129
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    params                         shift and go to state 130
    gpopars                        shift and go to state 131
    empty                          shift and go to state 132

state 90

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (127) empty -> .

    IDENT           shift and go to state 129
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    params                         shift and go to state 133
    gpopars                        shift and go to state 131
    empty                          shift and go to state 132

state 91

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE . PROTOTIPOS PUNTO_COMA

    PROTOTIPOS      shift and go to state 134


state 92

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (127) empty -> .

    IDENT           shift and go to state 129
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    params                         shift and go to state 135
    gpopars                        shift and go to state 131
    empty                          shift and go to state 132

state 93

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (127) empty -> .

    IDENT           shift and go to state 129
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    params                         shift and go to state 136
    gpopars                        shift and go to state 131
    empty                          shift and go to state 132

state 94

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA . gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (127) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    INICIO          reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 127 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 127 (empty -> .) ]
  ! FUNCION         [ reduce using rule 127 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 127 (empty -> .) ]
  ! INICIO          [ reduce using rule 127 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 137
    empty                          shift and go to state 16

state 95

    (7) gpoids -> IDENT dimens COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 7 (gpoids -> IDENT dimens COMA gpoids .)


state 96

    (9) gpoids -> IDENT opasig COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 9 (gpoids -> IDENT opasig COMA gpoids .)


state 97

    (12) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA . dimens
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (127) empty -> .

    CORCHETE_EMPIEZA shift and go to state 35
    COMA            reduce using rule 127 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    dimens                         shift and go to state 138
    empty                          shift and go to state 139

state 98

    (23) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)


state 99

    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)


state 100

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN . DE PROGRAMA

    DE              shift and go to state 140


state 101

    (47) block -> estatuto puntoc . block
    (47) block -> . estatuto puntoc block
    (49) block -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    estatuto                       shift and go to state 63
    block                          shift and go to state 141
    empty                          shift and go to state 64
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    asigna                         shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 102

    (48) puntoc -> PUNTO_COMA .

    LIMPIA          reduce using rule 48 (puntoc -> PUNTO_COMA .)
    INTERRUMPE      reduce using rule 48 (puntoc -> PUNTO_COMA .)
    CONTINUA        reduce using rule 48 (puntoc -> PUNTO_COMA .)
    SI              reduce using rule 48 (puntoc -> PUNTO_COMA .)
    IDENT           reduce using rule 48 (puntoc -> PUNTO_COMA .)
    DESDE           reduce using rule 48 (puntoc -> PUNTO_COMA .)
    REPETIR         reduce using rule 48 (puntoc -> PUNTO_COMA .)
    MIENTRAS        reduce using rule 48 (puntoc -> PUNTO_COMA .)
    CUANDO          reduce using rule 48 (puntoc -> PUNTO_COMA .)
    REGRESA         reduce using rule 48 (puntoc -> PUNTO_COMA .)
    IMPRIME         reduce using rule 48 (puntoc -> PUNTO_COMA .)
    IMPRIMENL       reduce using rule 48 (puntoc -> PUNTO_COMA .)
    LEE             reduce using rule 48 (puntoc -> PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 48 (puntoc -> PUNTO_COMA .)
    FIN             reduce using rule 48 (puntoc -> PUNTO_COMA .)
    HASTA           reduce using rule 48 (puntoc -> PUNTO_COMA .)


state 103

    (65) si -> SI PAREN_EMPIEZA . exprlog PAREN_TERMINA HACER bckesp sino
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    exprlog                        shift and go to state 143
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 104

    (107) termino -> IDENT .
    (108) termino -> IDENT . lfunc
    (109) termino -> IDENT . udim
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (85) udim -> . expr udim
    (86) udim -> . empty
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (127) empty -> .
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! reduce/reduce conflict for POTENCIA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 107 (termino -> IDENT .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for CTE_ENTERA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_REAL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_ALFA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for VERDADERO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for FALSO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for PAREN_EMPIEZA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_ASIG resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for COMA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for HASTA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SINO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for FIN resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SEA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for OTRO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INICIO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SI resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DESDE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for REPETIR resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CUANDO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for REGRESA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for LEE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INCR resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DECR resolved using rule 107 (termino -> IDENT .)
    POTENCIA        reduce using rule 107 (termino -> IDENT .)
    MULTI           reduce using rule 107 (termino -> IDENT .)
    DIV             reduce using rule 107 (termino -> IDENT .)
    MOD             reduce using rule 107 (termino -> IDENT .)
    CTE_ENTERA      reduce using rule 107 (termino -> IDENT .)
    CTE_REAL        reduce using rule 107 (termino -> IDENT .)
    CTE_ALFA        reduce using rule 107 (termino -> IDENT .)
    VERDADERO       reduce using rule 107 (termino -> IDENT .)
    FALSO           reduce using rule 107 (termino -> IDENT .)
    OP_ASIG         reduce using rule 107 (termino -> IDENT .)
    OP_REL          reduce using rule 107 (termino -> IDENT .)
    Y               reduce using rule 107 (termino -> IDENT .)
    O               reduce using rule 107 (termino -> IDENT .)
    PAREN_TERMINA   reduce using rule 107 (termino -> IDENT .)
    COMA            reduce using rule 107 (termino -> IDENT .)
    PUNTO_COMA      reduce using rule 107 (termino -> IDENT .)
    HASTA           reduce using rule 107 (termino -> IDENT .)
    SINO            reduce using rule 107 (termino -> IDENT .)
    FIN             reduce using rule 107 (termino -> IDENT .)
    SEA             reduce using rule 107 (termino -> IDENT .)
    OTRO            reduce using rule 107 (termino -> IDENT .)
    INICIO          reduce using rule 107 (termino -> IDENT .)
    LIMPIA          reduce using rule 107 (termino -> IDENT .)
    INTERRUMPE      reduce using rule 107 (termino -> IDENT .)
    CONTINUA        reduce using rule 107 (termino -> IDENT .)
    SI              reduce using rule 107 (termino -> IDENT .)
    DESDE           reduce using rule 107 (termino -> IDENT .)
    REPETIR         reduce using rule 107 (termino -> IDENT .)
    MIENTRAS        reduce using rule 107 (termino -> IDENT .)
    CUANDO          reduce using rule 107 (termino -> IDENT .)
    REGRESA         reduce using rule 107 (termino -> IDENT .)
    IMPRIME         reduce using rule 107 (termino -> IDENT .)
    IMPRIMENL       reduce using rule 107 (termino -> IDENT .)
    LEE             reduce using rule 107 (termino -> IDENT .)
    INCR            reduce using rule 107 (termino -> IDENT .)
    DECR            reduce using rule 107 (termino -> IDENT .)
    IDENT           shift and go to state 150
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    PAREN_EMPIEZA   shift and go to state 142

  ! MAS             [ reduce using rule 107 (termino -> IDENT .) ]
  ! MENOS           [ reduce using rule 107 (termino -> IDENT .) ]
  ! IDENT           [ reduce using rule 107 (termino -> IDENT .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 107 (termino -> IDENT .) ]
  ! POTENCIA        [ reduce using rule 127 (empty -> .) ]
  ! MULTI           [ reduce using rule 127 (empty -> .) ]
  ! DIV             [ reduce using rule 127 (empty -> .) ]
  ! MOD             [ reduce using rule 127 (empty -> .) ]
  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! OP_ASIG         [ reduce using rule 127 (empty -> .) ]
  ! OP_REL          [ reduce using rule 127 (empty -> .) ]
  ! Y               [ reduce using rule 127 (empty -> .) ]
  ! O               [ reduce using rule 127 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 127 (empty -> .) ]
  ! COMA            [ reduce using rule 127 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 127 (empty -> .) ]
  ! HASTA           [ reduce using rule 127 (empty -> .) ]
  ! SINO            [ reduce using rule 127 (empty -> .) ]
  ! FIN             [ reduce using rule 127 (empty -> .) ]
  ! SEA             [ reduce using rule 127 (empty -> .) ]
  ! OTRO            [ reduce using rule 127 (empty -> .) ]
  ! INICIO          [ reduce using rule 127 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 127 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 127 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! DESDE           [ reduce using rule 127 (empty -> .) ]
  ! REPETIR         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! CUANDO          [ reduce using rule 127 (empty -> .) ]
  ! REGRESA         [ reduce using rule 127 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 127 (empty -> .) ]
  ! LEE             [ reduce using rule 127 (empty -> .) ]
  ! INCR            [ reduce using rule 127 (empty -> .) ]
  ! DECR            [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ shift and go to state 116 ]
  ! CTE_REAL        [ shift and go to state 117 ]
  ! CTE_ALFA        [ shift and go to state 118 ]
  ! VERDADERO       [ shift and go to state 119 ]
  ! FALSO           [ shift and go to state 120 ]

    lfunc                          shift and go to state 151
    udim                           shift and go to state 152
    expr                           shift and go to state 108
    empty                          shift and go to state 109
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 105

    (116) lfunc -> IDENT parenemp . uparams PAREN_TERMINA
    (117) lfunc -> IDENT parenemp . error PAREN_TERMINA
    (125) uparams -> . exprlog
    (126) uparams -> . exprlog COMA uparams
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    error           shift and go to state 154
    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    uparams                        shift and go to state 153
    exprlog                        shift and go to state 155
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 106

    (75) asigna -> IDENT udim . OP_ASIG exprlog

    OP_ASIG         shift and go to state 156


state 107

    (118) parenemp -> PAREN_EMPIEZA .
    (115) termino -> PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! reduce/reduce conflict for OP_REL resolved using rule 118 (parenemp -> PAREN_EMPIEZA .)
  ! reduce/reduce conflict for Y resolved using rule 118 (parenemp -> PAREN_EMPIEZA .)
  ! reduce/reduce conflict for O resolved using rule 118 (parenemp -> PAREN_EMPIEZA .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 118 (parenemp -> PAREN_EMPIEZA .)
    error           reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    NO              reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    MAS             reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    MENOS           reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    IDENT           reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    CTE_ENTERA      reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    CTE_REAL        reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    CTE_ALFA        reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    VERDADERO       reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    FALSO           reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    PAREN_TERMINA   reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    COMA            reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    O               reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    Y               reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    OP_REL          reduce using rule 118 (parenemp -> PAREN_EMPIEZA .)
    PAREN_EMPIEZA   shift and go to state 142

  ! PAREN_EMPIEZA   [ reduce using rule 118 (parenemp -> PAREN_EMPIEZA .) ]
  ! NO              [ shift and go to state 147 ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! OP_REL          [ reduce using rule 127 (empty -> .) ]
  ! Y               [ reduce using rule 127 (empty -> .) ]
  ! O               [ reduce using rule 127 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ shift and go to state 104 ]
  ! CTE_ENTERA      [ shift and go to state 116 ]
  ! CTE_REAL        [ shift and go to state 117 ]
  ! CTE_ALFA        [ shift and go to state 118 ]
  ! VERDADERO       [ shift and go to state 119 ]
  ! FALSO           [ shift and go to state 120 ]

    exprlog                        shift and go to state 157
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 108

    (85) udim -> expr . udim
    (85) udim -> . expr udim
    (86) udim -> . empty
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (127) empty -> .
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]

    expr                           shift and go to state 108
    udim                           shift and go to state 158
    empty                          shift and go to state 109
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 109

    (86) udim -> empty .
    (102) multi -> empty .

  ! reduce/reduce conflict for MAS resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for MENOS resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for IDENT resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for CTE_ENTERA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for CTE_REAL resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for CTE_ALFA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for VERDADERO resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for FALSO resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for PAREN_EMPIEZA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for OP_ASIG resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for MULTI resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for DIV resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for MOD resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for OP_REL resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for Y resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for O resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for COMA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for HASTA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for SINO resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for FIN resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for SEA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for OTRO resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for INICIO resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for SI resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for DESDE resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for REPETIR resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for CUANDO resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for REGRESA resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for LEE resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for INCR resolved using rule 86 (udim -> empty .)
  ! reduce/reduce conflict for DECR resolved using rule 86 (udim -> empty .)
    OP_ASIG         reduce using rule 86 (udim -> empty .)
    POTENCIA        reduce using rule 86 (udim -> empty .)
    MULTI           reduce using rule 86 (udim -> empty .)
    DIV             reduce using rule 86 (udim -> empty .)
    MOD             reduce using rule 86 (udim -> empty .)
    MAS             reduce using rule 86 (udim -> empty .)
    MENOS           reduce using rule 86 (udim -> empty .)
    IDENT           reduce using rule 86 (udim -> empty .)
    CTE_ENTERA      reduce using rule 86 (udim -> empty .)
    CTE_REAL        reduce using rule 86 (udim -> empty .)
    CTE_ALFA        reduce using rule 86 (udim -> empty .)
    VERDADERO       reduce using rule 86 (udim -> empty .)
    FALSO           reduce using rule 86 (udim -> empty .)
    PAREN_EMPIEZA   reduce using rule 86 (udim -> empty .)
    OP_REL          reduce using rule 86 (udim -> empty .)
    Y               reduce using rule 86 (udim -> empty .)
    O               reduce using rule 86 (udim -> empty .)
    PAREN_TERMINA   reduce using rule 86 (udim -> empty .)
    COMA            reduce using rule 86 (udim -> empty .)
    PUNTO_COMA      reduce using rule 86 (udim -> empty .)
    HASTA           reduce using rule 86 (udim -> empty .)
    SINO            reduce using rule 86 (udim -> empty .)
    FIN             reduce using rule 86 (udim -> empty .)
    SEA             reduce using rule 86 (udim -> empty .)
    OTRO            reduce using rule 86 (udim -> empty .)
    INICIO          reduce using rule 86 (udim -> empty .)
    LIMPIA          reduce using rule 86 (udim -> empty .)
    INTERRUMPE      reduce using rule 86 (udim -> empty .)
    CONTINUA        reduce using rule 86 (udim -> empty .)
    SI              reduce using rule 86 (udim -> empty .)
    DESDE           reduce using rule 86 (udim -> empty .)
    REPETIR         reduce using rule 86 (udim -> empty .)
    MIENTRAS        reduce using rule 86 (udim -> empty .)
    CUANDO          reduce using rule 86 (udim -> empty .)
    REGRESA         reduce using rule 86 (udim -> empty .)
    IMPRIME         reduce using rule 86 (udim -> empty .)
    IMPRIMENL       reduce using rule 86 (udim -> empty .)
    LEE             reduce using rule 86 (udim -> empty .)
    INCR            reduce using rule 86 (udim -> empty .)
    DECR            reduce using rule 86 (udim -> empty .)

  ! MAS             [ reduce using rule 102 (multi -> empty .) ]
  ! MENOS           [ reduce using rule 102 (multi -> empty .) ]
  ! IDENT           [ reduce using rule 102 (multi -> empty .) ]
  ! CTE_ENTERA      [ reduce using rule 102 (multi -> empty .) ]
  ! CTE_REAL        [ reduce using rule 102 (multi -> empty .) ]
  ! CTE_ALFA        [ reduce using rule 102 (multi -> empty .) ]
  ! VERDADERO       [ reduce using rule 102 (multi -> empty .) ]
  ! FALSO           [ reduce using rule 102 (multi -> empty .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 102 (multi -> empty .) ]
  ! OP_ASIG         [ reduce using rule 102 (multi -> empty .) ]
  ! POTENCIA        [ reduce using rule 102 (multi -> empty .) ]
  ! MULTI           [ reduce using rule 102 (multi -> empty .) ]
  ! DIV             [ reduce using rule 102 (multi -> empty .) ]
  ! MOD             [ reduce using rule 102 (multi -> empty .) ]
  ! OP_REL          [ reduce using rule 102 (multi -> empty .) ]
  ! Y               [ reduce using rule 102 (multi -> empty .) ]
  ! O               [ reduce using rule 102 (multi -> empty .) ]
  ! PAREN_TERMINA   [ reduce using rule 102 (multi -> empty .) ]
  ! COMA            [ reduce using rule 102 (multi -> empty .) ]
  ! PUNTO_COMA      [ reduce using rule 102 (multi -> empty .) ]
  ! HASTA           [ reduce using rule 102 (multi -> empty .) ]
  ! SINO            [ reduce using rule 102 (multi -> empty .) ]
  ! FIN             [ reduce using rule 102 (multi -> empty .) ]
  ! SEA             [ reduce using rule 102 (multi -> empty .) ]
  ! OTRO            [ reduce using rule 102 (multi -> empty .) ]
  ! INICIO          [ reduce using rule 102 (multi -> empty .) ]
  ! LIMPIA          [ reduce using rule 102 (multi -> empty .) ]
  ! INTERRUMPE      [ reduce using rule 102 (multi -> empty .) ]
  ! CONTINUA        [ reduce using rule 102 (multi -> empty .) ]
  ! SI              [ reduce using rule 102 (multi -> empty .) ]
  ! DESDE           [ reduce using rule 102 (multi -> empty .) ]
  ! REPETIR         [ reduce using rule 102 (multi -> empty .) ]
  ! MIENTRAS        [ reduce using rule 102 (multi -> empty .) ]
  ! CUANDO          [ reduce using rule 102 (multi -> empty .) ]
  ! REGRESA         [ reduce using rule 102 (multi -> empty .) ]
  ! IMPRIME         [ reduce using rule 102 (multi -> empty .) ]
  ! IMPRIMENL       [ reduce using rule 102 (multi -> empty .) ]
  ! LEE             [ reduce using rule 102 (multi -> empty .) ]
  ! INCR            [ reduce using rule 102 (multi -> empty .) ]
  ! DECR            [ reduce using rule 102 (multi -> empty .) ]


state 110

    (95) expr -> multi .

    MAS             reduce using rule 95 (expr -> multi .)
    MENOS           reduce using rule 95 (expr -> multi .)
    IDENT           reduce using rule 95 (expr -> multi .)
    CTE_ENTERA      reduce using rule 95 (expr -> multi .)
    CTE_REAL        reduce using rule 95 (expr -> multi .)
    CTE_ALFA        reduce using rule 95 (expr -> multi .)
    VERDADERO       reduce using rule 95 (expr -> multi .)
    FALSO           reduce using rule 95 (expr -> multi .)
    PAREN_EMPIEZA   reduce using rule 95 (expr -> multi .)
    OP_ASIG         reduce using rule 95 (expr -> multi .)
    OP_REL          reduce using rule 95 (expr -> multi .)
    Y               reduce using rule 95 (expr -> multi .)
    O               reduce using rule 95 (expr -> multi .)
    PAREN_TERMINA   reduce using rule 95 (expr -> multi .)
    POTENCIA        reduce using rule 95 (expr -> multi .)
    MULTI           reduce using rule 95 (expr -> multi .)
    DIV             reduce using rule 95 (expr -> multi .)
    MOD             reduce using rule 95 (expr -> multi .)
    COMA            reduce using rule 95 (expr -> multi .)
    PUNTO_COMA      reduce using rule 95 (expr -> multi .)
    HASTA           reduce using rule 95 (expr -> multi .)
    SINO            reduce using rule 95 (expr -> multi .)
    FIN             reduce using rule 95 (expr -> multi .)
    SEA             reduce using rule 95 (expr -> multi .)
    OTRO            reduce using rule 95 (expr -> multi .)
    INICIO          reduce using rule 95 (expr -> multi .)
    LIMPIA          reduce using rule 95 (expr -> multi .)
    INTERRUMPE      reduce using rule 95 (expr -> multi .)
    CONTINUA        reduce using rule 95 (expr -> multi .)
    SI              reduce using rule 95 (expr -> multi .)
    DESDE           reduce using rule 95 (expr -> multi .)
    REPETIR         reduce using rule 95 (expr -> multi .)
    MIENTRAS        reduce using rule 95 (expr -> multi .)
    CUANDO          reduce using rule 95 (expr -> multi .)
    REGRESA         reduce using rule 95 (expr -> multi .)
    IMPRIME         reduce using rule 95 (expr -> multi .)
    IMPRIMENL       reduce using rule 95 (expr -> multi .)
    LEE             reduce using rule 95 (expr -> multi .)
    INCR            reduce using rule 95 (expr -> multi .)
    DECR            reduce using rule 95 (expr -> multi .)


state 111

    (96) expr -> MAS . expr
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]

    expr                           shift and go to state 159
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 112

    (97) expr -> MENOS . expr
    (106) signo -> MENOS . termino
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)

  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]

    expr                           shift and go to state 160
    termino                        shift and go to state 161
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114

state 113

    (98) multi -> expo .
    (99) multi -> expo . MULTI multi
    (100) multi -> expo . DIV multi
    (101) multi -> expo . MOD multi

  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    MAS             reduce using rule 98 (multi -> expo .)
    MENOS           reduce using rule 98 (multi -> expo .)
    IDENT           reduce using rule 98 (multi -> expo .)
    CTE_ENTERA      reduce using rule 98 (multi -> expo .)
    CTE_REAL        reduce using rule 98 (multi -> expo .)
    CTE_ALFA        reduce using rule 98 (multi -> expo .)
    VERDADERO       reduce using rule 98 (multi -> expo .)
    FALSO           reduce using rule 98 (multi -> expo .)
    PAREN_EMPIEZA   reduce using rule 98 (multi -> expo .)
    OP_ASIG         reduce using rule 98 (multi -> expo .)
    OP_REL          reduce using rule 98 (multi -> expo .)
    Y               reduce using rule 98 (multi -> expo .)
    O               reduce using rule 98 (multi -> expo .)
    PAREN_TERMINA   reduce using rule 98 (multi -> expo .)
    POTENCIA        reduce using rule 98 (multi -> expo .)
    COMA            reduce using rule 98 (multi -> expo .)
    PUNTO_COMA      reduce using rule 98 (multi -> expo .)
    HASTA           reduce using rule 98 (multi -> expo .)
    SINO            reduce using rule 98 (multi -> expo .)
    FIN             reduce using rule 98 (multi -> expo .)
    SEA             reduce using rule 98 (multi -> expo .)
    OTRO            reduce using rule 98 (multi -> expo .)
    INICIO          reduce using rule 98 (multi -> expo .)
    LIMPIA          reduce using rule 98 (multi -> expo .)
    INTERRUMPE      reduce using rule 98 (multi -> expo .)
    CONTINUA        reduce using rule 98 (multi -> expo .)
    SI              reduce using rule 98 (multi -> expo .)
    DESDE           reduce using rule 98 (multi -> expo .)
    REPETIR         reduce using rule 98 (multi -> expo .)
    MIENTRAS        reduce using rule 98 (multi -> expo .)
    CUANDO          reduce using rule 98 (multi -> expo .)
    REGRESA         reduce using rule 98 (multi -> expo .)
    IMPRIME         reduce using rule 98 (multi -> expo .)
    IMPRIMENL       reduce using rule 98 (multi -> expo .)
    LEE             reduce using rule 98 (multi -> expo .)
    INCR            reduce using rule 98 (multi -> expo .)
    DECR            reduce using rule 98 (multi -> expo .)
    MULTI           shift and go to state 162
    DIV             shift and go to state 163
    MOD             shift and go to state 164

  ! MULTI           [ reduce using rule 98 (multi -> expo .) ]
  ! DIV             [ reduce using rule 98 (multi -> expo .) ]
  ! MOD             [ reduce using rule 98 (multi -> expo .) ]


state 114

    (103) expo -> signo .
    (104) expo -> signo . POTENCIA expo

  ! shift/reduce conflict for POTENCIA resolved as shift
    MULTI           reduce using rule 103 (expo -> signo .)
    DIV             reduce using rule 103 (expo -> signo .)
    MOD             reduce using rule 103 (expo -> signo .)
    MAS             reduce using rule 103 (expo -> signo .)
    MENOS           reduce using rule 103 (expo -> signo .)
    IDENT           reduce using rule 103 (expo -> signo .)
    CTE_ENTERA      reduce using rule 103 (expo -> signo .)
    CTE_REAL        reduce using rule 103 (expo -> signo .)
    CTE_ALFA        reduce using rule 103 (expo -> signo .)
    VERDADERO       reduce using rule 103 (expo -> signo .)
    FALSO           reduce using rule 103 (expo -> signo .)
    PAREN_EMPIEZA   reduce using rule 103 (expo -> signo .)
    OP_ASIG         reduce using rule 103 (expo -> signo .)
    OP_REL          reduce using rule 103 (expo -> signo .)
    Y               reduce using rule 103 (expo -> signo .)
    O               reduce using rule 103 (expo -> signo .)
    PAREN_TERMINA   reduce using rule 103 (expo -> signo .)
    COMA            reduce using rule 103 (expo -> signo .)
    PUNTO_COMA      reduce using rule 103 (expo -> signo .)
    HASTA           reduce using rule 103 (expo -> signo .)
    SINO            reduce using rule 103 (expo -> signo .)
    FIN             reduce using rule 103 (expo -> signo .)
    SEA             reduce using rule 103 (expo -> signo .)
    OTRO            reduce using rule 103 (expo -> signo .)
    INICIO          reduce using rule 103 (expo -> signo .)
    LIMPIA          reduce using rule 103 (expo -> signo .)
    INTERRUMPE      reduce using rule 103 (expo -> signo .)
    CONTINUA        reduce using rule 103 (expo -> signo .)
    SI              reduce using rule 103 (expo -> signo .)
    DESDE           reduce using rule 103 (expo -> signo .)
    REPETIR         reduce using rule 103 (expo -> signo .)
    MIENTRAS        reduce using rule 103 (expo -> signo .)
    CUANDO          reduce using rule 103 (expo -> signo .)
    REGRESA         reduce using rule 103 (expo -> signo .)
    IMPRIME         reduce using rule 103 (expo -> signo .)
    IMPRIMENL       reduce using rule 103 (expo -> signo .)
    LEE             reduce using rule 103 (expo -> signo .)
    INCR            reduce using rule 103 (expo -> signo .)
    DECR            reduce using rule 103 (expo -> signo .)
    POTENCIA        shift and go to state 165

  ! POTENCIA        [ reduce using rule 103 (expo -> signo .) ]


state 115

    (105) signo -> termino .

    POTENCIA        reduce using rule 105 (signo -> termino .)
    MULTI           reduce using rule 105 (signo -> termino .)
    DIV             reduce using rule 105 (signo -> termino .)
    MOD             reduce using rule 105 (signo -> termino .)
    MAS             reduce using rule 105 (signo -> termino .)
    MENOS           reduce using rule 105 (signo -> termino .)
    IDENT           reduce using rule 105 (signo -> termino .)
    CTE_ENTERA      reduce using rule 105 (signo -> termino .)
    CTE_REAL        reduce using rule 105 (signo -> termino .)
    CTE_ALFA        reduce using rule 105 (signo -> termino .)
    VERDADERO       reduce using rule 105 (signo -> termino .)
    FALSO           reduce using rule 105 (signo -> termino .)
    PAREN_EMPIEZA   reduce using rule 105 (signo -> termino .)
    OP_ASIG         reduce using rule 105 (signo -> termino .)
    OP_REL          reduce using rule 105 (signo -> termino .)
    Y               reduce using rule 105 (signo -> termino .)
    O               reduce using rule 105 (signo -> termino .)
    PAREN_TERMINA   reduce using rule 105 (signo -> termino .)
    COMA            reduce using rule 105 (signo -> termino .)
    PUNTO_COMA      reduce using rule 105 (signo -> termino .)
    HASTA           reduce using rule 105 (signo -> termino .)
    SINO            reduce using rule 105 (signo -> termino .)
    FIN             reduce using rule 105 (signo -> termino .)
    SEA             reduce using rule 105 (signo -> termino .)
    OTRO            reduce using rule 105 (signo -> termino .)
    INICIO          reduce using rule 105 (signo -> termino .)
    LIMPIA          reduce using rule 105 (signo -> termino .)
    INTERRUMPE      reduce using rule 105 (signo -> termino .)
    CONTINUA        reduce using rule 105 (signo -> termino .)
    SI              reduce using rule 105 (signo -> termino .)
    DESDE           reduce using rule 105 (signo -> termino .)
    REPETIR         reduce using rule 105 (signo -> termino .)
    MIENTRAS        reduce using rule 105 (signo -> termino .)
    CUANDO          reduce using rule 105 (signo -> termino .)
    REGRESA         reduce using rule 105 (signo -> termino .)
    IMPRIME         reduce using rule 105 (signo -> termino .)
    IMPRIMENL       reduce using rule 105 (signo -> termino .)
    LEE             reduce using rule 105 (signo -> termino .)
    INCR            reduce using rule 105 (signo -> termino .)
    DECR            reduce using rule 105 (signo -> termino .)


state 116

    (110) termino -> CTE_ENTERA .

    POTENCIA        reduce using rule 110 (termino -> CTE_ENTERA .)
    MULTI           reduce using rule 110 (termino -> CTE_ENTERA .)
    DIV             reduce using rule 110 (termino -> CTE_ENTERA .)
    MOD             reduce using rule 110 (termino -> CTE_ENTERA .)
    MAS             reduce using rule 110 (termino -> CTE_ENTERA .)
    MENOS           reduce using rule 110 (termino -> CTE_ENTERA .)
    IDENT           reduce using rule 110 (termino -> CTE_ENTERA .)
    CTE_ENTERA      reduce using rule 110 (termino -> CTE_ENTERA .)
    CTE_REAL        reduce using rule 110 (termino -> CTE_ENTERA .)
    CTE_ALFA        reduce using rule 110 (termino -> CTE_ENTERA .)
    VERDADERO       reduce using rule 110 (termino -> CTE_ENTERA .)
    FALSO           reduce using rule 110 (termino -> CTE_ENTERA .)
    PAREN_EMPIEZA   reduce using rule 110 (termino -> CTE_ENTERA .)
    OP_ASIG         reduce using rule 110 (termino -> CTE_ENTERA .)
    OP_REL          reduce using rule 110 (termino -> CTE_ENTERA .)
    Y               reduce using rule 110 (termino -> CTE_ENTERA .)
    O               reduce using rule 110 (termino -> CTE_ENTERA .)
    PAREN_TERMINA   reduce using rule 110 (termino -> CTE_ENTERA .)
    COMA            reduce using rule 110 (termino -> CTE_ENTERA .)
    PUNTO_COMA      reduce using rule 110 (termino -> CTE_ENTERA .)
    HASTA           reduce using rule 110 (termino -> CTE_ENTERA .)
    SINO            reduce using rule 110 (termino -> CTE_ENTERA .)
    FIN             reduce using rule 110 (termino -> CTE_ENTERA .)
    SEA             reduce using rule 110 (termino -> CTE_ENTERA .)
    OTRO            reduce using rule 110 (termino -> CTE_ENTERA .)
    INICIO          reduce using rule 110 (termino -> CTE_ENTERA .)
    LIMPIA          reduce using rule 110 (termino -> CTE_ENTERA .)
    INTERRUMPE      reduce using rule 110 (termino -> CTE_ENTERA .)
    CONTINUA        reduce using rule 110 (termino -> CTE_ENTERA .)
    SI              reduce using rule 110 (termino -> CTE_ENTERA .)
    DESDE           reduce using rule 110 (termino -> CTE_ENTERA .)
    REPETIR         reduce using rule 110 (termino -> CTE_ENTERA .)
    MIENTRAS        reduce using rule 110 (termino -> CTE_ENTERA .)
    CUANDO          reduce using rule 110 (termino -> CTE_ENTERA .)
    REGRESA         reduce using rule 110 (termino -> CTE_ENTERA .)
    IMPRIME         reduce using rule 110 (termino -> CTE_ENTERA .)
    IMPRIMENL       reduce using rule 110 (termino -> CTE_ENTERA .)
    LEE             reduce using rule 110 (termino -> CTE_ENTERA .)
    INCR            reduce using rule 110 (termino -> CTE_ENTERA .)
    DECR            reduce using rule 110 (termino -> CTE_ENTERA .)


state 117

    (111) termino -> CTE_REAL .

    POTENCIA        reduce using rule 111 (termino -> CTE_REAL .)
    MULTI           reduce using rule 111 (termino -> CTE_REAL .)
    DIV             reduce using rule 111 (termino -> CTE_REAL .)
    MOD             reduce using rule 111 (termino -> CTE_REAL .)
    MAS             reduce using rule 111 (termino -> CTE_REAL .)
    MENOS           reduce using rule 111 (termino -> CTE_REAL .)
    IDENT           reduce using rule 111 (termino -> CTE_REAL .)
    CTE_ENTERA      reduce using rule 111 (termino -> CTE_REAL .)
    CTE_REAL        reduce using rule 111 (termino -> CTE_REAL .)
    CTE_ALFA        reduce using rule 111 (termino -> CTE_REAL .)
    VERDADERO       reduce using rule 111 (termino -> CTE_REAL .)
    FALSO           reduce using rule 111 (termino -> CTE_REAL .)
    PAREN_EMPIEZA   reduce using rule 111 (termino -> CTE_REAL .)
    OP_ASIG         reduce using rule 111 (termino -> CTE_REAL .)
    OP_REL          reduce using rule 111 (termino -> CTE_REAL .)
    Y               reduce using rule 111 (termino -> CTE_REAL .)
    O               reduce using rule 111 (termino -> CTE_REAL .)
    PAREN_TERMINA   reduce using rule 111 (termino -> CTE_REAL .)
    COMA            reduce using rule 111 (termino -> CTE_REAL .)
    PUNTO_COMA      reduce using rule 111 (termino -> CTE_REAL .)
    HASTA           reduce using rule 111 (termino -> CTE_REAL .)
    SINO            reduce using rule 111 (termino -> CTE_REAL .)
    FIN             reduce using rule 111 (termino -> CTE_REAL .)
    SEA             reduce using rule 111 (termino -> CTE_REAL .)
    OTRO            reduce using rule 111 (termino -> CTE_REAL .)
    INICIO          reduce using rule 111 (termino -> CTE_REAL .)
    LIMPIA          reduce using rule 111 (termino -> CTE_REAL .)
    INTERRUMPE      reduce using rule 111 (termino -> CTE_REAL .)
    CONTINUA        reduce using rule 111 (termino -> CTE_REAL .)
    SI              reduce using rule 111 (termino -> CTE_REAL .)
    DESDE           reduce using rule 111 (termino -> CTE_REAL .)
    REPETIR         reduce using rule 111 (termino -> CTE_REAL .)
    MIENTRAS        reduce using rule 111 (termino -> CTE_REAL .)
    CUANDO          reduce using rule 111 (termino -> CTE_REAL .)
    REGRESA         reduce using rule 111 (termino -> CTE_REAL .)
    IMPRIME         reduce using rule 111 (termino -> CTE_REAL .)
    IMPRIMENL       reduce using rule 111 (termino -> CTE_REAL .)
    LEE             reduce using rule 111 (termino -> CTE_REAL .)
    INCR            reduce using rule 111 (termino -> CTE_REAL .)
    DECR            reduce using rule 111 (termino -> CTE_REAL .)


state 118

    (112) termino -> CTE_ALFA .

    POTENCIA        reduce using rule 112 (termino -> CTE_ALFA .)
    MULTI           reduce using rule 112 (termino -> CTE_ALFA .)
    DIV             reduce using rule 112 (termino -> CTE_ALFA .)
    MOD             reduce using rule 112 (termino -> CTE_ALFA .)
    MAS             reduce using rule 112 (termino -> CTE_ALFA .)
    MENOS           reduce using rule 112 (termino -> CTE_ALFA .)
    IDENT           reduce using rule 112 (termino -> CTE_ALFA .)
    CTE_ENTERA      reduce using rule 112 (termino -> CTE_ALFA .)
    CTE_REAL        reduce using rule 112 (termino -> CTE_ALFA .)
    CTE_ALFA        reduce using rule 112 (termino -> CTE_ALFA .)
    VERDADERO       reduce using rule 112 (termino -> CTE_ALFA .)
    FALSO           reduce using rule 112 (termino -> CTE_ALFA .)
    PAREN_EMPIEZA   reduce using rule 112 (termino -> CTE_ALFA .)
    OP_ASIG         reduce using rule 112 (termino -> CTE_ALFA .)
    OP_REL          reduce using rule 112 (termino -> CTE_ALFA .)
    Y               reduce using rule 112 (termino -> CTE_ALFA .)
    O               reduce using rule 112 (termino -> CTE_ALFA .)
    PAREN_TERMINA   reduce using rule 112 (termino -> CTE_ALFA .)
    COMA            reduce using rule 112 (termino -> CTE_ALFA .)
    PUNTO_COMA      reduce using rule 112 (termino -> CTE_ALFA .)
    HASTA           reduce using rule 112 (termino -> CTE_ALFA .)
    SINO            reduce using rule 112 (termino -> CTE_ALFA .)
    FIN             reduce using rule 112 (termino -> CTE_ALFA .)
    SEA             reduce using rule 112 (termino -> CTE_ALFA .)
    OTRO            reduce using rule 112 (termino -> CTE_ALFA .)
    INICIO          reduce using rule 112 (termino -> CTE_ALFA .)
    LIMPIA          reduce using rule 112 (termino -> CTE_ALFA .)
    INTERRUMPE      reduce using rule 112 (termino -> CTE_ALFA .)
    CONTINUA        reduce using rule 112 (termino -> CTE_ALFA .)
    SI              reduce using rule 112 (termino -> CTE_ALFA .)
    DESDE           reduce using rule 112 (termino -> CTE_ALFA .)
    REPETIR         reduce using rule 112 (termino -> CTE_ALFA .)
    MIENTRAS        reduce using rule 112 (termino -> CTE_ALFA .)
    CUANDO          reduce using rule 112 (termino -> CTE_ALFA .)
    REGRESA         reduce using rule 112 (termino -> CTE_ALFA .)
    IMPRIME         reduce using rule 112 (termino -> CTE_ALFA .)
    IMPRIMENL       reduce using rule 112 (termino -> CTE_ALFA .)
    LEE             reduce using rule 112 (termino -> CTE_ALFA .)
    INCR            reduce using rule 112 (termino -> CTE_ALFA .)
    DECR            reduce using rule 112 (termino -> CTE_ALFA .)


state 119

    (113) termino -> VERDADERO .

    POTENCIA        reduce using rule 113 (termino -> VERDADERO .)
    MULTI           reduce using rule 113 (termino -> VERDADERO .)
    DIV             reduce using rule 113 (termino -> VERDADERO .)
    MOD             reduce using rule 113 (termino -> VERDADERO .)
    MAS             reduce using rule 113 (termino -> VERDADERO .)
    MENOS           reduce using rule 113 (termino -> VERDADERO .)
    IDENT           reduce using rule 113 (termino -> VERDADERO .)
    CTE_ENTERA      reduce using rule 113 (termino -> VERDADERO .)
    CTE_REAL        reduce using rule 113 (termino -> VERDADERO .)
    CTE_ALFA        reduce using rule 113 (termino -> VERDADERO .)
    VERDADERO       reduce using rule 113 (termino -> VERDADERO .)
    FALSO           reduce using rule 113 (termino -> VERDADERO .)
    PAREN_EMPIEZA   reduce using rule 113 (termino -> VERDADERO .)
    OP_ASIG         reduce using rule 113 (termino -> VERDADERO .)
    OP_REL          reduce using rule 113 (termino -> VERDADERO .)
    Y               reduce using rule 113 (termino -> VERDADERO .)
    O               reduce using rule 113 (termino -> VERDADERO .)
    PAREN_TERMINA   reduce using rule 113 (termino -> VERDADERO .)
    COMA            reduce using rule 113 (termino -> VERDADERO .)
    PUNTO_COMA      reduce using rule 113 (termino -> VERDADERO .)
    HASTA           reduce using rule 113 (termino -> VERDADERO .)
    SINO            reduce using rule 113 (termino -> VERDADERO .)
    FIN             reduce using rule 113 (termino -> VERDADERO .)
    SEA             reduce using rule 113 (termino -> VERDADERO .)
    OTRO            reduce using rule 113 (termino -> VERDADERO .)
    INICIO          reduce using rule 113 (termino -> VERDADERO .)
    LIMPIA          reduce using rule 113 (termino -> VERDADERO .)
    INTERRUMPE      reduce using rule 113 (termino -> VERDADERO .)
    CONTINUA        reduce using rule 113 (termino -> VERDADERO .)
    SI              reduce using rule 113 (termino -> VERDADERO .)
    DESDE           reduce using rule 113 (termino -> VERDADERO .)
    REPETIR         reduce using rule 113 (termino -> VERDADERO .)
    MIENTRAS        reduce using rule 113 (termino -> VERDADERO .)
    CUANDO          reduce using rule 113 (termino -> VERDADERO .)
    REGRESA         reduce using rule 113 (termino -> VERDADERO .)
    IMPRIME         reduce using rule 113 (termino -> VERDADERO .)
    IMPRIMENL       reduce using rule 113 (termino -> VERDADERO .)
    LEE             reduce using rule 113 (termino -> VERDADERO .)
    INCR            reduce using rule 113 (termino -> VERDADERO .)
    DECR            reduce using rule 113 (termino -> VERDADERO .)


state 120

    (114) termino -> FALSO .

    POTENCIA        reduce using rule 114 (termino -> FALSO .)
    MULTI           reduce using rule 114 (termino -> FALSO .)
    DIV             reduce using rule 114 (termino -> FALSO .)
    MOD             reduce using rule 114 (termino -> FALSO .)
    MAS             reduce using rule 114 (termino -> FALSO .)
    MENOS           reduce using rule 114 (termino -> FALSO .)
    IDENT           reduce using rule 114 (termino -> FALSO .)
    CTE_ENTERA      reduce using rule 114 (termino -> FALSO .)
    CTE_REAL        reduce using rule 114 (termino -> FALSO .)
    CTE_ALFA        reduce using rule 114 (termino -> FALSO .)
    VERDADERO       reduce using rule 114 (termino -> FALSO .)
    FALSO           reduce using rule 114 (termino -> FALSO .)
    PAREN_EMPIEZA   reduce using rule 114 (termino -> FALSO .)
    OP_ASIG         reduce using rule 114 (termino -> FALSO .)
    OP_REL          reduce using rule 114 (termino -> FALSO .)
    Y               reduce using rule 114 (termino -> FALSO .)
    O               reduce using rule 114 (termino -> FALSO .)
    PAREN_TERMINA   reduce using rule 114 (termino -> FALSO .)
    COMA            reduce using rule 114 (termino -> FALSO .)
    PUNTO_COMA      reduce using rule 114 (termino -> FALSO .)
    HASTA           reduce using rule 114 (termino -> FALSO .)
    SINO            reduce using rule 114 (termino -> FALSO .)
    FIN             reduce using rule 114 (termino -> FALSO .)
    SEA             reduce using rule 114 (termino -> FALSO .)
    OTRO            reduce using rule 114 (termino -> FALSO .)
    INICIO          reduce using rule 114 (termino -> FALSO .)
    LIMPIA          reduce using rule 114 (termino -> FALSO .)
    INTERRUMPE      reduce using rule 114 (termino -> FALSO .)
    CONTINUA        reduce using rule 114 (termino -> FALSO .)
    SI              reduce using rule 114 (termino -> FALSO .)
    DESDE           reduce using rule 114 (termino -> FALSO .)
    REPETIR         reduce using rule 114 (termino -> FALSO .)
    MIENTRAS        reduce using rule 114 (termino -> FALSO .)
    CUANDO          reduce using rule 114 (termino -> FALSO .)
    REGRESA         reduce using rule 114 (termino -> FALSO .)
    IMPRIME         reduce using rule 114 (termino -> FALSO .)
    IMPRIMENL       reduce using rule 114 (termino -> FALSO .)
    LEE             reduce using rule 114 (termino -> FALSO .)
    INCR            reduce using rule 114 (termino -> FALSO .)
    DECR            reduce using rule 114 (termino -> FALSO .)


state 121

    (71) desde -> DESDE EL . VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> DESDE EL . VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp

    VALOR           shift and go to state 166


state 122

    (73) repetir -> REPETIR block . HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    HASTA           shift and go to state 167


state 123

    (74) mientras -> MIENTRAS SE . CUMPLA QUE exprlog bckesp

    CUMPLA          shift and go to state 168


state 124

    (76) cuando -> CUANDO EL . VALOR DE IDENT INICIO gposea otro FIN

    VALOR           shift and go to state 169


state 125

    (84) regresa -> REGRESA PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    exprlog                        shift and go to state 170
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 126

    (119) imprime -> IMPRIME PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (123) gpoexp -> . exprlog
    (124) gpoexp -> . exprlog COMA gpoexp
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    gpoexp                         shift and go to state 171
    exprlog                        shift and go to state 172
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 127

    (120) imprimenl -> IMPRIMENL PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (123) gpoexp -> . exprlog
    (124) gpoexp -> . exprlog COMA gpoexp
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    gpoexp                         shift and go to state 173
    exprlog                        shift and go to state 172
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 128

    (121) lee -> LEE PAREN_EMPIEZA . IDENT PAREN_TERMINA
    (122) lee -> LEE PAREN_EMPIEZA . IDENT dimens PAREN_TERMINA

    IDENT           shift and go to state 174


state 129

    (39) gpopars -> IDENT . maspars
    (40) maspars -> . COMA gpopars
    (41) maspars -> . empty
    (127) empty -> .

    COMA            shift and go to state 176
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    maspars                        shift and go to state 175
    empty                          shift and go to state 177

state 130

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 178


state 131

    (35) params -> gpopars . PUNTOS_DOBLES TIPO otrospars

    PUNTOS_DOBLES   shift and go to state 179


state 132

    (36) params -> empty .

    PAREN_TERMINA   reduce using rule 36 (params -> empty .)


state 133

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_TERMINA   shift and go to state 180


state 134

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 181


state 135

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 182


state 136

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 183


state 137

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)


state 138

    (12) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)


state 139

    (13) dimens -> empty .

    COMA            reduce using rule 13 (dimens -> empty .)
    PUNTOS_DOBLES   reduce using rule 13 (dimens -> empty .)
    PAREN_TERMINA   reduce using rule 13 (dimens -> empty .)


state 140

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE . PROGRAMA

    PROGRAMA        shift and go to state 184


state 141

    (47) block -> estatuto puntoc block .

    FIN             reduce using rule 47 (block -> estatuto puntoc block .)
    HASTA           reduce using rule 47 (block -> estatuto puntoc block .)


state 142

    (115) termino -> PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    exprlog                        shift and go to state 157
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 143

    (65) si -> SI PAREN_EMPIEZA exprlog . PAREN_TERMINA HACER bckesp sino

    PAREN_TERMINA   shift and go to state 185


state 144

    (87) exprlog -> opy .
    (88) exprlog -> opy . O exprlog

    PAREN_TERMINA   reduce using rule 87 (exprlog -> opy .)
    COMA            reduce using rule 87 (exprlog -> opy .)
    PUNTO_COMA      reduce using rule 87 (exprlog -> opy .)
    HASTA           reduce using rule 87 (exprlog -> opy .)
    SINO            reduce using rule 87 (exprlog -> opy .)
    FIN             reduce using rule 87 (exprlog -> opy .)
    SEA             reduce using rule 87 (exprlog -> opy .)
    OTRO            reduce using rule 87 (exprlog -> opy .)
    INICIO          reduce using rule 87 (exprlog -> opy .)
    LIMPIA          reduce using rule 87 (exprlog -> opy .)
    INTERRUMPE      reduce using rule 87 (exprlog -> opy .)
    CONTINUA        reduce using rule 87 (exprlog -> opy .)
    SI              reduce using rule 87 (exprlog -> opy .)
    IDENT           reduce using rule 87 (exprlog -> opy .)
    DESDE           reduce using rule 87 (exprlog -> opy .)
    REPETIR         reduce using rule 87 (exprlog -> opy .)
    MIENTRAS        reduce using rule 87 (exprlog -> opy .)
    CUANDO          reduce using rule 87 (exprlog -> opy .)
    REGRESA         reduce using rule 87 (exprlog -> opy .)
    IMPRIME         reduce using rule 87 (exprlog -> opy .)
    IMPRIMENL       reduce using rule 87 (exprlog -> opy .)
    LEE             reduce using rule 87 (exprlog -> opy .)
    O               shift and go to state 186


state 145

    (89) opy -> opno .
    (90) opy -> opno . Y opy

    O               reduce using rule 89 (opy -> opno .)
    PAREN_TERMINA   reduce using rule 89 (opy -> opno .)
    COMA            reduce using rule 89 (opy -> opno .)
    PUNTO_COMA      reduce using rule 89 (opy -> opno .)
    HASTA           reduce using rule 89 (opy -> opno .)
    SINO            reduce using rule 89 (opy -> opno .)
    FIN             reduce using rule 89 (opy -> opno .)
    SEA             reduce using rule 89 (opy -> opno .)
    OTRO            reduce using rule 89 (opy -> opno .)
    INICIO          reduce using rule 89 (opy -> opno .)
    LIMPIA          reduce using rule 89 (opy -> opno .)
    INTERRUMPE      reduce using rule 89 (opy -> opno .)
    CONTINUA        reduce using rule 89 (opy -> opno .)
    SI              reduce using rule 89 (opy -> opno .)
    IDENT           reduce using rule 89 (opy -> opno .)
    DESDE           reduce using rule 89 (opy -> opno .)
    REPETIR         reduce using rule 89 (opy -> opno .)
    MIENTRAS        reduce using rule 89 (opy -> opno .)
    CUANDO          reduce using rule 89 (opy -> opno .)
    REGRESA         reduce using rule 89 (opy -> opno .)
    IMPRIME         reduce using rule 89 (opy -> opno .)
    IMPRIMENL       reduce using rule 89 (opy -> opno .)
    LEE             reduce using rule 89 (opy -> opno .)
    Y               shift and go to state 187


state 146

    (91) opno -> oprel .

    Y               reduce using rule 91 (opno -> oprel .)
    O               reduce using rule 91 (opno -> oprel .)
    PAREN_TERMINA   reduce using rule 91 (opno -> oprel .)
    COMA            reduce using rule 91 (opno -> oprel .)
    PUNTO_COMA      reduce using rule 91 (opno -> oprel .)
    HASTA           reduce using rule 91 (opno -> oprel .)
    SINO            reduce using rule 91 (opno -> oprel .)
    FIN             reduce using rule 91 (opno -> oprel .)
    SEA             reduce using rule 91 (opno -> oprel .)
    OTRO            reduce using rule 91 (opno -> oprel .)
    INICIO          reduce using rule 91 (opno -> oprel .)
    LIMPIA          reduce using rule 91 (opno -> oprel .)
    INTERRUMPE      reduce using rule 91 (opno -> oprel .)
    CONTINUA        reduce using rule 91 (opno -> oprel .)
    SI              reduce using rule 91 (opno -> oprel .)
    IDENT           reduce using rule 91 (opno -> oprel .)
    DESDE           reduce using rule 91 (opno -> oprel .)
    REPETIR         reduce using rule 91 (opno -> oprel .)
    MIENTRAS        reduce using rule 91 (opno -> oprel .)
    CUANDO          reduce using rule 91 (opno -> oprel .)
    REGRESA         reduce using rule 91 (opno -> oprel .)
    IMPRIME         reduce using rule 91 (opno -> oprel .)
    IMPRIMENL       reduce using rule 91 (opno -> oprel .)
    LEE             reduce using rule 91 (opno -> oprel .)


state 147

    (92) opno -> NO . oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for IDENT resolved as shift
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

  ! IDENT           [ reduce using rule 127 (empty -> .) ]

    oprel                          shift and go to state 188
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 148

    (93) oprel -> expr .
    (94) oprel -> expr . OP_REL oprel

    Y               reduce using rule 93 (oprel -> expr .)
    O               reduce using rule 93 (oprel -> expr .)
    PAREN_TERMINA   reduce using rule 93 (oprel -> expr .)
    COMA            reduce using rule 93 (oprel -> expr .)
    PUNTO_COMA      reduce using rule 93 (oprel -> expr .)
    HASTA           reduce using rule 93 (oprel -> expr .)
    SINO            reduce using rule 93 (oprel -> expr .)
    FIN             reduce using rule 93 (oprel -> expr .)
    SEA             reduce using rule 93 (oprel -> expr .)
    OTRO            reduce using rule 93 (oprel -> expr .)
    INICIO          reduce using rule 93 (oprel -> expr .)
    LIMPIA          reduce using rule 93 (oprel -> expr .)
    INTERRUMPE      reduce using rule 93 (oprel -> expr .)
    CONTINUA        reduce using rule 93 (oprel -> expr .)
    SI              reduce using rule 93 (oprel -> expr .)
    IDENT           reduce using rule 93 (oprel -> expr .)
    DESDE           reduce using rule 93 (oprel -> expr .)
    REPETIR         reduce using rule 93 (oprel -> expr .)
    MIENTRAS        reduce using rule 93 (oprel -> expr .)
    CUANDO          reduce using rule 93 (oprel -> expr .)
    REGRESA         reduce using rule 93 (oprel -> expr .)
    IMPRIME         reduce using rule 93 (oprel -> expr .)
    IMPRIMENL       reduce using rule 93 (oprel -> expr .)
    LEE             reduce using rule 93 (oprel -> expr .)
    OP_REL          shift and go to state 189


state 149

    (102) multi -> empty .

    OP_REL          reduce using rule 102 (multi -> empty .)
    Y               reduce using rule 102 (multi -> empty .)
    O               reduce using rule 102 (multi -> empty .)
    PAREN_TERMINA   reduce using rule 102 (multi -> empty .)
    COMA            reduce using rule 102 (multi -> empty .)
    POTENCIA        reduce using rule 102 (multi -> empty .)
    MULTI           reduce using rule 102 (multi -> empty .)
    DIV             reduce using rule 102 (multi -> empty .)
    MOD             reduce using rule 102 (multi -> empty .)
    MAS             reduce using rule 102 (multi -> empty .)
    MENOS           reduce using rule 102 (multi -> empty .)
    IDENT           reduce using rule 102 (multi -> empty .)
    CTE_ENTERA      reduce using rule 102 (multi -> empty .)
    CTE_REAL        reduce using rule 102 (multi -> empty .)
    CTE_ALFA        reduce using rule 102 (multi -> empty .)
    VERDADERO       reduce using rule 102 (multi -> empty .)
    FALSO           reduce using rule 102 (multi -> empty .)
    PAREN_EMPIEZA   reduce using rule 102 (multi -> empty .)
    OP_ASIG         reduce using rule 102 (multi -> empty .)
    PUNTO_COMA      reduce using rule 102 (multi -> empty .)
    HASTA           reduce using rule 102 (multi -> empty .)
    SINO            reduce using rule 102 (multi -> empty .)
    FIN             reduce using rule 102 (multi -> empty .)
    SEA             reduce using rule 102 (multi -> empty .)
    OTRO            reduce using rule 102 (multi -> empty .)
    INICIO          reduce using rule 102 (multi -> empty .)
    LIMPIA          reduce using rule 102 (multi -> empty .)
    INTERRUMPE      reduce using rule 102 (multi -> empty .)
    CONTINUA        reduce using rule 102 (multi -> empty .)
    SI              reduce using rule 102 (multi -> empty .)
    DESDE           reduce using rule 102 (multi -> empty .)
    REPETIR         reduce using rule 102 (multi -> empty .)
    MIENTRAS        reduce using rule 102 (multi -> empty .)
    CUANDO          reduce using rule 102 (multi -> empty .)
    REGRESA         reduce using rule 102 (multi -> empty .)
    IMPRIME         reduce using rule 102 (multi -> empty .)
    IMPRIMENL       reduce using rule 102 (multi -> empty .)
    LEE             reduce using rule 102 (multi -> empty .)
    INCR            reduce using rule 102 (multi -> empty .)
    DECR            reduce using rule 102 (multi -> empty .)


state 150

    (116) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (117) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (107) termino -> IDENT .
    (108) termino -> IDENT . lfunc
    (109) termino -> IDENT . udim
    (118) parenemp -> . PAREN_EMPIEZA
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (85) udim -> . expr udim
    (86) udim -> . empty
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (127) empty -> .
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! reduce/reduce conflict for POTENCIA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 107 (termino -> IDENT .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for CTE_ENTERA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_REAL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_ALFA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for VERDADERO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for FALSO resolved using rule 107 (termino -> IDENT .)
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! reduce/reduce conflict for OP_ASIG resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for COMA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for HASTA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SINO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for FIN resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SEA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for OTRO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INICIO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for SI resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DESDE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for REPETIR resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for CUANDO resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for REGRESA resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for LEE resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for INCR resolved using rule 107 (termino -> IDENT .)
  ! reduce/reduce conflict for DECR resolved using rule 107 (termino -> IDENT .)
    POTENCIA        reduce using rule 107 (termino -> IDENT .)
    MULTI           reduce using rule 107 (termino -> IDENT .)
    DIV             reduce using rule 107 (termino -> IDENT .)
    MOD             reduce using rule 107 (termino -> IDENT .)
    CTE_ENTERA      reduce using rule 107 (termino -> IDENT .)
    CTE_REAL        reduce using rule 107 (termino -> IDENT .)
    CTE_ALFA        reduce using rule 107 (termino -> IDENT .)
    VERDADERO       reduce using rule 107 (termino -> IDENT .)
    FALSO           reduce using rule 107 (termino -> IDENT .)
    OP_ASIG         reduce using rule 107 (termino -> IDENT .)
    OP_REL          reduce using rule 107 (termino -> IDENT .)
    Y               reduce using rule 107 (termino -> IDENT .)
    O               reduce using rule 107 (termino -> IDENT .)
    PAREN_TERMINA   reduce using rule 107 (termino -> IDENT .)
    COMA            reduce using rule 107 (termino -> IDENT .)
    PUNTO_COMA      reduce using rule 107 (termino -> IDENT .)
    HASTA           reduce using rule 107 (termino -> IDENT .)
    SINO            reduce using rule 107 (termino -> IDENT .)
    FIN             reduce using rule 107 (termino -> IDENT .)
    SEA             reduce using rule 107 (termino -> IDENT .)
    OTRO            reduce using rule 107 (termino -> IDENT .)
    INICIO          reduce using rule 107 (termino -> IDENT .)
    LIMPIA          reduce using rule 107 (termino -> IDENT .)
    INTERRUMPE      reduce using rule 107 (termino -> IDENT .)
    CONTINUA        reduce using rule 107 (termino -> IDENT .)
    SI              reduce using rule 107 (termino -> IDENT .)
    DESDE           reduce using rule 107 (termino -> IDENT .)
    REPETIR         reduce using rule 107 (termino -> IDENT .)
    MIENTRAS        reduce using rule 107 (termino -> IDENT .)
    CUANDO          reduce using rule 107 (termino -> IDENT .)
    REGRESA         reduce using rule 107 (termino -> IDENT .)
    IMPRIME         reduce using rule 107 (termino -> IDENT .)
    IMPRIMENL       reduce using rule 107 (termino -> IDENT .)
    LEE             reduce using rule 107 (termino -> IDENT .)
    INCR            reduce using rule 107 (termino -> IDENT .)
    DECR            reduce using rule 107 (termino -> IDENT .)
    PAREN_EMPIEZA   shift and go to state 107
    IDENT           shift and go to state 150
    MAS             shift and go to state 111
    MENOS           shift and go to state 112

  ! MAS             [ reduce using rule 107 (termino -> IDENT .) ]
  ! MENOS           [ reduce using rule 107 (termino -> IDENT .) ]
  ! IDENT           [ reduce using rule 107 (termino -> IDENT .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 107 (termino -> IDENT .) ]
  ! POTENCIA        [ reduce using rule 127 (empty -> .) ]
  ! MULTI           [ reduce using rule 127 (empty -> .) ]
  ! DIV             [ reduce using rule 127 (empty -> .) ]
  ! MOD             [ reduce using rule 127 (empty -> .) ]
  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]
  ! OP_ASIG         [ reduce using rule 127 (empty -> .) ]
  ! OP_REL          [ reduce using rule 127 (empty -> .) ]
  ! Y               [ reduce using rule 127 (empty -> .) ]
  ! O               [ reduce using rule 127 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 127 (empty -> .) ]
  ! COMA            [ reduce using rule 127 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 127 (empty -> .) ]
  ! HASTA           [ reduce using rule 127 (empty -> .) ]
  ! SINO            [ reduce using rule 127 (empty -> .) ]
  ! FIN             [ reduce using rule 127 (empty -> .) ]
  ! SEA             [ reduce using rule 127 (empty -> .) ]
  ! OTRO            [ reduce using rule 127 (empty -> .) ]
  ! INICIO          [ reduce using rule 127 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 127 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 127 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! DESDE           [ reduce using rule 127 (empty -> .) ]
  ! REPETIR         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! CUANDO          [ reduce using rule 127 (empty -> .) ]
  ! REGRESA         [ reduce using rule 127 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 127 (empty -> .) ]
  ! LEE             [ reduce using rule 127 (empty -> .) ]
  ! INCR            [ reduce using rule 127 (empty -> .) ]
  ! DECR            [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ shift and go to state 116 ]
  ! CTE_REAL        [ shift and go to state 117 ]
  ! CTE_ALFA        [ shift and go to state 118 ]
  ! VERDADERO       [ shift and go to state 119 ]
  ! FALSO           [ shift and go to state 120 ]

    parenemp                       shift and go to state 105
    lfunc                          shift and go to state 151
    udim                           shift and go to state 152
    expr                           shift and go to state 108
    empty                          shift and go to state 109
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 151

    (108) termino -> IDENT lfunc .

    POTENCIA        reduce using rule 108 (termino -> IDENT lfunc .)
    MULTI           reduce using rule 108 (termino -> IDENT lfunc .)
    DIV             reduce using rule 108 (termino -> IDENT lfunc .)
    MOD             reduce using rule 108 (termino -> IDENT lfunc .)
    MAS             reduce using rule 108 (termino -> IDENT lfunc .)
    MENOS           reduce using rule 108 (termino -> IDENT lfunc .)
    IDENT           reduce using rule 108 (termino -> IDENT lfunc .)
    CTE_ENTERA      reduce using rule 108 (termino -> IDENT lfunc .)
    CTE_REAL        reduce using rule 108 (termino -> IDENT lfunc .)
    CTE_ALFA        reduce using rule 108 (termino -> IDENT lfunc .)
    VERDADERO       reduce using rule 108 (termino -> IDENT lfunc .)
    FALSO           reduce using rule 108 (termino -> IDENT lfunc .)
    PAREN_EMPIEZA   reduce using rule 108 (termino -> IDENT lfunc .)
    OP_ASIG         reduce using rule 108 (termino -> IDENT lfunc .)
    OP_REL          reduce using rule 108 (termino -> IDENT lfunc .)
    Y               reduce using rule 108 (termino -> IDENT lfunc .)
    O               reduce using rule 108 (termino -> IDENT lfunc .)
    PAREN_TERMINA   reduce using rule 108 (termino -> IDENT lfunc .)
    COMA            reduce using rule 108 (termino -> IDENT lfunc .)
    PUNTO_COMA      reduce using rule 108 (termino -> IDENT lfunc .)
    HASTA           reduce using rule 108 (termino -> IDENT lfunc .)
    SINO            reduce using rule 108 (termino -> IDENT lfunc .)
    FIN             reduce using rule 108 (termino -> IDENT lfunc .)
    SEA             reduce using rule 108 (termino -> IDENT lfunc .)
    OTRO            reduce using rule 108 (termino -> IDENT lfunc .)
    INICIO          reduce using rule 108 (termino -> IDENT lfunc .)
    LIMPIA          reduce using rule 108 (termino -> IDENT lfunc .)
    INTERRUMPE      reduce using rule 108 (termino -> IDENT lfunc .)
    CONTINUA        reduce using rule 108 (termino -> IDENT lfunc .)
    SI              reduce using rule 108 (termino -> IDENT lfunc .)
    DESDE           reduce using rule 108 (termino -> IDENT lfunc .)
    REPETIR         reduce using rule 108 (termino -> IDENT lfunc .)
    MIENTRAS        reduce using rule 108 (termino -> IDENT lfunc .)
    CUANDO          reduce using rule 108 (termino -> IDENT lfunc .)
    REGRESA         reduce using rule 108 (termino -> IDENT lfunc .)
    IMPRIME         reduce using rule 108 (termino -> IDENT lfunc .)
    IMPRIMENL       reduce using rule 108 (termino -> IDENT lfunc .)
    LEE             reduce using rule 108 (termino -> IDENT lfunc .)
    INCR            reduce using rule 108 (termino -> IDENT lfunc .)
    DECR            reduce using rule 108 (termino -> IDENT lfunc .)


state 152

    (109) termino -> IDENT udim .

    POTENCIA        reduce using rule 109 (termino -> IDENT udim .)
    MULTI           reduce using rule 109 (termino -> IDENT udim .)
    DIV             reduce using rule 109 (termino -> IDENT udim .)
    MOD             reduce using rule 109 (termino -> IDENT udim .)
    MAS             reduce using rule 109 (termino -> IDENT udim .)
    MENOS           reduce using rule 109 (termino -> IDENT udim .)
    IDENT           reduce using rule 109 (termino -> IDENT udim .)
    CTE_ENTERA      reduce using rule 109 (termino -> IDENT udim .)
    CTE_REAL        reduce using rule 109 (termino -> IDENT udim .)
    CTE_ALFA        reduce using rule 109 (termino -> IDENT udim .)
    VERDADERO       reduce using rule 109 (termino -> IDENT udim .)
    FALSO           reduce using rule 109 (termino -> IDENT udim .)
    PAREN_EMPIEZA   reduce using rule 109 (termino -> IDENT udim .)
    OP_ASIG         reduce using rule 109 (termino -> IDENT udim .)
    OP_REL          reduce using rule 109 (termino -> IDENT udim .)
    Y               reduce using rule 109 (termino -> IDENT udim .)
    O               reduce using rule 109 (termino -> IDENT udim .)
    PAREN_TERMINA   reduce using rule 109 (termino -> IDENT udim .)
    COMA            reduce using rule 109 (termino -> IDENT udim .)
    PUNTO_COMA      reduce using rule 109 (termino -> IDENT udim .)
    HASTA           reduce using rule 109 (termino -> IDENT udim .)
    SINO            reduce using rule 109 (termino -> IDENT udim .)
    FIN             reduce using rule 109 (termino -> IDENT udim .)
    SEA             reduce using rule 109 (termino -> IDENT udim .)
    OTRO            reduce using rule 109 (termino -> IDENT udim .)
    INICIO          reduce using rule 109 (termino -> IDENT udim .)
    LIMPIA          reduce using rule 109 (termino -> IDENT udim .)
    INTERRUMPE      reduce using rule 109 (termino -> IDENT udim .)
    CONTINUA        reduce using rule 109 (termino -> IDENT udim .)
    SI              reduce using rule 109 (termino -> IDENT udim .)
    DESDE           reduce using rule 109 (termino -> IDENT udim .)
    REPETIR         reduce using rule 109 (termino -> IDENT udim .)
    MIENTRAS        reduce using rule 109 (termino -> IDENT udim .)
    CUANDO          reduce using rule 109 (termino -> IDENT udim .)
    REGRESA         reduce using rule 109 (termino -> IDENT udim .)
    IMPRIME         reduce using rule 109 (termino -> IDENT udim .)
    IMPRIMENL       reduce using rule 109 (termino -> IDENT udim .)
    LEE             reduce using rule 109 (termino -> IDENT udim .)
    INCR            reduce using rule 109 (termino -> IDENT udim .)
    DECR            reduce using rule 109 (termino -> IDENT udim .)


state 153

    (116) lfunc -> IDENT parenemp uparams . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 190


state 154

    (117) lfunc -> IDENT parenemp error . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 191


state 155

    (125) uparams -> exprlog .
    (126) uparams -> exprlog . COMA uparams

    PAREN_TERMINA   reduce using rule 125 (uparams -> exprlog .)
    COMA            shift and go to state 192


state 156

    (75) asigna -> IDENT udim OP_ASIG . exprlog
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    exprlog                        shift and go to state 193
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 157

    (115) termino -> PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 194


state 158

    (85) udim -> expr udim .

    OP_ASIG         reduce using rule 85 (udim -> expr udim .)
    POTENCIA        reduce using rule 85 (udim -> expr udim .)
    MULTI           reduce using rule 85 (udim -> expr udim .)
    DIV             reduce using rule 85 (udim -> expr udim .)
    MOD             reduce using rule 85 (udim -> expr udim .)
    MAS             reduce using rule 85 (udim -> expr udim .)
    MENOS           reduce using rule 85 (udim -> expr udim .)
    IDENT           reduce using rule 85 (udim -> expr udim .)
    CTE_ENTERA      reduce using rule 85 (udim -> expr udim .)
    CTE_REAL        reduce using rule 85 (udim -> expr udim .)
    CTE_ALFA        reduce using rule 85 (udim -> expr udim .)
    VERDADERO       reduce using rule 85 (udim -> expr udim .)
    FALSO           reduce using rule 85 (udim -> expr udim .)
    PAREN_EMPIEZA   reduce using rule 85 (udim -> expr udim .)
    OP_REL          reduce using rule 85 (udim -> expr udim .)
    Y               reduce using rule 85 (udim -> expr udim .)
    O               reduce using rule 85 (udim -> expr udim .)
    PAREN_TERMINA   reduce using rule 85 (udim -> expr udim .)
    COMA            reduce using rule 85 (udim -> expr udim .)
    PUNTO_COMA      reduce using rule 85 (udim -> expr udim .)
    HASTA           reduce using rule 85 (udim -> expr udim .)
    SINO            reduce using rule 85 (udim -> expr udim .)
    FIN             reduce using rule 85 (udim -> expr udim .)
    SEA             reduce using rule 85 (udim -> expr udim .)
    OTRO            reduce using rule 85 (udim -> expr udim .)
    INICIO          reduce using rule 85 (udim -> expr udim .)
    LIMPIA          reduce using rule 85 (udim -> expr udim .)
    INTERRUMPE      reduce using rule 85 (udim -> expr udim .)
    CONTINUA        reduce using rule 85 (udim -> expr udim .)
    SI              reduce using rule 85 (udim -> expr udim .)
    DESDE           reduce using rule 85 (udim -> expr udim .)
    REPETIR         reduce using rule 85 (udim -> expr udim .)
    MIENTRAS        reduce using rule 85 (udim -> expr udim .)
    CUANDO          reduce using rule 85 (udim -> expr udim .)
    REGRESA         reduce using rule 85 (udim -> expr udim .)
    IMPRIME         reduce using rule 85 (udim -> expr udim .)
    IMPRIMENL       reduce using rule 85 (udim -> expr udim .)
    LEE             reduce using rule 85 (udim -> expr udim .)
    INCR            reduce using rule 85 (udim -> expr udim .)
    DECR            reduce using rule 85 (udim -> expr udim .)


state 159

    (96) expr -> MAS expr .

    MAS             reduce using rule 96 (expr -> MAS expr .)
    MENOS           reduce using rule 96 (expr -> MAS expr .)
    IDENT           reduce using rule 96 (expr -> MAS expr .)
    CTE_ENTERA      reduce using rule 96 (expr -> MAS expr .)
    CTE_REAL        reduce using rule 96 (expr -> MAS expr .)
    CTE_ALFA        reduce using rule 96 (expr -> MAS expr .)
    VERDADERO       reduce using rule 96 (expr -> MAS expr .)
    FALSO           reduce using rule 96 (expr -> MAS expr .)
    PAREN_EMPIEZA   reduce using rule 96 (expr -> MAS expr .)
    OP_ASIG         reduce using rule 96 (expr -> MAS expr .)
    OP_REL          reduce using rule 96 (expr -> MAS expr .)
    Y               reduce using rule 96 (expr -> MAS expr .)
    O               reduce using rule 96 (expr -> MAS expr .)
    PAREN_TERMINA   reduce using rule 96 (expr -> MAS expr .)
    POTENCIA        reduce using rule 96 (expr -> MAS expr .)
    MULTI           reduce using rule 96 (expr -> MAS expr .)
    DIV             reduce using rule 96 (expr -> MAS expr .)
    MOD             reduce using rule 96 (expr -> MAS expr .)
    COMA            reduce using rule 96 (expr -> MAS expr .)
    PUNTO_COMA      reduce using rule 96 (expr -> MAS expr .)
    HASTA           reduce using rule 96 (expr -> MAS expr .)
    SINO            reduce using rule 96 (expr -> MAS expr .)
    FIN             reduce using rule 96 (expr -> MAS expr .)
    SEA             reduce using rule 96 (expr -> MAS expr .)
    OTRO            reduce using rule 96 (expr -> MAS expr .)
    INICIO          reduce using rule 96 (expr -> MAS expr .)
    LIMPIA          reduce using rule 96 (expr -> MAS expr .)
    INTERRUMPE      reduce using rule 96 (expr -> MAS expr .)
    CONTINUA        reduce using rule 96 (expr -> MAS expr .)
    SI              reduce using rule 96 (expr -> MAS expr .)
    DESDE           reduce using rule 96 (expr -> MAS expr .)
    REPETIR         reduce using rule 96 (expr -> MAS expr .)
    MIENTRAS        reduce using rule 96 (expr -> MAS expr .)
    CUANDO          reduce using rule 96 (expr -> MAS expr .)
    REGRESA         reduce using rule 96 (expr -> MAS expr .)
    IMPRIME         reduce using rule 96 (expr -> MAS expr .)
    IMPRIMENL       reduce using rule 96 (expr -> MAS expr .)
    LEE             reduce using rule 96 (expr -> MAS expr .)
    INCR            reduce using rule 96 (expr -> MAS expr .)
    DECR            reduce using rule 96 (expr -> MAS expr .)


state 160

    (97) expr -> MENOS expr .

    MAS             reduce using rule 97 (expr -> MENOS expr .)
    MENOS           reduce using rule 97 (expr -> MENOS expr .)
    IDENT           reduce using rule 97 (expr -> MENOS expr .)
    CTE_ENTERA      reduce using rule 97 (expr -> MENOS expr .)
    CTE_REAL        reduce using rule 97 (expr -> MENOS expr .)
    CTE_ALFA        reduce using rule 97 (expr -> MENOS expr .)
    VERDADERO       reduce using rule 97 (expr -> MENOS expr .)
    FALSO           reduce using rule 97 (expr -> MENOS expr .)
    PAREN_EMPIEZA   reduce using rule 97 (expr -> MENOS expr .)
    OP_ASIG         reduce using rule 97 (expr -> MENOS expr .)
    OP_REL          reduce using rule 97 (expr -> MENOS expr .)
    Y               reduce using rule 97 (expr -> MENOS expr .)
    O               reduce using rule 97 (expr -> MENOS expr .)
    PAREN_TERMINA   reduce using rule 97 (expr -> MENOS expr .)
    POTENCIA        reduce using rule 97 (expr -> MENOS expr .)
    MULTI           reduce using rule 97 (expr -> MENOS expr .)
    DIV             reduce using rule 97 (expr -> MENOS expr .)
    MOD             reduce using rule 97 (expr -> MENOS expr .)
    COMA            reduce using rule 97 (expr -> MENOS expr .)
    PUNTO_COMA      reduce using rule 97 (expr -> MENOS expr .)
    HASTA           reduce using rule 97 (expr -> MENOS expr .)
    SINO            reduce using rule 97 (expr -> MENOS expr .)
    FIN             reduce using rule 97 (expr -> MENOS expr .)
    SEA             reduce using rule 97 (expr -> MENOS expr .)
    OTRO            reduce using rule 97 (expr -> MENOS expr .)
    INICIO          reduce using rule 97 (expr -> MENOS expr .)
    LIMPIA          reduce using rule 97 (expr -> MENOS expr .)
    INTERRUMPE      reduce using rule 97 (expr -> MENOS expr .)
    CONTINUA        reduce using rule 97 (expr -> MENOS expr .)
    SI              reduce using rule 97 (expr -> MENOS expr .)
    DESDE           reduce using rule 97 (expr -> MENOS expr .)
    REPETIR         reduce using rule 97 (expr -> MENOS expr .)
    MIENTRAS        reduce using rule 97 (expr -> MENOS expr .)
    CUANDO          reduce using rule 97 (expr -> MENOS expr .)
    REGRESA         reduce using rule 97 (expr -> MENOS expr .)
    IMPRIME         reduce using rule 97 (expr -> MENOS expr .)
    IMPRIMENL       reduce using rule 97 (expr -> MENOS expr .)
    LEE             reduce using rule 97 (expr -> MENOS expr .)
    INCR            reduce using rule 97 (expr -> MENOS expr .)
    DECR            reduce using rule 97 (expr -> MENOS expr .)


state 161

    (106) signo -> MENOS termino .
    (105) signo -> termino .

  ! reduce/reduce conflict for POTENCIA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for MULTI resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for DIV resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for MOD resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for MAS resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for MENOS resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for IDENT resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for CTE_ENTERA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for CTE_REAL resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for CTE_ALFA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for VERDADERO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for FALSO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for PAREN_EMPIEZA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for OP_ASIG resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for OP_REL resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for Y resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for O resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for COMA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for HASTA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for SINO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for FIN resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for SEA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for OTRO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for INICIO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for SI resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for DESDE resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for REPETIR resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for CUANDO resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for REGRESA resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for LEE resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for INCR resolved using rule 105 (signo -> termino .)
  ! reduce/reduce conflict for DECR resolved using rule 105 (signo -> termino .)
    POTENCIA        reduce using rule 105 (signo -> termino .)
    MULTI           reduce using rule 105 (signo -> termino .)
    DIV             reduce using rule 105 (signo -> termino .)
    MOD             reduce using rule 105 (signo -> termino .)
    MAS             reduce using rule 105 (signo -> termino .)
    MENOS           reduce using rule 105 (signo -> termino .)
    IDENT           reduce using rule 105 (signo -> termino .)
    CTE_ENTERA      reduce using rule 105 (signo -> termino .)
    CTE_REAL        reduce using rule 105 (signo -> termino .)
    CTE_ALFA        reduce using rule 105 (signo -> termino .)
    VERDADERO       reduce using rule 105 (signo -> termino .)
    FALSO           reduce using rule 105 (signo -> termino .)
    PAREN_EMPIEZA   reduce using rule 105 (signo -> termino .)
    OP_ASIG         reduce using rule 105 (signo -> termino .)
    OP_REL          reduce using rule 105 (signo -> termino .)
    Y               reduce using rule 105 (signo -> termino .)
    O               reduce using rule 105 (signo -> termino .)
    PAREN_TERMINA   reduce using rule 105 (signo -> termino .)
    COMA            reduce using rule 105 (signo -> termino .)
    PUNTO_COMA      reduce using rule 105 (signo -> termino .)
    HASTA           reduce using rule 105 (signo -> termino .)
    SINO            reduce using rule 105 (signo -> termino .)
    FIN             reduce using rule 105 (signo -> termino .)
    SEA             reduce using rule 105 (signo -> termino .)
    OTRO            reduce using rule 105 (signo -> termino .)
    INICIO          reduce using rule 105 (signo -> termino .)
    LIMPIA          reduce using rule 105 (signo -> termino .)
    INTERRUMPE      reduce using rule 105 (signo -> termino .)
    CONTINUA        reduce using rule 105 (signo -> termino .)
    SI              reduce using rule 105 (signo -> termino .)
    DESDE           reduce using rule 105 (signo -> termino .)
    REPETIR         reduce using rule 105 (signo -> termino .)
    MIENTRAS        reduce using rule 105 (signo -> termino .)
    CUANDO          reduce using rule 105 (signo -> termino .)
    REGRESA         reduce using rule 105 (signo -> termino .)
    IMPRIME         reduce using rule 105 (signo -> termino .)
    IMPRIMENL       reduce using rule 105 (signo -> termino .)
    LEE             reduce using rule 105 (signo -> termino .)
    INCR            reduce using rule 105 (signo -> termino .)
    DECR            reduce using rule 105 (signo -> termino .)

  ! POTENCIA        [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! MULTI           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! DIV             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! MOD             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! MAS             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! MENOS           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! IDENT           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! CTE_ENTERA      [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! CTE_REAL        [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! CTE_ALFA        [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! VERDADERO       [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! FALSO           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! OP_ASIG         [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! OP_REL          [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! Y               [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! O               [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! PAREN_TERMINA   [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! COMA            [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! PUNTO_COMA      [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! HASTA           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! SINO            [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! FIN             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! SEA             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! OTRO            [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! INICIO          [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! LIMPIA          [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! INTERRUMPE      [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! CONTINUA        [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! SI              [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! DESDE           [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! REPETIR         [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! MIENTRAS        [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! CUANDO          [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! REGRESA         [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! IMPRIME         [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! IMPRIMENL       [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! LEE             [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! INCR            [ reduce using rule 106 (signo -> MENOS termino .) ]
  ! DECR            [ reduce using rule 106 (signo -> MENOS termino .) ]


state 162

    (99) multi -> expo MULTI . multi
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    MAS             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    MENOS           shift and go to state 196
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]

    expo                           shift and go to state 113
    multi                          shift and go to state 195
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 163

    (100) multi -> expo DIV . multi
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    MAS             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    MENOS           shift and go to state 196
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]

    expo                           shift and go to state 113
    multi                          shift and go to state 197
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 164

    (101) multi -> expo MOD . multi
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
    POTENCIA        reduce using rule 127 (empty -> .)
    MULTI           reduce using rule 127 (empty -> .)
    DIV             reduce using rule 127 (empty -> .)
    MOD             reduce using rule 127 (empty -> .)
    MAS             reduce using rule 127 (empty -> .)
    OP_ASIG         reduce using rule 127 (empty -> .)
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    MENOS           shift and go to state 196
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]

    expo                           shift and go to state 113
    multi                          shift and go to state 198
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 165

    (104) expo -> signo POTENCIA . expo
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    MENOS           shift and go to state 196
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    signo                          shift and go to state 114
    expo                           shift and go to state 199
    termino                        shift and go to state 115

state 166

    (71) desde -> DESDE EL VALOR . DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> DESDE EL VALOR . DE asigna HASTA expr DECR CTE_ENTERA bckesp

    DE              shift and go to state 200


state 167

    (73) repetir -> REPETIR block HASTA . QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    QUE             shift and go to state 201


state 168

    (74) mientras -> MIENTRAS SE CUMPLA . QUE exprlog bckesp

    QUE             shift and go to state 202


state 169

    (76) cuando -> CUANDO EL VALOR . DE IDENT INICIO gposea otro FIN

    DE              shift and go to state 203


state 170

    (84) regresa -> REGRESA PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 204


state 171

    (119) imprime -> IMPRIME PAREN_EMPIEZA gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 205


state 172

    (123) gpoexp -> exprlog .
    (124) gpoexp -> exprlog . COMA gpoexp

    PAREN_TERMINA   reduce using rule 123 (gpoexp -> exprlog .)
    COMA            shift and go to state 206


state 173

    (120) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 207


state 174

    (121) lee -> LEE PAREN_EMPIEZA IDENT . PAREN_TERMINA
    (122) lee -> LEE PAREN_EMPIEZA IDENT . dimens PAREN_TERMINA
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (127) empty -> .

  ! shift/reduce conflict for PAREN_TERMINA resolved as shift
    PAREN_TERMINA   shift and go to state 208
    CORCHETE_EMPIEZA shift and go to state 35

  ! PAREN_TERMINA   [ reduce using rule 127 (empty -> .) ]

    dimens                         shift and go to state 209
    empty                          shift and go to state 139

state 175

    (39) gpopars -> IDENT maspars .

    PUNTOS_DOBLES   reduce using rule 39 (gpopars -> IDENT maspars .)


state 176

    (40) maspars -> COMA . gpopars
    (39) gpopars -> . IDENT maspars

    IDENT           shift and go to state 129

    gpopars                        shift and go to state 210

state 177

    (41) maspars -> empty .

    PUNTOS_DOBLES   reduce using rule 41 (maspars -> empty .)


state 178

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (127) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 127 (empty -> .)

    variables                      shift and go to state 211
    empty                          shift and go to state 7

state 179

    (35) params -> gpopars PUNTOS_DOBLES . TIPO otrospars

    TIPO            shift and go to state 212


state 180

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 213


state 181

    (26) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 26 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    FUNCION         reduce using rule 26 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    PROGRAMA        reduce using rule 26 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)


state 182

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 214


state 183

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 215


state 184

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA .

    $end            reduce using rule 1 (program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA .)


state 185

    (65) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA . HACER bckesp sino

    HACER           shift and go to state 216


state 186

    (88) exprlog -> opy O . exprlog
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

  ! IDENT           [ reduce using rule 127 (empty -> .) ]

    opy                            shift and go to state 144
    exprlog                        shift and go to state 217
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 187

    (90) opy -> opno Y . opy
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

  ! IDENT           [ reduce using rule 127 (empty -> .) ]

    opno                           shift and go to state 145
    opy                            shift and go to state 218
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 188

    (92) opno -> NO oprel .

    Y               reduce using rule 92 (opno -> NO oprel .)
    O               reduce using rule 92 (opno -> NO oprel .)
    PAREN_TERMINA   reduce using rule 92 (opno -> NO oprel .)
    COMA            reduce using rule 92 (opno -> NO oprel .)
    PUNTO_COMA      reduce using rule 92 (opno -> NO oprel .)
    HASTA           reduce using rule 92 (opno -> NO oprel .)
    SINO            reduce using rule 92 (opno -> NO oprel .)
    FIN             reduce using rule 92 (opno -> NO oprel .)
    SEA             reduce using rule 92 (opno -> NO oprel .)
    OTRO            reduce using rule 92 (opno -> NO oprel .)
    INICIO          reduce using rule 92 (opno -> NO oprel .)
    LIMPIA          reduce using rule 92 (opno -> NO oprel .)
    INTERRUMPE      reduce using rule 92 (opno -> NO oprel .)
    CONTINUA        reduce using rule 92 (opno -> NO oprel .)
    SI              reduce using rule 92 (opno -> NO oprel .)
    IDENT           reduce using rule 92 (opno -> NO oprel .)
    DESDE           reduce using rule 92 (opno -> NO oprel .)
    REPETIR         reduce using rule 92 (opno -> NO oprel .)
    MIENTRAS        reduce using rule 92 (opno -> NO oprel .)
    CUANDO          reduce using rule 92 (opno -> NO oprel .)
    REGRESA         reduce using rule 92 (opno -> NO oprel .)
    IMPRIME         reduce using rule 92 (opno -> NO oprel .)
    IMPRIMENL       reduce using rule 92 (opno -> NO oprel .)
    LEE             reduce using rule 92 (opno -> NO oprel .)


state 189

    (94) oprel -> expr OP_REL . oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for IDENT resolved as shift
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    HASTA           reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

  ! IDENT           [ reduce using rule 127 (empty -> .) ]

    expr                           shift and go to state 148
    oprel                          shift and go to state 219
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 190

    (116) lfunc -> IDENT parenemp uparams PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    POTENCIA        reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MULTI           reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DIV             reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MOD             reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MAS             reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MENOS           reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IDENT           reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CTE_ENTERA      reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CTE_REAL        reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CTE_ALFA        reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    VERDADERO       reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    FALSO           reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    PAREN_EMPIEZA   reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OP_ASIG         reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OP_REL          reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    Y               reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    O               reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    COMA            reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    HASTA           reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SINO            reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    FIN             reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SEA             reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OTRO            reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INICIO          reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    LIMPIA          reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CONTINUA        reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SI              reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DESDE           reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    REPETIR         reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MIENTRAS        reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CUANDO          reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    REGRESA         reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IMPRIME         reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    LEE             reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INCR            reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DECR            reduce using rule 116 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)


state 191

    (117) lfunc -> IDENT parenemp error PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    POTENCIA        reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MULTI           reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DIV             reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MOD             reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MAS             reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MENOS           reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IDENT           reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CTE_ENTERA      reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CTE_REAL        reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CTE_ALFA        reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    VERDADERO       reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    FALSO           reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    PAREN_EMPIEZA   reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OP_ASIG         reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OP_REL          reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    Y               reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    O               reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    COMA            reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    HASTA           reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SINO            reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    FIN             reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SEA             reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OTRO            reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INICIO          reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    LIMPIA          reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CONTINUA        reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SI              reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DESDE           reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    REPETIR         reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MIENTRAS        reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CUANDO          reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    REGRESA         reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IMPRIME         reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    LEE             reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INCR            reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DECR            reduce using rule 117 (lfunc -> IDENT parenemp error PAREN_TERMINA .)


state 192

    (126) uparams -> exprlog COMA . uparams
    (125) uparams -> . exprlog
    (126) uparams -> . exprlog COMA uparams
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    exprlog                        shift and go to state 155
    uparams                        shift and go to state 220
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 193

    (75) asigna -> IDENT udim OP_ASIG exprlog .

    PUNTO_COMA      reduce using rule 75 (asigna -> IDENT udim OP_ASIG exprlog .)
    HASTA           reduce using rule 75 (asigna -> IDENT udim OP_ASIG exprlog .)
    SINO            reduce using rule 75 (asigna -> IDENT udim OP_ASIG exprlog .)
    FIN             reduce using rule 75 (asigna -> IDENT udim OP_ASIG exprlog .)
    SEA             reduce using rule 75 (asigna -> IDENT udim OP_ASIG exprlog .)
    OTRO            reduce using rule 75 (asigna -> IDENT udim OP_ASIG exprlog .)


state 194

    (115) termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .

    POTENCIA        reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MULTI           reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    DIV             reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MOD             reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MAS             reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MENOS           reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IDENT           reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CTE_ENTERA      reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CTE_REAL        reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CTE_ALFA        reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    VERDADERO       reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FALSO           reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PAREN_EMPIEZA   reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OP_ASIG         reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OP_REL          reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    Y               reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    O               reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    COMA            reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    HASTA           reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INICIO          reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    LIMPIA          reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CONTINUA        reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SI              reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    DESDE           reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    REPETIR         reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MIENTRAS        reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CUANDO          reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    REGRESA         reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IMPRIME         reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    LEE             reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INCR            reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    DECR            reduce using rule 115 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 195

    (99) multi -> expo MULTI multi .

    MAS             reduce using rule 99 (multi -> expo MULTI multi .)
    MENOS           reduce using rule 99 (multi -> expo MULTI multi .)
    IDENT           reduce using rule 99 (multi -> expo MULTI multi .)
    CTE_ENTERA      reduce using rule 99 (multi -> expo MULTI multi .)
    CTE_REAL        reduce using rule 99 (multi -> expo MULTI multi .)
    CTE_ALFA        reduce using rule 99 (multi -> expo MULTI multi .)
    VERDADERO       reduce using rule 99 (multi -> expo MULTI multi .)
    FALSO           reduce using rule 99 (multi -> expo MULTI multi .)
    PAREN_EMPIEZA   reduce using rule 99 (multi -> expo MULTI multi .)
    OP_ASIG         reduce using rule 99 (multi -> expo MULTI multi .)
    OP_REL          reduce using rule 99 (multi -> expo MULTI multi .)
    Y               reduce using rule 99 (multi -> expo MULTI multi .)
    O               reduce using rule 99 (multi -> expo MULTI multi .)
    PAREN_TERMINA   reduce using rule 99 (multi -> expo MULTI multi .)
    POTENCIA        reduce using rule 99 (multi -> expo MULTI multi .)
    MULTI           reduce using rule 99 (multi -> expo MULTI multi .)
    DIV             reduce using rule 99 (multi -> expo MULTI multi .)
    MOD             reduce using rule 99 (multi -> expo MULTI multi .)
    COMA            reduce using rule 99 (multi -> expo MULTI multi .)
    PUNTO_COMA      reduce using rule 99 (multi -> expo MULTI multi .)
    HASTA           reduce using rule 99 (multi -> expo MULTI multi .)
    SINO            reduce using rule 99 (multi -> expo MULTI multi .)
    FIN             reduce using rule 99 (multi -> expo MULTI multi .)
    SEA             reduce using rule 99 (multi -> expo MULTI multi .)
    OTRO            reduce using rule 99 (multi -> expo MULTI multi .)
    INICIO          reduce using rule 99 (multi -> expo MULTI multi .)
    LIMPIA          reduce using rule 99 (multi -> expo MULTI multi .)
    INTERRUMPE      reduce using rule 99 (multi -> expo MULTI multi .)
    CONTINUA        reduce using rule 99 (multi -> expo MULTI multi .)
    SI              reduce using rule 99 (multi -> expo MULTI multi .)
    DESDE           reduce using rule 99 (multi -> expo MULTI multi .)
    REPETIR         reduce using rule 99 (multi -> expo MULTI multi .)
    MIENTRAS        reduce using rule 99 (multi -> expo MULTI multi .)
    CUANDO          reduce using rule 99 (multi -> expo MULTI multi .)
    REGRESA         reduce using rule 99 (multi -> expo MULTI multi .)
    IMPRIME         reduce using rule 99 (multi -> expo MULTI multi .)
    IMPRIMENL       reduce using rule 99 (multi -> expo MULTI multi .)
    LEE             reduce using rule 99 (multi -> expo MULTI multi .)
    INCR            reduce using rule 99 (multi -> expo MULTI multi .)
    DECR            reduce using rule 99 (multi -> expo MULTI multi .)


state 196

    (106) signo -> MENOS . termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    termino                        shift and go to state 221

state 197

    (100) multi -> expo DIV multi .

    MAS             reduce using rule 100 (multi -> expo DIV multi .)
    MENOS           reduce using rule 100 (multi -> expo DIV multi .)
    IDENT           reduce using rule 100 (multi -> expo DIV multi .)
    CTE_ENTERA      reduce using rule 100 (multi -> expo DIV multi .)
    CTE_REAL        reduce using rule 100 (multi -> expo DIV multi .)
    CTE_ALFA        reduce using rule 100 (multi -> expo DIV multi .)
    VERDADERO       reduce using rule 100 (multi -> expo DIV multi .)
    FALSO           reduce using rule 100 (multi -> expo DIV multi .)
    PAREN_EMPIEZA   reduce using rule 100 (multi -> expo DIV multi .)
    OP_ASIG         reduce using rule 100 (multi -> expo DIV multi .)
    OP_REL          reduce using rule 100 (multi -> expo DIV multi .)
    Y               reduce using rule 100 (multi -> expo DIV multi .)
    O               reduce using rule 100 (multi -> expo DIV multi .)
    PAREN_TERMINA   reduce using rule 100 (multi -> expo DIV multi .)
    POTENCIA        reduce using rule 100 (multi -> expo DIV multi .)
    MULTI           reduce using rule 100 (multi -> expo DIV multi .)
    DIV             reduce using rule 100 (multi -> expo DIV multi .)
    MOD             reduce using rule 100 (multi -> expo DIV multi .)
    COMA            reduce using rule 100 (multi -> expo DIV multi .)
    PUNTO_COMA      reduce using rule 100 (multi -> expo DIV multi .)
    HASTA           reduce using rule 100 (multi -> expo DIV multi .)
    SINO            reduce using rule 100 (multi -> expo DIV multi .)
    FIN             reduce using rule 100 (multi -> expo DIV multi .)
    SEA             reduce using rule 100 (multi -> expo DIV multi .)
    OTRO            reduce using rule 100 (multi -> expo DIV multi .)
    INICIO          reduce using rule 100 (multi -> expo DIV multi .)
    LIMPIA          reduce using rule 100 (multi -> expo DIV multi .)
    INTERRUMPE      reduce using rule 100 (multi -> expo DIV multi .)
    CONTINUA        reduce using rule 100 (multi -> expo DIV multi .)
    SI              reduce using rule 100 (multi -> expo DIV multi .)
    DESDE           reduce using rule 100 (multi -> expo DIV multi .)
    REPETIR         reduce using rule 100 (multi -> expo DIV multi .)
    MIENTRAS        reduce using rule 100 (multi -> expo DIV multi .)
    CUANDO          reduce using rule 100 (multi -> expo DIV multi .)
    REGRESA         reduce using rule 100 (multi -> expo DIV multi .)
    IMPRIME         reduce using rule 100 (multi -> expo DIV multi .)
    IMPRIMENL       reduce using rule 100 (multi -> expo DIV multi .)
    LEE             reduce using rule 100 (multi -> expo DIV multi .)
    INCR            reduce using rule 100 (multi -> expo DIV multi .)
    DECR            reduce using rule 100 (multi -> expo DIV multi .)


state 198

    (101) multi -> expo MOD multi .

    MAS             reduce using rule 101 (multi -> expo MOD multi .)
    MENOS           reduce using rule 101 (multi -> expo MOD multi .)
    IDENT           reduce using rule 101 (multi -> expo MOD multi .)
    CTE_ENTERA      reduce using rule 101 (multi -> expo MOD multi .)
    CTE_REAL        reduce using rule 101 (multi -> expo MOD multi .)
    CTE_ALFA        reduce using rule 101 (multi -> expo MOD multi .)
    VERDADERO       reduce using rule 101 (multi -> expo MOD multi .)
    FALSO           reduce using rule 101 (multi -> expo MOD multi .)
    PAREN_EMPIEZA   reduce using rule 101 (multi -> expo MOD multi .)
    OP_ASIG         reduce using rule 101 (multi -> expo MOD multi .)
    OP_REL          reduce using rule 101 (multi -> expo MOD multi .)
    Y               reduce using rule 101 (multi -> expo MOD multi .)
    O               reduce using rule 101 (multi -> expo MOD multi .)
    PAREN_TERMINA   reduce using rule 101 (multi -> expo MOD multi .)
    POTENCIA        reduce using rule 101 (multi -> expo MOD multi .)
    MULTI           reduce using rule 101 (multi -> expo MOD multi .)
    DIV             reduce using rule 101 (multi -> expo MOD multi .)
    MOD             reduce using rule 101 (multi -> expo MOD multi .)
    COMA            reduce using rule 101 (multi -> expo MOD multi .)
    PUNTO_COMA      reduce using rule 101 (multi -> expo MOD multi .)
    HASTA           reduce using rule 101 (multi -> expo MOD multi .)
    SINO            reduce using rule 101 (multi -> expo MOD multi .)
    FIN             reduce using rule 101 (multi -> expo MOD multi .)
    SEA             reduce using rule 101 (multi -> expo MOD multi .)
    OTRO            reduce using rule 101 (multi -> expo MOD multi .)
    INICIO          reduce using rule 101 (multi -> expo MOD multi .)
    LIMPIA          reduce using rule 101 (multi -> expo MOD multi .)
    INTERRUMPE      reduce using rule 101 (multi -> expo MOD multi .)
    CONTINUA        reduce using rule 101 (multi -> expo MOD multi .)
    SI              reduce using rule 101 (multi -> expo MOD multi .)
    DESDE           reduce using rule 101 (multi -> expo MOD multi .)
    REPETIR         reduce using rule 101 (multi -> expo MOD multi .)
    MIENTRAS        reduce using rule 101 (multi -> expo MOD multi .)
    CUANDO          reduce using rule 101 (multi -> expo MOD multi .)
    REGRESA         reduce using rule 101 (multi -> expo MOD multi .)
    IMPRIME         reduce using rule 101 (multi -> expo MOD multi .)
    IMPRIMENL       reduce using rule 101 (multi -> expo MOD multi .)
    LEE             reduce using rule 101 (multi -> expo MOD multi .)
    INCR            reduce using rule 101 (multi -> expo MOD multi .)
    DECR            reduce using rule 101 (multi -> expo MOD multi .)


state 199

    (104) expo -> signo POTENCIA expo .

    MULTI           reduce using rule 104 (expo -> signo POTENCIA expo .)
    DIV             reduce using rule 104 (expo -> signo POTENCIA expo .)
    MOD             reduce using rule 104 (expo -> signo POTENCIA expo .)
    MAS             reduce using rule 104 (expo -> signo POTENCIA expo .)
    MENOS           reduce using rule 104 (expo -> signo POTENCIA expo .)
    IDENT           reduce using rule 104 (expo -> signo POTENCIA expo .)
    CTE_ENTERA      reduce using rule 104 (expo -> signo POTENCIA expo .)
    CTE_REAL        reduce using rule 104 (expo -> signo POTENCIA expo .)
    CTE_ALFA        reduce using rule 104 (expo -> signo POTENCIA expo .)
    VERDADERO       reduce using rule 104 (expo -> signo POTENCIA expo .)
    FALSO           reduce using rule 104 (expo -> signo POTENCIA expo .)
    PAREN_EMPIEZA   reduce using rule 104 (expo -> signo POTENCIA expo .)
    OP_ASIG         reduce using rule 104 (expo -> signo POTENCIA expo .)
    OP_REL          reduce using rule 104 (expo -> signo POTENCIA expo .)
    Y               reduce using rule 104 (expo -> signo POTENCIA expo .)
    O               reduce using rule 104 (expo -> signo POTENCIA expo .)
    PAREN_TERMINA   reduce using rule 104 (expo -> signo POTENCIA expo .)
    POTENCIA        reduce using rule 104 (expo -> signo POTENCIA expo .)
    COMA            reduce using rule 104 (expo -> signo POTENCIA expo .)
    PUNTO_COMA      reduce using rule 104 (expo -> signo POTENCIA expo .)
    HASTA           reduce using rule 104 (expo -> signo POTENCIA expo .)
    SINO            reduce using rule 104 (expo -> signo POTENCIA expo .)
    FIN             reduce using rule 104 (expo -> signo POTENCIA expo .)
    SEA             reduce using rule 104 (expo -> signo POTENCIA expo .)
    OTRO            reduce using rule 104 (expo -> signo POTENCIA expo .)
    INICIO          reduce using rule 104 (expo -> signo POTENCIA expo .)
    LIMPIA          reduce using rule 104 (expo -> signo POTENCIA expo .)
    INTERRUMPE      reduce using rule 104 (expo -> signo POTENCIA expo .)
    CONTINUA        reduce using rule 104 (expo -> signo POTENCIA expo .)
    SI              reduce using rule 104 (expo -> signo POTENCIA expo .)
    DESDE           reduce using rule 104 (expo -> signo POTENCIA expo .)
    REPETIR         reduce using rule 104 (expo -> signo POTENCIA expo .)
    MIENTRAS        reduce using rule 104 (expo -> signo POTENCIA expo .)
    CUANDO          reduce using rule 104 (expo -> signo POTENCIA expo .)
    REGRESA         reduce using rule 104 (expo -> signo POTENCIA expo .)
    IMPRIME         reduce using rule 104 (expo -> signo POTENCIA expo .)
    IMPRIMENL       reduce using rule 104 (expo -> signo POTENCIA expo .)
    LEE             reduce using rule 104 (expo -> signo POTENCIA expo .)
    INCR            reduce using rule 104 (expo -> signo POTENCIA expo .)
    DECR            reduce using rule 104 (expo -> signo POTENCIA expo .)


state 200

    (71) desde -> DESDE EL VALOR DE . asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> DESDE EL VALOR DE . asigna HASTA expr DECR CTE_ENTERA bckesp
    (75) asigna -> . IDENT udim OP_ASIG exprlog

    IDENT           shift and go to state 223

    asigna                         shift and go to state 222

state 201

    (73) repetir -> REPETIR block HASTA QUE . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 224


state 202

    (74) mientras -> MIENTRAS SE CUMPLA QUE . exprlog bckesp
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    INICIO          reduce using rule 127 (empty -> .)
    LIMPIA          reduce using rule 127 (empty -> .)
    INTERRUMPE      reduce using rule 127 (empty -> .)
    CONTINUA        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    DESDE           reduce using rule 127 (empty -> .)
    REPETIR         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    CUANDO          reduce using rule 127 (empty -> .)
    REGRESA         reduce using rule 127 (empty -> .)
    IMPRIME         reduce using rule 127 (empty -> .)
    IMPRIMENL       reduce using rule 127 (empty -> .)
    LEE             reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SINO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

  ! IDENT           [ reduce using rule 127 (empty -> .) ]

    exprlog                        shift and go to state 225
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 203

    (76) cuando -> CUANDO EL VALOR DE . IDENT INICIO gposea otro FIN

    IDENT           shift and go to state 226


state 204

    (84) regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 84 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 84 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 84 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 84 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 84 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 205

    (119) imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 119 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 119 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 119 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 119 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 119 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 206

    (124) gpoexp -> exprlog COMA . gpoexp
    (123) gpoexp -> . exprlog
    (124) gpoexp -> . exprlog COMA gpoexp
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMA            reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    exprlog                        shift and go to state 172
    gpoexp                         shift and go to state 227
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 207

    (120) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 120 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 120 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 120 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 120 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 120 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 208

    (121) lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 121 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SINO            reduce using rule 121 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    FIN             reduce using rule 121 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SEA             reduce using rule 121 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    OTRO            reduce using rule 121 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)


state 209

    (122) lee -> LEE PAREN_EMPIEZA IDENT dimens . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 228


state 210

    (40) maspars -> COMA gpopars .

    PUNTOS_DOBLES   reduce using rule 40 (maspars -> COMA gpopars .)


state 211

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables . INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    INICIO          shift and go to state 229


state 212

    (35) params -> gpopars PUNTOS_DOBLES TIPO . otrospars
    (37) otrospars -> . PUNTO_COMA params
    (38) otrospars -> . empty
    (127) empty -> .

    PUNTO_COMA      shift and go to state 231
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    otrospars                      shift and go to state 230
    empty                          shift and go to state 232

state 213

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    TIPO            shift and go to state 233


state 214

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 234


state 215

    (33) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    FUNCION         reduce using rule 33 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 33 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FIN             reduce using rule 33 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 216

    (65) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER . bckesp sino
    (68) bckesp -> . estatuto
    (69) bckesp -> . INICIO block FIN
    (70) bckesp -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 237
    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SINO            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    bckesp                         shift and go to state 235
    estatuto                       shift and go to state 236
    empty                          shift and go to state 238
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    asigna                         shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 217

    (88) exprlog -> opy O exprlog .

    PAREN_TERMINA   reduce using rule 88 (exprlog -> opy O exprlog .)
    COMA            reduce using rule 88 (exprlog -> opy O exprlog .)
    PUNTO_COMA      reduce using rule 88 (exprlog -> opy O exprlog .)
    HASTA           reduce using rule 88 (exprlog -> opy O exprlog .)
    SINO            reduce using rule 88 (exprlog -> opy O exprlog .)
    FIN             reduce using rule 88 (exprlog -> opy O exprlog .)
    SEA             reduce using rule 88 (exprlog -> opy O exprlog .)
    OTRO            reduce using rule 88 (exprlog -> opy O exprlog .)
    INICIO          reduce using rule 88 (exprlog -> opy O exprlog .)
    LIMPIA          reduce using rule 88 (exprlog -> opy O exprlog .)
    INTERRUMPE      reduce using rule 88 (exprlog -> opy O exprlog .)
    CONTINUA        reduce using rule 88 (exprlog -> opy O exprlog .)
    SI              reduce using rule 88 (exprlog -> opy O exprlog .)
    IDENT           reduce using rule 88 (exprlog -> opy O exprlog .)
    DESDE           reduce using rule 88 (exprlog -> opy O exprlog .)
    REPETIR         reduce using rule 88 (exprlog -> opy O exprlog .)
    MIENTRAS        reduce using rule 88 (exprlog -> opy O exprlog .)
    CUANDO          reduce using rule 88 (exprlog -> opy O exprlog .)
    REGRESA         reduce using rule 88 (exprlog -> opy O exprlog .)
    IMPRIME         reduce using rule 88 (exprlog -> opy O exprlog .)
    IMPRIMENL       reduce using rule 88 (exprlog -> opy O exprlog .)
    LEE             reduce using rule 88 (exprlog -> opy O exprlog .)


state 218

    (90) opy -> opno Y opy .

    O               reduce using rule 90 (opy -> opno Y opy .)
    PAREN_TERMINA   reduce using rule 90 (opy -> opno Y opy .)
    COMA            reduce using rule 90 (opy -> opno Y opy .)
    PUNTO_COMA      reduce using rule 90 (opy -> opno Y opy .)
    HASTA           reduce using rule 90 (opy -> opno Y opy .)
    SINO            reduce using rule 90 (opy -> opno Y opy .)
    FIN             reduce using rule 90 (opy -> opno Y opy .)
    SEA             reduce using rule 90 (opy -> opno Y opy .)
    OTRO            reduce using rule 90 (opy -> opno Y opy .)
    INICIO          reduce using rule 90 (opy -> opno Y opy .)
    LIMPIA          reduce using rule 90 (opy -> opno Y opy .)
    INTERRUMPE      reduce using rule 90 (opy -> opno Y opy .)
    CONTINUA        reduce using rule 90 (opy -> opno Y opy .)
    SI              reduce using rule 90 (opy -> opno Y opy .)
    IDENT           reduce using rule 90 (opy -> opno Y opy .)
    DESDE           reduce using rule 90 (opy -> opno Y opy .)
    REPETIR         reduce using rule 90 (opy -> opno Y opy .)
    MIENTRAS        reduce using rule 90 (opy -> opno Y opy .)
    CUANDO          reduce using rule 90 (opy -> opno Y opy .)
    REGRESA         reduce using rule 90 (opy -> opno Y opy .)
    IMPRIME         reduce using rule 90 (opy -> opno Y opy .)
    IMPRIMENL       reduce using rule 90 (opy -> opno Y opy .)
    LEE             reduce using rule 90 (opy -> opno Y opy .)


state 219

    (94) oprel -> expr OP_REL oprel .

    Y               reduce using rule 94 (oprel -> expr OP_REL oprel .)
    O               reduce using rule 94 (oprel -> expr OP_REL oprel .)
    PAREN_TERMINA   reduce using rule 94 (oprel -> expr OP_REL oprel .)
    COMA            reduce using rule 94 (oprel -> expr OP_REL oprel .)
    PUNTO_COMA      reduce using rule 94 (oprel -> expr OP_REL oprel .)
    HASTA           reduce using rule 94 (oprel -> expr OP_REL oprel .)
    SINO            reduce using rule 94 (oprel -> expr OP_REL oprel .)
    FIN             reduce using rule 94 (oprel -> expr OP_REL oprel .)
    SEA             reduce using rule 94 (oprel -> expr OP_REL oprel .)
    OTRO            reduce using rule 94 (oprel -> expr OP_REL oprel .)
    INICIO          reduce using rule 94 (oprel -> expr OP_REL oprel .)
    LIMPIA          reduce using rule 94 (oprel -> expr OP_REL oprel .)
    INTERRUMPE      reduce using rule 94 (oprel -> expr OP_REL oprel .)
    CONTINUA        reduce using rule 94 (oprel -> expr OP_REL oprel .)
    SI              reduce using rule 94 (oprel -> expr OP_REL oprel .)
    IDENT           reduce using rule 94 (oprel -> expr OP_REL oprel .)
    DESDE           reduce using rule 94 (oprel -> expr OP_REL oprel .)
    REPETIR         reduce using rule 94 (oprel -> expr OP_REL oprel .)
    MIENTRAS        reduce using rule 94 (oprel -> expr OP_REL oprel .)
    CUANDO          reduce using rule 94 (oprel -> expr OP_REL oprel .)
    REGRESA         reduce using rule 94 (oprel -> expr OP_REL oprel .)
    IMPRIME         reduce using rule 94 (oprel -> expr OP_REL oprel .)
    IMPRIMENL       reduce using rule 94 (oprel -> expr OP_REL oprel .)
    LEE             reduce using rule 94 (oprel -> expr OP_REL oprel .)


state 220

    (126) uparams -> exprlog COMA uparams .

    PAREN_TERMINA   reduce using rule 126 (uparams -> exprlog COMA uparams .)


state 221

    (106) signo -> MENOS termino .

    POTENCIA        reduce using rule 106 (signo -> MENOS termino .)
    MULTI           reduce using rule 106 (signo -> MENOS termino .)
    DIV             reduce using rule 106 (signo -> MENOS termino .)
    MOD             reduce using rule 106 (signo -> MENOS termino .)
    MAS             reduce using rule 106 (signo -> MENOS termino .)
    MENOS           reduce using rule 106 (signo -> MENOS termino .)
    IDENT           reduce using rule 106 (signo -> MENOS termino .)
    CTE_ENTERA      reduce using rule 106 (signo -> MENOS termino .)
    CTE_REAL        reduce using rule 106 (signo -> MENOS termino .)
    CTE_ALFA        reduce using rule 106 (signo -> MENOS termino .)
    VERDADERO       reduce using rule 106 (signo -> MENOS termino .)
    FALSO           reduce using rule 106 (signo -> MENOS termino .)
    PAREN_EMPIEZA   reduce using rule 106 (signo -> MENOS termino .)
    OP_ASIG         reduce using rule 106 (signo -> MENOS termino .)
    OP_REL          reduce using rule 106 (signo -> MENOS termino .)
    Y               reduce using rule 106 (signo -> MENOS termino .)
    O               reduce using rule 106 (signo -> MENOS termino .)
    PAREN_TERMINA   reduce using rule 106 (signo -> MENOS termino .)
    COMA            reduce using rule 106 (signo -> MENOS termino .)
    PUNTO_COMA      reduce using rule 106 (signo -> MENOS termino .)
    HASTA           reduce using rule 106 (signo -> MENOS termino .)
    SINO            reduce using rule 106 (signo -> MENOS termino .)
    FIN             reduce using rule 106 (signo -> MENOS termino .)
    SEA             reduce using rule 106 (signo -> MENOS termino .)
    OTRO            reduce using rule 106 (signo -> MENOS termino .)
    INICIO          reduce using rule 106 (signo -> MENOS termino .)
    LIMPIA          reduce using rule 106 (signo -> MENOS termino .)
    INTERRUMPE      reduce using rule 106 (signo -> MENOS termino .)
    CONTINUA        reduce using rule 106 (signo -> MENOS termino .)
    SI              reduce using rule 106 (signo -> MENOS termino .)
    DESDE           reduce using rule 106 (signo -> MENOS termino .)
    REPETIR         reduce using rule 106 (signo -> MENOS termino .)
    MIENTRAS        reduce using rule 106 (signo -> MENOS termino .)
    CUANDO          reduce using rule 106 (signo -> MENOS termino .)
    REGRESA         reduce using rule 106 (signo -> MENOS termino .)
    IMPRIME         reduce using rule 106 (signo -> MENOS termino .)
    IMPRIMENL       reduce using rule 106 (signo -> MENOS termino .)
    LEE             reduce using rule 106 (signo -> MENOS termino .)
    INCR            reduce using rule 106 (signo -> MENOS termino .)
    DECR            reduce using rule 106 (signo -> MENOS termino .)


state 222

    (71) desde -> DESDE EL VALOR DE asigna . HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> DESDE EL VALOR DE asigna . HASTA expr DECR CTE_ENTERA bckesp

    HASTA           shift and go to state 239


state 223

    (75) asigna -> IDENT . udim OP_ASIG exprlog
    (85) udim -> . expr udim
    (86) udim -> . empty
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (127) empty -> .
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_ASIG         reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

  ! MAS             [ reduce using rule 127 (empty -> .) ]
  ! MENOS           [ reduce using rule 127 (empty -> .) ]
  ! IDENT           [ reduce using rule 127 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 127 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 127 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 127 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 127 (empty -> .) ]
  ! FALSO           [ reduce using rule 127 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 127 (empty -> .) ]

    udim                           shift and go to state 106
    expr                           shift and go to state 108
    empty                          shift and go to state 109
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 224

    (73) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (87) exprlog -> . opy
    (88) exprlog -> . opy O exprlog
    (89) opy -> . opno
    (90) opy -> . opno Y opy
    (91) opno -> . oprel
    (92) opno -> . NO oprel
    (93) oprel -> . expr
    (94) oprel -> . expr OP_REL oprel
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    NO              shift and go to state 147
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    OP_REL          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    PAREN_TERMINA   reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    exprlog                        shift and go to state 240
    opy                            shift and go to state 144
    opno                           shift and go to state 145
    oprel                          shift and go to state 146
    expr                           shift and go to state 148
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 225

    (74) mientras -> MIENTRAS SE CUMPLA QUE exprlog . bckesp
    (68) bckesp -> . estatuto
    (69) bckesp -> . INICIO block FIN
    (70) bckesp -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 237
    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SINO            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    bckesp                         shift and go to state 241
    estatuto                       shift and go to state 236
    empty                          shift and go to state 238
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    asigna                         shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 226

    (76) cuando -> CUANDO EL VALOR DE IDENT . INICIO gposea otro FIN

    INICIO          shift and go to state 242


state 227

    (124) gpoexp -> exprlog COMA gpoexp .

    PAREN_TERMINA   reduce using rule 124 (gpoexp -> exprlog COMA gpoexp .)


state 228

    (122) lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 122 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SINO            reduce using rule 122 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    FIN             reduce using rule 122 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SEA             reduce using rule 122 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    OTRO            reduce using rule 122 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)


state 229

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO . block FIN DE PROCEDIMIENTO PUNTO_COMA
    (47) block -> . estatuto puntoc block
    (49) block -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    block                          shift and go to state 243
    estatuto                       shift and go to state 63
    empty                          shift and go to state 64
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    asigna                         shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 230

    (35) params -> gpopars PUNTOS_DOBLES TIPO otrospars .

    PAREN_TERMINA   reduce using rule 35 (params -> gpopars PUNTOS_DOBLES TIPO otrospars .)


state 231

    (37) otrospars -> PUNTO_COMA . params
    (35) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (36) params -> . empty
    (39) gpopars -> . IDENT maspars
    (127) empty -> .

    IDENT           shift and go to state 129
    PAREN_TERMINA   reduce using rule 127 (empty -> .)

    params                         shift and go to state 244
    gpopars                        shift and go to state 131
    empty                          shift and go to state 132

state 232

    (38) otrospars -> empty .

    PAREN_TERMINA   reduce using rule 38 (otrospars -> empty .)


state 233

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . variables INICIO block FIN DE FUNCION PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (127) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 127 (empty -> .)

    variables                      shift and go to state 245
    empty                          shift and go to state 7

state 234

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 246


state 235

    (65) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp . sino
    (66) sino -> . SINO bckesp
    (67) sino -> . empty
    (127) empty -> .

  ! shift/reduce conflict for SINO resolved as shift
    SINO            shift and go to state 248
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)

  ! SINO            [ reduce using rule 127 (empty -> .) ]

    sino                           shift and go to state 247
    empty                          shift and go to state 249

state 236

    (68) bckesp -> estatuto .

    SINO            reduce using rule 68 (bckesp -> estatuto .)
    PUNTO_COMA      reduce using rule 68 (bckesp -> estatuto .)
    FIN             reduce using rule 68 (bckesp -> estatuto .)
    SEA             reduce using rule 68 (bckesp -> estatuto .)
    OTRO            reduce using rule 68 (bckesp -> estatuto .)


state 237

    (69) bckesp -> INICIO . block FIN
    (47) block -> . estatuto puntoc block
    (49) block -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    block                          shift and go to state 250
    estatuto                       shift and go to state 63
    empty                          shift and go to state 64
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    asigna                         shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 238

    (70) bckesp -> empty .
    (64) estatuto -> empty .

  ! reduce/reduce conflict for SINO resolved using rule 64 (estatuto -> empty .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 64 (estatuto -> empty .)
  ! reduce/reduce conflict for FIN resolved using rule 64 (estatuto -> empty .)
  ! reduce/reduce conflict for SEA resolved using rule 64 (estatuto -> empty .)
  ! reduce/reduce conflict for OTRO resolved using rule 64 (estatuto -> empty .)
    SINO            reduce using rule 64 (estatuto -> empty .)
    PUNTO_COMA      reduce using rule 64 (estatuto -> empty .)
    FIN             reduce using rule 64 (estatuto -> empty .)
    SEA             reduce using rule 64 (estatuto -> empty .)
    OTRO            reduce using rule 64 (estatuto -> empty .)

  ! SINO            [ reduce using rule 70 (bckesp -> empty .) ]
  ! PUNTO_COMA      [ reduce using rule 70 (bckesp -> empty .) ]
  ! FIN             [ reduce using rule 70 (bckesp -> empty .) ]
  ! SEA             [ reduce using rule 70 (bckesp -> empty .) ]
  ! OTRO            [ reduce using rule 70 (bckesp -> empty .) ]


state 239

    (71) desde -> DESDE EL VALOR DE asigna HASTA . expr INCR CTE_ENTERA bckesp
    (72) desde -> DESDE EL VALOR DE asigna HASTA . expr DECR CTE_ENTERA bckesp
    (95) expr -> . multi
    (96) expr -> . MAS expr
    (97) expr -> . MENOS expr
    (98) multi -> . expo
    (99) multi -> . expo MULTI multi
    (100) multi -> . expo DIV multi
    (101) multi -> . expo MOD multi
    (102) multi -> . empty
    (103) expo -> . signo
    (104) expo -> . signo POTENCIA expo
    (127) empty -> .
    (105) signo -> . termino
    (106) signo -> . MENOS termino
    (107) termino -> . IDENT
    (108) termino -> . IDENT lfunc
    (109) termino -> . IDENT udim
    (110) termino -> . CTE_ENTERA
    (111) termino -> . CTE_REAL
    (112) termino -> . CTE_ALFA
    (113) termino -> . VERDADERO
    (114) termino -> . FALSO
    (115) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA

    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    INCR            reduce using rule 127 (empty -> .)
    DECR            reduce using rule 127 (empty -> .)
    IDENT           shift and go to state 104
    CTE_ENTERA      shift and go to state 116
    CTE_REAL        shift and go to state 117
    CTE_ALFA        shift and go to state 118
    VERDADERO       shift and go to state 119
    FALSO           shift and go to state 120
    PAREN_EMPIEZA   shift and go to state 142

    expr                           shift and go to state 251
    multi                          shift and go to state 110
    expo                           shift and go to state 113
    empty                          shift and go to state 149
    signo                          shift and go to state 114
    termino                        shift and go to state 115

state 240

    (73) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 252


state 241

    (74) mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .

    PUNTO_COMA      reduce using rule 74 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SINO            reduce using rule 74 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    FIN             reduce using rule 74 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SEA             reduce using rule 74 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    OTRO            reduce using rule 74 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)


state 242

    (76) cuando -> CUANDO EL VALOR DE IDENT INICIO . gposea otro FIN
    (79) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (80) gposea -> . empty
    (127) empty -> .

    SEA             shift and go to state 254
    OTRO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)

    gposea                         shift and go to state 253
    empty                          shift and go to state 255

state 243

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block . FIN DE PROCEDIMIENTO PUNTO_COMA

    FIN             shift and go to state 256


state 244

    (37) otrospars -> PUNTO_COMA params .

    PAREN_TERMINA   reduce using rule 37 (otrospars -> PUNTO_COMA params .)


state 245

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables . INICIO block FIN DE FUNCION PUNTO_COMA

    INICIO          shift and go to state 257


state 246

    (32) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    FUNCION         reduce using rule 32 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 32 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FIN             reduce using rule 32 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 247

    (65) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .

    PUNTO_COMA      reduce using rule 65 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SINO            reduce using rule 65 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    FIN             reduce using rule 65 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SEA             reduce using rule 65 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    OTRO            reduce using rule 65 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)


state 248

    (66) sino -> SINO . bckesp
    (68) bckesp -> . estatuto
    (69) bckesp -> . INICIO block FIN
    (70) bckesp -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 237
    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SINO            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    bckesp                         shift and go to state 258
    estatuto                       shift and go to state 236
    empty                          shift and go to state 238
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    asigna                         shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 249

    (67) sino -> empty .

    SINO            reduce using rule 67 (sino -> empty .)
    PUNTO_COMA      reduce using rule 67 (sino -> empty .)
    FIN             reduce using rule 67 (sino -> empty .)
    SEA             reduce using rule 67 (sino -> empty .)
    OTRO            reduce using rule 67 (sino -> empty .)


state 250

    (69) bckesp -> INICIO block . FIN

    FIN             shift and go to state 259


state 251

    (71) desde -> DESDE EL VALOR DE asigna HASTA expr . INCR CTE_ENTERA bckesp
    (72) desde -> DESDE EL VALOR DE asigna HASTA expr . DECR CTE_ENTERA bckesp

    INCR            shift and go to state 260
    DECR            shift and go to state 261


state 252

    (73) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 73 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 73 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 73 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 73 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 73 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 253

    (76) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea . otro FIN
    (77) otro -> . OTRO PUNTOS_DOBLES bckesp
    (78) otro -> . empty
    (127) empty -> .

    OTRO            shift and go to state 263
    FIN             reduce using rule 127 (empty -> .)

    otro                           shift and go to state 262
    empty                          shift and go to state 264

state 254

    (79) gposea -> SEA . gpoconst PUNTOS_DOBLES bckesp gposea
    (81) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 266

    gpoconst                       shift and go to state 265

state 255

    (80) gposea -> empty .

    OTRO            reduce using rule 80 (gposea -> empty .)
    FIN             reduce using rule 80 (gposea -> empty .)


state 256

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN . DE PROCEDIMIENTO PUNTO_COMA

    DE              shift and go to state 267


state 257

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO . block FIN DE FUNCION PUNTO_COMA
    (47) block -> . estatuto puntoc block
    (49) block -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    block                          shift and go to state 268
    estatuto                       shift and go to state 63
    empty                          shift and go to state 64
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    asigna                         shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 258

    (66) sino -> SINO bckesp .

    SINO            reduce using rule 66 (sino -> SINO bckesp .)
    PUNTO_COMA      reduce using rule 66 (sino -> SINO bckesp .)
    FIN             reduce using rule 66 (sino -> SINO bckesp .)
    SEA             reduce using rule 66 (sino -> SINO bckesp .)
    OTRO            reduce using rule 66 (sino -> SINO bckesp .)


state 259

    (69) bckesp -> INICIO block FIN .

    SINO            reduce using rule 69 (bckesp -> INICIO block FIN .)
    PUNTO_COMA      reduce using rule 69 (bckesp -> INICIO block FIN .)
    FIN             reduce using rule 69 (bckesp -> INICIO block FIN .)
    SEA             reduce using rule 69 (bckesp -> INICIO block FIN .)
    OTRO            reduce using rule 69 (bckesp -> INICIO block FIN .)


state 260

    (71) desde -> DESDE EL VALOR DE asigna HASTA expr INCR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 269


state 261

    (72) desde -> DESDE EL VALOR DE asigna HASTA expr DECR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 270


state 262

    (76) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro . FIN

    FIN             shift and go to state 271


state 263

    (77) otro -> OTRO . PUNTOS_DOBLES bckesp

    PUNTOS_DOBLES   shift and go to state 272


state 264

    (78) otro -> empty .

    FIN             reduce using rule 78 (otro -> empty .)


state 265

    (79) gposea -> SEA gpoconst . PUNTOS_DOBLES bckesp gposea

    PUNTOS_DOBLES   shift and go to state 273


state 266

    (81) gpoconst -> CTE_ALFA . masgpoconst
    (82) masgpoconst -> . COMA gpoconst
    (83) masgpoconst -> . empty
    (127) empty -> .

    COMA            shift and go to state 275
    PUNTOS_DOBLES   reduce using rule 127 (empty -> .)

    masgpoconst                    shift and go to state 274
    empty                          shift and go to state 276

state 267

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE . PROCEDIMIENTO PUNTO_COMA

    PROCEDIMIENTO   shift and go to state 277


state 268

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block . FIN DE FUNCION PUNTO_COMA

    FIN             shift and go to state 278


state 269

    (71) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA . bckesp
    (68) bckesp -> . estatuto
    (69) bckesp -> . INICIO block FIN
    (70) bckesp -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 237
    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SINO            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    asigna                         shift and go to state 73
    bckesp                         shift and go to state 279
    estatuto                       shift and go to state 236
    empty                          shift and go to state 238
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 270

    (72) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA . bckesp
    (68) bckesp -> . estatuto
    (69) bckesp -> . INICIO block FIN
    (70) bckesp -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 237
    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SINO            reduce using rule 127 (empty -> .)
    PUNTO_COMA      reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    asigna                         shift and go to state 73
    bckesp                         shift and go to state 280
    estatuto                       shift and go to state 236
    empty                          shift and go to state 238
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 271

    (76) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .

    PUNTO_COMA      reduce using rule 76 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SINO            reduce using rule 76 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    FIN             reduce using rule 76 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SEA             reduce using rule 76 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    OTRO            reduce using rule 76 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)


state 272

    (77) otro -> OTRO PUNTOS_DOBLES . bckesp
    (68) bckesp -> . estatuto
    (69) bckesp -> . INICIO block FIN
    (70) bckesp -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 237
    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    FIN             reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    bckesp                         shift and go to state 281
    estatuto                       shift and go to state 236
    empty                          shift and go to state 238
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    asigna                         shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 273

    (79) gposea -> SEA gpoconst PUNTOS_DOBLES . bckesp gposea
    (68) bckesp -> . estatuto
    (69) bckesp -> . INICIO block FIN
    (70) bckesp -> . empty
    (50) estatuto -> . si
    (51) estatuto -> . lfunc
    (52) estatuto -> . LIMPIA
    (53) estatuto -> . desde
    (54) estatuto -> . repetir
    (55) estatuto -> . mientras
    (56) estatuto -> . cuando
    (57) estatuto -> . regresa
    (58) estatuto -> . asigna
    (59) estatuto -> . imprime
    (60) estatuto -> . imprimenl
    (61) estatuto -> . lee
    (62) estatuto -> . INTERRUMPE
    (63) estatuto -> . CONTINUA
    (64) estatuto -> . empty
    (127) empty -> .
    (65) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (116) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (117) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (71) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (72) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (73) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (74) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (76) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (84) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (75) asigna -> . IDENT udim OP_ASIG exprlog
    (119) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (120) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (121) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (122) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    INICIO          shift and go to state 237
    LIMPIA          shift and go to state 67
    INTERRUMPE      shift and go to state 77
    CONTINUA        shift and go to state 78
    SEA             reduce using rule 127 (empty -> .)
    OTRO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)
    SI              shift and go to state 79
    IDENT           shift and go to state 80
    DESDE           shift and go to state 81
    REPETIR         shift and go to state 82
    MIENTRAS        shift and go to state 83
    CUANDO          shift and go to state 84
    REGRESA         shift and go to state 85
    IMPRIME         shift and go to state 86
    IMPRIMENL       shift and go to state 87
    LEE             shift and go to state 88

    bckesp                         shift and go to state 282
    estatuto                       shift and go to state 236
    empty                          shift and go to state 238
    si                             shift and go to state 65
    lfunc                          shift and go to state 66
    desde                          shift and go to state 68
    repetir                        shift and go to state 69
    mientras                       shift and go to state 70
    cuando                         shift and go to state 71
    regresa                        shift and go to state 72
    asigna                         shift and go to state 73
    imprime                        shift and go to state 74
    imprimenl                      shift and go to state 75
    lee                            shift and go to state 76

state 274

    (81) gpoconst -> CTE_ALFA masgpoconst .

    PUNTOS_DOBLES   reduce using rule 81 (gpoconst -> CTE_ALFA masgpoconst .)


state 275

    (82) masgpoconst -> COMA . gpoconst
    (81) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 266

    gpoconst                       shift and go to state 283

state 276

    (83) masgpoconst -> empty .

    PUNTOS_DOBLES   reduce using rule 83 (masgpoconst -> empty .)


state 277

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 284


state 278

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN . DE FUNCION PUNTO_COMA

    DE              shift and go to state 285


state 279

    (71) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .

    PUNTO_COMA      reduce using rule 71 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SINO            reduce using rule 71 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    FIN             reduce using rule 71 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SEA             reduce using rule 71 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 71 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)


state 280

    (72) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .

    PUNTO_COMA      reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SINO            reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    FIN             reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SEA             reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 72 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)


state 281

    (77) otro -> OTRO PUNTOS_DOBLES bckesp .

    FIN             reduce using rule 77 (otro -> OTRO PUNTOS_DOBLES bckesp .)


state 282

    (79) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp . gposea
    (79) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (80) gposea -> . empty
    (127) empty -> .

    SEA             shift and go to state 254
    OTRO            reduce using rule 127 (empty -> .)
    FIN             reduce using rule 127 (empty -> .)

    gposea                         shift and go to state 286
    empty                          shift and go to state 255

state 283

    (82) masgpoconst -> COMA gpoconst .

    PUNTOS_DOBLES   reduce using rule 82 (masgpoconst -> COMA gpoconst .)


state 284

    (45) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 45 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    FUNCION         reduce using rule 45 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    PROGRAMA        reduce using rule 45 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)


state 285

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE . FUNCION PUNTO_COMA

    FUNCION         shift and go to state 287


state 286

    (79) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .

    OTRO            reduce using rule 79 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)
    FIN             reduce using rule 79 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)


state 287

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION . PUNTO_COMA

    PUNTO_COMA      shift and go to state 288


state 288

    (46) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 46 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    FUNCION         reduce using rule 46 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    PROGRAMA        reduce using rule 46 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 12 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 12 resolved as shift
WARNING: shift/reduce conflict for COMA in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 26 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 26 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 27 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 27 resolved as shift
WARNING: shift/reduce conflict for MAS in state 80 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 80 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 80 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 80 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 80 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 80 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 80 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 80 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 80 resolved as shift
WARNING: shift/reduce conflict for MAS in state 104 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 104 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 104 resolved as shift
WARNING: shift/reduce conflict for MAS in state 108 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 108 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 108 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 108 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 108 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 108 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 108 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 108 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 108 resolved as shift
WARNING: shift/reduce conflict for MAS in state 111 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 111 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 111 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 111 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 111 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 111 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 111 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 111 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 111 resolved as shift
WARNING: shift/reduce conflict for MAS in state 112 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 112 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 112 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 112 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 112 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 112 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 112 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 112 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 112 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 113 resolved as shift
WARNING: shift/reduce conflict for DIV in state 113 resolved as shift
WARNING: shift/reduce conflict for MOD in state 113 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 114 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 147 resolved as shift
WARNING: shift/reduce conflict for MAS in state 150 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 150 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 150 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 150 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 162 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 162 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 162 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 162 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 162 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 162 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 162 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 162 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 163 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 163 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 163 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 163 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 163 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 163 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 163 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 163 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 164 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 164 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 164 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 164 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 164 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 164 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 164 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 164 resolved as shift
WARNING: shift/reduce conflict for PAREN_TERMINA in state 174 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 186 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 187 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 189 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 202 resolved as shift
WARNING: shift/reduce conflict for MAS in state 223 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 223 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 223 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 223 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 223 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 223 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 223 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 223 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 223 resolved as shift
WARNING: shift/reduce conflict for SINO in state 235 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (gpofuncproc -> protfunc)
WARNING: rejected rule (empty -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (gpofuncproc -> protproc)
WARNING: rejected rule (empty -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 36 resolved using rule (dimens -> empty)
WARNING: rejected rule (opasig -> empty) in state 36
WARNING: reduce/reduce conflict in state 60 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 60
WARNING: reduce/reduce conflict in state 61 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 61
WARNING: reduce/reduce conflict in state 94 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 94
WARNING: reduce/reduce conflict in state 104 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 104
WARNING: reduce/reduce conflict in state 107 resolved using rule (parenemp -> PAREN_EMPIEZA)
WARNING: rejected rule (empty -> <empty>) in state 107
WARNING: reduce/reduce conflict in state 109 resolved using rule (udim -> empty)
WARNING: rejected rule (multi -> empty) in state 109
WARNING: reduce/reduce conflict in state 150 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 150
WARNING: reduce/reduce conflict in state 161 resolved using rule (signo -> termino)
WARNING: rejected rule (signo -> MENOS termino) in state 161
WARNING: reduce/reduce conflict in state 238 resolved using rule (estatuto -> empty)
WARNING: rejected rule (bckesp -> empty) in state 238
WARNING: Rule (opasig -> empty) is never reduced
WARNING: Rule (bckesp -> empty) is never reduced
