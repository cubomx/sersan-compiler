Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMA
    COMMENT
    CORCHETE_EMPIEZA
    CORCHETE_TERMINA
    CTE_ALFA
    CTE_ENTERA_NON_NUM
    CTE_REAL_ENDING_BAD
    CTE_REAL_NON_NUM
    OP_ARIT
    OP_LOG
    OP_REL
    PAL_RES
    PAREN_EMPIEZA
    PAREN_TERMINA
    PUNTO
    PUNTOS_DOBLES
    TIPO
    VARIABLES

Grammar

Rule 0     S' -> constantes
Rule 1     constantes -> CONSTANTES IDENT OP_ASIG cantidad PUNTO_COMA gpoconst
Rule 2     cantidad -> CTE_ENTERA
Rule 3     cantidad -> CTE_REAL
Rule 4     gpoconst -> constantes
Rule 5     gpoconst -> empty
Rule 6     empty -> <empty>

Terminals, with rules where they appear

COMA                 : 
COMMENT              : 
CONSTANTES           : 1
CORCHETE_EMPIEZA     : 
CORCHETE_TERMINA     : 
CTE_ALFA             : 
CTE_ENTERA           : 2
CTE_ENTERA_NON_NUM   : 
CTE_REAL             : 3
CTE_REAL_ENDING_BAD  : 
CTE_REAL_NON_NUM     : 
IDENT                : 1
OP_ARIT              : 
OP_ASIG              : 1
OP_LOG               : 
OP_REL               : 
PAL_RES              : 
PAREN_EMPIEZA        : 
PAREN_TERMINA        : 
PUNTO                : 
PUNTOS_DOBLES        : 
PUNTO_COMA           : 1
TIPO                 : 
VARIABLES            : 
error                : 

Nonterminals, with rules where they appear

cantidad             : 1
constantes           : 4 0
empty                : 5
gpoconst             : 1

Parsing method: LALR

state 0

    (0) S' -> . constantes
    (1) constantes -> . CONSTANTES IDENT OP_ASIG cantidad PUNTO_COMA gpoconst

    CONSTANTES      shift and go to state 2

    constantes                     shift and go to state 1

state 1

    (0) S' -> constantes .



state 2

    (1) constantes -> CONSTANTES . IDENT OP_ASIG cantidad PUNTO_COMA gpoconst

    IDENT           shift and go to state 3


state 3

    (1) constantes -> CONSTANTES IDENT . OP_ASIG cantidad PUNTO_COMA gpoconst

    OP_ASIG         shift and go to state 4


state 4

    (1) constantes -> CONSTANTES IDENT OP_ASIG . cantidad PUNTO_COMA gpoconst
    (2) cantidad -> . CTE_ENTERA
    (3) cantidad -> . CTE_REAL

    CTE_ENTERA      shift and go to state 6
    CTE_REAL        shift and go to state 7

    cantidad                       shift and go to state 5

state 5

    (1) constantes -> CONSTANTES IDENT OP_ASIG cantidad . PUNTO_COMA gpoconst

    PUNTO_COMA      shift and go to state 8


state 6

    (2) cantidad -> CTE_ENTERA .

    PUNTO_COMA      reduce using rule 2 (cantidad -> CTE_ENTERA .)


state 7

    (3) cantidad -> CTE_REAL .

    PUNTO_COMA      reduce using rule 3 (cantidad -> CTE_REAL .)


state 8

    (1) constantes -> CONSTANTES IDENT OP_ASIG cantidad PUNTO_COMA . gpoconst
    (4) gpoconst -> . constantes
    (5) gpoconst -> . empty
    (1) constantes -> . CONSTANTES IDENT OP_ASIG cantidad PUNTO_COMA gpoconst
    (6) empty -> .

    CONSTANTES      shift and go to state 2
    $end            reduce using rule 6 (empty -> .)

    gpoconst                       shift and go to state 9
    constantes                     shift and go to state 10
    empty                          shift and go to state 11

state 9

    (1) constantes -> CONSTANTES IDENT OP_ASIG cantidad PUNTO_COMA gpoconst .

    $end            reduce using rule 1 (constantes -> CONSTANTES IDENT OP_ASIG cantidad PUNTO_COMA gpoconst .)


state 10

    (4) gpoconst -> constantes .

    $end            reduce using rule 4 (gpoconst -> constantes .)


state 11

    (5) gpoconst -> empty .

    $end            reduce using rule 5 (gpoconst -> empty .)

