Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CTE_ENTERA_NON_NUM
    CTE_REAL_ENDING_BAD
    CTE_REAL_NON_NUM

Grammar

Rule 0     S' -> program
Rule 1     program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
Rule 2     variables -> VARIABLES gpovars
Rule 3     variables -> empty
Rule 4     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
Rule 5     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 6     gpovars -> empty
Rule 7     gpovars -> gpoids error TIPO PUNTO_COMA gpovars
Rule 8     gpovars -> gpoids error TIPO PUNTO_COMA
Rule 9     gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
Rule 10    gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA
Rule 11    gpoids -> IDENT dimens COMA gpoids
Rule 12    gpoids -> IDENT opasig COMA gpoids
Rule 13    gpoids -> IDENT dimens
Rule 14    gpoids -> IDENT COMA gpoids
Rule 15    gpoids -> IDENT dimens error gpoids
Rule 16    gpoids -> IDENT error gpoids
Rule 17    gpoids -> IDENT opasig error gpoids
Rule 18    gpoids -> empty
Rule 19    dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
Rule 20    dimens -> <empty>
Rule 21    dimens -> CORCHETE_EMPIEZA valor error dimens
Rule 22    dimens -> error valor CORCHETE_TERMINA dimens
Rule 23    opasig -> OP_ASIG CTE_ENTERA
Rule 24    opasig -> OP_ASIG IDENT
Rule 25    opasig -> empty
Rule 26    valor -> exprlog
Rule 27    constantes -> CONSTANTES grupoconst
Rule 28    constantes -> empty
Rule 29    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA
Rule 30    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
Rule 31    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
Rule 32    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
Rule 33    grupoconst -> empty
Rule 34    protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
Rule 35    protfuncproc -> empty
Rule 36    gpofuncproc -> protfunc
Rule 37    gpofuncproc -> protproc
Rule 38    gpofuncproc -> protproc gpofuncproc
Rule 39    gpofuncproc -> protfunc gpofuncproc
Rule 40    protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 41    protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 42    protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 43    protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 44    protproc -> empty
Rule 45    params -> gpopars PUNTOS_DOBLES TIPO otrospars
Rule 46    params -> empty
Rule 47    params -> gpopars PUNTOS_DOBLES error otrospars
Rule 48    params -> gpopars error TIPO otrospars
Rule 49    otrospars -> PUNTO_COMA params
Rule 50    otrospars -> empty
Rule 51    gpopars -> IDENT COMA gpopars
Rule 52    gpopars -> IDENT
Rule 53    funcproc -> procedimiento funcproc
Rule 54    funcproc -> funcion funcproc
Rule 55    funcproc -> empty
Rule 56    procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
Rule 57    funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
Rule 58    block -> estatuto puntoc block
Rule 59    block -> estatuto puntoc
Rule 60    puntoc -> PUNTO_COMA
Rule 61    block -> estatuto error
Rule 62    block -> estatuto error block
Rule 63    estatuto -> si
Rule 64    estatuto -> lfunc
Rule 65    estatuto -> LIMPIA
Rule 66    estatuto -> desde
Rule 67    estatuto -> repetir
Rule 68    estatuto -> mientras
Rule 69    estatuto -> cuando
Rule 70    estatuto -> regresa
Rule 71    estatuto -> asigna
Rule 72    estatuto -> imprime
Rule 73    estatuto -> imprimenl
Rule 74    estatuto -> lee
Rule 75    estatuto -> INTERRUMPE
Rule 76    estatuto -> CONTINUA
Rule 77    estatuto -> empty
Rule 78    si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
Rule 79    sino -> SINO bckesp
Rule 80    sino -> empty
Rule 81    bckesp -> estatuto
Rule 82    bckesp -> INICIO block FIN
Rule 83    bckesp -> <empty>
Rule 84    desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
Rule 85    desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
Rule 86    desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp
Rule 87    repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 88    mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp
Rule 89    asigna -> IDENT udim OP_ASIG exprlog
Rule 90    cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
Rule 91    otro -> OTRO PUNTOS_DOBLES bckesp
Rule 92    otro -> empty
Rule 93    gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea
Rule 94    gposea -> empty
Rule 95    gpoconst -> CTE_ALFA masgpoconst
Rule 96    masgpoconst -> COMA gpoconst
Rule 97    masgpoconst -> empty
Rule 98    regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 99    udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
Rule 100   udim -> empty
Rule 101   exprlog -> opy
Rule 102   exprlog -> opy O exprlog
Rule 103   opy -> opno
Rule 104   opy -> opno Y opy
Rule 105   opno -> oprel
Rule 106   opno -> NO oprel
Rule 107   oprel -> expr
Rule 108   oprel -> expr OP_REL oprel
Rule 109   expr -> multi
Rule 110   expr -> multi MAS expr
Rule 111   expr -> multi MENOS expr
Rule 112   multi -> expo
Rule 113   multi -> expo MULTI multi
Rule 114   multi -> expo DIV multi
Rule 115   multi -> expo MOD multi
Rule 116   multi -> empty
Rule 117   expo -> signo
Rule 118   expo -> signo POTENCIA expo
Rule 119   signo -> termino
Rule 120   signo -> MENOS termino
Rule 121   termino -> IDENT
Rule 122   termino -> IDENT udim
Rule 123   termino -> lfunc
Rule 124   termino -> CTE_ENTERA
Rule 125   termino -> CTE_REAL
Rule 126   termino -> CTE_ALFA
Rule 127   termino -> VERDADERO
Rule 128   termino -> FALSO
Rule 129   lfunc -> IDENT parenemp uparams PAREN_TERMINA
Rule 130   lfunc -> IDENT parenemp error PAREN_TERMINA
Rule 131   parenemp -> PAREN_EMPIEZA
Rule 132   imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 133   imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 134   imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error
Rule 135   lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
Rule 136   lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
Rule 137   gpoexp -> exprlog
Rule 138   gpoexp -> exprlog COMA gpoexp
Rule 139   uparams -> exprlog
Rule 140   uparams -> exprlog COMA uparams
Rule 141   empty -> <empty>

Terminals, with rules where they appear

COMA                 : 11 12 14 51 96 138 140
COMMENT              : 
CONSTANTES           : 27
CONTINUA             : 76
CORCHETE_EMPIEZA     : 19 21 99
CORCHETE_TERMINA     : 19 22 99
CTE_ALFA             : 95 126
CTE_ENTERA           : 23 30 32 84 85 124
CTE_ENTERA_NON_NUM   : 
CTE_REAL             : 29 31 125
CTE_REAL_ENDING_BAD  : 
CTE_REAL_NON_NUM     : 
CUANDO               : 90
CUMPLA               : 88
DE                   : 1 34 56 57 84 85 86 90
DECR                 : 84
DESDE                : 84 85 86
DIV                  : 114
EL                   : 84 85 86 90
FALSO                : 128
FIN                  : 1 34 56 57 82 90
FUNCION              : 40 41 57 57
HACER                : 78
HASTA                : 84 85 86 87
IDENT                : 11 12 13 14 15 16 17 24 29 30 31 32 40 42 51 52 56 57 89 90 121 122 129 130 135 136
IMPRIME              : 132
IMPRIMENL            : 133 134
INCR                 : 85
INICIO               : 56 57 82 90
INTERRUMPE           : 75
LEE                  : 135 136
LIMPIA               : 65
MAS                  : 110
MENOS                : 111 120
MIENTRAS             : 88
MOD                  : 115
MULTI                : 113
NO                   : 106
O                    : 102
OP_ASIG              : 23 24 29 30 31 32 89
OP_REL               : 108
OTRO                 : 91
PAREN_EMPIEZA        : 40 41 42 43 56 57 78 87 98 131 132 133 134 135 136
PAREN_TERMINA        : 40 41 42 43 56 57 78 87 98 129 130 132 133 135 136
POTENCIA             : 118
PROCEDIMIENTO        : 42 43 56 56
PROGRAMA             : 1 1
PROTOTIPOS           : 34 34
PUNTO                : 1
PUNTOS_DOBLES        : 4 5 9 10 40 41 45 47 57 91 93
PUNTO_COMA           : 4 5 7 8 9 10 29 30 31 32 34 40 41 42 43 49 56 57 60
QUE                  : 87 88
REGRESA              : 98
REPETIR              : 87
SE                   : 88
SEA                  : 93
SI                   : 78
SINO                 : 79
TIPO                 : 4 5 7 8 40 41 45 48 57
VALOR                : 84 85 86 90
VARIABLES            : 2
VERDADERO            : 127
Y                    : 104
error                : 7 8 9 10 15 16 17 21 22 41 43 47 48 61 62 86 130 134

Nonterminals, with rules where they appear

asigna               : 71 84 85 86
bckesp               : 78 79 84 85 86 88 91 93
block                : 1 56 57 58 62 82 87
constantes           : 1
cuando               : 69
desde                : 66
dimens               : 11 13 15 19 21 22 136
empty                : 3 6 18 25 28 33 35 44 46 50 55 77 80 92 94 97 100 116
estatuto             : 58 59 61 62 81
expo                 : 112 113 114 115 118
expr                 : 84 85 86 99 107 108 110 111
exprlog              : 26 78 87 88 89 98 102 137 138 139 140
funcion              : 54
funcproc             : 1 53 54
gpoconst             : 93 96
gpoexp               : 132 133 134 138
gpofuncproc          : 34 38 39
gpoids               : 4 5 7 8 9 10 11 12 14 15 16 17
gpopars              : 45 47 48 51
gposea               : 90 93
gpovars              : 2 4 7 9
grupoconst           : 27 31 32
imprime              : 72
imprimenl            : 73
lee                  : 74
lfunc                : 64 123
masgpoconst          : 95
mientras             : 68
multi                : 109 110 111 113 114 115
opasig               : 12 17
opno                 : 103 104
oprel                : 105 106 108
opy                  : 101 102 104
otro                 : 90
otrospars            : 45 47 48
params               : 40 41 42 43 49 56 57
parenemp             : 129 130
procedimiento        : 53
program              : 0
protfunc             : 36 39
protfuncproc         : 1
protproc             : 37 38
puntoc               : 58 59
regresa              : 70
repetir              : 67
si                   : 63
signo                : 117 118
sino                 : 78
termino              : 119 120
udim                 : 89 99 122
uparams              : 129 140
valor                : 19 21 22
variables            : 1 56 57

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (27) constantes -> . CONSTANTES grupoconst
    (28) constantes -> . empty
    (141) empty -> .

    CONSTANTES      shift and go to state 3
    VARIABLES       reduce using rule 141 (empty -> .)
    PROTOTIPOS      reduce using rule 141 (empty -> .)
    PROCEDIMIENTO   reduce using rule 141 (empty -> .)
    FUNCION         reduce using rule 141 (empty -> .)
    PROGRAMA        reduce using rule 141 (empty -> .)

    program                        shift and go to state 1
    constantes                     shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> constantes . variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (141) empty -> .

    VARIABLES       shift and go to state 6
    PROTOTIPOS      reduce using rule 141 (empty -> .)
    PROCEDIMIENTO   reduce using rule 141 (empty -> .)
    FUNCION         reduce using rule 141 (empty -> .)
    PROGRAMA        reduce using rule 141 (empty -> .)

    variables                      shift and go to state 5
    empty                          shift and go to state 7

state 3

    (27) constantes -> CONSTANTES . grupoconst
    (29) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (30) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (31) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (32) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (33) grupoconst -> . empty
    (141) empty -> .

    IDENT           shift and go to state 9
    VARIABLES       reduce using rule 141 (empty -> .)
    PROTOTIPOS      reduce using rule 141 (empty -> .)
    PROCEDIMIENTO   reduce using rule 141 (empty -> .)
    FUNCION         reduce using rule 141 (empty -> .)
    PROGRAMA        reduce using rule 141 (empty -> .)

    grupoconst                     shift and go to state 8
    empty                          shift and go to state 10

state 4

    (28) constantes -> empty .

    VARIABLES       reduce using rule 28 (constantes -> empty .)
    PROTOTIPOS      reduce using rule 28 (constantes -> empty .)
    PROCEDIMIENTO   reduce using rule 28 (constantes -> empty .)
    FUNCION         reduce using rule 28 (constantes -> empty .)
    PROGRAMA        reduce using rule 28 (constantes -> empty .)


state 5

    (1) program -> constantes variables . protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (34) protfuncproc -> . PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (35) protfuncproc -> . empty
    (141) empty -> .

    PROTOTIPOS      shift and go to state 12
    PROCEDIMIENTO   reduce using rule 141 (empty -> .)
    FUNCION         reduce using rule 141 (empty -> .)
    PROGRAMA        reduce using rule 141 (empty -> .)

    protfuncproc                   shift and go to state 11
    empty                          shift and go to state 13

state 6

    (2) variables -> VARIABLES . gpovars
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT dimens COMA gpoids
    (12) gpoids -> . IDENT opasig COMA gpoids
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids
    (15) gpoids -> . IDENT dimens error gpoids
    (16) gpoids -> . IDENT error gpoids
    (17) gpoids -> . IDENT opasig error gpoids
    (18) gpoids -> . empty
    (141) empty -> .

    IDENT           shift and go to state 17
    PROTOTIPOS      reduce using rule 141 (empty -> .)
    PROCEDIMIENTO   reduce using rule 141 (empty -> .)
    FUNCION         reduce using rule 141 (empty -> .)
    PROGRAMA        reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)

    gpovars                        shift and go to state 14
    gpoids                         shift and go to state 15
    empty                          shift and go to state 16

state 7

    (3) variables -> empty .

    PROTOTIPOS      reduce using rule 3 (variables -> empty .)
    PROCEDIMIENTO   reduce using rule 3 (variables -> empty .)
    FUNCION         reduce using rule 3 (variables -> empty .)
    PROGRAMA        reduce using rule 3 (variables -> empty .)
    INICIO          reduce using rule 3 (variables -> empty .)


state 8

    (27) constantes -> CONSTANTES grupoconst .

    VARIABLES       reduce using rule 27 (constantes -> CONSTANTES grupoconst .)
    PROTOTIPOS      reduce using rule 27 (constantes -> CONSTANTES grupoconst .)
    PROCEDIMIENTO   reduce using rule 27 (constantes -> CONSTANTES grupoconst .)
    FUNCION         reduce using rule 27 (constantes -> CONSTANTES grupoconst .)
    PROGRAMA        reduce using rule 27 (constantes -> CONSTANTES grupoconst .)


state 9

    (29) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA
    (30) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA
    (31) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (32) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst

    OP_ASIG         shift and go to state 18


state 10

    (33) grupoconst -> empty .

    VARIABLES       reduce using rule 33 (grupoconst -> empty .)
    PROTOTIPOS      reduce using rule 33 (grupoconst -> empty .)
    PROCEDIMIENTO   reduce using rule 33 (grupoconst -> empty .)
    FUNCION         reduce using rule 33 (grupoconst -> empty .)
    PROGRAMA        reduce using rule 33 (grupoconst -> empty .)


state 11

    (1) program -> constantes variables protfuncproc . funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (53) funcproc -> . procedimiento funcproc
    (54) funcproc -> . funcion funcproc
    (55) funcproc -> . empty
    (56) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (57) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (141) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 141 (empty -> .)

    funcproc                       shift and go to state 19
    procedimiento                  shift and go to state 20
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 12

    (34) protfuncproc -> PROTOTIPOS . gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (36) gpofuncproc -> . protfunc
    (37) gpofuncproc -> . protproc
    (38) gpofuncproc -> . protproc gpofuncproc
    (39) gpofuncproc -> . protfunc gpofuncproc
    (40) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (41) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (42) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (43) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (44) protproc -> . empty
    (141) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29
    FIN             reduce using rule 141 (empty -> .)

  ! FUNCION         [ reduce using rule 141 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 141 (empty -> .) ]

    gpofuncproc                    shift and go to state 25
    protfunc                       shift and go to state 26
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 13

    (35) protfuncproc -> empty .

    PROCEDIMIENTO   reduce using rule 35 (protfuncproc -> empty .)
    FUNCION         reduce using rule 35 (protfuncproc -> empty .)
    PROGRAMA        reduce using rule 35 (protfuncproc -> empty .)


state 14

    (2) variables -> VARIABLES gpovars .

    PROTOTIPOS      reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROCEDIMIENTO   reduce using rule 2 (variables -> VARIABLES gpovars .)
    FUNCION         reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROGRAMA        reduce using rule 2 (variables -> VARIABLES gpovars .)
    INICIO          reduce using rule 2 (variables -> VARIABLES gpovars .)


state 15

    (4) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA
    (7) gpovars -> gpoids . error TIPO PUNTO_COMA gpovars
    (8) gpovars -> gpoids . error TIPO PUNTO_COMA
    (9) gpovars -> gpoids . PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> gpoids . PUNTOS_DOBLES error PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 31
    error           shift and go to state 32


state 16

    (6) gpovars -> empty .
    (18) gpoids -> empty .

    PROTOTIPOS      reduce using rule 6 (gpovars -> empty .)
    PROCEDIMIENTO   reduce using rule 6 (gpovars -> empty .)
    FUNCION         reduce using rule 6 (gpovars -> empty .)
    PROGRAMA        reduce using rule 6 (gpovars -> empty .)
    INICIO          reduce using rule 6 (gpovars -> empty .)
    PUNTOS_DOBLES   reduce using rule 18 (gpoids -> empty .)
    error           reduce using rule 18 (gpoids -> empty .)


state 17

    (11) gpoids -> IDENT . dimens COMA gpoids
    (12) gpoids -> IDENT . opasig COMA gpoids
    (13) gpoids -> IDENT . dimens
    (14) gpoids -> IDENT . COMA gpoids
    (15) gpoids -> IDENT . dimens error gpoids
    (16) gpoids -> IDENT . error gpoids
    (17) gpoids -> IDENT . opasig error gpoids
    (19) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (20) dimens -> .
    (21) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (22) dimens -> . error valor CORCHETE_TERMINA dimens
    (23) opasig -> . OP_ASIG CTE_ENTERA
    (24) opasig -> . OP_ASIG IDENT
    (25) opasig -> . empty
    (141) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
    COMA            shift and go to state 34
    error           shift and go to state 36
    CORCHETE_EMPIEZA shift and go to state 37
    PUNTOS_DOBLES   reduce using rule 20 (dimens -> .)
    OP_ASIG         shift and go to state 38

  ! COMA            [ reduce using rule 20 (dimens -> .) ]
  ! error           [ reduce using rule 20 (dimens -> .) ]
  ! COMA            [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]

    dimens                         shift and go to state 33
    opasig                         shift and go to state 35
    empty                          shift and go to state 39

state 18

    (29) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA
    (30) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA
    (31) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA grupoconst
    (32) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA grupoconst

    CTE_REAL        shift and go to state 40
    CTE_ENTERA      shift and go to state 41


state 19

    (1) program -> constantes variables protfuncproc funcproc . PROGRAMA block FIN DE PROGRAMA PUNTO

    PROGRAMA        shift and go to state 42


state 20

    (53) funcproc -> procedimiento . funcproc
    (53) funcproc -> . procedimiento funcproc
    (54) funcproc -> . funcion funcproc
    (55) funcproc -> . empty
    (56) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (57) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (141) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 141 (empty -> .)

    procedimiento                  shift and go to state 20
    funcproc                       shift and go to state 43
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 21

    (54) funcproc -> funcion . funcproc
    (53) funcproc -> . procedimiento funcproc
    (54) funcproc -> . funcion funcproc
    (55) funcproc -> . empty
    (56) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (57) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (141) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 141 (empty -> .)

    funcion                        shift and go to state 21
    funcproc                       shift and go to state 44
    procedimiento                  shift and go to state 20
    empty                          shift and go to state 22

state 22

    (55) funcproc -> empty .

    PROGRAMA        reduce using rule 55 (funcproc -> empty .)


state 23

    (56) procedimiento -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    IDENT           shift and go to state 45


state 24

    (57) funcion -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    IDENT           shift and go to state 46


state 25

    (34) protfuncproc -> PROTOTIPOS gpofuncproc . FIN DE PROTOTIPOS PUNTO_COMA

    FIN             shift and go to state 47


state 26

    (36) gpofuncproc -> protfunc .
    (39) gpofuncproc -> protfunc . gpofuncproc
    (36) gpofuncproc -> . protfunc
    (37) gpofuncproc -> . protproc
    (38) gpofuncproc -> . protproc gpofuncproc
    (39) gpofuncproc -> . protfunc gpofuncproc
    (40) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (41) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (42) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (43) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (44) protproc -> . empty
    (141) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 36 (gpofuncproc -> protfunc .)
    FIN             reduce using rule 36 (gpofuncproc -> protfunc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 141 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 141 (empty -> .) ]
  ! FIN             [ reduce using rule 141 (empty -> .) ]

    protfunc                       shift and go to state 26
    gpofuncproc                    shift and go to state 48
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 27

    (37) gpofuncproc -> protproc .
    (38) gpofuncproc -> protproc . gpofuncproc
    (36) gpofuncproc -> . protfunc
    (37) gpofuncproc -> . protproc
    (38) gpofuncproc -> . protproc gpofuncproc
    (39) gpofuncproc -> . protfunc gpofuncproc
    (40) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (41) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (42) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (43) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (44) protproc -> . empty
    (141) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 37 (gpofuncproc -> protproc .)
    FIN             reduce using rule 37 (gpofuncproc -> protproc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 141 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 141 (empty -> .) ]
  ! FIN             [ reduce using rule 141 (empty -> .) ]

    protproc                       shift and go to state 27
    gpofuncproc                    shift and go to state 49
    protfunc                       shift and go to state 26
    empty                          shift and go to state 30

state 28

    (40) protfunc -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (41) protfunc -> FUNCION . error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    IDENT           shift and go to state 50
    error           shift and go to state 51


state 29

    (42) protproc -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (43) protproc -> PROCEDIMIENTO . error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    IDENT           shift and go to state 52
    error           shift and go to state 53


state 30

    (44) protproc -> empty .

    FUNCION         reduce using rule 44 (protproc -> empty .)
    PROCEDIMIENTO   reduce using rule 44 (protproc -> empty .)
    FIN             reduce using rule 44 (protproc -> empty .)


state 31

    (4) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA
    (9) gpovars -> gpoids PUNTOS_DOBLES . error PUNTO_COMA gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES . error PUNTO_COMA

    TIPO            shift and go to state 54
    error           shift and go to state 55


state 32

    (7) gpovars -> gpoids error . TIPO PUNTO_COMA gpovars
    (8) gpovars -> gpoids error . TIPO PUNTO_COMA

    TIPO            shift and go to state 56


state 33

    (11) gpoids -> IDENT dimens . COMA gpoids
    (13) gpoids -> IDENT dimens .
    (15) gpoids -> IDENT dimens . error gpoids

    COMA            shift and go to state 57
    PUNTOS_DOBLES   reduce using rule 13 (gpoids -> IDENT dimens .)
    error           reduce using rule 13 (gpoids -> IDENT dimens .)

  ! error           [ shift and go to state 58 ]


state 34

    (14) gpoids -> IDENT COMA . gpoids
    (11) gpoids -> . IDENT dimens COMA gpoids
    (12) gpoids -> . IDENT opasig COMA gpoids
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids
    (15) gpoids -> . IDENT dimens error gpoids
    (16) gpoids -> . IDENT error gpoids
    (17) gpoids -> . IDENT opasig error gpoids
    (18) gpoids -> . empty
    (141) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)

    gpoids                         shift and go to state 59
    empty                          shift and go to state 60

state 35

    (12) gpoids -> IDENT opasig . COMA gpoids
    (17) gpoids -> IDENT opasig . error gpoids

    COMA            shift and go to state 61
    error           shift and go to state 62


state 36

    (16) gpoids -> IDENT error . gpoids
    (22) dimens -> error . valor CORCHETE_TERMINA dimens
    (11) gpoids -> . IDENT dimens COMA gpoids
    (12) gpoids -> . IDENT opasig COMA gpoids
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids
    (15) gpoids -> . IDENT dimens error gpoids
    (16) gpoids -> . IDENT error gpoids
    (17) gpoids -> . IDENT opasig error gpoids
    (18) gpoids -> . empty
    (26) valor -> . exprlog
    (141) empty -> .
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    IDENT           shift and go to state 63
    PUNTOS_DOBLES   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    NO              shift and go to state 71
    MENOS           shift and go to state 74
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    gpoids                         shift and go to state 64
    valor                          shift and go to state 65
    empty                          shift and go to state 66
    exprlog                        shift and go to state 67
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 37

    (19) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (21) dimens -> CORCHETE_EMPIEZA . valor error dimens
    (26) valor -> . exprlog
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    valor                          shift and go to state 84
    exprlog                        shift and go to state 67
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 38

    (23) opasig -> OP_ASIG . CTE_ENTERA
    (24) opasig -> OP_ASIG . IDENT

    CTE_ENTERA      shift and go to state 87
    IDENT           shift and go to state 88


state 39

    (25) opasig -> empty .

    COMA            reduce using rule 25 (opasig -> empty .)
    error           reduce using rule 25 (opasig -> empty .)


state 40

    (29) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA
    (31) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 89


state 41

    (30) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA
    (32) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 90


state 42

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA . block FIN DE PROGRAMA PUNTO
    (58) block -> . estatuto puntoc block
    (59) block -> . estatuto puntoc
    (61) block -> . estatuto error
    (62) block -> . estatuto error block
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117
    error           reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)

    block                          shift and go to state 91
    estatuto                       shift and go to state 92
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 43

    (53) funcproc -> procedimiento funcproc .

    PROGRAMA        reduce using rule 53 (funcproc -> procedimiento funcproc .)


state 44

    (54) funcproc -> funcion funcproc .

    PROGRAMA        reduce using rule 54 (funcproc -> funcion funcproc .)


state 45

    (56) procedimiento -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 118


state 46

    (57) funcion -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 119


state 47

    (34) protfuncproc -> PROTOTIPOS gpofuncproc FIN . DE PROTOTIPOS PUNTO_COMA

    DE              shift and go to state 120


state 48

    (39) gpofuncproc -> protfunc gpofuncproc .

    FIN             reduce using rule 39 (gpofuncproc -> protfunc gpofuncproc .)


state 49

    (38) gpofuncproc -> protproc gpofuncproc .

    FIN             reduce using rule 38 (gpofuncproc -> protproc gpofuncproc .)


state 50

    (40) protfunc -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 121


state 51

    (41) protfunc -> FUNCION error . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 122


state 52

    (42) protproc -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 123


state 53

    (43) protproc -> PROCEDIMIENTO error . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 124


state 54

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 125


state 55

    (9) gpovars -> gpoids PUNTOS_DOBLES error . PUNTO_COMA gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES error . PUNTO_COMA

    PUNTO_COMA      shift and go to state 126


state 56

    (7) gpovars -> gpoids error TIPO . PUNTO_COMA gpovars
    (8) gpovars -> gpoids error TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 127


state 57

    (11) gpoids -> IDENT dimens COMA . gpoids
    (11) gpoids -> . IDENT dimens COMA gpoids
    (12) gpoids -> . IDENT opasig COMA gpoids
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids
    (15) gpoids -> . IDENT dimens error gpoids
    (16) gpoids -> . IDENT error gpoids
    (17) gpoids -> . IDENT opasig error gpoids
    (18) gpoids -> . empty
    (141) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)

    gpoids                         shift and go to state 128
    empty                          shift and go to state 60

state 58

    (15) gpoids -> IDENT dimens error . gpoids
    (11) gpoids -> . IDENT dimens COMA gpoids
    (12) gpoids -> . IDENT opasig COMA gpoids
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids
    (15) gpoids -> . IDENT dimens error gpoids
    (16) gpoids -> . IDENT error gpoids
    (17) gpoids -> . IDENT opasig error gpoids
    (18) gpoids -> . empty
    (141) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)

    gpoids                         shift and go to state 129
    empty                          shift and go to state 60

state 59

    (14) gpoids -> IDENT COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 14 (gpoids -> IDENT COMA gpoids .)
    error           reduce using rule 14 (gpoids -> IDENT COMA gpoids .)


state 60

    (18) gpoids -> empty .

    PUNTOS_DOBLES   reduce using rule 18 (gpoids -> empty .)
    error           reduce using rule 18 (gpoids -> empty .)


state 61

    (12) gpoids -> IDENT opasig COMA . gpoids
    (11) gpoids -> . IDENT dimens COMA gpoids
    (12) gpoids -> . IDENT opasig COMA gpoids
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids
    (15) gpoids -> . IDENT dimens error gpoids
    (16) gpoids -> . IDENT error gpoids
    (17) gpoids -> . IDENT opasig error gpoids
    (18) gpoids -> . empty
    (141) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)

    gpoids                         shift and go to state 130
    empty                          shift and go to state 60

state 62

    (17) gpoids -> IDENT opasig error . gpoids
    (11) gpoids -> . IDENT dimens COMA gpoids
    (12) gpoids -> . IDENT opasig COMA gpoids
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids
    (15) gpoids -> . IDENT dimens error gpoids
    (16) gpoids -> . IDENT error gpoids
    (17) gpoids -> . IDENT opasig error gpoids
    (18) gpoids -> . empty
    (141) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)

    gpoids                         shift and go to state 131
    empty                          shift and go to state 60

state 63

    (11) gpoids -> IDENT . dimens COMA gpoids
    (12) gpoids -> IDENT . opasig COMA gpoids
    (13) gpoids -> IDENT . dimens
    (14) gpoids -> IDENT . COMA gpoids
    (15) gpoids -> IDENT . dimens error gpoids
    (16) gpoids -> IDENT . error gpoids
    (17) gpoids -> IDENT . opasig error gpoids
    (121) termino -> IDENT .
    (122) termino -> IDENT . udim
    (129) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (130) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (19) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (20) dimens -> .
    (21) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (22) dimens -> . error valor CORCHETE_TERMINA dimens
    (23) opasig -> . OP_ASIG CTE_ENTERA
    (24) opasig -> . OP_ASIG IDENT
    (25) opasig -> . empty
    (99) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (100) udim -> . empty
    (131) parenemp -> . PAREN_EMPIEZA
    (141) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for MAS resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for MENOS resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 121 (termino -> IDENT .)
    COMA            shift and go to state 34
    error           shift and go to state 36
    POTENCIA        reduce using rule 121 (termino -> IDENT .)
    MULTI           reduce using rule 121 (termino -> IDENT .)
    DIV             reduce using rule 121 (termino -> IDENT .)
    MOD             reduce using rule 121 (termino -> IDENT .)
    MAS             reduce using rule 121 (termino -> IDENT .)
    MENOS           reduce using rule 121 (termino -> IDENT .)
    OP_REL          reduce using rule 121 (termino -> IDENT .)
    Y               reduce using rule 121 (termino -> IDENT .)
    O               reduce using rule 121 (termino -> IDENT .)
    CORCHETE_TERMINA reduce using rule 121 (termino -> IDENT .)
    CORCHETE_EMPIEZA shift and go to state 134
    PUNTOS_DOBLES   reduce using rule 20 (dimens -> .)
    OP_ASIG         shift and go to state 38
    PAREN_EMPIEZA   shift and go to state 136

  ! COMA            [ reduce using rule 20 (dimens -> .) ]
  ! error           [ reduce using rule 20 (dimens -> .) ]
  ! COMA            [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 141 (empty -> .) ]
  ! MULTI           [ reduce using rule 141 (empty -> .) ]
  ! DIV             [ reduce using rule 141 (empty -> .) ]
  ! MOD             [ reduce using rule 141 (empty -> .) ]
  ! MAS             [ reduce using rule 141 (empty -> .) ]
  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! OP_REL          [ reduce using rule 141 (empty -> .) ]
  ! Y               [ reduce using rule 141 (empty -> .) ]
  ! O               [ reduce using rule 141 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 141 (empty -> .) ]

    dimens                         shift and go to state 33
    opasig                         shift and go to state 35
    udim                           shift and go to state 132
    parenemp                       shift and go to state 133
    empty                          shift and go to state 135

state 64

    (16) gpoids -> IDENT error gpoids .

    PUNTOS_DOBLES   reduce using rule 16 (gpoids -> IDENT error gpoids .)
    error           reduce using rule 16 (gpoids -> IDENT error gpoids .)


state 65

    (22) dimens -> error valor . CORCHETE_TERMINA dimens

    CORCHETE_TERMINA shift and go to state 137


state 66

    (18) gpoids -> empty .
    (116) multi -> empty .

    PUNTOS_DOBLES   reduce using rule 18 (gpoids -> empty .)
    error           reduce using rule 18 (gpoids -> empty .)
    MAS             reduce using rule 116 (multi -> empty .)
    MENOS           reduce using rule 116 (multi -> empty .)
    OP_REL          reduce using rule 116 (multi -> empty .)
    Y               reduce using rule 116 (multi -> empty .)
    O               reduce using rule 116 (multi -> empty .)
    CORCHETE_TERMINA reduce using rule 116 (multi -> empty .)


state 67

    (26) valor -> exprlog .

    CORCHETE_TERMINA reduce using rule 26 (valor -> exprlog .)
    error           reduce using rule 26 (valor -> exprlog .)


state 68

    (101) exprlog -> opy .
    (102) exprlog -> opy . O exprlog

    CORCHETE_TERMINA reduce using rule 101 (exprlog -> opy .)
    error           reduce using rule 101 (exprlog -> opy .)
    COMA            reduce using rule 101 (exprlog -> opy .)
    PAREN_TERMINA   reduce using rule 101 (exprlog -> opy .)
    PUNTO_COMA      reduce using rule 101 (exprlog -> opy .)
    HASTA           reduce using rule 101 (exprlog -> opy .)
    SINO            reduce using rule 101 (exprlog -> opy .)
    FIN             reduce using rule 101 (exprlog -> opy .)
    SEA             reduce using rule 101 (exprlog -> opy .)
    OTRO            reduce using rule 101 (exprlog -> opy .)
    INICIO          reduce using rule 101 (exprlog -> opy .)
    LIMPIA          reduce using rule 101 (exprlog -> opy .)
    INTERRUMPE      reduce using rule 101 (exprlog -> opy .)
    CONTINUA        reduce using rule 101 (exprlog -> opy .)
    SI              reduce using rule 101 (exprlog -> opy .)
    IDENT           reduce using rule 101 (exprlog -> opy .)
    DESDE           reduce using rule 101 (exprlog -> opy .)
    REPETIR         reduce using rule 101 (exprlog -> opy .)
    MIENTRAS        reduce using rule 101 (exprlog -> opy .)
    CUANDO          reduce using rule 101 (exprlog -> opy .)
    REGRESA         reduce using rule 101 (exprlog -> opy .)
    IMPRIME         reduce using rule 101 (exprlog -> opy .)
    IMPRIMENL       reduce using rule 101 (exprlog -> opy .)
    LEE             reduce using rule 101 (exprlog -> opy .)
    O               shift and go to state 138


state 69

    (103) opy -> opno .
    (104) opy -> opno . Y opy

    O               reduce using rule 103 (opy -> opno .)
    CORCHETE_TERMINA reduce using rule 103 (opy -> opno .)
    error           reduce using rule 103 (opy -> opno .)
    COMA            reduce using rule 103 (opy -> opno .)
    PAREN_TERMINA   reduce using rule 103 (opy -> opno .)
    PUNTO_COMA      reduce using rule 103 (opy -> opno .)
    HASTA           reduce using rule 103 (opy -> opno .)
    SINO            reduce using rule 103 (opy -> opno .)
    FIN             reduce using rule 103 (opy -> opno .)
    SEA             reduce using rule 103 (opy -> opno .)
    OTRO            reduce using rule 103 (opy -> opno .)
    INICIO          reduce using rule 103 (opy -> opno .)
    LIMPIA          reduce using rule 103 (opy -> opno .)
    INTERRUMPE      reduce using rule 103 (opy -> opno .)
    CONTINUA        reduce using rule 103 (opy -> opno .)
    SI              reduce using rule 103 (opy -> opno .)
    IDENT           reduce using rule 103 (opy -> opno .)
    DESDE           reduce using rule 103 (opy -> opno .)
    REPETIR         reduce using rule 103 (opy -> opno .)
    MIENTRAS        reduce using rule 103 (opy -> opno .)
    CUANDO          reduce using rule 103 (opy -> opno .)
    REGRESA         reduce using rule 103 (opy -> opno .)
    IMPRIME         reduce using rule 103 (opy -> opno .)
    IMPRIMENL       reduce using rule 103 (opy -> opno .)
    LEE             reduce using rule 103 (opy -> opno .)
    Y               shift and go to state 139


state 70

    (105) opno -> oprel .

    Y               reduce using rule 105 (opno -> oprel .)
    O               reduce using rule 105 (opno -> oprel .)
    CORCHETE_TERMINA reduce using rule 105 (opno -> oprel .)
    error           reduce using rule 105 (opno -> oprel .)
    COMA            reduce using rule 105 (opno -> oprel .)
    PAREN_TERMINA   reduce using rule 105 (opno -> oprel .)
    PUNTO_COMA      reduce using rule 105 (opno -> oprel .)
    HASTA           reduce using rule 105 (opno -> oprel .)
    SINO            reduce using rule 105 (opno -> oprel .)
    FIN             reduce using rule 105 (opno -> oprel .)
    SEA             reduce using rule 105 (opno -> oprel .)
    OTRO            reduce using rule 105 (opno -> oprel .)
    INICIO          reduce using rule 105 (opno -> oprel .)
    LIMPIA          reduce using rule 105 (opno -> oprel .)
    INTERRUMPE      reduce using rule 105 (opno -> oprel .)
    CONTINUA        reduce using rule 105 (opno -> oprel .)
    SI              reduce using rule 105 (opno -> oprel .)
    IDENT           reduce using rule 105 (opno -> oprel .)
    DESDE           reduce using rule 105 (opno -> oprel .)
    REPETIR         reduce using rule 105 (opno -> oprel .)
    MIENTRAS        reduce using rule 105 (opno -> oprel .)
    CUANDO          reduce using rule 105 (opno -> oprel .)
    REGRESA         reduce using rule 105 (opno -> oprel .)
    IMPRIME         reduce using rule 105 (opno -> oprel .)
    IMPRIMENL       reduce using rule 105 (opno -> oprel .)
    LEE             reduce using rule 105 (opno -> oprel .)


state 71

    (106) opno -> NO . oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    LIMPIA          reduce using rule 141 (empty -> .)
    INTERRUMPE      reduce using rule 141 (empty -> .)
    CONTINUA        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    DESDE           reduce using rule 141 (empty -> .)
    REPETIR         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    CUANDO          reduce using rule 141 (empty -> .)
    REGRESA         reduce using rule 141 (empty -> .)
    IMPRIME         reduce using rule 141 (empty -> .)
    IMPRIMENL       reduce using rule 141 (empty -> .)
    LEE             reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! IDENT           [ reduce using rule 141 (empty -> .) ]

    oprel                          shift and go to state 140
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 72

    (107) oprel -> expr .
    (108) oprel -> expr . OP_REL oprel

    Y               reduce using rule 107 (oprel -> expr .)
    O               reduce using rule 107 (oprel -> expr .)
    CORCHETE_TERMINA reduce using rule 107 (oprel -> expr .)
    error           reduce using rule 107 (oprel -> expr .)
    COMA            reduce using rule 107 (oprel -> expr .)
    PAREN_TERMINA   reduce using rule 107 (oprel -> expr .)
    PUNTO_COMA      reduce using rule 107 (oprel -> expr .)
    HASTA           reduce using rule 107 (oprel -> expr .)
    SINO            reduce using rule 107 (oprel -> expr .)
    FIN             reduce using rule 107 (oprel -> expr .)
    SEA             reduce using rule 107 (oprel -> expr .)
    OTRO            reduce using rule 107 (oprel -> expr .)
    INICIO          reduce using rule 107 (oprel -> expr .)
    LIMPIA          reduce using rule 107 (oprel -> expr .)
    INTERRUMPE      reduce using rule 107 (oprel -> expr .)
    CONTINUA        reduce using rule 107 (oprel -> expr .)
    SI              reduce using rule 107 (oprel -> expr .)
    IDENT           reduce using rule 107 (oprel -> expr .)
    DESDE           reduce using rule 107 (oprel -> expr .)
    REPETIR         reduce using rule 107 (oprel -> expr .)
    MIENTRAS        reduce using rule 107 (oprel -> expr .)
    CUANDO          reduce using rule 107 (oprel -> expr .)
    REGRESA         reduce using rule 107 (oprel -> expr .)
    IMPRIME         reduce using rule 107 (oprel -> expr .)
    IMPRIMENL       reduce using rule 107 (oprel -> expr .)
    LEE             reduce using rule 107 (oprel -> expr .)
    OP_REL          shift and go to state 141


state 73

    (109) expr -> multi .
    (110) expr -> multi . MAS expr
    (111) expr -> multi . MENOS expr

    OP_REL          reduce using rule 109 (expr -> multi .)
    Y               reduce using rule 109 (expr -> multi .)
    O               reduce using rule 109 (expr -> multi .)
    CORCHETE_TERMINA reduce using rule 109 (expr -> multi .)
    error           reduce using rule 109 (expr -> multi .)
    COMA            reduce using rule 109 (expr -> multi .)
    PAREN_TERMINA   reduce using rule 109 (expr -> multi .)
    PUNTO_COMA      reduce using rule 109 (expr -> multi .)
    HASTA           reduce using rule 109 (expr -> multi .)
    SINO            reduce using rule 109 (expr -> multi .)
    FIN             reduce using rule 109 (expr -> multi .)
    SEA             reduce using rule 109 (expr -> multi .)
    OTRO            reduce using rule 109 (expr -> multi .)
    INICIO          reduce using rule 109 (expr -> multi .)
    LIMPIA          reduce using rule 109 (expr -> multi .)
    INTERRUMPE      reduce using rule 109 (expr -> multi .)
    CONTINUA        reduce using rule 109 (expr -> multi .)
    SI              reduce using rule 109 (expr -> multi .)
    IDENT           reduce using rule 109 (expr -> multi .)
    DESDE           reduce using rule 109 (expr -> multi .)
    REPETIR         reduce using rule 109 (expr -> multi .)
    MIENTRAS        reduce using rule 109 (expr -> multi .)
    CUANDO          reduce using rule 109 (expr -> multi .)
    REGRESA         reduce using rule 109 (expr -> multi .)
    IMPRIME         reduce using rule 109 (expr -> multi .)
    IMPRIMENL       reduce using rule 109 (expr -> multi .)
    LEE             reduce using rule 109 (expr -> multi .)
    DECR            reduce using rule 109 (expr -> multi .)
    INCR            reduce using rule 109 (expr -> multi .)
    MAS             shift and go to state 142
    MENOS           shift and go to state 143


state 74

    (120) signo -> MENOS . termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

    termino                        shift and go to state 144
    lfunc                          shift and go to state 78

state 75

    (112) multi -> expo .
    (113) multi -> expo . MULTI multi
    (114) multi -> expo . DIV multi
    (115) multi -> expo . MOD multi

    MAS             reduce using rule 112 (multi -> expo .)
    MENOS           reduce using rule 112 (multi -> expo .)
    OP_REL          reduce using rule 112 (multi -> expo .)
    Y               reduce using rule 112 (multi -> expo .)
    O               reduce using rule 112 (multi -> expo .)
    CORCHETE_TERMINA reduce using rule 112 (multi -> expo .)
    error           reduce using rule 112 (multi -> expo .)
    COMA            reduce using rule 112 (multi -> expo .)
    PAREN_TERMINA   reduce using rule 112 (multi -> expo .)
    PUNTO_COMA      reduce using rule 112 (multi -> expo .)
    HASTA           reduce using rule 112 (multi -> expo .)
    SINO            reduce using rule 112 (multi -> expo .)
    FIN             reduce using rule 112 (multi -> expo .)
    SEA             reduce using rule 112 (multi -> expo .)
    OTRO            reduce using rule 112 (multi -> expo .)
    INICIO          reduce using rule 112 (multi -> expo .)
    LIMPIA          reduce using rule 112 (multi -> expo .)
    INTERRUMPE      reduce using rule 112 (multi -> expo .)
    CONTINUA        reduce using rule 112 (multi -> expo .)
    SI              reduce using rule 112 (multi -> expo .)
    IDENT           reduce using rule 112 (multi -> expo .)
    DESDE           reduce using rule 112 (multi -> expo .)
    REPETIR         reduce using rule 112 (multi -> expo .)
    MIENTRAS        reduce using rule 112 (multi -> expo .)
    CUANDO          reduce using rule 112 (multi -> expo .)
    REGRESA         reduce using rule 112 (multi -> expo .)
    IMPRIME         reduce using rule 112 (multi -> expo .)
    IMPRIMENL       reduce using rule 112 (multi -> expo .)
    LEE             reduce using rule 112 (multi -> expo .)
    DECR            reduce using rule 112 (multi -> expo .)
    INCR            reduce using rule 112 (multi -> expo .)
    MULTI           shift and go to state 145
    DIV             shift and go to state 146
    MOD             shift and go to state 147


state 76

    (117) expo -> signo .
    (118) expo -> signo . POTENCIA expo

    MULTI           reduce using rule 117 (expo -> signo .)
    DIV             reduce using rule 117 (expo -> signo .)
    MOD             reduce using rule 117 (expo -> signo .)
    MAS             reduce using rule 117 (expo -> signo .)
    MENOS           reduce using rule 117 (expo -> signo .)
    OP_REL          reduce using rule 117 (expo -> signo .)
    Y               reduce using rule 117 (expo -> signo .)
    O               reduce using rule 117 (expo -> signo .)
    CORCHETE_TERMINA reduce using rule 117 (expo -> signo .)
    error           reduce using rule 117 (expo -> signo .)
    COMA            reduce using rule 117 (expo -> signo .)
    PAREN_TERMINA   reduce using rule 117 (expo -> signo .)
    PUNTO_COMA      reduce using rule 117 (expo -> signo .)
    HASTA           reduce using rule 117 (expo -> signo .)
    SINO            reduce using rule 117 (expo -> signo .)
    FIN             reduce using rule 117 (expo -> signo .)
    SEA             reduce using rule 117 (expo -> signo .)
    OTRO            reduce using rule 117 (expo -> signo .)
    INICIO          reduce using rule 117 (expo -> signo .)
    LIMPIA          reduce using rule 117 (expo -> signo .)
    INTERRUMPE      reduce using rule 117 (expo -> signo .)
    CONTINUA        reduce using rule 117 (expo -> signo .)
    SI              reduce using rule 117 (expo -> signo .)
    IDENT           reduce using rule 117 (expo -> signo .)
    DESDE           reduce using rule 117 (expo -> signo .)
    REPETIR         reduce using rule 117 (expo -> signo .)
    MIENTRAS        reduce using rule 117 (expo -> signo .)
    CUANDO          reduce using rule 117 (expo -> signo .)
    REGRESA         reduce using rule 117 (expo -> signo .)
    IMPRIME         reduce using rule 117 (expo -> signo .)
    IMPRIMENL       reduce using rule 117 (expo -> signo .)
    LEE             reduce using rule 117 (expo -> signo .)
    DECR            reduce using rule 117 (expo -> signo .)
    INCR            reduce using rule 117 (expo -> signo .)
    POTENCIA        shift and go to state 148


state 77

    (119) signo -> termino .

    POTENCIA        reduce using rule 119 (signo -> termino .)
    MULTI           reduce using rule 119 (signo -> termino .)
    DIV             reduce using rule 119 (signo -> termino .)
    MOD             reduce using rule 119 (signo -> termino .)
    MAS             reduce using rule 119 (signo -> termino .)
    MENOS           reduce using rule 119 (signo -> termino .)
    OP_REL          reduce using rule 119 (signo -> termino .)
    Y               reduce using rule 119 (signo -> termino .)
    O               reduce using rule 119 (signo -> termino .)
    CORCHETE_TERMINA reduce using rule 119 (signo -> termino .)
    error           reduce using rule 119 (signo -> termino .)
    COMA            reduce using rule 119 (signo -> termino .)
    PAREN_TERMINA   reduce using rule 119 (signo -> termino .)
    PUNTO_COMA      reduce using rule 119 (signo -> termino .)
    HASTA           reduce using rule 119 (signo -> termino .)
    SINO            reduce using rule 119 (signo -> termino .)
    FIN             reduce using rule 119 (signo -> termino .)
    SEA             reduce using rule 119 (signo -> termino .)
    OTRO            reduce using rule 119 (signo -> termino .)
    INICIO          reduce using rule 119 (signo -> termino .)
    LIMPIA          reduce using rule 119 (signo -> termino .)
    INTERRUMPE      reduce using rule 119 (signo -> termino .)
    CONTINUA        reduce using rule 119 (signo -> termino .)
    SI              reduce using rule 119 (signo -> termino .)
    IDENT           reduce using rule 119 (signo -> termino .)
    DESDE           reduce using rule 119 (signo -> termino .)
    REPETIR         reduce using rule 119 (signo -> termino .)
    MIENTRAS        reduce using rule 119 (signo -> termino .)
    CUANDO          reduce using rule 119 (signo -> termino .)
    REGRESA         reduce using rule 119 (signo -> termino .)
    IMPRIME         reduce using rule 119 (signo -> termino .)
    IMPRIMENL       reduce using rule 119 (signo -> termino .)
    LEE             reduce using rule 119 (signo -> termino .)
    DECR            reduce using rule 119 (signo -> termino .)
    INCR            reduce using rule 119 (signo -> termino .)


state 78

    (123) termino -> lfunc .

    POTENCIA        reduce using rule 123 (termino -> lfunc .)
    MULTI           reduce using rule 123 (termino -> lfunc .)
    DIV             reduce using rule 123 (termino -> lfunc .)
    MOD             reduce using rule 123 (termino -> lfunc .)
    MAS             reduce using rule 123 (termino -> lfunc .)
    MENOS           reduce using rule 123 (termino -> lfunc .)
    OP_REL          reduce using rule 123 (termino -> lfunc .)
    Y               reduce using rule 123 (termino -> lfunc .)
    O               reduce using rule 123 (termino -> lfunc .)
    CORCHETE_TERMINA reduce using rule 123 (termino -> lfunc .)
    error           reduce using rule 123 (termino -> lfunc .)
    COMA            reduce using rule 123 (termino -> lfunc .)
    PAREN_TERMINA   reduce using rule 123 (termino -> lfunc .)
    PUNTO_COMA      reduce using rule 123 (termino -> lfunc .)
    HASTA           reduce using rule 123 (termino -> lfunc .)
    SINO            reduce using rule 123 (termino -> lfunc .)
    FIN             reduce using rule 123 (termino -> lfunc .)
    SEA             reduce using rule 123 (termino -> lfunc .)
    OTRO            reduce using rule 123 (termino -> lfunc .)
    INICIO          reduce using rule 123 (termino -> lfunc .)
    LIMPIA          reduce using rule 123 (termino -> lfunc .)
    INTERRUMPE      reduce using rule 123 (termino -> lfunc .)
    CONTINUA        reduce using rule 123 (termino -> lfunc .)
    SI              reduce using rule 123 (termino -> lfunc .)
    IDENT           reduce using rule 123 (termino -> lfunc .)
    DESDE           reduce using rule 123 (termino -> lfunc .)
    REPETIR         reduce using rule 123 (termino -> lfunc .)
    MIENTRAS        reduce using rule 123 (termino -> lfunc .)
    CUANDO          reduce using rule 123 (termino -> lfunc .)
    REGRESA         reduce using rule 123 (termino -> lfunc .)
    IMPRIME         reduce using rule 123 (termino -> lfunc .)
    IMPRIMENL       reduce using rule 123 (termino -> lfunc .)
    LEE             reduce using rule 123 (termino -> lfunc .)
    DECR            reduce using rule 123 (termino -> lfunc .)
    INCR            reduce using rule 123 (termino -> lfunc .)


state 79

    (124) termino -> CTE_ENTERA .

    POTENCIA        reduce using rule 124 (termino -> CTE_ENTERA .)
    MULTI           reduce using rule 124 (termino -> CTE_ENTERA .)
    DIV             reduce using rule 124 (termino -> CTE_ENTERA .)
    MOD             reduce using rule 124 (termino -> CTE_ENTERA .)
    MAS             reduce using rule 124 (termino -> CTE_ENTERA .)
    MENOS           reduce using rule 124 (termino -> CTE_ENTERA .)
    OP_REL          reduce using rule 124 (termino -> CTE_ENTERA .)
    Y               reduce using rule 124 (termino -> CTE_ENTERA .)
    O               reduce using rule 124 (termino -> CTE_ENTERA .)
    CORCHETE_TERMINA reduce using rule 124 (termino -> CTE_ENTERA .)
    error           reduce using rule 124 (termino -> CTE_ENTERA .)
    COMA            reduce using rule 124 (termino -> CTE_ENTERA .)
    PAREN_TERMINA   reduce using rule 124 (termino -> CTE_ENTERA .)
    PUNTO_COMA      reduce using rule 124 (termino -> CTE_ENTERA .)
    HASTA           reduce using rule 124 (termino -> CTE_ENTERA .)
    SINO            reduce using rule 124 (termino -> CTE_ENTERA .)
    FIN             reduce using rule 124 (termino -> CTE_ENTERA .)
    SEA             reduce using rule 124 (termino -> CTE_ENTERA .)
    OTRO            reduce using rule 124 (termino -> CTE_ENTERA .)
    INICIO          reduce using rule 124 (termino -> CTE_ENTERA .)
    LIMPIA          reduce using rule 124 (termino -> CTE_ENTERA .)
    INTERRUMPE      reduce using rule 124 (termino -> CTE_ENTERA .)
    CONTINUA        reduce using rule 124 (termino -> CTE_ENTERA .)
    SI              reduce using rule 124 (termino -> CTE_ENTERA .)
    IDENT           reduce using rule 124 (termino -> CTE_ENTERA .)
    DESDE           reduce using rule 124 (termino -> CTE_ENTERA .)
    REPETIR         reduce using rule 124 (termino -> CTE_ENTERA .)
    MIENTRAS        reduce using rule 124 (termino -> CTE_ENTERA .)
    CUANDO          reduce using rule 124 (termino -> CTE_ENTERA .)
    REGRESA         reduce using rule 124 (termino -> CTE_ENTERA .)
    IMPRIME         reduce using rule 124 (termino -> CTE_ENTERA .)
    IMPRIMENL       reduce using rule 124 (termino -> CTE_ENTERA .)
    LEE             reduce using rule 124 (termino -> CTE_ENTERA .)
    DECR            reduce using rule 124 (termino -> CTE_ENTERA .)
    INCR            reduce using rule 124 (termino -> CTE_ENTERA .)


state 80

    (125) termino -> CTE_REAL .

    POTENCIA        reduce using rule 125 (termino -> CTE_REAL .)
    MULTI           reduce using rule 125 (termino -> CTE_REAL .)
    DIV             reduce using rule 125 (termino -> CTE_REAL .)
    MOD             reduce using rule 125 (termino -> CTE_REAL .)
    MAS             reduce using rule 125 (termino -> CTE_REAL .)
    MENOS           reduce using rule 125 (termino -> CTE_REAL .)
    OP_REL          reduce using rule 125 (termino -> CTE_REAL .)
    Y               reduce using rule 125 (termino -> CTE_REAL .)
    O               reduce using rule 125 (termino -> CTE_REAL .)
    CORCHETE_TERMINA reduce using rule 125 (termino -> CTE_REAL .)
    error           reduce using rule 125 (termino -> CTE_REAL .)
    COMA            reduce using rule 125 (termino -> CTE_REAL .)
    PAREN_TERMINA   reduce using rule 125 (termino -> CTE_REAL .)
    PUNTO_COMA      reduce using rule 125 (termino -> CTE_REAL .)
    HASTA           reduce using rule 125 (termino -> CTE_REAL .)
    SINO            reduce using rule 125 (termino -> CTE_REAL .)
    FIN             reduce using rule 125 (termino -> CTE_REAL .)
    SEA             reduce using rule 125 (termino -> CTE_REAL .)
    OTRO            reduce using rule 125 (termino -> CTE_REAL .)
    INICIO          reduce using rule 125 (termino -> CTE_REAL .)
    LIMPIA          reduce using rule 125 (termino -> CTE_REAL .)
    INTERRUMPE      reduce using rule 125 (termino -> CTE_REAL .)
    CONTINUA        reduce using rule 125 (termino -> CTE_REAL .)
    SI              reduce using rule 125 (termino -> CTE_REAL .)
    IDENT           reduce using rule 125 (termino -> CTE_REAL .)
    DESDE           reduce using rule 125 (termino -> CTE_REAL .)
    REPETIR         reduce using rule 125 (termino -> CTE_REAL .)
    MIENTRAS        reduce using rule 125 (termino -> CTE_REAL .)
    CUANDO          reduce using rule 125 (termino -> CTE_REAL .)
    REGRESA         reduce using rule 125 (termino -> CTE_REAL .)
    IMPRIME         reduce using rule 125 (termino -> CTE_REAL .)
    IMPRIMENL       reduce using rule 125 (termino -> CTE_REAL .)
    LEE             reduce using rule 125 (termino -> CTE_REAL .)
    DECR            reduce using rule 125 (termino -> CTE_REAL .)
    INCR            reduce using rule 125 (termino -> CTE_REAL .)


state 81

    (126) termino -> CTE_ALFA .

    POTENCIA        reduce using rule 126 (termino -> CTE_ALFA .)
    MULTI           reduce using rule 126 (termino -> CTE_ALFA .)
    DIV             reduce using rule 126 (termino -> CTE_ALFA .)
    MOD             reduce using rule 126 (termino -> CTE_ALFA .)
    MAS             reduce using rule 126 (termino -> CTE_ALFA .)
    MENOS           reduce using rule 126 (termino -> CTE_ALFA .)
    OP_REL          reduce using rule 126 (termino -> CTE_ALFA .)
    Y               reduce using rule 126 (termino -> CTE_ALFA .)
    O               reduce using rule 126 (termino -> CTE_ALFA .)
    CORCHETE_TERMINA reduce using rule 126 (termino -> CTE_ALFA .)
    error           reduce using rule 126 (termino -> CTE_ALFA .)
    COMA            reduce using rule 126 (termino -> CTE_ALFA .)
    PAREN_TERMINA   reduce using rule 126 (termino -> CTE_ALFA .)
    PUNTO_COMA      reduce using rule 126 (termino -> CTE_ALFA .)
    HASTA           reduce using rule 126 (termino -> CTE_ALFA .)
    SINO            reduce using rule 126 (termino -> CTE_ALFA .)
    FIN             reduce using rule 126 (termino -> CTE_ALFA .)
    SEA             reduce using rule 126 (termino -> CTE_ALFA .)
    OTRO            reduce using rule 126 (termino -> CTE_ALFA .)
    INICIO          reduce using rule 126 (termino -> CTE_ALFA .)
    LIMPIA          reduce using rule 126 (termino -> CTE_ALFA .)
    INTERRUMPE      reduce using rule 126 (termino -> CTE_ALFA .)
    CONTINUA        reduce using rule 126 (termino -> CTE_ALFA .)
    SI              reduce using rule 126 (termino -> CTE_ALFA .)
    IDENT           reduce using rule 126 (termino -> CTE_ALFA .)
    DESDE           reduce using rule 126 (termino -> CTE_ALFA .)
    REPETIR         reduce using rule 126 (termino -> CTE_ALFA .)
    MIENTRAS        reduce using rule 126 (termino -> CTE_ALFA .)
    CUANDO          reduce using rule 126 (termino -> CTE_ALFA .)
    REGRESA         reduce using rule 126 (termino -> CTE_ALFA .)
    IMPRIME         reduce using rule 126 (termino -> CTE_ALFA .)
    IMPRIMENL       reduce using rule 126 (termino -> CTE_ALFA .)
    LEE             reduce using rule 126 (termino -> CTE_ALFA .)
    DECR            reduce using rule 126 (termino -> CTE_ALFA .)
    INCR            reduce using rule 126 (termino -> CTE_ALFA .)


state 82

    (127) termino -> VERDADERO .

    POTENCIA        reduce using rule 127 (termino -> VERDADERO .)
    MULTI           reduce using rule 127 (termino -> VERDADERO .)
    DIV             reduce using rule 127 (termino -> VERDADERO .)
    MOD             reduce using rule 127 (termino -> VERDADERO .)
    MAS             reduce using rule 127 (termino -> VERDADERO .)
    MENOS           reduce using rule 127 (termino -> VERDADERO .)
    OP_REL          reduce using rule 127 (termino -> VERDADERO .)
    Y               reduce using rule 127 (termino -> VERDADERO .)
    O               reduce using rule 127 (termino -> VERDADERO .)
    CORCHETE_TERMINA reduce using rule 127 (termino -> VERDADERO .)
    error           reduce using rule 127 (termino -> VERDADERO .)
    COMA            reduce using rule 127 (termino -> VERDADERO .)
    PAREN_TERMINA   reduce using rule 127 (termino -> VERDADERO .)
    PUNTO_COMA      reduce using rule 127 (termino -> VERDADERO .)
    HASTA           reduce using rule 127 (termino -> VERDADERO .)
    SINO            reduce using rule 127 (termino -> VERDADERO .)
    FIN             reduce using rule 127 (termino -> VERDADERO .)
    SEA             reduce using rule 127 (termino -> VERDADERO .)
    OTRO            reduce using rule 127 (termino -> VERDADERO .)
    INICIO          reduce using rule 127 (termino -> VERDADERO .)
    LIMPIA          reduce using rule 127 (termino -> VERDADERO .)
    INTERRUMPE      reduce using rule 127 (termino -> VERDADERO .)
    CONTINUA        reduce using rule 127 (termino -> VERDADERO .)
    SI              reduce using rule 127 (termino -> VERDADERO .)
    IDENT           reduce using rule 127 (termino -> VERDADERO .)
    DESDE           reduce using rule 127 (termino -> VERDADERO .)
    REPETIR         reduce using rule 127 (termino -> VERDADERO .)
    MIENTRAS        reduce using rule 127 (termino -> VERDADERO .)
    CUANDO          reduce using rule 127 (termino -> VERDADERO .)
    REGRESA         reduce using rule 127 (termino -> VERDADERO .)
    IMPRIME         reduce using rule 127 (termino -> VERDADERO .)
    IMPRIMENL       reduce using rule 127 (termino -> VERDADERO .)
    LEE             reduce using rule 127 (termino -> VERDADERO .)
    DECR            reduce using rule 127 (termino -> VERDADERO .)
    INCR            reduce using rule 127 (termino -> VERDADERO .)


state 83

    (128) termino -> FALSO .

    POTENCIA        reduce using rule 128 (termino -> FALSO .)
    MULTI           reduce using rule 128 (termino -> FALSO .)
    DIV             reduce using rule 128 (termino -> FALSO .)
    MOD             reduce using rule 128 (termino -> FALSO .)
    MAS             reduce using rule 128 (termino -> FALSO .)
    MENOS           reduce using rule 128 (termino -> FALSO .)
    OP_REL          reduce using rule 128 (termino -> FALSO .)
    Y               reduce using rule 128 (termino -> FALSO .)
    O               reduce using rule 128 (termino -> FALSO .)
    CORCHETE_TERMINA reduce using rule 128 (termino -> FALSO .)
    error           reduce using rule 128 (termino -> FALSO .)
    COMA            reduce using rule 128 (termino -> FALSO .)
    PAREN_TERMINA   reduce using rule 128 (termino -> FALSO .)
    PUNTO_COMA      reduce using rule 128 (termino -> FALSO .)
    HASTA           reduce using rule 128 (termino -> FALSO .)
    SINO            reduce using rule 128 (termino -> FALSO .)
    FIN             reduce using rule 128 (termino -> FALSO .)
    SEA             reduce using rule 128 (termino -> FALSO .)
    OTRO            reduce using rule 128 (termino -> FALSO .)
    INICIO          reduce using rule 128 (termino -> FALSO .)
    LIMPIA          reduce using rule 128 (termino -> FALSO .)
    INTERRUMPE      reduce using rule 128 (termino -> FALSO .)
    CONTINUA        reduce using rule 128 (termino -> FALSO .)
    SI              reduce using rule 128 (termino -> FALSO .)
    IDENT           reduce using rule 128 (termino -> FALSO .)
    DESDE           reduce using rule 128 (termino -> FALSO .)
    REPETIR         reduce using rule 128 (termino -> FALSO .)
    MIENTRAS        reduce using rule 128 (termino -> FALSO .)
    CUANDO          reduce using rule 128 (termino -> FALSO .)
    REGRESA         reduce using rule 128 (termino -> FALSO .)
    IMPRIME         reduce using rule 128 (termino -> FALSO .)
    IMPRIMENL       reduce using rule 128 (termino -> FALSO .)
    LEE             reduce using rule 128 (termino -> FALSO .)
    DECR            reduce using rule 128 (termino -> FALSO .)
    INCR            reduce using rule 128 (termino -> FALSO .)


state 84

    (19) dimens -> CORCHETE_EMPIEZA valor . CORCHETE_TERMINA dimens
    (21) dimens -> CORCHETE_EMPIEZA valor . error dimens

    CORCHETE_TERMINA shift and go to state 149
    error           shift and go to state 150


state 85

    (116) multi -> empty .

    MAS             reduce using rule 116 (multi -> empty .)
    MENOS           reduce using rule 116 (multi -> empty .)
    OP_REL          reduce using rule 116 (multi -> empty .)
    Y               reduce using rule 116 (multi -> empty .)
    O               reduce using rule 116 (multi -> empty .)
    CORCHETE_TERMINA reduce using rule 116 (multi -> empty .)
    error           reduce using rule 116 (multi -> empty .)
    COMA            reduce using rule 116 (multi -> empty .)
    PAREN_TERMINA   reduce using rule 116 (multi -> empty .)
    PUNTO_COMA      reduce using rule 116 (multi -> empty .)
    HASTA           reduce using rule 116 (multi -> empty .)
    SINO            reduce using rule 116 (multi -> empty .)
    FIN             reduce using rule 116 (multi -> empty .)
    SEA             reduce using rule 116 (multi -> empty .)
    OTRO            reduce using rule 116 (multi -> empty .)
    INICIO          reduce using rule 116 (multi -> empty .)
    LIMPIA          reduce using rule 116 (multi -> empty .)
    INTERRUMPE      reduce using rule 116 (multi -> empty .)
    CONTINUA        reduce using rule 116 (multi -> empty .)
    SI              reduce using rule 116 (multi -> empty .)
    IDENT           reduce using rule 116 (multi -> empty .)
    DESDE           reduce using rule 116 (multi -> empty .)
    REPETIR         reduce using rule 116 (multi -> empty .)
    MIENTRAS        reduce using rule 116 (multi -> empty .)
    CUANDO          reduce using rule 116 (multi -> empty .)
    REGRESA         reduce using rule 116 (multi -> empty .)
    IMPRIME         reduce using rule 116 (multi -> empty .)
    IMPRIMENL       reduce using rule 116 (multi -> empty .)
    LEE             reduce using rule 116 (multi -> empty .)
    DECR            reduce using rule 116 (multi -> empty .)
    INCR            reduce using rule 116 (multi -> empty .)


state 86

    (121) termino -> IDENT .
    (122) termino -> IDENT . udim
    (129) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (130) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (99) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (100) udim -> . empty
    (131) parenemp -> . PAREN_EMPIEZA
    (141) empty -> .

  ! reduce/reduce conflict for POTENCIA resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for MAS resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for MENOS resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for error resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for COMA resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for HASTA resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for SINO resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for FIN resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for SEA resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for OTRO resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for INICIO resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for SI resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for IDENT resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for DESDE resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for REPETIR resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for CUANDO resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for REGRESA resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for LEE resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for DECR resolved using rule 121 (termino -> IDENT .)
  ! reduce/reduce conflict for INCR resolved using rule 121 (termino -> IDENT .)
    POTENCIA        reduce using rule 121 (termino -> IDENT .)
    MULTI           reduce using rule 121 (termino -> IDENT .)
    DIV             reduce using rule 121 (termino -> IDENT .)
    MOD             reduce using rule 121 (termino -> IDENT .)
    MAS             reduce using rule 121 (termino -> IDENT .)
    MENOS           reduce using rule 121 (termino -> IDENT .)
    OP_REL          reduce using rule 121 (termino -> IDENT .)
    Y               reduce using rule 121 (termino -> IDENT .)
    O               reduce using rule 121 (termino -> IDENT .)
    CORCHETE_TERMINA reduce using rule 121 (termino -> IDENT .)
    error           reduce using rule 121 (termino -> IDENT .)
    COMA            reduce using rule 121 (termino -> IDENT .)
    PAREN_TERMINA   reduce using rule 121 (termino -> IDENT .)
    PUNTO_COMA      reduce using rule 121 (termino -> IDENT .)
    HASTA           reduce using rule 121 (termino -> IDENT .)
    SINO            reduce using rule 121 (termino -> IDENT .)
    FIN             reduce using rule 121 (termino -> IDENT .)
    SEA             reduce using rule 121 (termino -> IDENT .)
    OTRO            reduce using rule 121 (termino -> IDENT .)
    INICIO          reduce using rule 121 (termino -> IDENT .)
    LIMPIA          reduce using rule 121 (termino -> IDENT .)
    INTERRUMPE      reduce using rule 121 (termino -> IDENT .)
    CONTINUA        reduce using rule 121 (termino -> IDENT .)
    SI              reduce using rule 121 (termino -> IDENT .)
    IDENT           reduce using rule 121 (termino -> IDENT .)
    DESDE           reduce using rule 121 (termino -> IDENT .)
    REPETIR         reduce using rule 121 (termino -> IDENT .)
    MIENTRAS        reduce using rule 121 (termino -> IDENT .)
    CUANDO          reduce using rule 121 (termino -> IDENT .)
    REGRESA         reduce using rule 121 (termino -> IDENT .)
    IMPRIME         reduce using rule 121 (termino -> IDENT .)
    IMPRIMENL       reduce using rule 121 (termino -> IDENT .)
    LEE             reduce using rule 121 (termino -> IDENT .)
    DECR            reduce using rule 121 (termino -> IDENT .)
    INCR            reduce using rule 121 (termino -> IDENT .)
    CORCHETE_EMPIEZA shift and go to state 151
    PAREN_EMPIEZA   shift and go to state 136

  ! POTENCIA        [ reduce using rule 141 (empty -> .) ]
  ! MULTI           [ reduce using rule 141 (empty -> .) ]
  ! DIV             [ reduce using rule 141 (empty -> .) ]
  ! MOD             [ reduce using rule 141 (empty -> .) ]
  ! MAS             [ reduce using rule 141 (empty -> .) ]
  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! OP_REL          [ reduce using rule 141 (empty -> .) ]
  ! Y               [ reduce using rule 141 (empty -> .) ]
  ! O               [ reduce using rule 141 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! COMA            [ reduce using rule 141 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 141 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 141 (empty -> .) ]
  ! HASTA           [ reduce using rule 141 (empty -> .) ]
  ! SINO            [ reduce using rule 141 (empty -> .) ]
  ! FIN             [ reduce using rule 141 (empty -> .) ]
  ! SEA             [ reduce using rule 141 (empty -> .) ]
  ! OTRO            [ reduce using rule 141 (empty -> .) ]
  ! INICIO          [ reduce using rule 141 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 141 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 141 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 141 (empty -> .) ]
  ! SI              [ reduce using rule 141 (empty -> .) ]
  ! IDENT           [ reduce using rule 141 (empty -> .) ]
  ! DESDE           [ reduce using rule 141 (empty -> .) ]
  ! REPETIR         [ reduce using rule 141 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 141 (empty -> .) ]
  ! CUANDO          [ reduce using rule 141 (empty -> .) ]
  ! REGRESA         [ reduce using rule 141 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 141 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 141 (empty -> .) ]
  ! LEE             [ reduce using rule 141 (empty -> .) ]
  ! DECR            [ reduce using rule 141 (empty -> .) ]
  ! INCR            [ reduce using rule 141 (empty -> .) ]

    udim                           shift and go to state 132
    parenemp                       shift and go to state 133
    empty                          shift and go to state 152

state 87

    (23) opasig -> OP_ASIG CTE_ENTERA .

    COMA            reduce using rule 23 (opasig -> OP_ASIG CTE_ENTERA .)
    error           reduce using rule 23 (opasig -> OP_ASIG CTE_ENTERA .)


state 88

    (24) opasig -> OP_ASIG IDENT .

    COMA            reduce using rule 24 (opasig -> OP_ASIG IDENT .)
    error           reduce using rule 24 (opasig -> OP_ASIG IDENT .)


state 89

    (29) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .
    (31) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA . grupoconst
    (29) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (30) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (31) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (32) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (33) grupoconst -> . empty
    (141) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 29 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 29 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 29 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 29 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 29 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    VARIABLES       reduce using rule 29 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 29 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 29 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    FUNCION         reduce using rule 29 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROGRAMA        reduce using rule 29 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 141 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 141 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 141 (empty -> .) ]
  ! FUNCION         [ reduce using rule 141 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 141 (empty -> .) ]

    grupoconst                     shift and go to state 153
    empty                          shift and go to state 10

state 90

    (30) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .
    (32) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA . grupoconst
    (29) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (30) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (31) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (32) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (33) grupoconst -> . empty
    (141) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 30 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 30 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 30 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 30 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 30 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    VARIABLES       reduce using rule 30 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 30 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 30 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    FUNCION         reduce using rule 30 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROGRAMA        reduce using rule 30 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 141 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 141 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 141 (empty -> .) ]
  ! FUNCION         [ reduce using rule 141 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 141 (empty -> .) ]

    grupoconst                     shift and go to state 154
    empty                          shift and go to state 10

state 91

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block . FIN DE PROGRAMA PUNTO

    FIN             shift and go to state 155


state 92

    (58) block -> estatuto . puntoc block
    (59) block -> estatuto . puntoc
    (61) block -> estatuto . error
    (62) block -> estatuto . error block
    (60) puntoc -> . PUNTO_COMA

    error           shift and go to state 157
    PUNTO_COMA      shift and go to state 158

    puntoc                         shift and go to state 156

state 93

    (63) estatuto -> si .

    error           reduce using rule 63 (estatuto -> si .)
    PUNTO_COMA      reduce using rule 63 (estatuto -> si .)
    SINO            reduce using rule 63 (estatuto -> si .)
    FIN             reduce using rule 63 (estatuto -> si .)
    SEA             reduce using rule 63 (estatuto -> si .)
    OTRO            reduce using rule 63 (estatuto -> si .)


state 94

    (64) estatuto -> lfunc .

    error           reduce using rule 64 (estatuto -> lfunc .)
    PUNTO_COMA      reduce using rule 64 (estatuto -> lfunc .)
    SINO            reduce using rule 64 (estatuto -> lfunc .)
    FIN             reduce using rule 64 (estatuto -> lfunc .)
    SEA             reduce using rule 64 (estatuto -> lfunc .)
    OTRO            reduce using rule 64 (estatuto -> lfunc .)


state 95

    (65) estatuto -> LIMPIA .

    error           reduce using rule 65 (estatuto -> LIMPIA .)
    PUNTO_COMA      reduce using rule 65 (estatuto -> LIMPIA .)
    SINO            reduce using rule 65 (estatuto -> LIMPIA .)
    FIN             reduce using rule 65 (estatuto -> LIMPIA .)
    SEA             reduce using rule 65 (estatuto -> LIMPIA .)
    OTRO            reduce using rule 65 (estatuto -> LIMPIA .)


state 96

    (66) estatuto -> desde .

    error           reduce using rule 66 (estatuto -> desde .)
    PUNTO_COMA      reduce using rule 66 (estatuto -> desde .)
    SINO            reduce using rule 66 (estatuto -> desde .)
    FIN             reduce using rule 66 (estatuto -> desde .)
    SEA             reduce using rule 66 (estatuto -> desde .)
    OTRO            reduce using rule 66 (estatuto -> desde .)


state 97

    (67) estatuto -> repetir .

    error           reduce using rule 67 (estatuto -> repetir .)
    PUNTO_COMA      reduce using rule 67 (estatuto -> repetir .)
    SINO            reduce using rule 67 (estatuto -> repetir .)
    FIN             reduce using rule 67 (estatuto -> repetir .)
    SEA             reduce using rule 67 (estatuto -> repetir .)
    OTRO            reduce using rule 67 (estatuto -> repetir .)


state 98

    (68) estatuto -> mientras .

    error           reduce using rule 68 (estatuto -> mientras .)
    PUNTO_COMA      reduce using rule 68 (estatuto -> mientras .)
    SINO            reduce using rule 68 (estatuto -> mientras .)
    FIN             reduce using rule 68 (estatuto -> mientras .)
    SEA             reduce using rule 68 (estatuto -> mientras .)
    OTRO            reduce using rule 68 (estatuto -> mientras .)


state 99

    (69) estatuto -> cuando .

    error           reduce using rule 69 (estatuto -> cuando .)
    PUNTO_COMA      reduce using rule 69 (estatuto -> cuando .)
    SINO            reduce using rule 69 (estatuto -> cuando .)
    FIN             reduce using rule 69 (estatuto -> cuando .)
    SEA             reduce using rule 69 (estatuto -> cuando .)
    OTRO            reduce using rule 69 (estatuto -> cuando .)


state 100

    (70) estatuto -> regresa .

    error           reduce using rule 70 (estatuto -> regresa .)
    PUNTO_COMA      reduce using rule 70 (estatuto -> regresa .)
    SINO            reduce using rule 70 (estatuto -> regresa .)
    FIN             reduce using rule 70 (estatuto -> regresa .)
    SEA             reduce using rule 70 (estatuto -> regresa .)
    OTRO            reduce using rule 70 (estatuto -> regresa .)


state 101

    (71) estatuto -> asigna .

    error           reduce using rule 71 (estatuto -> asigna .)
    PUNTO_COMA      reduce using rule 71 (estatuto -> asigna .)
    SINO            reduce using rule 71 (estatuto -> asigna .)
    FIN             reduce using rule 71 (estatuto -> asigna .)
    SEA             reduce using rule 71 (estatuto -> asigna .)
    OTRO            reduce using rule 71 (estatuto -> asigna .)


state 102

    (72) estatuto -> imprime .

    error           reduce using rule 72 (estatuto -> imprime .)
    PUNTO_COMA      reduce using rule 72 (estatuto -> imprime .)
    SINO            reduce using rule 72 (estatuto -> imprime .)
    FIN             reduce using rule 72 (estatuto -> imprime .)
    SEA             reduce using rule 72 (estatuto -> imprime .)
    OTRO            reduce using rule 72 (estatuto -> imprime .)


state 103

    (73) estatuto -> imprimenl .

    error           reduce using rule 73 (estatuto -> imprimenl .)
    PUNTO_COMA      reduce using rule 73 (estatuto -> imprimenl .)
    SINO            reduce using rule 73 (estatuto -> imprimenl .)
    FIN             reduce using rule 73 (estatuto -> imprimenl .)
    SEA             reduce using rule 73 (estatuto -> imprimenl .)
    OTRO            reduce using rule 73 (estatuto -> imprimenl .)


state 104

    (74) estatuto -> lee .

    error           reduce using rule 74 (estatuto -> lee .)
    PUNTO_COMA      reduce using rule 74 (estatuto -> lee .)
    SINO            reduce using rule 74 (estatuto -> lee .)
    FIN             reduce using rule 74 (estatuto -> lee .)
    SEA             reduce using rule 74 (estatuto -> lee .)
    OTRO            reduce using rule 74 (estatuto -> lee .)


state 105

    (75) estatuto -> INTERRUMPE .

    error           reduce using rule 75 (estatuto -> INTERRUMPE .)
    PUNTO_COMA      reduce using rule 75 (estatuto -> INTERRUMPE .)
    SINO            reduce using rule 75 (estatuto -> INTERRUMPE .)
    FIN             reduce using rule 75 (estatuto -> INTERRUMPE .)
    SEA             reduce using rule 75 (estatuto -> INTERRUMPE .)
    OTRO            reduce using rule 75 (estatuto -> INTERRUMPE .)


state 106

    (76) estatuto -> CONTINUA .

    error           reduce using rule 76 (estatuto -> CONTINUA .)
    PUNTO_COMA      reduce using rule 76 (estatuto -> CONTINUA .)
    SINO            reduce using rule 76 (estatuto -> CONTINUA .)
    FIN             reduce using rule 76 (estatuto -> CONTINUA .)
    SEA             reduce using rule 76 (estatuto -> CONTINUA .)
    OTRO            reduce using rule 76 (estatuto -> CONTINUA .)


state 107

    (77) estatuto -> empty .

    error           reduce using rule 77 (estatuto -> empty .)
    PUNTO_COMA      reduce using rule 77 (estatuto -> empty .)
    SINO            reduce using rule 77 (estatuto -> empty .)
    FIN             reduce using rule 77 (estatuto -> empty .)
    SEA             reduce using rule 77 (estatuto -> empty .)
    OTRO            reduce using rule 77 (estatuto -> empty .)


state 108

    (78) si -> SI . PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino

    PAREN_EMPIEZA   shift and go to state 159


state 109

    (129) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (130) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (89) asigna -> IDENT . udim OP_ASIG exprlog
    (131) parenemp -> . PAREN_EMPIEZA
    (99) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (100) udim -> . empty
    (141) empty -> .

    PAREN_EMPIEZA   shift and go to state 136
    CORCHETE_EMPIEZA shift and go to state 151
    OP_ASIG         reduce using rule 141 (empty -> .)

    parenemp                       shift and go to state 133
    udim                           shift and go to state 160
    empty                          shift and go to state 152

state 110

    (84) desde -> DESDE . EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> DESDE . EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> DESDE . EL VALOR DE asigna HASTA expr error bckesp

    EL              shift and go to state 161


state 111

    (87) repetir -> REPETIR . block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (58) block -> . estatuto puntoc block
    (59) block -> . estatuto puntoc
    (61) block -> . estatuto error
    (62) block -> . estatuto error block
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117
    error           reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)

    block                          shift and go to state 162
    estatuto                       shift and go to state 92
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 112

    (88) mientras -> MIENTRAS . SE CUMPLA QUE exprlog bckesp

    SE              shift and go to state 163


state 113

    (90) cuando -> CUANDO . EL VALOR DE IDENT INICIO gposea otro FIN

    EL              shift and go to state 164


state 114

    (98) regresa -> REGRESA . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 165


state 115

    (132) imprime -> IMPRIME . PAREN_EMPIEZA gpoexp PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 166


state 116

    (133) imprimenl -> IMPRIMENL . PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> IMPRIMENL . PAREN_EMPIEZA gpoexp error

    PAREN_EMPIEZA   shift and go to state 167


state 117

    (135) lee -> LEE . PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> LEE . PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 168


state 118

    (56) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (45) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (46) params -> . empty
    (47) params -> . gpopars PUNTOS_DOBLES error otrospars
    (48) params -> . gpopars error TIPO otrospars
    (51) gpopars -> . IDENT COMA gpopars
    (52) gpopars -> . IDENT
    (141) empty -> .

    IDENT           shift and go to state 169
    PAREN_TERMINA   reduce using rule 141 (empty -> .)

    params                         shift and go to state 170
    gpopars                        shift and go to state 171
    empty                          shift and go to state 172

state 119

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (45) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (46) params -> . empty
    (47) params -> . gpopars PUNTOS_DOBLES error otrospars
    (48) params -> . gpopars error TIPO otrospars
    (51) gpopars -> . IDENT COMA gpopars
    (52) gpopars -> . IDENT
    (141) empty -> .

    IDENT           shift and go to state 169
    PAREN_TERMINA   reduce using rule 141 (empty -> .)

    params                         shift and go to state 173
    gpopars                        shift and go to state 171
    empty                          shift and go to state 172

state 120

    (34) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE . PROTOTIPOS PUNTO_COMA

    PROTOTIPOS      shift and go to state 174


state 121

    (40) protfunc -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (45) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (46) params -> . empty
    (47) params -> . gpopars PUNTOS_DOBLES error otrospars
    (48) params -> . gpopars error TIPO otrospars
    (51) gpopars -> . IDENT COMA gpopars
    (52) gpopars -> . IDENT
    (141) empty -> .

    IDENT           shift and go to state 169
    PAREN_TERMINA   reduce using rule 141 (empty -> .)

    params                         shift and go to state 175
    gpopars                        shift and go to state 171
    empty                          shift and go to state 172

state 122

    (41) protfunc -> FUNCION error PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (45) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (46) params -> . empty
    (47) params -> . gpopars PUNTOS_DOBLES error otrospars
    (48) params -> . gpopars error TIPO otrospars
    (51) gpopars -> . IDENT COMA gpopars
    (52) gpopars -> . IDENT
    (141) empty -> .

    IDENT           shift and go to state 169
    PAREN_TERMINA   reduce using rule 141 (empty -> .)

    params                         shift and go to state 176
    gpopars                        shift and go to state 171
    empty                          shift and go to state 172

state 123

    (42) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (45) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (46) params -> . empty
    (47) params -> . gpopars PUNTOS_DOBLES error otrospars
    (48) params -> . gpopars error TIPO otrospars
    (51) gpopars -> . IDENT COMA gpopars
    (52) gpopars -> . IDENT
    (141) empty -> .

    IDENT           shift and go to state 169
    PAREN_TERMINA   reduce using rule 141 (empty -> .)

    params                         shift and go to state 177
    gpopars                        shift and go to state 171
    empty                          shift and go to state 172

state 124

    (43) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (45) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (46) params -> . empty
    (47) params -> . gpopars PUNTOS_DOBLES error otrospars
    (48) params -> . gpopars error TIPO otrospars
    (51) gpopars -> . IDENT COMA gpopars
    (52) gpopars -> . IDENT
    (141) empty -> .

    IDENT           shift and go to state 169
    PAREN_TERMINA   reduce using rule 141 (empty -> .)

    params                         shift and go to state 178
    gpopars                        shift and go to state 171
    empty                          shift and go to state 172

state 125

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA . gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT dimens COMA gpoids
    (12) gpoids -> . IDENT opasig COMA gpoids
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids
    (15) gpoids -> . IDENT dimens error gpoids
    (16) gpoids -> . IDENT error gpoids
    (17) gpoids -> . IDENT opasig error gpoids
    (18) gpoids -> . empty
    (141) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    INICIO          reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 141 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 141 (empty -> .) ]
  ! FUNCION         [ reduce using rule 141 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 141 (empty -> .) ]
  ! INICIO          [ reduce using rule 141 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 179
    empty                          shift and go to state 16

state 126

    (9) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA . gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT dimens COMA gpoids
    (12) gpoids -> . IDENT opasig COMA gpoids
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids
    (15) gpoids -> . IDENT dimens error gpoids
    (16) gpoids -> . IDENT error gpoids
    (17) gpoids -> . IDENT opasig error gpoids
    (18) gpoids -> . empty
    (141) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    FUNCION         reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROGRAMA        reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    INICIO          reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 141 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 141 (empty -> .) ]
  ! FUNCION         [ reduce using rule 141 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 141 (empty -> .) ]
  ! INICIO          [ reduce using rule 141 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 180
    empty                          shift and go to state 16

state 127

    (7) gpovars -> gpoids error TIPO PUNTO_COMA . gpovars
    (8) gpovars -> gpoids error TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT dimens COMA gpoids
    (12) gpoids -> . IDENT opasig COMA gpoids
    (13) gpoids -> . IDENT dimens
    (14) gpoids -> . IDENT COMA gpoids
    (15) gpoids -> . IDENT dimens error gpoids
    (16) gpoids -> . IDENT error gpoids
    (17) gpoids -> . IDENT opasig error gpoids
    (18) gpoids -> . empty
    (141) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    INICIO          reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 141 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 141 (empty -> .) ]
  ! FUNCION         [ reduce using rule 141 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 141 (empty -> .) ]
  ! INICIO          [ reduce using rule 141 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 181
    empty                          shift and go to state 16

state 128

    (11) gpoids -> IDENT dimens COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> IDENT dimens COMA gpoids .)
    error           reduce using rule 11 (gpoids -> IDENT dimens COMA gpoids .)


state 129

    (15) gpoids -> IDENT dimens error gpoids .

    PUNTOS_DOBLES   reduce using rule 15 (gpoids -> IDENT dimens error gpoids .)
    error           reduce using rule 15 (gpoids -> IDENT dimens error gpoids .)


state 130

    (12) gpoids -> IDENT opasig COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 12 (gpoids -> IDENT opasig COMA gpoids .)
    error           reduce using rule 12 (gpoids -> IDENT opasig COMA gpoids .)


state 131

    (17) gpoids -> IDENT opasig error gpoids .

    PUNTOS_DOBLES   reduce using rule 17 (gpoids -> IDENT opasig error gpoids .)
    error           reduce using rule 17 (gpoids -> IDENT opasig error gpoids .)


state 132

    (122) termino -> IDENT udim .

    POTENCIA        reduce using rule 122 (termino -> IDENT udim .)
    MULTI           reduce using rule 122 (termino -> IDENT udim .)
    DIV             reduce using rule 122 (termino -> IDENT udim .)
    MOD             reduce using rule 122 (termino -> IDENT udim .)
    MAS             reduce using rule 122 (termino -> IDENT udim .)
    MENOS           reduce using rule 122 (termino -> IDENT udim .)
    OP_REL          reduce using rule 122 (termino -> IDENT udim .)
    Y               reduce using rule 122 (termino -> IDENT udim .)
    O               reduce using rule 122 (termino -> IDENT udim .)
    CORCHETE_TERMINA reduce using rule 122 (termino -> IDENT udim .)
    error           reduce using rule 122 (termino -> IDENT udim .)
    COMA            reduce using rule 122 (termino -> IDENT udim .)
    PAREN_TERMINA   reduce using rule 122 (termino -> IDENT udim .)
    PUNTO_COMA      reduce using rule 122 (termino -> IDENT udim .)
    HASTA           reduce using rule 122 (termino -> IDENT udim .)
    SINO            reduce using rule 122 (termino -> IDENT udim .)
    FIN             reduce using rule 122 (termino -> IDENT udim .)
    SEA             reduce using rule 122 (termino -> IDENT udim .)
    OTRO            reduce using rule 122 (termino -> IDENT udim .)
    INICIO          reduce using rule 122 (termino -> IDENT udim .)
    LIMPIA          reduce using rule 122 (termino -> IDENT udim .)
    INTERRUMPE      reduce using rule 122 (termino -> IDENT udim .)
    CONTINUA        reduce using rule 122 (termino -> IDENT udim .)
    SI              reduce using rule 122 (termino -> IDENT udim .)
    IDENT           reduce using rule 122 (termino -> IDENT udim .)
    DESDE           reduce using rule 122 (termino -> IDENT udim .)
    REPETIR         reduce using rule 122 (termino -> IDENT udim .)
    MIENTRAS        reduce using rule 122 (termino -> IDENT udim .)
    CUANDO          reduce using rule 122 (termino -> IDENT udim .)
    REGRESA         reduce using rule 122 (termino -> IDENT udim .)
    IMPRIME         reduce using rule 122 (termino -> IDENT udim .)
    IMPRIMENL       reduce using rule 122 (termino -> IDENT udim .)
    LEE             reduce using rule 122 (termino -> IDENT udim .)
    DECR            reduce using rule 122 (termino -> IDENT udim .)
    INCR            reduce using rule 122 (termino -> IDENT udim .)


state 133

    (129) lfunc -> IDENT parenemp . uparams PAREN_TERMINA
    (130) lfunc -> IDENT parenemp . error PAREN_TERMINA
    (139) uparams -> . exprlog
    (140) uparams -> . exprlog COMA uparams
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    error           shift and go to state 183
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    uparams                        shift and go to state 182
    exprlog                        shift and go to state 184
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 134

    (19) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (21) dimens -> CORCHETE_EMPIEZA . valor error dimens
    (99) udim -> CORCHETE_EMPIEZA . expr CORCHETE_TERMINA udim
    (26) valor -> . exprlog
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    MAS             reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    NO              shift and go to state 71
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    valor                          shift and go to state 84
    expr                           shift and go to state 185
    exprlog                        shift and go to state 67
    multi                          shift and go to state 73
    opy                            shift and go to state 68
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    opno                           shift and go to state 69
    signo                          shift and go to state 76
    oprel                          shift and go to state 70
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 135

    (25) opasig -> empty .
    (100) udim -> empty .

    COMA            reduce using rule 25 (opasig -> empty .)
    error           reduce using rule 25 (opasig -> empty .)
    POTENCIA        reduce using rule 100 (udim -> empty .)
    MULTI           reduce using rule 100 (udim -> empty .)
    DIV             reduce using rule 100 (udim -> empty .)
    MOD             reduce using rule 100 (udim -> empty .)
    MAS             reduce using rule 100 (udim -> empty .)
    MENOS           reduce using rule 100 (udim -> empty .)
    OP_REL          reduce using rule 100 (udim -> empty .)
    Y               reduce using rule 100 (udim -> empty .)
    O               reduce using rule 100 (udim -> empty .)
    CORCHETE_TERMINA reduce using rule 100 (udim -> empty .)


state 136

    (131) parenemp -> PAREN_EMPIEZA .

    error           reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    NO              reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    MENOS           reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    IDENT           reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    CTE_ENTERA      reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    CTE_REAL        reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    CTE_ALFA        reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    VERDADERO       reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    FALSO           reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    PAREN_TERMINA   reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    COMA            reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    O               reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    Y               reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    OP_REL          reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)
    MAS             reduce using rule 131 (parenemp -> PAREN_EMPIEZA .)


state 137

    (22) dimens -> error valor CORCHETE_TERMINA . dimens
    (19) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (20) dimens -> .
    (21) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (22) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 37
    COMA            reduce using rule 20 (dimens -> .)
    PUNTOS_DOBLES   reduce using rule 20 (dimens -> .)
    PAREN_TERMINA   reduce using rule 20 (dimens -> .)
    error           shift and go to state 186

  ! error           [ reduce using rule 20 (dimens -> .) ]

    dimens                         shift and go to state 187

state 138

    (102) exprlog -> opy O . exprlog
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    LIMPIA          reduce using rule 141 (empty -> .)
    INTERRUMPE      reduce using rule 141 (empty -> .)
    CONTINUA        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    DESDE           reduce using rule 141 (empty -> .)
    REPETIR         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    CUANDO          reduce using rule 141 (empty -> .)
    REGRESA         reduce using rule 141 (empty -> .)
    IMPRIME         reduce using rule 141 (empty -> .)
    IMPRIMENL       reduce using rule 141 (empty -> .)
    LEE             reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! IDENT           [ reduce using rule 141 (empty -> .) ]

    opy                            shift and go to state 68
    exprlog                        shift and go to state 188
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 139

    (104) opy -> opno Y . opy
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    LIMPIA          reduce using rule 141 (empty -> .)
    INTERRUMPE      reduce using rule 141 (empty -> .)
    CONTINUA        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    DESDE           reduce using rule 141 (empty -> .)
    REPETIR         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    CUANDO          reduce using rule 141 (empty -> .)
    REGRESA         reduce using rule 141 (empty -> .)
    IMPRIME         reduce using rule 141 (empty -> .)
    IMPRIMENL       reduce using rule 141 (empty -> .)
    LEE             reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! IDENT           [ reduce using rule 141 (empty -> .) ]

    opno                           shift and go to state 69
    opy                            shift and go to state 189
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 140

    (106) opno -> NO oprel .

    Y               reduce using rule 106 (opno -> NO oprel .)
    O               reduce using rule 106 (opno -> NO oprel .)
    CORCHETE_TERMINA reduce using rule 106 (opno -> NO oprel .)
    error           reduce using rule 106 (opno -> NO oprel .)
    COMA            reduce using rule 106 (opno -> NO oprel .)
    PAREN_TERMINA   reduce using rule 106 (opno -> NO oprel .)
    PUNTO_COMA      reduce using rule 106 (opno -> NO oprel .)
    HASTA           reduce using rule 106 (opno -> NO oprel .)
    SINO            reduce using rule 106 (opno -> NO oprel .)
    FIN             reduce using rule 106 (opno -> NO oprel .)
    SEA             reduce using rule 106 (opno -> NO oprel .)
    OTRO            reduce using rule 106 (opno -> NO oprel .)
    INICIO          reduce using rule 106 (opno -> NO oprel .)
    LIMPIA          reduce using rule 106 (opno -> NO oprel .)
    INTERRUMPE      reduce using rule 106 (opno -> NO oprel .)
    CONTINUA        reduce using rule 106 (opno -> NO oprel .)
    SI              reduce using rule 106 (opno -> NO oprel .)
    IDENT           reduce using rule 106 (opno -> NO oprel .)
    DESDE           reduce using rule 106 (opno -> NO oprel .)
    REPETIR         reduce using rule 106 (opno -> NO oprel .)
    MIENTRAS        reduce using rule 106 (opno -> NO oprel .)
    CUANDO          reduce using rule 106 (opno -> NO oprel .)
    REGRESA         reduce using rule 106 (opno -> NO oprel .)
    IMPRIME         reduce using rule 106 (opno -> NO oprel .)
    IMPRIMENL       reduce using rule 106 (opno -> NO oprel .)
    LEE             reduce using rule 106 (opno -> NO oprel .)


state 141

    (108) oprel -> expr OP_REL . oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    LIMPIA          reduce using rule 141 (empty -> .)
    INTERRUMPE      reduce using rule 141 (empty -> .)
    CONTINUA        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    DESDE           reduce using rule 141 (empty -> .)
    REPETIR         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    CUANDO          reduce using rule 141 (empty -> .)
    REGRESA         reduce using rule 141 (empty -> .)
    IMPRIME         reduce using rule 141 (empty -> .)
    IMPRIMENL       reduce using rule 141 (empty -> .)
    LEE             reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! IDENT           [ reduce using rule 141 (empty -> .) ]

    expr                           shift and go to state 72
    oprel                          shift and go to state 190
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 142

    (110) expr -> multi MAS . expr
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    LIMPIA          reduce using rule 141 (empty -> .)
    INTERRUMPE      reduce using rule 141 (empty -> .)
    CONTINUA        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    DESDE           reduce using rule 141 (empty -> .)
    REPETIR         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    CUANDO          reduce using rule 141 (empty -> .)
    REGRESA         reduce using rule 141 (empty -> .)
    IMPRIME         reduce using rule 141 (empty -> .)
    IMPRIMENL       reduce using rule 141 (empty -> .)
    LEE             reduce using rule 141 (empty -> .)
    DECR            reduce using rule 141 (empty -> .)
    INCR            reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! IDENT           [ reduce using rule 141 (empty -> .) ]

    multi                          shift and go to state 73
    expr                           shift and go to state 191
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 143

    (111) expr -> multi MENOS . expr
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    LIMPIA          reduce using rule 141 (empty -> .)
    INTERRUMPE      reduce using rule 141 (empty -> .)
    CONTINUA        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    DESDE           reduce using rule 141 (empty -> .)
    REPETIR         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    CUANDO          reduce using rule 141 (empty -> .)
    REGRESA         reduce using rule 141 (empty -> .)
    IMPRIME         reduce using rule 141 (empty -> .)
    IMPRIMENL       reduce using rule 141 (empty -> .)
    LEE             reduce using rule 141 (empty -> .)
    DECR            reduce using rule 141 (empty -> .)
    INCR            reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! IDENT           [ reduce using rule 141 (empty -> .) ]

    multi                          shift and go to state 73
    expr                           shift and go to state 192
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 144

    (120) signo -> MENOS termino .

    POTENCIA        reduce using rule 120 (signo -> MENOS termino .)
    MULTI           reduce using rule 120 (signo -> MENOS termino .)
    DIV             reduce using rule 120 (signo -> MENOS termino .)
    MOD             reduce using rule 120 (signo -> MENOS termino .)
    MAS             reduce using rule 120 (signo -> MENOS termino .)
    MENOS           reduce using rule 120 (signo -> MENOS termino .)
    OP_REL          reduce using rule 120 (signo -> MENOS termino .)
    Y               reduce using rule 120 (signo -> MENOS termino .)
    O               reduce using rule 120 (signo -> MENOS termino .)
    CORCHETE_TERMINA reduce using rule 120 (signo -> MENOS termino .)
    error           reduce using rule 120 (signo -> MENOS termino .)
    COMA            reduce using rule 120 (signo -> MENOS termino .)
    PAREN_TERMINA   reduce using rule 120 (signo -> MENOS termino .)
    PUNTO_COMA      reduce using rule 120 (signo -> MENOS termino .)
    HASTA           reduce using rule 120 (signo -> MENOS termino .)
    SINO            reduce using rule 120 (signo -> MENOS termino .)
    FIN             reduce using rule 120 (signo -> MENOS termino .)
    SEA             reduce using rule 120 (signo -> MENOS termino .)
    OTRO            reduce using rule 120 (signo -> MENOS termino .)
    INICIO          reduce using rule 120 (signo -> MENOS termino .)
    LIMPIA          reduce using rule 120 (signo -> MENOS termino .)
    INTERRUMPE      reduce using rule 120 (signo -> MENOS termino .)
    CONTINUA        reduce using rule 120 (signo -> MENOS termino .)
    SI              reduce using rule 120 (signo -> MENOS termino .)
    IDENT           reduce using rule 120 (signo -> MENOS termino .)
    DESDE           reduce using rule 120 (signo -> MENOS termino .)
    REPETIR         reduce using rule 120 (signo -> MENOS termino .)
    MIENTRAS        reduce using rule 120 (signo -> MENOS termino .)
    CUANDO          reduce using rule 120 (signo -> MENOS termino .)
    REGRESA         reduce using rule 120 (signo -> MENOS termino .)
    IMPRIME         reduce using rule 120 (signo -> MENOS termino .)
    IMPRIMENL       reduce using rule 120 (signo -> MENOS termino .)
    LEE             reduce using rule 120 (signo -> MENOS termino .)
    DECR            reduce using rule 120 (signo -> MENOS termino .)
    INCR            reduce using rule 120 (signo -> MENOS termino .)


state 145

    (113) multi -> expo MULTI . multi
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    LIMPIA          reduce using rule 141 (empty -> .)
    INTERRUMPE      reduce using rule 141 (empty -> .)
    CONTINUA        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    DESDE           reduce using rule 141 (empty -> .)
    REPETIR         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    CUANDO          reduce using rule 141 (empty -> .)
    REGRESA         reduce using rule 141 (empty -> .)
    IMPRIME         reduce using rule 141 (empty -> .)
    IMPRIMENL       reduce using rule 141 (empty -> .)
    LEE             reduce using rule 141 (empty -> .)
    DECR            reduce using rule 141 (empty -> .)
    INCR            reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! IDENT           [ reduce using rule 141 (empty -> .) ]

    expo                           shift and go to state 75
    multi                          shift and go to state 193
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 146

    (114) multi -> expo DIV . multi
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    LIMPIA          reduce using rule 141 (empty -> .)
    INTERRUMPE      reduce using rule 141 (empty -> .)
    CONTINUA        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    DESDE           reduce using rule 141 (empty -> .)
    REPETIR         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    CUANDO          reduce using rule 141 (empty -> .)
    REGRESA         reduce using rule 141 (empty -> .)
    IMPRIME         reduce using rule 141 (empty -> .)
    IMPRIMENL       reduce using rule 141 (empty -> .)
    LEE             reduce using rule 141 (empty -> .)
    DECR            reduce using rule 141 (empty -> .)
    INCR            reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! IDENT           [ reduce using rule 141 (empty -> .) ]

    expo                           shift and go to state 75
    multi                          shift and go to state 194
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 147

    (115) multi -> expo MOD . multi
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    LIMPIA          reduce using rule 141 (empty -> .)
    INTERRUMPE      reduce using rule 141 (empty -> .)
    CONTINUA        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    DESDE           reduce using rule 141 (empty -> .)
    REPETIR         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    CUANDO          reduce using rule 141 (empty -> .)
    REGRESA         reduce using rule 141 (empty -> .)
    IMPRIME         reduce using rule 141 (empty -> .)
    IMPRIMENL       reduce using rule 141 (empty -> .)
    LEE             reduce using rule 141 (empty -> .)
    DECR            reduce using rule 141 (empty -> .)
    INCR            reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! IDENT           [ reduce using rule 141 (empty -> .) ]

    expo                           shift and go to state 75
    multi                          shift and go to state 195
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 148

    (118) expo -> signo POTENCIA . expo
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

    signo                          shift and go to state 76
    expo                           shift and go to state 196
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 149

    (19) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA . dimens
    (19) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (20) dimens -> .
    (21) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (22) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 37
    COMA            reduce using rule 20 (dimens -> .)
    PUNTOS_DOBLES   reduce using rule 20 (dimens -> .)
    PAREN_TERMINA   reduce using rule 20 (dimens -> .)
    error           shift and go to state 186

  ! error           [ reduce using rule 20 (dimens -> .) ]

    dimens                         shift and go to state 197

state 150

    (21) dimens -> CORCHETE_EMPIEZA valor error . dimens
    (19) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (20) dimens -> .
    (21) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (22) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 37
    COMA            reduce using rule 20 (dimens -> .)
    PUNTOS_DOBLES   reduce using rule 20 (dimens -> .)
    PAREN_TERMINA   reduce using rule 20 (dimens -> .)
    error           shift and go to state 186

  ! error           [ reduce using rule 20 (dimens -> .) ]

    dimens                         shift and go to state 198

state 151

    (99) udim -> CORCHETE_EMPIEZA . expr CORCHETE_TERMINA udim
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    MAS             reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    expr                           shift and go to state 199
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 152

    (100) udim -> empty .

    POTENCIA        reduce using rule 100 (udim -> empty .)
    MULTI           reduce using rule 100 (udim -> empty .)
    DIV             reduce using rule 100 (udim -> empty .)
    MOD             reduce using rule 100 (udim -> empty .)
    MAS             reduce using rule 100 (udim -> empty .)
    MENOS           reduce using rule 100 (udim -> empty .)
    OP_REL          reduce using rule 100 (udim -> empty .)
    Y               reduce using rule 100 (udim -> empty .)
    O               reduce using rule 100 (udim -> empty .)
    CORCHETE_TERMINA reduce using rule 100 (udim -> empty .)
    error           reduce using rule 100 (udim -> empty .)
    COMA            reduce using rule 100 (udim -> empty .)
    PAREN_TERMINA   reduce using rule 100 (udim -> empty .)
    PUNTO_COMA      reduce using rule 100 (udim -> empty .)
    HASTA           reduce using rule 100 (udim -> empty .)
    SINO            reduce using rule 100 (udim -> empty .)
    FIN             reduce using rule 100 (udim -> empty .)
    SEA             reduce using rule 100 (udim -> empty .)
    OTRO            reduce using rule 100 (udim -> empty .)
    INICIO          reduce using rule 100 (udim -> empty .)
    LIMPIA          reduce using rule 100 (udim -> empty .)
    INTERRUMPE      reduce using rule 100 (udim -> empty .)
    CONTINUA        reduce using rule 100 (udim -> empty .)
    SI              reduce using rule 100 (udim -> empty .)
    IDENT           reduce using rule 100 (udim -> empty .)
    DESDE           reduce using rule 100 (udim -> empty .)
    REPETIR         reduce using rule 100 (udim -> empty .)
    MIENTRAS        reduce using rule 100 (udim -> empty .)
    CUANDO          reduce using rule 100 (udim -> empty .)
    REGRESA         reduce using rule 100 (udim -> empty .)
    IMPRIME         reduce using rule 100 (udim -> empty .)
    IMPRIMENL       reduce using rule 100 (udim -> empty .)
    LEE             reduce using rule 100 (udim -> empty .)
    DECR            reduce using rule 100 (udim -> empty .)
    INCR            reduce using rule 100 (udim -> empty .)
    OP_ASIG         reduce using rule 100 (udim -> empty .)


state 153

    (31) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 31 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 31 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 31 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 31 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 31 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)


state 154

    (32) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 32 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 32 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 32 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 32 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 32 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)


state 155

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN . DE PROGRAMA PUNTO

    DE              shift and go to state 200


state 156

    (58) block -> estatuto puntoc . block
    (59) block -> estatuto puntoc .
    (58) block -> . estatuto puntoc block
    (59) block -> . estatuto puntoc
    (61) block -> . estatuto error
    (62) block -> . estatuto error block
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

    FIN             reduce using rule 59 (block -> estatuto puntoc .)
    HASTA           reduce using rule 59 (block -> estatuto puntoc .)
    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117
    error           reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)

    estatuto                       shift and go to state 92
    block                          shift and go to state 201
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 157

    (61) block -> estatuto error .
    (62) block -> estatuto error . block
    (58) block -> . estatuto puntoc block
    (59) block -> . estatuto puntoc
    (61) block -> . estatuto error
    (62) block -> . estatuto error block
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

    FIN             reduce using rule 61 (block -> estatuto error .)
    HASTA           reduce using rule 61 (block -> estatuto error .)
    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117
    error           reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)

    estatuto                       shift and go to state 92
    block                          shift and go to state 202
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 158

    (60) puntoc -> PUNTO_COMA .

    LIMPIA          reduce using rule 60 (puntoc -> PUNTO_COMA .)
    INTERRUMPE      reduce using rule 60 (puntoc -> PUNTO_COMA .)
    CONTINUA        reduce using rule 60 (puntoc -> PUNTO_COMA .)
    SI              reduce using rule 60 (puntoc -> PUNTO_COMA .)
    IDENT           reduce using rule 60 (puntoc -> PUNTO_COMA .)
    DESDE           reduce using rule 60 (puntoc -> PUNTO_COMA .)
    REPETIR         reduce using rule 60 (puntoc -> PUNTO_COMA .)
    MIENTRAS        reduce using rule 60 (puntoc -> PUNTO_COMA .)
    CUANDO          reduce using rule 60 (puntoc -> PUNTO_COMA .)
    REGRESA         reduce using rule 60 (puntoc -> PUNTO_COMA .)
    IMPRIME         reduce using rule 60 (puntoc -> PUNTO_COMA .)
    IMPRIMENL       reduce using rule 60 (puntoc -> PUNTO_COMA .)
    LEE             reduce using rule 60 (puntoc -> PUNTO_COMA .)
    error           reduce using rule 60 (puntoc -> PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 60 (puntoc -> PUNTO_COMA .)
    FIN             reduce using rule 60 (puntoc -> PUNTO_COMA .)
    HASTA           reduce using rule 60 (puntoc -> PUNTO_COMA .)


state 159

    (78) si -> SI PAREN_EMPIEZA . exprlog PAREN_TERMINA HACER bckesp sino
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    exprlog                        shift and go to state 203
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 160

    (89) asigna -> IDENT udim . OP_ASIG exprlog

    OP_ASIG         shift and go to state 204


state 161

    (84) desde -> DESDE EL . VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> DESDE EL . VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> DESDE EL . VALOR DE asigna HASTA expr error bckesp

    VALOR           shift and go to state 205


state 162

    (87) repetir -> REPETIR block . HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    HASTA           shift and go to state 206


state 163

    (88) mientras -> MIENTRAS SE . CUMPLA QUE exprlog bckesp

    CUMPLA          shift and go to state 207


state 164

    (90) cuando -> CUANDO EL . VALOR DE IDENT INICIO gposea otro FIN

    VALOR           shift and go to state 208


state 165

    (98) regresa -> REGRESA PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    exprlog                        shift and go to state 209
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 166

    (132) imprime -> IMPRIME PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (137) gpoexp -> . exprlog
    (138) gpoexp -> . exprlog COMA gpoexp
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    gpoexp                         shift and go to state 210
    exprlog                        shift and go to state 211
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 167

    (133) imprimenl -> IMPRIMENL PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (134) imprimenl -> IMPRIMENL PAREN_EMPIEZA . gpoexp error
    (137) gpoexp -> . exprlog
    (138) gpoexp -> . exprlog COMA gpoexp
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    gpoexp                         shift and go to state 212
    exprlog                        shift and go to state 211
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 168

    (135) lee -> LEE PAREN_EMPIEZA . IDENT PAREN_TERMINA
    (136) lee -> LEE PAREN_EMPIEZA . IDENT dimens PAREN_TERMINA

    IDENT           shift and go to state 213


state 169

    (51) gpopars -> IDENT . COMA gpopars
    (52) gpopars -> IDENT .

    COMA            shift and go to state 214
    PUNTOS_DOBLES   reduce using rule 52 (gpopars -> IDENT .)
    error           reduce using rule 52 (gpopars -> IDENT .)


state 170

    (56) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 215


state 171

    (45) params -> gpopars . PUNTOS_DOBLES TIPO otrospars
    (47) params -> gpopars . PUNTOS_DOBLES error otrospars
    (48) params -> gpopars . error TIPO otrospars

    PUNTOS_DOBLES   shift and go to state 216
    error           shift and go to state 217


state 172

    (46) params -> empty .

    PAREN_TERMINA   reduce using rule 46 (params -> empty .)


state 173

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_TERMINA   shift and go to state 218


state 174

    (34) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 219


state 175

    (40) protfunc -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 220


state 176

    (41) protfunc -> FUNCION error PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 221


state 177

    (42) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 222


state 178

    (43) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 223


state 179

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)


state 180

    (9) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    INICIO          reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)


state 181

    (7) gpovars -> gpoids error TIPO PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)


state 182

    (129) lfunc -> IDENT parenemp uparams . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 224


state 183

    (130) lfunc -> IDENT parenemp error . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 225


state 184

    (139) uparams -> exprlog .
    (140) uparams -> exprlog . COMA uparams

    PAREN_TERMINA   reduce using rule 139 (uparams -> exprlog .)
    COMA            shift and go to state 226


state 185

    (99) udim -> CORCHETE_EMPIEZA expr . CORCHETE_TERMINA udim
    (107) oprel -> expr .
    (108) oprel -> expr . OP_REL oprel

  ! shift/reduce conflict for CORCHETE_TERMINA resolved as shift
    CORCHETE_TERMINA shift and go to state 227
    Y               reduce using rule 107 (oprel -> expr .)
    O               reduce using rule 107 (oprel -> expr .)
    error           reduce using rule 107 (oprel -> expr .)
    OP_REL          shift and go to state 141

  ! CORCHETE_TERMINA [ reduce using rule 107 (oprel -> expr .) ]


state 186

    (22) dimens -> error . valor CORCHETE_TERMINA dimens
    (26) valor -> . exprlog
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    valor                          shift and go to state 65
    exprlog                        shift and go to state 67
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 187

    (22) dimens -> error valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 22 (dimens -> error valor CORCHETE_TERMINA dimens .)
    error           reduce using rule 22 (dimens -> error valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 22 (dimens -> error valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 22 (dimens -> error valor CORCHETE_TERMINA dimens .)


state 188

    (102) exprlog -> opy O exprlog .

    CORCHETE_TERMINA reduce using rule 102 (exprlog -> opy O exprlog .)
    error           reduce using rule 102 (exprlog -> opy O exprlog .)
    COMA            reduce using rule 102 (exprlog -> opy O exprlog .)
    PAREN_TERMINA   reduce using rule 102 (exprlog -> opy O exprlog .)
    PUNTO_COMA      reduce using rule 102 (exprlog -> opy O exprlog .)
    HASTA           reduce using rule 102 (exprlog -> opy O exprlog .)
    SINO            reduce using rule 102 (exprlog -> opy O exprlog .)
    FIN             reduce using rule 102 (exprlog -> opy O exprlog .)
    SEA             reduce using rule 102 (exprlog -> opy O exprlog .)
    OTRO            reduce using rule 102 (exprlog -> opy O exprlog .)
    INICIO          reduce using rule 102 (exprlog -> opy O exprlog .)
    LIMPIA          reduce using rule 102 (exprlog -> opy O exprlog .)
    INTERRUMPE      reduce using rule 102 (exprlog -> opy O exprlog .)
    CONTINUA        reduce using rule 102 (exprlog -> opy O exprlog .)
    SI              reduce using rule 102 (exprlog -> opy O exprlog .)
    IDENT           reduce using rule 102 (exprlog -> opy O exprlog .)
    DESDE           reduce using rule 102 (exprlog -> opy O exprlog .)
    REPETIR         reduce using rule 102 (exprlog -> opy O exprlog .)
    MIENTRAS        reduce using rule 102 (exprlog -> opy O exprlog .)
    CUANDO          reduce using rule 102 (exprlog -> opy O exprlog .)
    REGRESA         reduce using rule 102 (exprlog -> opy O exprlog .)
    IMPRIME         reduce using rule 102 (exprlog -> opy O exprlog .)
    IMPRIMENL       reduce using rule 102 (exprlog -> opy O exprlog .)
    LEE             reduce using rule 102 (exprlog -> opy O exprlog .)


state 189

    (104) opy -> opno Y opy .

    O               reduce using rule 104 (opy -> opno Y opy .)
    CORCHETE_TERMINA reduce using rule 104 (opy -> opno Y opy .)
    error           reduce using rule 104 (opy -> opno Y opy .)
    COMA            reduce using rule 104 (opy -> opno Y opy .)
    PAREN_TERMINA   reduce using rule 104 (opy -> opno Y opy .)
    PUNTO_COMA      reduce using rule 104 (opy -> opno Y opy .)
    HASTA           reduce using rule 104 (opy -> opno Y opy .)
    SINO            reduce using rule 104 (opy -> opno Y opy .)
    FIN             reduce using rule 104 (opy -> opno Y opy .)
    SEA             reduce using rule 104 (opy -> opno Y opy .)
    OTRO            reduce using rule 104 (opy -> opno Y opy .)
    INICIO          reduce using rule 104 (opy -> opno Y opy .)
    LIMPIA          reduce using rule 104 (opy -> opno Y opy .)
    INTERRUMPE      reduce using rule 104 (opy -> opno Y opy .)
    CONTINUA        reduce using rule 104 (opy -> opno Y opy .)
    SI              reduce using rule 104 (opy -> opno Y opy .)
    IDENT           reduce using rule 104 (opy -> opno Y opy .)
    DESDE           reduce using rule 104 (opy -> opno Y opy .)
    REPETIR         reduce using rule 104 (opy -> opno Y opy .)
    MIENTRAS        reduce using rule 104 (opy -> opno Y opy .)
    CUANDO          reduce using rule 104 (opy -> opno Y opy .)
    REGRESA         reduce using rule 104 (opy -> opno Y opy .)
    IMPRIME         reduce using rule 104 (opy -> opno Y opy .)
    IMPRIMENL       reduce using rule 104 (opy -> opno Y opy .)
    LEE             reduce using rule 104 (opy -> opno Y opy .)


state 190

    (108) oprel -> expr OP_REL oprel .

    Y               reduce using rule 108 (oprel -> expr OP_REL oprel .)
    O               reduce using rule 108 (oprel -> expr OP_REL oprel .)
    CORCHETE_TERMINA reduce using rule 108 (oprel -> expr OP_REL oprel .)
    error           reduce using rule 108 (oprel -> expr OP_REL oprel .)
    COMA            reduce using rule 108 (oprel -> expr OP_REL oprel .)
    PAREN_TERMINA   reduce using rule 108 (oprel -> expr OP_REL oprel .)
    PUNTO_COMA      reduce using rule 108 (oprel -> expr OP_REL oprel .)
    HASTA           reduce using rule 108 (oprel -> expr OP_REL oprel .)
    SINO            reduce using rule 108 (oprel -> expr OP_REL oprel .)
    FIN             reduce using rule 108 (oprel -> expr OP_REL oprel .)
    SEA             reduce using rule 108 (oprel -> expr OP_REL oprel .)
    OTRO            reduce using rule 108 (oprel -> expr OP_REL oprel .)
    INICIO          reduce using rule 108 (oprel -> expr OP_REL oprel .)
    LIMPIA          reduce using rule 108 (oprel -> expr OP_REL oprel .)
    INTERRUMPE      reduce using rule 108 (oprel -> expr OP_REL oprel .)
    CONTINUA        reduce using rule 108 (oprel -> expr OP_REL oprel .)
    SI              reduce using rule 108 (oprel -> expr OP_REL oprel .)
    IDENT           reduce using rule 108 (oprel -> expr OP_REL oprel .)
    DESDE           reduce using rule 108 (oprel -> expr OP_REL oprel .)
    REPETIR         reduce using rule 108 (oprel -> expr OP_REL oprel .)
    MIENTRAS        reduce using rule 108 (oprel -> expr OP_REL oprel .)
    CUANDO          reduce using rule 108 (oprel -> expr OP_REL oprel .)
    REGRESA         reduce using rule 108 (oprel -> expr OP_REL oprel .)
    IMPRIME         reduce using rule 108 (oprel -> expr OP_REL oprel .)
    IMPRIMENL       reduce using rule 108 (oprel -> expr OP_REL oprel .)
    LEE             reduce using rule 108 (oprel -> expr OP_REL oprel .)


state 191

    (110) expr -> multi MAS expr .

    OP_REL          reduce using rule 110 (expr -> multi MAS expr .)
    Y               reduce using rule 110 (expr -> multi MAS expr .)
    O               reduce using rule 110 (expr -> multi MAS expr .)
    CORCHETE_TERMINA reduce using rule 110 (expr -> multi MAS expr .)
    error           reduce using rule 110 (expr -> multi MAS expr .)
    COMA            reduce using rule 110 (expr -> multi MAS expr .)
    PAREN_TERMINA   reduce using rule 110 (expr -> multi MAS expr .)
    PUNTO_COMA      reduce using rule 110 (expr -> multi MAS expr .)
    HASTA           reduce using rule 110 (expr -> multi MAS expr .)
    SINO            reduce using rule 110 (expr -> multi MAS expr .)
    FIN             reduce using rule 110 (expr -> multi MAS expr .)
    SEA             reduce using rule 110 (expr -> multi MAS expr .)
    OTRO            reduce using rule 110 (expr -> multi MAS expr .)
    INICIO          reduce using rule 110 (expr -> multi MAS expr .)
    LIMPIA          reduce using rule 110 (expr -> multi MAS expr .)
    INTERRUMPE      reduce using rule 110 (expr -> multi MAS expr .)
    CONTINUA        reduce using rule 110 (expr -> multi MAS expr .)
    SI              reduce using rule 110 (expr -> multi MAS expr .)
    IDENT           reduce using rule 110 (expr -> multi MAS expr .)
    DESDE           reduce using rule 110 (expr -> multi MAS expr .)
    REPETIR         reduce using rule 110 (expr -> multi MAS expr .)
    MIENTRAS        reduce using rule 110 (expr -> multi MAS expr .)
    CUANDO          reduce using rule 110 (expr -> multi MAS expr .)
    REGRESA         reduce using rule 110 (expr -> multi MAS expr .)
    IMPRIME         reduce using rule 110 (expr -> multi MAS expr .)
    IMPRIMENL       reduce using rule 110 (expr -> multi MAS expr .)
    LEE             reduce using rule 110 (expr -> multi MAS expr .)
    DECR            reduce using rule 110 (expr -> multi MAS expr .)
    INCR            reduce using rule 110 (expr -> multi MAS expr .)


state 192

    (111) expr -> multi MENOS expr .

    OP_REL          reduce using rule 111 (expr -> multi MENOS expr .)
    Y               reduce using rule 111 (expr -> multi MENOS expr .)
    O               reduce using rule 111 (expr -> multi MENOS expr .)
    CORCHETE_TERMINA reduce using rule 111 (expr -> multi MENOS expr .)
    error           reduce using rule 111 (expr -> multi MENOS expr .)
    COMA            reduce using rule 111 (expr -> multi MENOS expr .)
    PAREN_TERMINA   reduce using rule 111 (expr -> multi MENOS expr .)
    PUNTO_COMA      reduce using rule 111 (expr -> multi MENOS expr .)
    HASTA           reduce using rule 111 (expr -> multi MENOS expr .)
    SINO            reduce using rule 111 (expr -> multi MENOS expr .)
    FIN             reduce using rule 111 (expr -> multi MENOS expr .)
    SEA             reduce using rule 111 (expr -> multi MENOS expr .)
    OTRO            reduce using rule 111 (expr -> multi MENOS expr .)
    INICIO          reduce using rule 111 (expr -> multi MENOS expr .)
    LIMPIA          reduce using rule 111 (expr -> multi MENOS expr .)
    INTERRUMPE      reduce using rule 111 (expr -> multi MENOS expr .)
    CONTINUA        reduce using rule 111 (expr -> multi MENOS expr .)
    SI              reduce using rule 111 (expr -> multi MENOS expr .)
    IDENT           reduce using rule 111 (expr -> multi MENOS expr .)
    DESDE           reduce using rule 111 (expr -> multi MENOS expr .)
    REPETIR         reduce using rule 111 (expr -> multi MENOS expr .)
    MIENTRAS        reduce using rule 111 (expr -> multi MENOS expr .)
    CUANDO          reduce using rule 111 (expr -> multi MENOS expr .)
    REGRESA         reduce using rule 111 (expr -> multi MENOS expr .)
    IMPRIME         reduce using rule 111 (expr -> multi MENOS expr .)
    IMPRIMENL       reduce using rule 111 (expr -> multi MENOS expr .)
    LEE             reduce using rule 111 (expr -> multi MENOS expr .)
    DECR            reduce using rule 111 (expr -> multi MENOS expr .)
    INCR            reduce using rule 111 (expr -> multi MENOS expr .)


state 193

    (113) multi -> expo MULTI multi .

    MAS             reduce using rule 113 (multi -> expo MULTI multi .)
    MENOS           reduce using rule 113 (multi -> expo MULTI multi .)
    OP_REL          reduce using rule 113 (multi -> expo MULTI multi .)
    Y               reduce using rule 113 (multi -> expo MULTI multi .)
    O               reduce using rule 113 (multi -> expo MULTI multi .)
    CORCHETE_TERMINA reduce using rule 113 (multi -> expo MULTI multi .)
    error           reduce using rule 113 (multi -> expo MULTI multi .)
    COMA            reduce using rule 113 (multi -> expo MULTI multi .)
    PAREN_TERMINA   reduce using rule 113 (multi -> expo MULTI multi .)
    PUNTO_COMA      reduce using rule 113 (multi -> expo MULTI multi .)
    HASTA           reduce using rule 113 (multi -> expo MULTI multi .)
    SINO            reduce using rule 113 (multi -> expo MULTI multi .)
    FIN             reduce using rule 113 (multi -> expo MULTI multi .)
    SEA             reduce using rule 113 (multi -> expo MULTI multi .)
    OTRO            reduce using rule 113 (multi -> expo MULTI multi .)
    INICIO          reduce using rule 113 (multi -> expo MULTI multi .)
    LIMPIA          reduce using rule 113 (multi -> expo MULTI multi .)
    INTERRUMPE      reduce using rule 113 (multi -> expo MULTI multi .)
    CONTINUA        reduce using rule 113 (multi -> expo MULTI multi .)
    SI              reduce using rule 113 (multi -> expo MULTI multi .)
    IDENT           reduce using rule 113 (multi -> expo MULTI multi .)
    DESDE           reduce using rule 113 (multi -> expo MULTI multi .)
    REPETIR         reduce using rule 113 (multi -> expo MULTI multi .)
    MIENTRAS        reduce using rule 113 (multi -> expo MULTI multi .)
    CUANDO          reduce using rule 113 (multi -> expo MULTI multi .)
    REGRESA         reduce using rule 113 (multi -> expo MULTI multi .)
    IMPRIME         reduce using rule 113 (multi -> expo MULTI multi .)
    IMPRIMENL       reduce using rule 113 (multi -> expo MULTI multi .)
    LEE             reduce using rule 113 (multi -> expo MULTI multi .)
    DECR            reduce using rule 113 (multi -> expo MULTI multi .)
    INCR            reduce using rule 113 (multi -> expo MULTI multi .)


state 194

    (114) multi -> expo DIV multi .

    MAS             reduce using rule 114 (multi -> expo DIV multi .)
    MENOS           reduce using rule 114 (multi -> expo DIV multi .)
    OP_REL          reduce using rule 114 (multi -> expo DIV multi .)
    Y               reduce using rule 114 (multi -> expo DIV multi .)
    O               reduce using rule 114 (multi -> expo DIV multi .)
    CORCHETE_TERMINA reduce using rule 114 (multi -> expo DIV multi .)
    error           reduce using rule 114 (multi -> expo DIV multi .)
    COMA            reduce using rule 114 (multi -> expo DIV multi .)
    PAREN_TERMINA   reduce using rule 114 (multi -> expo DIV multi .)
    PUNTO_COMA      reduce using rule 114 (multi -> expo DIV multi .)
    HASTA           reduce using rule 114 (multi -> expo DIV multi .)
    SINO            reduce using rule 114 (multi -> expo DIV multi .)
    FIN             reduce using rule 114 (multi -> expo DIV multi .)
    SEA             reduce using rule 114 (multi -> expo DIV multi .)
    OTRO            reduce using rule 114 (multi -> expo DIV multi .)
    INICIO          reduce using rule 114 (multi -> expo DIV multi .)
    LIMPIA          reduce using rule 114 (multi -> expo DIV multi .)
    INTERRUMPE      reduce using rule 114 (multi -> expo DIV multi .)
    CONTINUA        reduce using rule 114 (multi -> expo DIV multi .)
    SI              reduce using rule 114 (multi -> expo DIV multi .)
    IDENT           reduce using rule 114 (multi -> expo DIV multi .)
    DESDE           reduce using rule 114 (multi -> expo DIV multi .)
    REPETIR         reduce using rule 114 (multi -> expo DIV multi .)
    MIENTRAS        reduce using rule 114 (multi -> expo DIV multi .)
    CUANDO          reduce using rule 114 (multi -> expo DIV multi .)
    REGRESA         reduce using rule 114 (multi -> expo DIV multi .)
    IMPRIME         reduce using rule 114 (multi -> expo DIV multi .)
    IMPRIMENL       reduce using rule 114 (multi -> expo DIV multi .)
    LEE             reduce using rule 114 (multi -> expo DIV multi .)
    DECR            reduce using rule 114 (multi -> expo DIV multi .)
    INCR            reduce using rule 114 (multi -> expo DIV multi .)


state 195

    (115) multi -> expo MOD multi .

    MAS             reduce using rule 115 (multi -> expo MOD multi .)
    MENOS           reduce using rule 115 (multi -> expo MOD multi .)
    OP_REL          reduce using rule 115 (multi -> expo MOD multi .)
    Y               reduce using rule 115 (multi -> expo MOD multi .)
    O               reduce using rule 115 (multi -> expo MOD multi .)
    CORCHETE_TERMINA reduce using rule 115 (multi -> expo MOD multi .)
    error           reduce using rule 115 (multi -> expo MOD multi .)
    COMA            reduce using rule 115 (multi -> expo MOD multi .)
    PAREN_TERMINA   reduce using rule 115 (multi -> expo MOD multi .)
    PUNTO_COMA      reduce using rule 115 (multi -> expo MOD multi .)
    HASTA           reduce using rule 115 (multi -> expo MOD multi .)
    SINO            reduce using rule 115 (multi -> expo MOD multi .)
    FIN             reduce using rule 115 (multi -> expo MOD multi .)
    SEA             reduce using rule 115 (multi -> expo MOD multi .)
    OTRO            reduce using rule 115 (multi -> expo MOD multi .)
    INICIO          reduce using rule 115 (multi -> expo MOD multi .)
    LIMPIA          reduce using rule 115 (multi -> expo MOD multi .)
    INTERRUMPE      reduce using rule 115 (multi -> expo MOD multi .)
    CONTINUA        reduce using rule 115 (multi -> expo MOD multi .)
    SI              reduce using rule 115 (multi -> expo MOD multi .)
    IDENT           reduce using rule 115 (multi -> expo MOD multi .)
    DESDE           reduce using rule 115 (multi -> expo MOD multi .)
    REPETIR         reduce using rule 115 (multi -> expo MOD multi .)
    MIENTRAS        reduce using rule 115 (multi -> expo MOD multi .)
    CUANDO          reduce using rule 115 (multi -> expo MOD multi .)
    REGRESA         reduce using rule 115 (multi -> expo MOD multi .)
    IMPRIME         reduce using rule 115 (multi -> expo MOD multi .)
    IMPRIMENL       reduce using rule 115 (multi -> expo MOD multi .)
    LEE             reduce using rule 115 (multi -> expo MOD multi .)
    DECR            reduce using rule 115 (multi -> expo MOD multi .)
    INCR            reduce using rule 115 (multi -> expo MOD multi .)


state 196

    (118) expo -> signo POTENCIA expo .

    MULTI           reduce using rule 118 (expo -> signo POTENCIA expo .)
    DIV             reduce using rule 118 (expo -> signo POTENCIA expo .)
    MOD             reduce using rule 118 (expo -> signo POTENCIA expo .)
    MAS             reduce using rule 118 (expo -> signo POTENCIA expo .)
    MENOS           reduce using rule 118 (expo -> signo POTENCIA expo .)
    OP_REL          reduce using rule 118 (expo -> signo POTENCIA expo .)
    Y               reduce using rule 118 (expo -> signo POTENCIA expo .)
    O               reduce using rule 118 (expo -> signo POTENCIA expo .)
    CORCHETE_TERMINA reduce using rule 118 (expo -> signo POTENCIA expo .)
    error           reduce using rule 118 (expo -> signo POTENCIA expo .)
    COMA            reduce using rule 118 (expo -> signo POTENCIA expo .)
    PAREN_TERMINA   reduce using rule 118 (expo -> signo POTENCIA expo .)
    PUNTO_COMA      reduce using rule 118 (expo -> signo POTENCIA expo .)
    HASTA           reduce using rule 118 (expo -> signo POTENCIA expo .)
    SINO            reduce using rule 118 (expo -> signo POTENCIA expo .)
    FIN             reduce using rule 118 (expo -> signo POTENCIA expo .)
    SEA             reduce using rule 118 (expo -> signo POTENCIA expo .)
    OTRO            reduce using rule 118 (expo -> signo POTENCIA expo .)
    INICIO          reduce using rule 118 (expo -> signo POTENCIA expo .)
    LIMPIA          reduce using rule 118 (expo -> signo POTENCIA expo .)
    INTERRUMPE      reduce using rule 118 (expo -> signo POTENCIA expo .)
    CONTINUA        reduce using rule 118 (expo -> signo POTENCIA expo .)
    SI              reduce using rule 118 (expo -> signo POTENCIA expo .)
    IDENT           reduce using rule 118 (expo -> signo POTENCIA expo .)
    DESDE           reduce using rule 118 (expo -> signo POTENCIA expo .)
    REPETIR         reduce using rule 118 (expo -> signo POTENCIA expo .)
    MIENTRAS        reduce using rule 118 (expo -> signo POTENCIA expo .)
    CUANDO          reduce using rule 118 (expo -> signo POTENCIA expo .)
    REGRESA         reduce using rule 118 (expo -> signo POTENCIA expo .)
    IMPRIME         reduce using rule 118 (expo -> signo POTENCIA expo .)
    IMPRIMENL       reduce using rule 118 (expo -> signo POTENCIA expo .)
    LEE             reduce using rule 118 (expo -> signo POTENCIA expo .)
    DECR            reduce using rule 118 (expo -> signo POTENCIA expo .)
    INCR            reduce using rule 118 (expo -> signo POTENCIA expo .)


state 197

    (19) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 19 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    error           reduce using rule 19 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 19 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 19 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)


state 198

    (21) dimens -> CORCHETE_EMPIEZA valor error dimens .

    COMA            reduce using rule 21 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    error           reduce using rule 21 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    PUNTOS_DOBLES   reduce using rule 21 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    PAREN_TERMINA   reduce using rule 21 (dimens -> CORCHETE_EMPIEZA valor error dimens .)


state 199

    (99) udim -> CORCHETE_EMPIEZA expr . CORCHETE_TERMINA udim

    CORCHETE_TERMINA shift and go to state 227


state 200

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE . PROGRAMA PUNTO

    PROGRAMA        shift and go to state 228


state 201

    (58) block -> estatuto puntoc block .

    FIN             reduce using rule 58 (block -> estatuto puntoc block .)
    HASTA           reduce using rule 58 (block -> estatuto puntoc block .)


state 202

    (62) block -> estatuto error block .

    FIN             reduce using rule 62 (block -> estatuto error block .)
    HASTA           reduce using rule 62 (block -> estatuto error block .)


state 203

    (78) si -> SI PAREN_EMPIEZA exprlog . PAREN_TERMINA HACER bckesp sino

    PAREN_TERMINA   shift and go to state 229


state 204

    (89) asigna -> IDENT udim OP_ASIG . exprlog
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    exprlog                        shift and go to state 230
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 205

    (84) desde -> DESDE EL VALOR . DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> DESDE EL VALOR . DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> DESDE EL VALOR . DE asigna HASTA expr error bckesp

    DE              shift and go to state 231


state 206

    (87) repetir -> REPETIR block HASTA . QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    QUE             shift and go to state 232


state 207

    (88) mientras -> MIENTRAS SE CUMPLA . QUE exprlog bckesp

    QUE             shift and go to state 233


state 208

    (90) cuando -> CUANDO EL VALOR . DE IDENT INICIO gposea otro FIN

    DE              shift and go to state 234


state 209

    (98) regresa -> REGRESA PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 235


state 210

    (132) imprime -> IMPRIME PAREN_EMPIEZA gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 236


state 211

    (137) gpoexp -> exprlog .
    (138) gpoexp -> exprlog . COMA gpoexp

    PAREN_TERMINA   reduce using rule 137 (gpoexp -> exprlog .)
    error           reduce using rule 137 (gpoexp -> exprlog .)
    COMA            shift and go to state 237


state 212

    (133) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp . PAREN_TERMINA
    (134) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp . error

    PAREN_TERMINA   shift and go to state 238
    error           shift and go to state 239


state 213

    (135) lee -> LEE PAREN_EMPIEZA IDENT . PAREN_TERMINA
    (136) lee -> LEE PAREN_EMPIEZA IDENT . dimens PAREN_TERMINA
    (19) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (20) dimens -> .
    (21) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (22) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for PAREN_TERMINA resolved as shift
    PAREN_TERMINA   shift and go to state 240
    CORCHETE_EMPIEZA shift and go to state 37
    error           shift and go to state 186

  ! PAREN_TERMINA   [ reduce using rule 20 (dimens -> .) ]

    dimens                         shift and go to state 241

state 214

    (51) gpopars -> IDENT COMA . gpopars
    (51) gpopars -> . IDENT COMA gpopars
    (52) gpopars -> . IDENT

    IDENT           shift and go to state 169

    gpopars                        shift and go to state 242

state 215

    (56) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (141) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 141 (empty -> .)

    variables                      shift and go to state 243
    empty                          shift and go to state 7

state 216

    (45) params -> gpopars PUNTOS_DOBLES . TIPO otrospars
    (47) params -> gpopars PUNTOS_DOBLES . error otrospars

    TIPO            shift and go to state 244
    error           shift and go to state 245


state 217

    (48) params -> gpopars error . TIPO otrospars

    TIPO            shift and go to state 246


state 218

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 247


state 219

    (34) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 34 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    FUNCION         reduce using rule 34 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    PROGRAMA        reduce using rule 34 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)


state 220

    (40) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 248


state 221

    (41) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 249


state 222

    (42) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 250


state 223

    (43) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 251


state 224

    (129) lfunc -> IDENT parenemp uparams PAREN_TERMINA .

    POTENCIA        reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MULTI           reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DIV             reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MOD             reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MAS             reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MENOS           reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OP_REL          reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    Y               reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    O               reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CORCHETE_TERMINA reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    error           reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    COMA            reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    HASTA           reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SINO            reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    FIN             reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SEA             reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OTRO            reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INICIO          reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    LIMPIA          reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CONTINUA        reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SI              reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IDENT           reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DESDE           reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    REPETIR         reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MIENTRAS        reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CUANDO          reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    REGRESA         reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IMPRIME         reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    LEE             reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DECR            reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INCR            reduce using rule 129 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)


state 225

    (130) lfunc -> IDENT parenemp error PAREN_TERMINA .

    POTENCIA        reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MULTI           reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DIV             reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MOD             reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MAS             reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MENOS           reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OP_REL          reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    Y               reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    O               reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CORCHETE_TERMINA reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    error           reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    COMA            reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    HASTA           reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SINO            reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    FIN             reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SEA             reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OTRO            reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INICIO          reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    LIMPIA          reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CONTINUA        reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SI              reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IDENT           reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DESDE           reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    REPETIR         reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MIENTRAS        reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CUANDO          reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    REGRESA         reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IMPRIME         reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    LEE             reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DECR            reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INCR            reduce using rule 130 (lfunc -> IDENT parenemp error PAREN_TERMINA .)


state 226

    (140) uparams -> exprlog COMA . uparams
    (139) uparams -> . exprlog
    (140) uparams -> . exprlog COMA uparams
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    exprlog                        shift and go to state 184
    uparams                        shift and go to state 252
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 227

    (99) udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA . udim
    (99) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (100) udim -> . empty
    (141) empty -> .

    CORCHETE_EMPIEZA shift and go to state 151
    POTENCIA        reduce using rule 141 (empty -> .)
    MULTI           reduce using rule 141 (empty -> .)
    DIV             reduce using rule 141 (empty -> .)
    MOD             reduce using rule 141 (empty -> .)
    MAS             reduce using rule 141 (empty -> .)
    MENOS           reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    CORCHETE_TERMINA reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    LIMPIA          reduce using rule 141 (empty -> .)
    INTERRUMPE      reduce using rule 141 (empty -> .)
    CONTINUA        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    IDENT           reduce using rule 141 (empty -> .)
    DESDE           reduce using rule 141 (empty -> .)
    REPETIR         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    CUANDO          reduce using rule 141 (empty -> .)
    REGRESA         reduce using rule 141 (empty -> .)
    IMPRIME         reduce using rule 141 (empty -> .)
    IMPRIMENL       reduce using rule 141 (empty -> .)
    LEE             reduce using rule 141 (empty -> .)
    DECR            reduce using rule 141 (empty -> .)
    INCR            reduce using rule 141 (empty -> .)
    OP_ASIG         reduce using rule 141 (empty -> .)

    udim                           shift and go to state 253
    empty                          shift and go to state 152

state 228

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA . PUNTO

    PUNTO           shift and go to state 254


state 229

    (78) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA . HACER bckesp sino

    HACER           shift and go to state 255


state 230

    (89) asigna -> IDENT udim OP_ASIG exprlog .

    error           reduce using rule 89 (asigna -> IDENT udim OP_ASIG exprlog .)
    PUNTO_COMA      reduce using rule 89 (asigna -> IDENT udim OP_ASIG exprlog .)
    HASTA           reduce using rule 89 (asigna -> IDENT udim OP_ASIG exprlog .)
    SINO            reduce using rule 89 (asigna -> IDENT udim OP_ASIG exprlog .)
    FIN             reduce using rule 89 (asigna -> IDENT udim OP_ASIG exprlog .)
    SEA             reduce using rule 89 (asigna -> IDENT udim OP_ASIG exprlog .)
    OTRO            reduce using rule 89 (asigna -> IDENT udim OP_ASIG exprlog .)


state 231

    (84) desde -> DESDE EL VALOR DE . asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> DESDE EL VALOR DE . asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> DESDE EL VALOR DE . asigna HASTA expr error bckesp
    (89) asigna -> . IDENT udim OP_ASIG exprlog

    IDENT           shift and go to state 257

    asigna                         shift and go to state 256

state 232

    (87) repetir -> REPETIR block HASTA QUE . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 258


state 233

    (88) mientras -> MIENTRAS SE CUMPLA QUE . exprlog bckesp
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    INICIO          reduce using rule 141 (empty -> .)
    LIMPIA          reduce using rule 141 (empty -> .)
    INTERRUMPE      reduce using rule 141 (empty -> .)
    CONTINUA        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    DESDE           reduce using rule 141 (empty -> .)
    REPETIR         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    CUANDO          reduce using rule 141 (empty -> .)
    REGRESA         reduce using rule 141 (empty -> .)
    IMPRIME         reduce using rule 141 (empty -> .)
    IMPRIMENL       reduce using rule 141 (empty -> .)
    LEE             reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    SINO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]
  ! IDENT           [ reduce using rule 141 (empty -> .) ]

    exprlog                        shift and go to state 259
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 234

    (90) cuando -> CUANDO EL VALOR DE . IDENT INICIO gposea otro FIN

    IDENT           shift and go to state 260


state 235

    (98) regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .

    error           reduce using rule 98 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 98 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 98 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 98 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 98 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 98 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 236

    (132) imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    error           reduce using rule 132 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 132 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 132 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 132 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 132 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 132 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 237

    (138) gpoexp -> exprlog COMA . gpoexp
    (137) gpoexp -> . exprlog
    (138) gpoexp -> . exprlog COMA gpoexp
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    exprlog                        shift and go to state 211
    gpoexp                         shift and go to state 261
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 238

    (133) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    error           reduce using rule 133 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 133 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 133 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 133 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 133 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 133 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 239

    (134) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .

    error           reduce using rule 134 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    PUNTO_COMA      reduce using rule 134 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    SINO            reduce using rule 134 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    FIN             reduce using rule 134 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    SEA             reduce using rule 134 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    OTRO            reduce using rule 134 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)


state 240

    (135) lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .

    error           reduce using rule 135 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 135 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SINO            reduce using rule 135 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    FIN             reduce using rule 135 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SEA             reduce using rule 135 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    OTRO            reduce using rule 135 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)


state 241

    (136) lee -> LEE PAREN_EMPIEZA IDENT dimens . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 262


state 242

    (51) gpopars -> IDENT COMA gpopars .

    PUNTOS_DOBLES   reduce using rule 51 (gpopars -> IDENT COMA gpopars .)
    error           reduce using rule 51 (gpopars -> IDENT COMA gpopars .)


state 243

    (56) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables . INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    INICIO          shift and go to state 263


state 244

    (45) params -> gpopars PUNTOS_DOBLES TIPO . otrospars
    (49) otrospars -> . PUNTO_COMA params
    (50) otrospars -> . empty
    (141) empty -> .

    PUNTO_COMA      shift and go to state 265
    PAREN_TERMINA   reduce using rule 141 (empty -> .)

    otrospars                      shift and go to state 264
    empty                          shift and go to state 266

state 245

    (47) params -> gpopars PUNTOS_DOBLES error . otrospars
    (49) otrospars -> . PUNTO_COMA params
    (50) otrospars -> . empty
    (141) empty -> .

    PUNTO_COMA      shift and go to state 265
    PAREN_TERMINA   reduce using rule 141 (empty -> .)

    otrospars                      shift and go to state 267
    empty                          shift and go to state 266

state 246

    (48) params -> gpopars error TIPO . otrospars
    (49) otrospars -> . PUNTO_COMA params
    (50) otrospars -> . empty
    (141) empty -> .

    PUNTO_COMA      shift and go to state 265
    PAREN_TERMINA   reduce using rule 141 (empty -> .)

    otrospars                      shift and go to state 268
    empty                          shift and go to state 266

state 247

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    TIPO            shift and go to state 269


state 248

    (40) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 270


state 249

    (41) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 271


state 250

    (42) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    FUNCION         reduce using rule 42 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 42 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FIN             reduce using rule 42 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 251

    (43) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    FUNCION         reduce using rule 43 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 43 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FIN             reduce using rule 43 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 252

    (140) uparams -> exprlog COMA uparams .

    PAREN_TERMINA   reduce using rule 140 (uparams -> exprlog COMA uparams .)


state 253

    (99) udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .

    POTENCIA        reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MULTI           reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DIV             reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MOD             reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MAS             reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MENOS           reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OP_REL          reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    Y               reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    O               reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CORCHETE_TERMINA reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    error           reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    COMA            reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    PAREN_TERMINA   reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    PUNTO_COMA      reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    HASTA           reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SINO            reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    FIN             reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SEA             reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OTRO            reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INICIO          reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    LIMPIA          reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INTERRUMPE      reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CONTINUA        reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SI              reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IDENT           reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DESDE           reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    REPETIR         reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MIENTRAS        reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CUANDO          reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    REGRESA         reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IMPRIME         reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IMPRIMENL       reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    LEE             reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DECR            reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INCR            reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OP_ASIG         reduce using rule 99 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)


state 254

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO .

    $end            reduce using rule 1 (program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO .)


state 255

    (78) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER . bckesp sino
    (81) bckesp -> . estatuto
    (82) bckesp -> . INICIO block FIN
    (83) bckesp -> .
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 83 (bckesp -> .)
    INICIO          shift and go to state 274
    SINO            reduce using rule 83 (bckesp -> .)
    error           reduce using rule 83 (bckesp -> .)
    PUNTO_COMA      reduce using rule 83 (bckesp -> .)
    FIN             reduce using rule 83 (bckesp -> .)
    SEA             reduce using rule 83 (bckesp -> .)
    OTRO            reduce using rule 83 (bckesp -> .)
    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117

  ! SINO            [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 141 (empty -> .) ]
  ! FIN             [ reduce using rule 141 (empty -> .) ]
  ! SEA             [ reduce using rule 141 (empty -> .) ]
  ! OTRO            [ reduce using rule 141 (empty -> .) ]

    bckesp                         shift and go to state 272
    estatuto                       shift and go to state 273
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 256

    (84) desde -> DESDE EL VALOR DE asigna . HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> DESDE EL VALOR DE asigna . HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> DESDE EL VALOR DE asigna . HASTA expr error bckesp

    HASTA           shift and go to state 275


state 257

    (89) asigna -> IDENT . udim OP_ASIG exprlog
    (99) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (100) udim -> . empty
    (141) empty -> .

    CORCHETE_EMPIEZA shift and go to state 151
    OP_ASIG         reduce using rule 141 (empty -> .)

    udim                           shift and go to state 160
    empty                          shift and go to state 152

state 258

    (87) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (101) exprlog -> . opy
    (102) exprlog -> . opy O exprlog
    (103) opy -> . opno
    (104) opy -> . opno Y opy
    (105) opno -> . oprel
    (106) opno -> . NO oprel
    (107) oprel -> . expr
    (108) oprel -> . expr OP_REL oprel
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    NO              shift and go to state 71
    MAS             reduce using rule 141 (empty -> .)
    OP_REL          reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    PAREN_TERMINA   reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    exprlog                        shift and go to state 276
    opy                            shift and go to state 68
    opno                           shift and go to state 69
    oprel                          shift and go to state 70
    expr                           shift and go to state 72
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 259

    (88) mientras -> MIENTRAS SE CUMPLA QUE exprlog . bckesp
    (81) bckesp -> . estatuto
    (82) bckesp -> . INICIO block FIN
    (83) bckesp -> .
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 83 (bckesp -> .)
    INICIO          shift and go to state 274
    SINO            reduce using rule 83 (bckesp -> .)
    error           reduce using rule 83 (bckesp -> .)
    PUNTO_COMA      reduce using rule 83 (bckesp -> .)
    FIN             reduce using rule 83 (bckesp -> .)
    SEA             reduce using rule 83 (bckesp -> .)
    OTRO            reduce using rule 83 (bckesp -> .)
    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117

  ! SINO            [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 141 (empty -> .) ]
  ! FIN             [ reduce using rule 141 (empty -> .) ]
  ! SEA             [ reduce using rule 141 (empty -> .) ]
  ! OTRO            [ reduce using rule 141 (empty -> .) ]

    bckesp                         shift and go to state 277
    estatuto                       shift and go to state 273
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 260

    (90) cuando -> CUANDO EL VALOR DE IDENT . INICIO gposea otro FIN

    INICIO          shift and go to state 278


state 261

    (138) gpoexp -> exprlog COMA gpoexp .

    PAREN_TERMINA   reduce using rule 138 (gpoexp -> exprlog COMA gpoexp .)
    error           reduce using rule 138 (gpoexp -> exprlog COMA gpoexp .)


state 262

    (136) lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .

    error           reduce using rule 136 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 136 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SINO            reduce using rule 136 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    FIN             reduce using rule 136 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SEA             reduce using rule 136 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    OTRO            reduce using rule 136 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)


state 263

    (56) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO . block FIN DE PROCEDIMIENTO PUNTO_COMA
    (58) block -> . estatuto puntoc block
    (59) block -> . estatuto puntoc
    (61) block -> . estatuto error
    (62) block -> . estatuto error block
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117
    error           reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)

    block                          shift and go to state 279
    estatuto                       shift and go to state 92
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 264

    (45) params -> gpopars PUNTOS_DOBLES TIPO otrospars .

    PAREN_TERMINA   reduce using rule 45 (params -> gpopars PUNTOS_DOBLES TIPO otrospars .)


state 265

    (49) otrospars -> PUNTO_COMA . params
    (45) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (46) params -> . empty
    (47) params -> . gpopars PUNTOS_DOBLES error otrospars
    (48) params -> . gpopars error TIPO otrospars
    (51) gpopars -> . IDENT COMA gpopars
    (52) gpopars -> . IDENT
    (141) empty -> .

    IDENT           shift and go to state 169
    PAREN_TERMINA   reduce using rule 141 (empty -> .)

    params                         shift and go to state 280
    gpopars                        shift and go to state 171
    empty                          shift and go to state 172

state 266

    (50) otrospars -> empty .

    PAREN_TERMINA   reduce using rule 50 (otrospars -> empty .)


state 267

    (47) params -> gpopars PUNTOS_DOBLES error otrospars .

    PAREN_TERMINA   reduce using rule 47 (params -> gpopars PUNTOS_DOBLES error otrospars .)


state 268

    (48) params -> gpopars error TIPO otrospars .

    PAREN_TERMINA   reduce using rule 48 (params -> gpopars error TIPO otrospars .)


state 269

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . variables INICIO block FIN DE FUNCION PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (141) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 141 (empty -> .)

    variables                      shift and go to state 281
    empty                          shift and go to state 7

state 270

    (40) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 282


state 271

    (41) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 283


state 272

    (78) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp . sino
    (79) sino -> . SINO bckesp
    (80) sino -> . empty
    (141) empty -> .

  ! shift/reduce conflict for SINO resolved as shift
    SINO            shift and go to state 285
    error           reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)
    SEA             reduce using rule 141 (empty -> .)
    OTRO            reduce using rule 141 (empty -> .)

  ! SINO            [ reduce using rule 141 (empty -> .) ]

    sino                           shift and go to state 284
    empty                          shift and go to state 286

state 273

    (81) bckesp -> estatuto .

    SINO            reduce using rule 81 (bckesp -> estatuto .)
    error           reduce using rule 81 (bckesp -> estatuto .)
    PUNTO_COMA      reduce using rule 81 (bckesp -> estatuto .)
    FIN             reduce using rule 81 (bckesp -> estatuto .)
    SEA             reduce using rule 81 (bckesp -> estatuto .)
    OTRO            reduce using rule 81 (bckesp -> estatuto .)


state 274

    (82) bckesp -> INICIO . block FIN
    (58) block -> . estatuto puntoc block
    (59) block -> . estatuto puntoc
    (61) block -> . estatuto error
    (62) block -> . estatuto error block
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117
    error           reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)

    block                          shift and go to state 287
    estatuto                       shift and go to state 92
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 275

    (84) desde -> DESDE EL VALOR DE asigna HASTA . expr DECR CTE_ENTERA bckesp
    (85) desde -> DESDE EL VALOR DE asigna HASTA . expr INCR CTE_ENTERA bckesp
    (86) desde -> DESDE EL VALOR DE asigna HASTA . expr error bckesp
    (109) expr -> . multi
    (110) expr -> . multi MAS expr
    (111) expr -> . multi MENOS expr
    (112) multi -> . expo
    (113) multi -> . expo MULTI multi
    (114) multi -> . expo DIV multi
    (115) multi -> . expo MOD multi
    (116) multi -> . empty
    (117) expo -> . signo
    (118) expo -> . signo POTENCIA expo
    (141) empty -> .
    (119) signo -> . termino
    (120) signo -> . MENOS termino
    (121) termino -> . IDENT
    (122) termino -> . IDENT udim
    (123) termino -> . lfunc
    (124) termino -> . CTE_ENTERA
    (125) termino -> . CTE_REAL
    (126) termino -> . CTE_ALFA
    (127) termino -> . VERDADERO
    (128) termino -> . FALSO
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
    MAS             reduce using rule 141 (empty -> .)
    DECR            reduce using rule 141 (empty -> .)
    INCR            reduce using rule 141 (empty -> .)
    error           reduce using rule 141 (empty -> .)
    MENOS           shift and go to state 74
    IDENT           shift and go to state 86
    CTE_ENTERA      shift and go to state 79
    CTE_REAL        shift and go to state 80
    CTE_ALFA        shift and go to state 81
    VERDADERO       shift and go to state 82
    FALSO           shift and go to state 83

  ! MENOS           [ reduce using rule 141 (empty -> .) ]

    expr                           shift and go to state 288
    multi                          shift and go to state 73
    expo                           shift and go to state 75
    empty                          shift and go to state 85
    signo                          shift and go to state 76
    termino                        shift and go to state 77
    lfunc                          shift and go to state 78

state 276

    (87) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 289


state 277

    (88) mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .

    error           reduce using rule 88 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    PUNTO_COMA      reduce using rule 88 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SINO            reduce using rule 88 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    FIN             reduce using rule 88 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SEA             reduce using rule 88 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    OTRO            reduce using rule 88 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)


state 278

    (90) cuando -> CUANDO EL VALOR DE IDENT INICIO . gposea otro FIN
    (93) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (94) gposea -> . empty
    (141) empty -> .

    SEA             shift and go to state 291
    OTRO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)

    gposea                         shift and go to state 290
    empty                          shift and go to state 292

state 279

    (56) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block . FIN DE PROCEDIMIENTO PUNTO_COMA

    FIN             shift and go to state 293


state 280

    (49) otrospars -> PUNTO_COMA params .

    PAREN_TERMINA   reduce using rule 49 (otrospars -> PUNTO_COMA params .)


state 281

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables . INICIO block FIN DE FUNCION PUNTO_COMA

    INICIO          shift and go to state 294


state 282

    (40) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    FUNCION         reduce using rule 40 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 40 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FIN             reduce using rule 40 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 283

    (41) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    FUNCION         reduce using rule 41 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 41 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FIN             reduce using rule 41 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 284

    (78) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .

    error           reduce using rule 78 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    PUNTO_COMA      reduce using rule 78 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SINO            reduce using rule 78 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    FIN             reduce using rule 78 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SEA             reduce using rule 78 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    OTRO            reduce using rule 78 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)


state 285

    (79) sino -> SINO . bckesp
    (81) bckesp -> . estatuto
    (82) bckesp -> . INICIO block FIN
    (83) bckesp -> .
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 83 (bckesp -> .)
    INICIO          shift and go to state 274
    SINO            reduce using rule 83 (bckesp -> .)
    error           reduce using rule 83 (bckesp -> .)
    PUNTO_COMA      reduce using rule 83 (bckesp -> .)
    FIN             reduce using rule 83 (bckesp -> .)
    SEA             reduce using rule 83 (bckesp -> .)
    OTRO            reduce using rule 83 (bckesp -> .)
    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117

  ! SINO            [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 141 (empty -> .) ]
  ! FIN             [ reduce using rule 141 (empty -> .) ]
  ! SEA             [ reduce using rule 141 (empty -> .) ]
  ! OTRO            [ reduce using rule 141 (empty -> .) ]

    bckesp                         shift and go to state 295
    estatuto                       shift and go to state 273
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 286

    (80) sino -> empty .

    SINO            reduce using rule 80 (sino -> empty .)
    error           reduce using rule 80 (sino -> empty .)
    PUNTO_COMA      reduce using rule 80 (sino -> empty .)
    FIN             reduce using rule 80 (sino -> empty .)
    SEA             reduce using rule 80 (sino -> empty .)
    OTRO            reduce using rule 80 (sino -> empty .)


state 287

    (82) bckesp -> INICIO block . FIN

    FIN             shift and go to state 296


state 288

    (84) desde -> DESDE EL VALOR DE asigna HASTA expr . DECR CTE_ENTERA bckesp
    (85) desde -> DESDE EL VALOR DE asigna HASTA expr . INCR CTE_ENTERA bckesp
    (86) desde -> DESDE EL VALOR DE asigna HASTA expr . error bckesp

    DECR            shift and go to state 297
    INCR            shift and go to state 298
    error           shift and go to state 299


state 289

    (87) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .

    error           reduce using rule 87 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 87 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 87 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 87 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 87 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 87 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 290

    (90) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea . otro FIN
    (91) otro -> . OTRO PUNTOS_DOBLES bckesp
    (92) otro -> . empty
    (141) empty -> .

    OTRO            shift and go to state 301
    FIN             reduce using rule 141 (empty -> .)

    otro                           shift and go to state 300
    empty                          shift and go to state 302

state 291

    (93) gposea -> SEA . gpoconst PUNTOS_DOBLES bckesp gposea
    (95) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 304

    gpoconst                       shift and go to state 303

state 292

    (94) gposea -> empty .

    OTRO            reduce using rule 94 (gposea -> empty .)
    FIN             reduce using rule 94 (gposea -> empty .)


state 293

    (56) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN . DE PROCEDIMIENTO PUNTO_COMA

    DE              shift and go to state 305


state 294

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO . block FIN DE FUNCION PUNTO_COMA
    (58) block -> . estatuto puntoc block
    (59) block -> . estatuto puntoc
    (61) block -> . estatuto error
    (62) block -> . estatuto error block
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117
    error           reduce using rule 141 (empty -> .)
    PUNTO_COMA      reduce using rule 141 (empty -> .)

    block                          shift and go to state 306
    estatuto                       shift and go to state 92
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 295

    (79) sino -> SINO bckesp .

    SINO            reduce using rule 79 (sino -> SINO bckesp .)
    error           reduce using rule 79 (sino -> SINO bckesp .)
    PUNTO_COMA      reduce using rule 79 (sino -> SINO bckesp .)
    FIN             reduce using rule 79 (sino -> SINO bckesp .)
    SEA             reduce using rule 79 (sino -> SINO bckesp .)
    OTRO            reduce using rule 79 (sino -> SINO bckesp .)


state 296

    (82) bckesp -> INICIO block FIN .

    SINO            reduce using rule 82 (bckesp -> INICIO block FIN .)
    error           reduce using rule 82 (bckesp -> INICIO block FIN .)
    PUNTO_COMA      reduce using rule 82 (bckesp -> INICIO block FIN .)
    FIN             reduce using rule 82 (bckesp -> INICIO block FIN .)
    SEA             reduce using rule 82 (bckesp -> INICIO block FIN .)
    OTRO            reduce using rule 82 (bckesp -> INICIO block FIN .)


state 297

    (84) desde -> DESDE EL VALOR DE asigna HASTA expr DECR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 307


state 298

    (85) desde -> DESDE EL VALOR DE asigna HASTA expr INCR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 308


state 299

    (86) desde -> DESDE EL VALOR DE asigna HASTA expr error . bckesp
    (81) bckesp -> . estatuto
    (82) bckesp -> . INICIO block FIN
    (83) bckesp -> .
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 83 (bckesp -> .)
    INICIO          shift and go to state 274
    SINO            reduce using rule 83 (bckesp -> .)
    error           reduce using rule 83 (bckesp -> .)
    PUNTO_COMA      reduce using rule 83 (bckesp -> .)
    FIN             reduce using rule 83 (bckesp -> .)
    SEA             reduce using rule 83 (bckesp -> .)
    OTRO            reduce using rule 83 (bckesp -> .)
    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117

  ! SINO            [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 141 (empty -> .) ]
  ! FIN             [ reduce using rule 141 (empty -> .) ]
  ! SEA             [ reduce using rule 141 (empty -> .) ]
  ! OTRO            [ reduce using rule 141 (empty -> .) ]

    asigna                         shift and go to state 101
    bckesp                         shift and go to state 309
    estatuto                       shift and go to state 273
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 300

    (90) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro . FIN

    FIN             shift and go to state 310


state 301

    (91) otro -> OTRO . PUNTOS_DOBLES bckesp

    PUNTOS_DOBLES   shift and go to state 311


state 302

    (92) otro -> empty .

    FIN             reduce using rule 92 (otro -> empty .)


state 303

    (93) gposea -> SEA gpoconst . PUNTOS_DOBLES bckesp gposea

    PUNTOS_DOBLES   shift and go to state 312


state 304

    (95) gpoconst -> CTE_ALFA . masgpoconst
    (96) masgpoconst -> . COMA gpoconst
    (97) masgpoconst -> . empty
    (141) empty -> .

    COMA            shift and go to state 314
    PUNTOS_DOBLES   reduce using rule 141 (empty -> .)

    masgpoconst                    shift and go to state 313
    empty                          shift and go to state 315

state 305

    (56) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE . PROCEDIMIENTO PUNTO_COMA

    PROCEDIMIENTO   shift and go to state 316


state 306

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block . FIN DE FUNCION PUNTO_COMA

    FIN             shift and go to state 317


state 307

    (84) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA . bckesp
    (81) bckesp -> . estatuto
    (82) bckesp -> . INICIO block FIN
    (83) bckesp -> .
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 83 (bckesp -> .)
    INICIO          shift and go to state 274
    SINO            reduce using rule 83 (bckesp -> .)
    error           reduce using rule 83 (bckesp -> .)
    PUNTO_COMA      reduce using rule 83 (bckesp -> .)
    FIN             reduce using rule 83 (bckesp -> .)
    SEA             reduce using rule 83 (bckesp -> .)
    OTRO            reduce using rule 83 (bckesp -> .)
    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117

  ! SINO            [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 141 (empty -> .) ]
  ! FIN             [ reduce using rule 141 (empty -> .) ]
  ! SEA             [ reduce using rule 141 (empty -> .) ]
  ! OTRO            [ reduce using rule 141 (empty -> .) ]

    asigna                         shift and go to state 101
    bckesp                         shift and go to state 318
    estatuto                       shift and go to state 273
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 308

    (85) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA . bckesp
    (81) bckesp -> . estatuto
    (82) bckesp -> . INICIO block FIN
    (83) bckesp -> .
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 83 (bckesp -> .)
    INICIO          shift and go to state 274
    SINO            reduce using rule 83 (bckesp -> .)
    error           reduce using rule 83 (bckesp -> .)
    PUNTO_COMA      reduce using rule 83 (bckesp -> .)
    FIN             reduce using rule 83 (bckesp -> .)
    SEA             reduce using rule 83 (bckesp -> .)
    OTRO            reduce using rule 83 (bckesp -> .)
    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117

  ! SINO            [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 141 (empty -> .) ]
  ! FIN             [ reduce using rule 141 (empty -> .) ]
  ! SEA             [ reduce using rule 141 (empty -> .) ]
  ! OTRO            [ reduce using rule 141 (empty -> .) ]

    asigna                         shift and go to state 101
    bckesp                         shift and go to state 319
    estatuto                       shift and go to state 273
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 309

    (86) desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .

    error           reduce using rule 86 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    PUNTO_COMA      reduce using rule 86 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    SINO            reduce using rule 86 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    FIN             reduce using rule 86 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    SEA             reduce using rule 86 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    OTRO            reduce using rule 86 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)


state 310

    (90) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .

    error           reduce using rule 90 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    PUNTO_COMA      reduce using rule 90 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SINO            reduce using rule 90 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    FIN             reduce using rule 90 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SEA             reduce using rule 90 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    OTRO            reduce using rule 90 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)


state 311

    (91) otro -> OTRO PUNTOS_DOBLES . bckesp
    (81) bckesp -> . estatuto
    (82) bckesp -> . INICIO block FIN
    (83) bckesp -> .
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 83 (bckesp -> .)
    INICIO          shift and go to state 274
    FIN             reduce using rule 83 (bckesp -> .)
    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117

  ! FIN             [ reduce using rule 141 (empty -> .) ]

    bckesp                         shift and go to state 320
    estatuto                       shift and go to state 273
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 312

    (93) gposea -> SEA gpoconst PUNTOS_DOBLES . bckesp gposea
    (81) bckesp -> . estatuto
    (82) bckesp -> . INICIO block FIN
    (83) bckesp -> .
    (63) estatuto -> . si
    (64) estatuto -> . lfunc
    (65) estatuto -> . LIMPIA
    (66) estatuto -> . desde
    (67) estatuto -> . repetir
    (68) estatuto -> . mientras
    (69) estatuto -> . cuando
    (70) estatuto -> . regresa
    (71) estatuto -> . asigna
    (72) estatuto -> . imprime
    (73) estatuto -> . imprimenl
    (74) estatuto -> . lee
    (75) estatuto -> . INTERRUMPE
    (76) estatuto -> . CONTINUA
    (77) estatuto -> . empty
    (78) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (129) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (130) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (84) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (85) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (86) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (87) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (88) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (90) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (98) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (89) asigna -> . IDENT udim OP_ASIG exprlog
    (132) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (133) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (134) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (135) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (136) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (141) empty -> .

  ! reduce/reduce conflict for SEA resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 83 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 83 (bckesp -> .)
    INICIO          shift and go to state 274
    SEA             reduce using rule 83 (bckesp -> .)
    OTRO            reduce using rule 83 (bckesp -> .)
    FIN             reduce using rule 83 (bckesp -> .)
    LIMPIA          shift and go to state 95
    INTERRUMPE      shift and go to state 105
    CONTINUA        shift and go to state 106
    SI              shift and go to state 108
    IDENT           shift and go to state 109
    DESDE           shift and go to state 110
    REPETIR         shift and go to state 111
    MIENTRAS        shift and go to state 112
    CUANDO          shift and go to state 113
    REGRESA         shift and go to state 114
    IMPRIME         shift and go to state 115
    IMPRIMENL       shift and go to state 116
    LEE             shift and go to state 117

  ! SEA             [ reduce using rule 141 (empty -> .) ]
  ! OTRO            [ reduce using rule 141 (empty -> .) ]
  ! FIN             [ reduce using rule 141 (empty -> .) ]

    bckesp                         shift and go to state 321
    estatuto                       shift and go to state 273
    si                             shift and go to state 93
    lfunc                          shift and go to state 94
    desde                          shift and go to state 96
    repetir                        shift and go to state 97
    mientras                       shift and go to state 98
    cuando                         shift and go to state 99
    regresa                        shift and go to state 100
    asigna                         shift and go to state 101
    imprime                        shift and go to state 102
    imprimenl                      shift and go to state 103
    lee                            shift and go to state 104
    empty                          shift and go to state 107

state 313

    (95) gpoconst -> CTE_ALFA masgpoconst .

    PUNTOS_DOBLES   reduce using rule 95 (gpoconst -> CTE_ALFA masgpoconst .)


state 314

    (96) masgpoconst -> COMA . gpoconst
    (95) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 304

    gpoconst                       shift and go to state 322

state 315

    (97) masgpoconst -> empty .

    PUNTOS_DOBLES   reduce using rule 97 (masgpoconst -> empty .)


state 316

    (56) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 323


state 317

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN . DE FUNCION PUNTO_COMA

    DE              shift and go to state 324


state 318

    (84) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .

    error           reduce using rule 84 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    PUNTO_COMA      reduce using rule 84 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SINO            reduce using rule 84 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    FIN             reduce using rule 84 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SEA             reduce using rule 84 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 84 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)


state 319

    (85) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .

    error           reduce using rule 85 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    PUNTO_COMA      reduce using rule 85 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SINO            reduce using rule 85 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    FIN             reduce using rule 85 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SEA             reduce using rule 85 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 85 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)


state 320

    (91) otro -> OTRO PUNTOS_DOBLES bckesp .

    FIN             reduce using rule 91 (otro -> OTRO PUNTOS_DOBLES bckesp .)


state 321

    (93) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp . gposea
    (93) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (94) gposea -> . empty
    (141) empty -> .

    SEA             shift and go to state 291
    OTRO            reduce using rule 141 (empty -> .)
    FIN             reduce using rule 141 (empty -> .)

    gposea                         shift and go to state 325
    empty                          shift and go to state 292

state 322

    (96) masgpoconst -> COMA gpoconst .

    PUNTOS_DOBLES   reduce using rule 96 (masgpoconst -> COMA gpoconst .)


state 323

    (56) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 56 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    FUNCION         reduce using rule 56 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    PROGRAMA        reduce using rule 56 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)


state 324

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE . FUNCION PUNTO_COMA

    FUNCION         shift and go to state 326


state 325

    (93) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .

    OTRO            reduce using rule 93 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)
    FIN             reduce using rule 93 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)


state 326

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION . PUNTO_COMA

    PUNTO_COMA      shift and go to state 327


state 327

    (57) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 57 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    FUNCION         reduce using rule 57 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    PROGRAMA        reduce using rule 57 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 12 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 12 resolved as shift
WARNING: shift/reduce conflict for COMA in state 17 resolved as shift
WARNING: shift/reduce conflict for error in state 17 resolved as shift
WARNING: shift/reduce conflict for COMA in state 17 resolved as shift
WARNING: shift/reduce conflict for error in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 26 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 26 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 27 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 27 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 36 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 37 resolved as shift
WARNING: shift/reduce conflict for COMA in state 63 resolved as shift
WARNING: shift/reduce conflict for error in state 63 resolved as shift
WARNING: shift/reduce conflict for COMA in state 63 resolved as shift
WARNING: shift/reduce conflict for error in state 63 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 71 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 71 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 133 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 134 resolved as shift
WARNING: shift/reduce conflict for error in state 137 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 138 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 138 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 139 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 139 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 141 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 141 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 142 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 142 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 143 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 143 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 145 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 145 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 146 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 146 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 147 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 147 resolved as shift
WARNING: shift/reduce conflict for error in state 149 resolved as shift
WARNING: shift/reduce conflict for error in state 150 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 151 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 159 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 165 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 166 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 167 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_TERMINA in state 185 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 186 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 204 resolved as shift
WARNING: shift/reduce conflict for PAREN_TERMINA in state 213 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 226 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 233 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 233 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 237 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 258 resolved as shift
WARNING: shift/reduce conflict for SINO in state 272 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 275 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (gpofuncproc -> protfunc)
WARNING: rejected rule (empty -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (gpofuncproc -> protproc)
WARNING: rejected rule (empty -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 63 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 86 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 86
WARNING: reduce/reduce conflict in state 89 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 89
WARNING: reduce/reduce conflict in state 90 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 90
WARNING: reduce/reduce conflict in state 125 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 125
WARNING: reduce/reduce conflict in state 126 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 126
WARNING: reduce/reduce conflict in state 127 resolved using rule (gpovars -> gpoids error TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 127
WARNING: reduce/reduce conflict in state 255 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 255
WARNING: reduce/reduce conflict in state 259 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 259
WARNING: reduce/reduce conflict in state 285 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 285
WARNING: reduce/reduce conflict in state 299 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 299
WARNING: reduce/reduce conflict in state 307 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 307
WARNING: reduce/reduce conflict in state 308 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 308
WARNING: reduce/reduce conflict in state 311 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 311
WARNING: reduce/reduce conflict in state 312 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 312
