Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CTE_ENTERA_NON_NUM
    CTE_REAL_ENDING_BAD
    CTE_REAL_NON_NUM

Grammar

Rule 0     S' -> program
Rule 1     program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
Rule 2     variables -> VARIABLES gpovars
Rule 3     variables -> empty
Rule 4     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
Rule 5     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 6     gpovars -> empty
Rule 7     gpovars -> gpoids error TIPO PUNTO_COMA gpovars
Rule 8     gpovars -> gpoids error TIPO PUNTO_COMA
Rule 9     gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
Rule 10    gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA
Rule 11    gpoids -> IDENT COMA gpoids2
Rule 12    gpoids -> IDENT opasig COMA gpoids2
Rule 13    gpoids -> IDENT gpoids2
Rule 14    gpoids -> IDENT
Rule 15    gpoids -> IDENT dimens COMA gpoids2
Rule 16    gpoids -> IDENT dimens
Rule 17    gpoids2 -> IDENT COMA gpoids2
Rule 18    gpoids2 -> IDENT opasig COMA gpoids2
Rule 19    gpoids2 -> IDENT
Rule 20    gpoids2 -> IDENT dimens COMA gpoids2
Rule 21    gpoids2 -> IDENT dimens
Rule 22    gpoids -> IDENT dimens error gpoids
Rule 23    gpoids -> IDENT error gpoids
Rule 24    gpoids -> IDENT opasig error gpoids
Rule 25    gpoids -> empty
Rule 26    gpoids2 -> empty
Rule 27    dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
Rule 28    dimens -> <empty>
Rule 29    dimens -> CORCHETE_EMPIEZA valor error dimens
Rule 30    dimens -> error valor CORCHETE_TERMINA dimens
Rule 31    opasig -> OP_ASIG CTE_ENTERA
Rule 32    opasig -> OP_ASIG IDENT
Rule 33    opasig -> empty
Rule 34    valor -> exprlog
Rule 35    constantes -> CONSTANTES grupoconst
Rule 36    constantes -> empty
Rule 37    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
Rule 38    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
Rule 39    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA
Rule 40    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
Rule 41    grupoconst -> empty
Rule 42    protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
Rule 43    protfuncproc -> empty
Rule 44    gpofuncproc -> protfunc
Rule 45    gpofuncproc -> protproc
Rule 46    gpofuncproc -> protproc gpofuncproc
Rule 47    gpofuncproc -> protfunc gpofuncproc
Rule 48    protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 49    protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 50    protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 51    protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 52    protproc -> empty
Rule 53    params -> gpopars PUNTOS_DOBLES TIPO otrospars
Rule 54    params -> empty
Rule 55    params -> gpopars PUNTOS_DOBLES error otrospars
Rule 56    params -> gpopars error TIPO otrospars
Rule 57    otrospars -> PUNTO_COMA params
Rule 58    otrospars -> empty
Rule 59    gpopars -> IDENT COMA gpopars2
Rule 60    gpopars -> IDENT
Rule 61    gpopars2 -> IDENT COMA gpopars2
Rule 62    gpopars2 -> IDENT
Rule 63    funcproc -> procedimiento funcproc
Rule 64    funcproc -> funcion funcproc
Rule 65    funcproc -> empty
Rule 66    procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
Rule 67    funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
Rule 68    block -> estatuto puntoc block
Rule 69    block -> estatuto puntoc
Rule 70    puntoc -> PUNTO_COMA
Rule 71    block -> estatuto error
Rule 72    block -> estatuto error block
Rule 73    estatuto -> si
Rule 74    estatuto -> lfunc
Rule 75    estatuto -> LIMPIA
Rule 76    estatuto -> desde
Rule 77    estatuto -> repetir
Rule 78    estatuto -> mientras
Rule 79    estatuto -> cuando
Rule 80    estatuto -> regresa
Rule 81    estatuto -> asigna
Rule 82    estatuto -> imprime
Rule 83    estatuto -> imprimenl
Rule 84    estatuto -> lee
Rule 85    estatuto -> INTERRUMPE
Rule 86    estatuto -> CONTINUA
Rule 87    estatuto -> empty
Rule 88    si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
Rule 89    sino -> SINO bckesp
Rule 90    sino -> empty
Rule 91    bckesp -> estatuto
Rule 92    bckesp -> INICIO block FIN
Rule 93    bckesp -> <empty>
Rule 94    desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
Rule 95    desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
Rule 96    desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp
Rule 97    repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 98    mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp
Rule 99    asigna -> IDENT udim OP_ASIG exprlog
Rule 100   cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
Rule 101   otro -> OTRO PUNTOS_DOBLES bckesp
Rule 102   otro -> empty
Rule 103   gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea
Rule 104   gposea -> empty
Rule 105   gpoconst -> CTE_ALFA masgpoconst
Rule 106   gpoconst2 -> CTE_ALFA masgpoconst
Rule 107   masgpoconst -> COMA gpoconst2
Rule 108   masgpoconst -> empty
Rule 109   regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 110   udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
Rule 111   udim -> empty
Rule 112   exprlog -> opy
Rule 113   exprlog -> opy O exprlog
Rule 114   opy -> opno
Rule 115   opy -> opno Y opy
Rule 116   opno -> oprel
Rule 117   opno -> NO oprel
Rule 118   oprel -> expr
Rule 119   oprel -> expr OP_REL oprel
Rule 120   expr -> multi
Rule 121   expr -> multi MAS expr
Rule 122   expr -> multi MENOS expr
Rule 123   multi -> expo
Rule 124   multi -> expo MULTI multi
Rule 125   multi -> expo DIV multi
Rule 126   multi -> expo MOD multi
Rule 127   multi -> empty
Rule 128   expo -> signo
Rule 129   expo -> signo POTENCIA expo
Rule 130   signo -> termino
Rule 131   signo -> MENOS termino
Rule 132   termino -> IDENT
Rule 133   termino -> CTE_ENTERA
Rule 134   termino -> CTE_REAL
Rule 135   termino -> CTE_ALFA
Rule 136   termino -> VERDADERO
Rule 137   termino -> FALSO
Rule 138   termino -> <empty>
Rule 139   termino -> IDENT udim
Rule 140   termino -> lfunc
Rule 141   lfunc -> IDENT parenemp uparams PAREN_TERMINA
Rule 142   lfunc -> IDENT parenemp error PAREN_TERMINA
Rule 143   parenemp -> PAREN_EMPIEZA
Rule 144   imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 145   imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 146   imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error
Rule 147   lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
Rule 148   lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
Rule 149   gpoexp -> exprlog gpoexp2
Rule 150   gpoexp -> exprlog COMA gpoexp2
Rule 151   gpoexp2 -> exprlog
Rule 152   gpoexp2 -> exprlog COMA gpoexp2
Rule 153   gpoexp2 -> <empty>
Rule 154   uparams -> exprlog
Rule 155   uparams -> exprlog COMA uparams
Rule 156   empty -> <empty>

Terminals, with rules where they appear

COMA                 : 11 12 15 17 18 20 59 61 107 150 152 155
COMMENT              : 
CONSTANTES           : 35
CONTINUA             : 86
CORCHETE_EMPIEZA     : 27 29 110
CORCHETE_TERMINA     : 27 30 110
CTE_ALFA             : 105 106 135
CTE_ENTERA           : 31 37 38 94 95 133
CTE_ENTERA_NON_NUM   : 
CTE_REAL             : 39 40 134
CTE_REAL_ENDING_BAD  : 
CTE_REAL_NON_NUM     : 
CUANDO               : 100
CUMPLA               : 98
DE                   : 1 42 66 67 94 95 96 100
DECR                 : 94
DESDE                : 94 95 96
DIV                  : 125
EL                   : 94 95 96 100
FALSO                : 137
FIN                  : 1 42 66 67 92 100
FUNCION              : 48 49 67 67
HACER                : 88
HASTA                : 94 95 96 97
IDENT                : 11 12 13 14 15 16 17 18 19 20 21 22 23 24 32 37 38 39 40 48 50 59 60 61 62 66 67 99 100 132 139 141 142 147 148
IMPRIME              : 144
IMPRIMENL            : 145 146
INCR                 : 95
INICIO               : 66 67 92 100
INTERRUMPE           : 85
LEE                  : 147 148
LIMPIA               : 75
MAS                  : 121
MENOS                : 122 131
MIENTRAS             : 98
MOD                  : 126
MULTI                : 124
NO                   : 117
O                    : 113
OP_ASIG              : 31 32 37 38 39 40 99
OP_REL               : 119
OTRO                 : 101
PAREN_EMPIEZA        : 48 49 50 51 66 67 88 97 109 143 144 145 146 147 148
PAREN_TERMINA        : 48 49 50 51 66 67 88 97 109 141 142 144 145 147 148
POTENCIA             : 129
PROCEDIMIENTO        : 50 51 66 66
PROGRAMA             : 1 1
PROTOTIPOS           : 42 42
PUNTO                : 1
PUNTOS_DOBLES        : 4 5 9 10 48 49 53 55 67 101 103
PUNTO_COMA           : 4 5 7 8 9 10 37 38 39 40 42 48 49 50 51 57 66 67 70
QUE                  : 97 98
REGRESA              : 109
REPETIR              : 97
SE                   : 98
SEA                  : 103
SI                   : 88
SINO                 : 89
TIPO                 : 4 5 7 8 48 49 53 56 67
VALOR                : 94 95 96 100
VARIABLES            : 2
VERDADERO            : 136
Y                    : 115
error                : 7 8 9 10 22 23 24 29 30 49 51 55 56 71 72 96 142 146

Nonterminals, with rules where they appear

asigna               : 81 94 95 96
bckesp               : 88 89 94 95 96 98 101 103
block                : 1 66 67 68 72 92 97
constantes           : 1
cuando               : 79
desde                : 76
dimens               : 15 16 20 21 22 27 29 30 148
empty                : 3 6 25 26 33 36 41 43 52 54 58 65 87 90 102 104 108 111 127
estatuto             : 68 69 71 72 91
expo                 : 123 124 125 126 129
expr                 : 94 95 96 110 118 119 121 122
exprlog              : 34 88 97 98 99 109 113 149 150 151 152 154 155
funcion              : 64
funcproc             : 1 63 64
gpoconst             : 103
gpoconst2            : 107
gpoexp               : 144 145 146
gpoexp2              : 149 150 152
gpofuncproc          : 42 46 47
gpoids               : 4 5 7 8 9 10 22 23 24
gpoids2              : 11 12 13 15 17 18 20
gpopars              : 53 55 56
gpopars2             : 59 61
gposea               : 100 103
gpovars              : 2 4 7 9
grupoconst           : 35 38 40
imprime              : 82
imprimenl            : 83
lee                  : 84
lfunc                : 74 140
masgpoconst          : 105 106
mientras             : 78
multi                : 120 121 122 124 125 126
opasig               : 12 18 24
opno                 : 114 115
oprel                : 116 117 119
opy                  : 112 113 115
otro                 : 100
otrospars            : 53 55 56
params               : 48 49 50 51 57 66 67
parenemp             : 141 142
procedimiento        : 63
program              : 0
protfunc             : 44 47
protfuncproc         : 1
protproc             : 45 46
puntoc               : 68 69
regresa              : 80
repetir              : 77
si                   : 73
signo                : 128 129
sino                 : 88
termino              : 130 131
udim                 : 99 110 139
uparams              : 141 155
valor                : 27 29 30
variables            : 1 66 67

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (35) constantes -> . CONSTANTES grupoconst
    (36) constantes -> . empty
    (156) empty -> .

    CONSTANTES      shift and go to state 3
    VARIABLES       reduce using rule 156 (empty -> .)
    PROTOTIPOS      reduce using rule 156 (empty -> .)
    PROCEDIMIENTO   reduce using rule 156 (empty -> .)
    FUNCION         reduce using rule 156 (empty -> .)
    PROGRAMA        reduce using rule 156 (empty -> .)

    program                        shift and go to state 1
    constantes                     shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> constantes . variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (156) empty -> .

    VARIABLES       shift and go to state 6
    PROTOTIPOS      reduce using rule 156 (empty -> .)
    PROCEDIMIENTO   reduce using rule 156 (empty -> .)
    FUNCION         reduce using rule 156 (empty -> .)
    PROGRAMA        reduce using rule 156 (empty -> .)

    variables                      shift and go to state 5
    empty                          shift and go to state 7

state 3

    (35) constantes -> CONSTANTES . grupoconst
    (37) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (38) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (39) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (40) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (41) grupoconst -> . empty
    (156) empty -> .

    IDENT           shift and go to state 9
    VARIABLES       reduce using rule 156 (empty -> .)
    PROTOTIPOS      reduce using rule 156 (empty -> .)
    PROCEDIMIENTO   reduce using rule 156 (empty -> .)
    FUNCION         reduce using rule 156 (empty -> .)
    PROGRAMA        reduce using rule 156 (empty -> .)

    grupoconst                     shift and go to state 8
    empty                          shift and go to state 10

state 4

    (36) constantes -> empty .

    VARIABLES       reduce using rule 36 (constantes -> empty .)
    PROTOTIPOS      reduce using rule 36 (constantes -> empty .)
    PROCEDIMIENTO   reduce using rule 36 (constantes -> empty .)
    FUNCION         reduce using rule 36 (constantes -> empty .)
    PROGRAMA        reduce using rule 36 (constantes -> empty .)


state 5

    (1) program -> constantes variables . protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (42) protfuncproc -> . PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (43) protfuncproc -> . empty
    (156) empty -> .

    PROTOTIPOS      shift and go to state 12
    PROCEDIMIENTO   reduce using rule 156 (empty -> .)
    FUNCION         reduce using rule 156 (empty -> .)
    PROGRAMA        reduce using rule 156 (empty -> .)

    protfuncproc                   shift and go to state 11
    empty                          shift and go to state 13

state 6

    (2) variables -> VARIABLES . gpovars
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT gpoids2
    (14) gpoids -> . IDENT
    (15) gpoids -> . IDENT dimens COMA gpoids2
    (16) gpoids -> . IDENT dimens
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (25) gpoids -> . empty
    (156) empty -> .

    IDENT           shift and go to state 17
    PROTOTIPOS      reduce using rule 156 (empty -> .)
    PROCEDIMIENTO   reduce using rule 156 (empty -> .)
    FUNCION         reduce using rule 156 (empty -> .)
    PROGRAMA        reduce using rule 156 (empty -> .)
    INICIO          reduce using rule 156 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

    gpovars                        shift and go to state 14
    gpoids                         shift and go to state 15
    empty                          shift and go to state 16

state 7

    (3) variables -> empty .

    PROTOTIPOS      reduce using rule 3 (variables -> empty .)
    PROCEDIMIENTO   reduce using rule 3 (variables -> empty .)
    FUNCION         reduce using rule 3 (variables -> empty .)
    PROGRAMA        reduce using rule 3 (variables -> empty .)
    INICIO          reduce using rule 3 (variables -> empty .)


state 8

    (35) constantes -> CONSTANTES grupoconst .

    VARIABLES       reduce using rule 35 (constantes -> CONSTANTES grupoconst .)
    PROTOTIPOS      reduce using rule 35 (constantes -> CONSTANTES grupoconst .)
    PROCEDIMIENTO   reduce using rule 35 (constantes -> CONSTANTES grupoconst .)
    FUNCION         reduce using rule 35 (constantes -> CONSTANTES grupoconst .)
    PROGRAMA        reduce using rule 35 (constantes -> CONSTANTES grupoconst .)


state 9

    (37) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA
    (38) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (39) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA
    (40) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA grupoconst

    OP_ASIG         shift and go to state 18


state 10

    (41) grupoconst -> empty .

    VARIABLES       reduce using rule 41 (grupoconst -> empty .)
    PROTOTIPOS      reduce using rule 41 (grupoconst -> empty .)
    PROCEDIMIENTO   reduce using rule 41 (grupoconst -> empty .)
    FUNCION         reduce using rule 41 (grupoconst -> empty .)
    PROGRAMA        reduce using rule 41 (grupoconst -> empty .)


state 11

    (1) program -> constantes variables protfuncproc . funcproc PROGRAMA block FIN DE PROGRAMA PUNTO
    (63) funcproc -> . procedimiento funcproc
    (64) funcproc -> . funcion funcproc
    (65) funcproc -> . empty
    (66) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (67) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (156) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 156 (empty -> .)

    funcproc                       shift and go to state 19
    procedimiento                  shift and go to state 20
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 12

    (42) protfuncproc -> PROTOTIPOS . gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA
    (44) gpofuncproc -> . protfunc
    (45) gpofuncproc -> . protproc
    (46) gpofuncproc -> . protproc gpofuncproc
    (47) gpofuncproc -> . protfunc gpofuncproc
    (48) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (49) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (50) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (51) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (52) protproc -> . empty
    (156) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29
    FIN             reduce using rule 156 (empty -> .)

  ! FUNCION         [ reduce using rule 156 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 156 (empty -> .) ]

    gpofuncproc                    shift and go to state 25
    protfunc                       shift and go to state 26
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 13

    (43) protfuncproc -> empty .

    PROCEDIMIENTO   reduce using rule 43 (protfuncproc -> empty .)
    FUNCION         reduce using rule 43 (protfuncproc -> empty .)
    PROGRAMA        reduce using rule 43 (protfuncproc -> empty .)


state 14

    (2) variables -> VARIABLES gpovars .

    PROTOTIPOS      reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROCEDIMIENTO   reduce using rule 2 (variables -> VARIABLES gpovars .)
    FUNCION         reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROGRAMA        reduce using rule 2 (variables -> VARIABLES gpovars .)
    INICIO          reduce using rule 2 (variables -> VARIABLES gpovars .)


state 15

    (4) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA
    (7) gpovars -> gpoids . error TIPO PUNTO_COMA gpovars
    (8) gpovars -> gpoids . error TIPO PUNTO_COMA
    (9) gpovars -> gpoids . PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> gpoids . PUNTOS_DOBLES error PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 31
    error           shift and go to state 32


state 16

    (6) gpovars -> empty .
    (25) gpoids -> empty .

    PROTOTIPOS      reduce using rule 6 (gpovars -> empty .)
    PROCEDIMIENTO   reduce using rule 6 (gpovars -> empty .)
    FUNCION         reduce using rule 6 (gpovars -> empty .)
    PROGRAMA        reduce using rule 6 (gpovars -> empty .)
    INICIO          reduce using rule 6 (gpovars -> empty .)
    PUNTOS_DOBLES   reduce using rule 25 (gpoids -> empty .)
    error           reduce using rule 25 (gpoids -> empty .)


state 17

    (11) gpoids -> IDENT . COMA gpoids2
    (12) gpoids -> IDENT . opasig COMA gpoids2
    (13) gpoids -> IDENT . gpoids2
    (14) gpoids -> IDENT .
    (15) gpoids -> IDENT . dimens COMA gpoids2
    (16) gpoids -> IDENT . dimens
    (22) gpoids -> IDENT . dimens error gpoids
    (23) gpoids -> IDENT . error gpoids
    (24) gpoids -> IDENT . opasig error gpoids
    (31) opasig -> . OP_ASIG CTE_ENTERA
    (32) opasig -> . OP_ASIG IDENT
    (33) opasig -> . empty
    (17) gpoids2 -> . IDENT COMA gpoids2
    (18) gpoids2 -> . IDENT opasig COMA gpoids2
    (19) gpoids2 -> . IDENT
    (20) gpoids2 -> . IDENT dimens COMA gpoids2
    (21) gpoids2 -> . IDENT dimens
    (26) gpoids2 -> . empty
    (27) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (28) dimens -> .
    (29) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (30) dimens -> . error valor CORCHETE_TERMINA dimens
    (156) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for error resolved using rule 14 (gpoids -> IDENT .)
  ! reduce/reduce conflict for PUNTOS_DOBLES resolved using rule 14 (gpoids -> IDENT .)
  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for error resolved using rule 14 (gpoids -> IDENT .)
  ! reduce/reduce conflict for PUNTOS_DOBLES resolved using rule 14 (gpoids -> IDENT .)
    COMA            shift and go to state 34
    PUNTOS_DOBLES   reduce using rule 14 (gpoids -> IDENT .)
    error           reduce using rule 14 (gpoids -> IDENT .)
    OP_ASIG         shift and go to state 39
    IDENT           shift and go to state 33
    CORCHETE_EMPIEZA shift and go to state 41

  ! error           [ shift and go to state 38 ]
  ! COMA            [ reduce using rule 28 (dimens -> .) ]
  ! error           [ reduce using rule 28 (dimens -> .) ]
  ! PUNTOS_DOBLES   [ reduce using rule 28 (dimens -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! PUNTOS_DOBLES   [ reduce using rule 156 (empty -> .) ]

    gpoids2                        shift and go to state 35
    opasig                         shift and go to state 36
    dimens                         shift and go to state 37
    empty                          shift and go to state 40

state 18

    (37) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA
    (38) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA grupoconst
    (39) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA
    (40) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA grupoconst

    CTE_ENTERA      shift and go to state 42
    CTE_REAL        shift and go to state 43


state 19

    (1) program -> constantes variables protfuncproc funcproc . PROGRAMA block FIN DE PROGRAMA PUNTO

    PROGRAMA        shift and go to state 44


state 20

    (63) funcproc -> procedimiento . funcproc
    (63) funcproc -> . procedimiento funcproc
    (64) funcproc -> . funcion funcproc
    (65) funcproc -> . empty
    (66) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (67) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (156) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 156 (empty -> .)

    procedimiento                  shift and go to state 20
    funcproc                       shift and go to state 45
    funcion                        shift and go to state 21
    empty                          shift and go to state 22

state 21

    (64) funcproc -> funcion . funcproc
    (63) funcproc -> . procedimiento funcproc
    (64) funcproc -> . funcion funcproc
    (65) funcproc -> . empty
    (66) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (67) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (156) empty -> .

    PROCEDIMIENTO   shift and go to state 23
    FUNCION         shift and go to state 24
    PROGRAMA        reduce using rule 156 (empty -> .)

    funcion                        shift and go to state 21
    funcproc                       shift and go to state 46
    procedimiento                  shift and go to state 20
    empty                          shift and go to state 22

state 22

    (65) funcproc -> empty .

    PROGRAMA        reduce using rule 65 (funcproc -> empty .)


state 23

    (66) procedimiento -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    IDENT           shift and go to state 47


state 24

    (67) funcion -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    IDENT           shift and go to state 48


state 25

    (42) protfuncproc -> PROTOTIPOS gpofuncproc . FIN DE PROTOTIPOS PUNTO_COMA

    FIN             shift and go to state 49


state 26

    (44) gpofuncproc -> protfunc .
    (47) gpofuncproc -> protfunc . gpofuncproc
    (44) gpofuncproc -> . protfunc
    (45) gpofuncproc -> . protproc
    (46) gpofuncproc -> . protproc gpofuncproc
    (47) gpofuncproc -> . protfunc gpofuncproc
    (48) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (49) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (50) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (51) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (52) protproc -> . empty
    (156) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 44 (gpofuncproc -> protfunc .)
    FIN             reduce using rule 44 (gpofuncproc -> protfunc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 156 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]

    protfunc                       shift and go to state 26
    gpofuncproc                    shift and go to state 50
    protproc                       shift and go to state 27
    empty                          shift and go to state 30

state 27

    (45) gpofuncproc -> protproc .
    (46) gpofuncproc -> protproc . gpofuncproc
    (44) gpofuncproc -> . protfunc
    (45) gpofuncproc -> . protproc
    (46) gpofuncproc -> . protproc gpofuncproc
    (47) gpofuncproc -> . protfunc gpofuncproc
    (48) protfunc -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (49) protfunc -> . FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (50) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (51) protproc -> . PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (52) protproc -> . empty
    (156) empty -> .

  ! shift/reduce conflict for FUNCION resolved as shift
  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! reduce/reduce conflict for FIN resolved using rule 45 (gpofuncproc -> protproc .)
    FIN             reduce using rule 45 (gpofuncproc -> protproc .)
    FUNCION         shift and go to state 28
    PROCEDIMIENTO   shift and go to state 29

  ! FUNCION         [ reduce using rule 156 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]

    protproc                       shift and go to state 27
    gpofuncproc                    shift and go to state 51
    protfunc                       shift and go to state 26
    empty                          shift and go to state 30

state 28

    (48) protfunc -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (49) protfunc -> FUNCION . error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    IDENT           shift and go to state 52
    error           shift and go to state 53


state 29

    (50) protproc -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (51) protproc -> PROCEDIMIENTO . error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    IDENT           shift and go to state 54
    error           shift and go to state 55


state 30

    (52) protproc -> empty .

    FUNCION         reduce using rule 52 (protproc -> empty .)
    PROCEDIMIENTO   reduce using rule 52 (protproc -> empty .)
    FIN             reduce using rule 52 (protproc -> empty .)


state 31

    (4) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA
    (9) gpovars -> gpoids PUNTOS_DOBLES . error PUNTO_COMA gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES . error PUNTO_COMA

    TIPO            shift and go to state 56
    error           shift and go to state 57


state 32

    (7) gpovars -> gpoids error . TIPO PUNTO_COMA gpovars
    (8) gpovars -> gpoids error . TIPO PUNTO_COMA

    TIPO            shift and go to state 58


state 33

    (17) gpoids2 -> IDENT . COMA gpoids2
    (18) gpoids2 -> IDENT . opasig COMA gpoids2
    (19) gpoids2 -> IDENT .
    (20) gpoids2 -> IDENT . dimens COMA gpoids2
    (21) gpoids2 -> IDENT . dimens
    (31) opasig -> . OP_ASIG CTE_ENTERA
    (32) opasig -> . OP_ASIG IDENT
    (33) opasig -> . empty
    (27) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (28) dimens -> .
    (29) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (30) dimens -> . error valor CORCHETE_TERMINA dimens
    (156) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PUNTOS_DOBLES resolved using rule 19 (gpoids2 -> IDENT .)
  ! reduce/reduce conflict for error resolved using rule 19 (gpoids2 -> IDENT .)
  ! shift/reduce conflict for COMA resolved as shift
    COMA            shift and go to state 59
    PUNTOS_DOBLES   reduce using rule 19 (gpoids2 -> IDENT .)
    error           reduce using rule 19 (gpoids2 -> IDENT .)
    OP_ASIG         shift and go to state 39
    CORCHETE_EMPIEZA shift and go to state 41

  ! COMA            [ reduce using rule 28 (dimens -> .) ]
  ! PUNTOS_DOBLES   [ reduce using rule 28 (dimens -> .) ]
  ! error           [ reduce using rule 28 (dimens -> .) ]
  ! error           [ shift and go to state 63 ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]

    opasig                         shift and go to state 60
    dimens                         shift and go to state 61
    empty                          shift and go to state 62

state 34

    (11) gpoids -> IDENT COMA . gpoids2
    (17) gpoids2 -> . IDENT COMA gpoids2
    (18) gpoids2 -> . IDENT opasig COMA gpoids2
    (19) gpoids2 -> . IDENT
    (20) gpoids2 -> . IDENT dimens COMA gpoids2
    (21) gpoids2 -> . IDENT dimens
    (26) gpoids2 -> . empty
    (156) empty -> .

    IDENT           shift and go to state 33
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

    gpoids2                        shift and go to state 64
    empty                          shift and go to state 65

state 35

    (13) gpoids -> IDENT gpoids2 .

    PUNTOS_DOBLES   reduce using rule 13 (gpoids -> IDENT gpoids2 .)
    error           reduce using rule 13 (gpoids -> IDENT gpoids2 .)


state 36

    (12) gpoids -> IDENT opasig . COMA gpoids2
    (24) gpoids -> IDENT opasig . error gpoids

    COMA            shift and go to state 66
    error           shift and go to state 67


state 37

    (15) gpoids -> IDENT dimens . COMA gpoids2
    (16) gpoids -> IDENT dimens .
    (22) gpoids -> IDENT dimens . error gpoids

    COMA            shift and go to state 68
    PUNTOS_DOBLES   reduce using rule 16 (gpoids -> IDENT dimens .)
    error           reduce using rule 16 (gpoids -> IDENT dimens .)

  ! error           [ shift and go to state 69 ]


state 38

    (23) gpoids -> IDENT error . gpoids
    (30) dimens -> error . valor CORCHETE_TERMINA dimens
    (11) gpoids -> . IDENT COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT gpoids2
    (14) gpoids -> . IDENT
    (15) gpoids -> . IDENT dimens COMA gpoids2
    (16) gpoids -> . IDENT dimens
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (25) gpoids -> . empty
    (34) valor -> . exprlog
    (156) empty -> .
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
    IDENT           shift and go to state 70
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    gpoids                         shift and go to state 71
    valor                          shift and go to state 72
    empty                          shift and go to state 73
    exprlog                        shift and go to state 74
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 39

    (31) opasig -> OP_ASIG . CTE_ENTERA
    (32) opasig -> OP_ASIG . IDENT

    CTE_ENTERA      shift and go to state 91
    IDENT           shift and go to state 92


state 40

    (33) opasig -> empty .
    (26) gpoids2 -> empty .

  ! reduce/reduce conflict for error resolved using rule 26 (gpoids2 -> empty .)
    COMA            reduce using rule 33 (opasig -> empty .)
    PUNTOS_DOBLES   reduce using rule 26 (gpoids2 -> empty .)
    error           reduce using rule 26 (gpoids2 -> empty .)

  ! error           [ reduce using rule 33 (opasig -> empty .) ]


state 41

    (27) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (29) dimens -> CORCHETE_EMPIEZA . valor error dimens
    (34) valor -> . exprlog
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    valor                          shift and go to state 93
    exprlog                        shift and go to state 74
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 42

    (37) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA
    (38) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 96


state 43

    (39) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA
    (40) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 97


state 44

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA . block FIN DE PROGRAMA PUNTO
    (68) block -> . estatuto puntoc block
    (69) block -> . estatuto puntoc
    (71) block -> . estatuto error
    (72) block -> . estatuto error block
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124
    error           reduce using rule 156 (empty -> .)
    PUNTO_COMA      reduce using rule 156 (empty -> .)

    block                          shift and go to state 98
    estatuto                       shift and go to state 99
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 45

    (63) funcproc -> procedimiento funcproc .

    PROGRAMA        reduce using rule 63 (funcproc -> procedimiento funcproc .)


state 46

    (64) funcproc -> funcion funcproc .

    PROGRAMA        reduce using rule 64 (funcproc -> funcion funcproc .)


state 47

    (66) procedimiento -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 125


state 48

    (67) funcion -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 126


state 49

    (42) protfuncproc -> PROTOTIPOS gpofuncproc FIN . DE PROTOTIPOS PUNTO_COMA

    DE              shift and go to state 127


state 50

    (47) gpofuncproc -> protfunc gpofuncproc .

    FIN             reduce using rule 47 (gpofuncproc -> protfunc gpofuncproc .)


state 51

    (46) gpofuncproc -> protproc gpofuncproc .

    FIN             reduce using rule 46 (gpofuncproc -> protproc gpofuncproc .)


state 52

    (48) protfunc -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 128


state 53

    (49) protfunc -> FUNCION error . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 129


state 54

    (50) protproc -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 130


state 55

    (51) protproc -> PROCEDIMIENTO error . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 131


state 56

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 132


state 57

    (9) gpovars -> gpoids PUNTOS_DOBLES error . PUNTO_COMA gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES error . PUNTO_COMA

    PUNTO_COMA      shift and go to state 133


state 58

    (7) gpovars -> gpoids error TIPO . PUNTO_COMA gpovars
    (8) gpovars -> gpoids error TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 134


state 59

    (17) gpoids2 -> IDENT COMA . gpoids2
    (17) gpoids2 -> . IDENT COMA gpoids2
    (18) gpoids2 -> . IDENT opasig COMA gpoids2
    (19) gpoids2 -> . IDENT
    (20) gpoids2 -> . IDENT dimens COMA gpoids2
    (21) gpoids2 -> . IDENT dimens
    (26) gpoids2 -> . empty
    (156) empty -> .

    IDENT           shift and go to state 33
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

    gpoids2                        shift and go to state 135
    empty                          shift and go to state 65

state 60

    (18) gpoids2 -> IDENT opasig . COMA gpoids2

    COMA            shift and go to state 136


state 61

    (20) gpoids2 -> IDENT dimens . COMA gpoids2
    (21) gpoids2 -> IDENT dimens .

    COMA            shift and go to state 137
    PUNTOS_DOBLES   reduce using rule 21 (gpoids2 -> IDENT dimens .)
    error           reduce using rule 21 (gpoids2 -> IDENT dimens .)


state 62

    (33) opasig -> empty .

    COMA            reduce using rule 33 (opasig -> empty .)


state 63

    (30) dimens -> error . valor CORCHETE_TERMINA dimens
    (34) valor -> . exprlog
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    valor                          shift and go to state 72
    exprlog                        shift and go to state 74
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 64

    (11) gpoids -> IDENT COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> IDENT COMA gpoids2 .)
    error           reduce using rule 11 (gpoids -> IDENT COMA gpoids2 .)


state 65

    (26) gpoids2 -> empty .

    PUNTOS_DOBLES   reduce using rule 26 (gpoids2 -> empty .)
    error           reduce using rule 26 (gpoids2 -> empty .)


state 66

    (12) gpoids -> IDENT opasig COMA . gpoids2
    (17) gpoids2 -> . IDENT COMA gpoids2
    (18) gpoids2 -> . IDENT opasig COMA gpoids2
    (19) gpoids2 -> . IDENT
    (20) gpoids2 -> . IDENT dimens COMA gpoids2
    (21) gpoids2 -> . IDENT dimens
    (26) gpoids2 -> . empty
    (156) empty -> .

    IDENT           shift and go to state 33
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

    gpoids2                        shift and go to state 138
    empty                          shift and go to state 65

state 67

    (24) gpoids -> IDENT opasig error . gpoids
    (11) gpoids -> . IDENT COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT gpoids2
    (14) gpoids -> . IDENT
    (15) gpoids -> . IDENT dimens COMA gpoids2
    (16) gpoids -> . IDENT dimens
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (25) gpoids -> . empty
    (156) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

    gpoids                         shift and go to state 139
    empty                          shift and go to state 140

state 68

    (15) gpoids -> IDENT dimens COMA . gpoids2
    (17) gpoids2 -> . IDENT COMA gpoids2
    (18) gpoids2 -> . IDENT opasig COMA gpoids2
    (19) gpoids2 -> . IDENT
    (20) gpoids2 -> . IDENT dimens COMA gpoids2
    (21) gpoids2 -> . IDENT dimens
    (26) gpoids2 -> . empty
    (156) empty -> .

    IDENT           shift and go to state 33
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

    gpoids2                        shift and go to state 141
    empty                          shift and go to state 65

state 69

    (22) gpoids -> IDENT dimens error . gpoids
    (11) gpoids -> . IDENT COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT gpoids2
    (14) gpoids -> . IDENT
    (15) gpoids -> . IDENT dimens COMA gpoids2
    (16) gpoids -> . IDENT dimens
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (25) gpoids -> . empty
    (156) empty -> .

    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

    gpoids                         shift and go to state 142
    empty                          shift and go to state 140

state 70

    (11) gpoids -> IDENT . COMA gpoids2
    (12) gpoids -> IDENT . opasig COMA gpoids2
    (13) gpoids -> IDENT . gpoids2
    (14) gpoids -> IDENT .
    (15) gpoids -> IDENT . dimens COMA gpoids2
    (16) gpoids -> IDENT . dimens
    (22) gpoids -> IDENT . dimens error gpoids
    (23) gpoids -> IDENT . error gpoids
    (24) gpoids -> IDENT . opasig error gpoids
    (132) termino -> IDENT .
    (139) termino -> IDENT . udim
    (141) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (142) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (31) opasig -> . OP_ASIG CTE_ENTERA
    (32) opasig -> . OP_ASIG IDENT
    (33) opasig -> . empty
    (17) gpoids2 -> . IDENT COMA gpoids2
    (18) gpoids2 -> . IDENT opasig COMA gpoids2
    (19) gpoids2 -> . IDENT
    (20) gpoids2 -> . IDENT dimens COMA gpoids2
    (21) gpoids2 -> . IDENT dimens
    (26) gpoids2 -> . empty
    (27) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (28) dimens -> .
    (29) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (30) dimens -> . error valor CORCHETE_TERMINA dimens
    (110) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (111) udim -> . empty
    (143) parenemp -> . PAREN_EMPIEZA
    (156) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for error resolved using rule 14 (gpoids -> IDENT .)
  ! reduce/reduce conflict for PUNTOS_DOBLES resolved using rule 14 (gpoids -> IDENT .)
  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for error resolved using rule 14 (gpoids -> IDENT .)
  ! reduce/reduce conflict for PUNTOS_DOBLES resolved using rule 14 (gpoids -> IDENT .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for MENOS resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> IDENT .)
    COMA            shift and go to state 34
    PUNTOS_DOBLES   reduce using rule 14 (gpoids -> IDENT .)
    error           reduce using rule 14 (gpoids -> IDENT .)
    POTENCIA        reduce using rule 132 (termino -> IDENT .)
    MULTI           reduce using rule 132 (termino -> IDENT .)
    DIV             reduce using rule 132 (termino -> IDENT .)
    MOD             reduce using rule 132 (termino -> IDENT .)
    MAS             reduce using rule 132 (termino -> IDENT .)
    MENOS           reduce using rule 132 (termino -> IDENT .)
    OP_REL          reduce using rule 132 (termino -> IDENT .)
    Y               reduce using rule 132 (termino -> IDENT .)
    O               reduce using rule 132 (termino -> IDENT .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> IDENT .)
    OP_ASIG         shift and go to state 39
    IDENT           shift and go to state 33
    CORCHETE_EMPIEZA shift and go to state 146
    PAREN_EMPIEZA   shift and go to state 147

  ! error           [ shift and go to state 38 ]
  ! COMA            [ reduce using rule 28 (dimens -> .) ]
  ! error           [ reduce using rule 28 (dimens -> .) ]
  ! PUNTOS_DOBLES   [ reduce using rule 28 (dimens -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! PUNTOS_DOBLES   [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]

    gpoids2                        shift and go to state 35
    opasig                         shift and go to state 36
    dimens                         shift and go to state 37
    udim                           shift and go to state 143
    parenemp                       shift and go to state 144
    empty                          shift and go to state 145

state 71

    (23) gpoids -> IDENT error gpoids .

    PUNTOS_DOBLES   reduce using rule 23 (gpoids -> IDENT error gpoids .)
    error           reduce using rule 23 (gpoids -> IDENT error gpoids .)


state 72

    (30) dimens -> error valor . CORCHETE_TERMINA dimens

    CORCHETE_TERMINA shift and go to state 148


state 73

    (25) gpoids -> empty .
    (127) multi -> empty .

    PUNTOS_DOBLES   reduce using rule 25 (gpoids -> empty .)
    error           reduce using rule 25 (gpoids -> empty .)
    MAS             reduce using rule 127 (multi -> empty .)
    MENOS           reduce using rule 127 (multi -> empty .)
    OP_REL          reduce using rule 127 (multi -> empty .)
    Y               reduce using rule 127 (multi -> empty .)
    O               reduce using rule 127 (multi -> empty .)
    CORCHETE_TERMINA reduce using rule 127 (multi -> empty .)


state 74

    (34) valor -> exprlog .

    CORCHETE_TERMINA reduce using rule 34 (valor -> exprlog .)
    error           reduce using rule 34 (valor -> exprlog .)


state 75

    (112) exprlog -> opy .
    (113) exprlog -> opy . O exprlog

  ! shift/reduce conflict for O resolved as shift
    CORCHETE_TERMINA reduce using rule 112 (exprlog -> opy .)
    error           reduce using rule 112 (exprlog -> opy .)
    COMA            reduce using rule 112 (exprlog -> opy .)
    PAREN_TERMINA   reduce using rule 112 (exprlog -> opy .)
    NO              reduce using rule 112 (exprlog -> opy .)
    MENOS           reduce using rule 112 (exprlog -> opy .)
    IDENT           reduce using rule 112 (exprlog -> opy .)
    CTE_ENTERA      reduce using rule 112 (exprlog -> opy .)
    CTE_REAL        reduce using rule 112 (exprlog -> opy .)
    CTE_ALFA        reduce using rule 112 (exprlog -> opy .)
    VERDADERO       reduce using rule 112 (exprlog -> opy .)
    FALSO           reduce using rule 112 (exprlog -> opy .)
    Y               reduce using rule 112 (exprlog -> opy .)
    OP_REL          reduce using rule 112 (exprlog -> opy .)
    MAS             reduce using rule 112 (exprlog -> opy .)
    MULTI           reduce using rule 112 (exprlog -> opy .)
    DIV             reduce using rule 112 (exprlog -> opy .)
    MOD             reduce using rule 112 (exprlog -> opy .)
    POTENCIA        reduce using rule 112 (exprlog -> opy .)
    PUNTO_COMA      reduce using rule 112 (exprlog -> opy .)
    HASTA           reduce using rule 112 (exprlog -> opy .)
    SINO            reduce using rule 112 (exprlog -> opy .)
    FIN             reduce using rule 112 (exprlog -> opy .)
    SEA             reduce using rule 112 (exprlog -> opy .)
    OTRO            reduce using rule 112 (exprlog -> opy .)
    INICIO          reduce using rule 112 (exprlog -> opy .)
    LIMPIA          reduce using rule 112 (exprlog -> opy .)
    INTERRUMPE      reduce using rule 112 (exprlog -> opy .)
    CONTINUA        reduce using rule 112 (exprlog -> opy .)
    SI              reduce using rule 112 (exprlog -> opy .)
    DESDE           reduce using rule 112 (exprlog -> opy .)
    REPETIR         reduce using rule 112 (exprlog -> opy .)
    MIENTRAS        reduce using rule 112 (exprlog -> opy .)
    CUANDO          reduce using rule 112 (exprlog -> opy .)
    REGRESA         reduce using rule 112 (exprlog -> opy .)
    IMPRIME         reduce using rule 112 (exprlog -> opy .)
    IMPRIMENL       reduce using rule 112 (exprlog -> opy .)
    LEE             reduce using rule 112 (exprlog -> opy .)
    O               shift and go to state 149

  ! O               [ reduce using rule 112 (exprlog -> opy .) ]


state 76

    (114) opy -> opno .
    (115) opy -> opno . Y opy

  ! shift/reduce conflict for Y resolved as shift
    O               reduce using rule 114 (opy -> opno .)
    CORCHETE_TERMINA reduce using rule 114 (opy -> opno .)
    error           reduce using rule 114 (opy -> opno .)
    COMA            reduce using rule 114 (opy -> opno .)
    PAREN_TERMINA   reduce using rule 114 (opy -> opno .)
    NO              reduce using rule 114 (opy -> opno .)
    MENOS           reduce using rule 114 (opy -> opno .)
    IDENT           reduce using rule 114 (opy -> opno .)
    CTE_ENTERA      reduce using rule 114 (opy -> opno .)
    CTE_REAL        reduce using rule 114 (opy -> opno .)
    CTE_ALFA        reduce using rule 114 (opy -> opno .)
    VERDADERO       reduce using rule 114 (opy -> opno .)
    FALSO           reduce using rule 114 (opy -> opno .)
    OP_REL          reduce using rule 114 (opy -> opno .)
    MAS             reduce using rule 114 (opy -> opno .)
    MULTI           reduce using rule 114 (opy -> opno .)
    DIV             reduce using rule 114 (opy -> opno .)
    MOD             reduce using rule 114 (opy -> opno .)
    POTENCIA        reduce using rule 114 (opy -> opno .)
    PUNTO_COMA      reduce using rule 114 (opy -> opno .)
    HASTA           reduce using rule 114 (opy -> opno .)
    SINO            reduce using rule 114 (opy -> opno .)
    FIN             reduce using rule 114 (opy -> opno .)
    SEA             reduce using rule 114 (opy -> opno .)
    OTRO            reduce using rule 114 (opy -> opno .)
    INICIO          reduce using rule 114 (opy -> opno .)
    LIMPIA          reduce using rule 114 (opy -> opno .)
    INTERRUMPE      reduce using rule 114 (opy -> opno .)
    CONTINUA        reduce using rule 114 (opy -> opno .)
    SI              reduce using rule 114 (opy -> opno .)
    DESDE           reduce using rule 114 (opy -> opno .)
    REPETIR         reduce using rule 114 (opy -> opno .)
    MIENTRAS        reduce using rule 114 (opy -> opno .)
    CUANDO          reduce using rule 114 (opy -> opno .)
    REGRESA         reduce using rule 114 (opy -> opno .)
    IMPRIME         reduce using rule 114 (opy -> opno .)
    IMPRIMENL       reduce using rule 114 (opy -> opno .)
    LEE             reduce using rule 114 (opy -> opno .)
    Y               shift and go to state 150

  ! Y               [ reduce using rule 114 (opy -> opno .) ]


state 77

    (116) opno -> oprel .

    Y               reduce using rule 116 (opno -> oprel .)
    O               reduce using rule 116 (opno -> oprel .)
    CORCHETE_TERMINA reduce using rule 116 (opno -> oprel .)
    error           reduce using rule 116 (opno -> oprel .)
    COMA            reduce using rule 116 (opno -> oprel .)
    PAREN_TERMINA   reduce using rule 116 (opno -> oprel .)
    NO              reduce using rule 116 (opno -> oprel .)
    MENOS           reduce using rule 116 (opno -> oprel .)
    IDENT           reduce using rule 116 (opno -> oprel .)
    CTE_ENTERA      reduce using rule 116 (opno -> oprel .)
    CTE_REAL        reduce using rule 116 (opno -> oprel .)
    CTE_ALFA        reduce using rule 116 (opno -> oprel .)
    VERDADERO       reduce using rule 116 (opno -> oprel .)
    FALSO           reduce using rule 116 (opno -> oprel .)
    OP_REL          reduce using rule 116 (opno -> oprel .)
    MAS             reduce using rule 116 (opno -> oprel .)
    MULTI           reduce using rule 116 (opno -> oprel .)
    DIV             reduce using rule 116 (opno -> oprel .)
    MOD             reduce using rule 116 (opno -> oprel .)
    POTENCIA        reduce using rule 116 (opno -> oprel .)
    PUNTO_COMA      reduce using rule 116 (opno -> oprel .)
    HASTA           reduce using rule 116 (opno -> oprel .)
    SINO            reduce using rule 116 (opno -> oprel .)
    FIN             reduce using rule 116 (opno -> oprel .)
    SEA             reduce using rule 116 (opno -> oprel .)
    OTRO            reduce using rule 116 (opno -> oprel .)
    INICIO          reduce using rule 116 (opno -> oprel .)
    LIMPIA          reduce using rule 116 (opno -> oprel .)
    INTERRUMPE      reduce using rule 116 (opno -> oprel .)
    CONTINUA        reduce using rule 116 (opno -> oprel .)
    SI              reduce using rule 116 (opno -> oprel .)
    DESDE           reduce using rule 116 (opno -> oprel .)
    REPETIR         reduce using rule 116 (opno -> oprel .)
    MIENTRAS        reduce using rule 116 (opno -> oprel .)
    CUANDO          reduce using rule 116 (opno -> oprel .)
    REGRESA         reduce using rule 116 (opno -> oprel .)
    IMPRIME         reduce using rule 116 (opno -> oprel .)
    IMPRIMENL       reduce using rule 116 (opno -> oprel .)
    LEE             reduce using rule 116 (opno -> oprel .)


state 78

    (117) opno -> NO . oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DIV resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MOD resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for NO resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DESDE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 138 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    NO              reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! HASTA           [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 156 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 156 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 156 (empty -> .) ]
  ! SI              [ reduce using rule 156 (empty -> .) ]
  ! DESDE           [ reduce using rule 156 (empty -> .) ]
  ! REPETIR         [ reduce using rule 156 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 156 (empty -> .) ]
  ! CUANDO          [ reduce using rule 156 (empty -> .) ]
  ! REGRESA         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 156 (empty -> .) ]
  ! LEE             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    oprel                          shift and go to state 151
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 79

    (118) oprel -> expr .
    (119) oprel -> expr . OP_REL oprel

  ! shift/reduce conflict for OP_REL resolved as shift
    Y               reduce using rule 118 (oprel -> expr .)
    O               reduce using rule 118 (oprel -> expr .)
    CORCHETE_TERMINA reduce using rule 118 (oprel -> expr .)
    error           reduce using rule 118 (oprel -> expr .)
    COMA            reduce using rule 118 (oprel -> expr .)
    PAREN_TERMINA   reduce using rule 118 (oprel -> expr .)
    NO              reduce using rule 118 (oprel -> expr .)
    MENOS           reduce using rule 118 (oprel -> expr .)
    IDENT           reduce using rule 118 (oprel -> expr .)
    CTE_ENTERA      reduce using rule 118 (oprel -> expr .)
    CTE_REAL        reduce using rule 118 (oprel -> expr .)
    CTE_ALFA        reduce using rule 118 (oprel -> expr .)
    VERDADERO       reduce using rule 118 (oprel -> expr .)
    FALSO           reduce using rule 118 (oprel -> expr .)
    MAS             reduce using rule 118 (oprel -> expr .)
    MULTI           reduce using rule 118 (oprel -> expr .)
    DIV             reduce using rule 118 (oprel -> expr .)
    MOD             reduce using rule 118 (oprel -> expr .)
    POTENCIA        reduce using rule 118 (oprel -> expr .)
    PUNTO_COMA      reduce using rule 118 (oprel -> expr .)
    HASTA           reduce using rule 118 (oprel -> expr .)
    SINO            reduce using rule 118 (oprel -> expr .)
    FIN             reduce using rule 118 (oprel -> expr .)
    SEA             reduce using rule 118 (oprel -> expr .)
    OTRO            reduce using rule 118 (oprel -> expr .)
    INICIO          reduce using rule 118 (oprel -> expr .)
    LIMPIA          reduce using rule 118 (oprel -> expr .)
    INTERRUMPE      reduce using rule 118 (oprel -> expr .)
    CONTINUA        reduce using rule 118 (oprel -> expr .)
    SI              reduce using rule 118 (oprel -> expr .)
    DESDE           reduce using rule 118 (oprel -> expr .)
    REPETIR         reduce using rule 118 (oprel -> expr .)
    MIENTRAS        reduce using rule 118 (oprel -> expr .)
    CUANDO          reduce using rule 118 (oprel -> expr .)
    REGRESA         reduce using rule 118 (oprel -> expr .)
    IMPRIME         reduce using rule 118 (oprel -> expr .)
    IMPRIMENL       reduce using rule 118 (oprel -> expr .)
    LEE             reduce using rule 118 (oprel -> expr .)
    OP_REL          shift and go to state 152

  ! OP_REL          [ reduce using rule 118 (oprel -> expr .) ]


state 80

    (120) expr -> multi .
    (121) expr -> multi . MAS expr
    (122) expr -> multi . MENOS expr

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    OP_REL          reduce using rule 120 (expr -> multi .)
    Y               reduce using rule 120 (expr -> multi .)
    O               reduce using rule 120 (expr -> multi .)
    CORCHETE_TERMINA reduce using rule 120 (expr -> multi .)
    error           reduce using rule 120 (expr -> multi .)
    COMA            reduce using rule 120 (expr -> multi .)
    PAREN_TERMINA   reduce using rule 120 (expr -> multi .)
    NO              reduce using rule 120 (expr -> multi .)
    IDENT           reduce using rule 120 (expr -> multi .)
    CTE_ENTERA      reduce using rule 120 (expr -> multi .)
    CTE_REAL        reduce using rule 120 (expr -> multi .)
    CTE_ALFA        reduce using rule 120 (expr -> multi .)
    VERDADERO       reduce using rule 120 (expr -> multi .)
    FALSO           reduce using rule 120 (expr -> multi .)
    MULTI           reduce using rule 120 (expr -> multi .)
    DIV             reduce using rule 120 (expr -> multi .)
    MOD             reduce using rule 120 (expr -> multi .)
    POTENCIA        reduce using rule 120 (expr -> multi .)
    PUNTO_COMA      reduce using rule 120 (expr -> multi .)
    HASTA           reduce using rule 120 (expr -> multi .)
    SINO            reduce using rule 120 (expr -> multi .)
    FIN             reduce using rule 120 (expr -> multi .)
    SEA             reduce using rule 120 (expr -> multi .)
    OTRO            reduce using rule 120 (expr -> multi .)
    INICIO          reduce using rule 120 (expr -> multi .)
    LIMPIA          reduce using rule 120 (expr -> multi .)
    INTERRUMPE      reduce using rule 120 (expr -> multi .)
    CONTINUA        reduce using rule 120 (expr -> multi .)
    SI              reduce using rule 120 (expr -> multi .)
    DESDE           reduce using rule 120 (expr -> multi .)
    REPETIR         reduce using rule 120 (expr -> multi .)
    MIENTRAS        reduce using rule 120 (expr -> multi .)
    CUANDO          reduce using rule 120 (expr -> multi .)
    REGRESA         reduce using rule 120 (expr -> multi .)
    IMPRIME         reduce using rule 120 (expr -> multi .)
    IMPRIMENL       reduce using rule 120 (expr -> multi .)
    LEE             reduce using rule 120 (expr -> multi .)
    DECR            reduce using rule 120 (expr -> multi .)
    INCR            reduce using rule 120 (expr -> multi .)
    MAS             shift and go to state 153
    MENOS           shift and go to state 154

  ! MENOS           [ reduce using rule 120 (expr -> multi .) ]
  ! MAS             [ reduce using rule 120 (expr -> multi .) ]


state 81

    (131) signo -> MENOS . termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    MENOS           reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    NO              reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)
    DECR            reduce using rule 138 (termino -> .)
    INCR            reduce using rule 138 (termino -> .)

  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    termino                        shift and go to state 155
    lfunc                          shift and go to state 90

state 82

    (123) multi -> expo .
    (124) multi -> expo . MULTI multi
    (125) multi -> expo . DIV multi
    (126) multi -> expo . MOD multi

  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    MAS             reduce using rule 123 (multi -> expo .)
    MENOS           reduce using rule 123 (multi -> expo .)
    OP_REL          reduce using rule 123 (multi -> expo .)
    Y               reduce using rule 123 (multi -> expo .)
    O               reduce using rule 123 (multi -> expo .)
    CORCHETE_TERMINA reduce using rule 123 (multi -> expo .)
    error           reduce using rule 123 (multi -> expo .)
    COMA            reduce using rule 123 (multi -> expo .)
    PAREN_TERMINA   reduce using rule 123 (multi -> expo .)
    NO              reduce using rule 123 (multi -> expo .)
    IDENT           reduce using rule 123 (multi -> expo .)
    CTE_ENTERA      reduce using rule 123 (multi -> expo .)
    CTE_REAL        reduce using rule 123 (multi -> expo .)
    CTE_ALFA        reduce using rule 123 (multi -> expo .)
    VERDADERO       reduce using rule 123 (multi -> expo .)
    FALSO           reduce using rule 123 (multi -> expo .)
    POTENCIA        reduce using rule 123 (multi -> expo .)
    PUNTO_COMA      reduce using rule 123 (multi -> expo .)
    HASTA           reduce using rule 123 (multi -> expo .)
    SINO            reduce using rule 123 (multi -> expo .)
    FIN             reduce using rule 123 (multi -> expo .)
    SEA             reduce using rule 123 (multi -> expo .)
    OTRO            reduce using rule 123 (multi -> expo .)
    INICIO          reduce using rule 123 (multi -> expo .)
    LIMPIA          reduce using rule 123 (multi -> expo .)
    INTERRUMPE      reduce using rule 123 (multi -> expo .)
    CONTINUA        reduce using rule 123 (multi -> expo .)
    SI              reduce using rule 123 (multi -> expo .)
    DESDE           reduce using rule 123 (multi -> expo .)
    REPETIR         reduce using rule 123 (multi -> expo .)
    MIENTRAS        reduce using rule 123 (multi -> expo .)
    CUANDO          reduce using rule 123 (multi -> expo .)
    REGRESA         reduce using rule 123 (multi -> expo .)
    IMPRIME         reduce using rule 123 (multi -> expo .)
    IMPRIMENL       reduce using rule 123 (multi -> expo .)
    LEE             reduce using rule 123 (multi -> expo .)
    DECR            reduce using rule 123 (multi -> expo .)
    INCR            reduce using rule 123 (multi -> expo .)
    MULTI           shift and go to state 156
    DIV             shift and go to state 157
    MOD             shift and go to state 158

  ! MULTI           [ reduce using rule 123 (multi -> expo .) ]
  ! DIV             [ reduce using rule 123 (multi -> expo .) ]
  ! MOD             [ reduce using rule 123 (multi -> expo .) ]


state 83

    (128) expo -> signo .
    (129) expo -> signo . POTENCIA expo

  ! shift/reduce conflict for POTENCIA resolved as shift
    MULTI           reduce using rule 128 (expo -> signo .)
    DIV             reduce using rule 128 (expo -> signo .)
    MOD             reduce using rule 128 (expo -> signo .)
    MAS             reduce using rule 128 (expo -> signo .)
    MENOS           reduce using rule 128 (expo -> signo .)
    OP_REL          reduce using rule 128 (expo -> signo .)
    Y               reduce using rule 128 (expo -> signo .)
    O               reduce using rule 128 (expo -> signo .)
    CORCHETE_TERMINA reduce using rule 128 (expo -> signo .)
    error           reduce using rule 128 (expo -> signo .)
    COMA            reduce using rule 128 (expo -> signo .)
    PAREN_TERMINA   reduce using rule 128 (expo -> signo .)
    NO              reduce using rule 128 (expo -> signo .)
    IDENT           reduce using rule 128 (expo -> signo .)
    CTE_ENTERA      reduce using rule 128 (expo -> signo .)
    CTE_REAL        reduce using rule 128 (expo -> signo .)
    CTE_ALFA        reduce using rule 128 (expo -> signo .)
    VERDADERO       reduce using rule 128 (expo -> signo .)
    FALSO           reduce using rule 128 (expo -> signo .)
    PUNTO_COMA      reduce using rule 128 (expo -> signo .)
    HASTA           reduce using rule 128 (expo -> signo .)
    SINO            reduce using rule 128 (expo -> signo .)
    FIN             reduce using rule 128 (expo -> signo .)
    SEA             reduce using rule 128 (expo -> signo .)
    OTRO            reduce using rule 128 (expo -> signo .)
    INICIO          reduce using rule 128 (expo -> signo .)
    LIMPIA          reduce using rule 128 (expo -> signo .)
    INTERRUMPE      reduce using rule 128 (expo -> signo .)
    CONTINUA        reduce using rule 128 (expo -> signo .)
    SI              reduce using rule 128 (expo -> signo .)
    DESDE           reduce using rule 128 (expo -> signo .)
    REPETIR         reduce using rule 128 (expo -> signo .)
    MIENTRAS        reduce using rule 128 (expo -> signo .)
    CUANDO          reduce using rule 128 (expo -> signo .)
    REGRESA         reduce using rule 128 (expo -> signo .)
    IMPRIME         reduce using rule 128 (expo -> signo .)
    IMPRIMENL       reduce using rule 128 (expo -> signo .)
    LEE             reduce using rule 128 (expo -> signo .)
    DECR            reduce using rule 128 (expo -> signo .)
    INCR            reduce using rule 128 (expo -> signo .)
    POTENCIA        shift and go to state 159

  ! POTENCIA        [ reduce using rule 128 (expo -> signo .) ]


state 84

    (130) signo -> termino .

    POTENCIA        reduce using rule 130 (signo -> termino .)
    MULTI           reduce using rule 130 (signo -> termino .)
    DIV             reduce using rule 130 (signo -> termino .)
    MOD             reduce using rule 130 (signo -> termino .)
    MAS             reduce using rule 130 (signo -> termino .)
    MENOS           reduce using rule 130 (signo -> termino .)
    OP_REL          reduce using rule 130 (signo -> termino .)
    Y               reduce using rule 130 (signo -> termino .)
    O               reduce using rule 130 (signo -> termino .)
    CORCHETE_TERMINA reduce using rule 130 (signo -> termino .)
    error           reduce using rule 130 (signo -> termino .)
    COMA            reduce using rule 130 (signo -> termino .)
    PAREN_TERMINA   reduce using rule 130 (signo -> termino .)
    NO              reduce using rule 130 (signo -> termino .)
    IDENT           reduce using rule 130 (signo -> termino .)
    CTE_ENTERA      reduce using rule 130 (signo -> termino .)
    CTE_REAL        reduce using rule 130 (signo -> termino .)
    CTE_ALFA        reduce using rule 130 (signo -> termino .)
    VERDADERO       reduce using rule 130 (signo -> termino .)
    FALSO           reduce using rule 130 (signo -> termino .)
    PUNTO_COMA      reduce using rule 130 (signo -> termino .)
    HASTA           reduce using rule 130 (signo -> termino .)
    SINO            reduce using rule 130 (signo -> termino .)
    FIN             reduce using rule 130 (signo -> termino .)
    SEA             reduce using rule 130 (signo -> termino .)
    OTRO            reduce using rule 130 (signo -> termino .)
    INICIO          reduce using rule 130 (signo -> termino .)
    LIMPIA          reduce using rule 130 (signo -> termino .)
    INTERRUMPE      reduce using rule 130 (signo -> termino .)
    CONTINUA        reduce using rule 130 (signo -> termino .)
    SI              reduce using rule 130 (signo -> termino .)
    DESDE           reduce using rule 130 (signo -> termino .)
    REPETIR         reduce using rule 130 (signo -> termino .)
    MIENTRAS        reduce using rule 130 (signo -> termino .)
    CUANDO          reduce using rule 130 (signo -> termino .)
    REGRESA         reduce using rule 130 (signo -> termino .)
    IMPRIME         reduce using rule 130 (signo -> termino .)
    IMPRIMENL       reduce using rule 130 (signo -> termino .)
    LEE             reduce using rule 130 (signo -> termino .)
    DECR            reduce using rule 130 (signo -> termino .)
    INCR            reduce using rule 130 (signo -> termino .)


state 85

    (133) termino -> CTE_ENTERA .

    POTENCIA        reduce using rule 133 (termino -> CTE_ENTERA .)
    MULTI           reduce using rule 133 (termino -> CTE_ENTERA .)
    DIV             reduce using rule 133 (termino -> CTE_ENTERA .)
    MOD             reduce using rule 133 (termino -> CTE_ENTERA .)
    MAS             reduce using rule 133 (termino -> CTE_ENTERA .)
    MENOS           reduce using rule 133 (termino -> CTE_ENTERA .)
    OP_REL          reduce using rule 133 (termino -> CTE_ENTERA .)
    Y               reduce using rule 133 (termino -> CTE_ENTERA .)
    O               reduce using rule 133 (termino -> CTE_ENTERA .)
    CORCHETE_TERMINA reduce using rule 133 (termino -> CTE_ENTERA .)
    error           reduce using rule 133 (termino -> CTE_ENTERA .)
    COMA            reduce using rule 133 (termino -> CTE_ENTERA .)
    PAREN_TERMINA   reduce using rule 133 (termino -> CTE_ENTERA .)
    NO              reduce using rule 133 (termino -> CTE_ENTERA .)
    IDENT           reduce using rule 133 (termino -> CTE_ENTERA .)
    CTE_ENTERA      reduce using rule 133 (termino -> CTE_ENTERA .)
    CTE_REAL        reduce using rule 133 (termino -> CTE_ENTERA .)
    CTE_ALFA        reduce using rule 133 (termino -> CTE_ENTERA .)
    VERDADERO       reduce using rule 133 (termino -> CTE_ENTERA .)
    FALSO           reduce using rule 133 (termino -> CTE_ENTERA .)
    PUNTO_COMA      reduce using rule 133 (termino -> CTE_ENTERA .)
    HASTA           reduce using rule 133 (termino -> CTE_ENTERA .)
    SINO            reduce using rule 133 (termino -> CTE_ENTERA .)
    FIN             reduce using rule 133 (termino -> CTE_ENTERA .)
    SEA             reduce using rule 133 (termino -> CTE_ENTERA .)
    OTRO            reduce using rule 133 (termino -> CTE_ENTERA .)
    INICIO          reduce using rule 133 (termino -> CTE_ENTERA .)
    LIMPIA          reduce using rule 133 (termino -> CTE_ENTERA .)
    INTERRUMPE      reduce using rule 133 (termino -> CTE_ENTERA .)
    CONTINUA        reduce using rule 133 (termino -> CTE_ENTERA .)
    SI              reduce using rule 133 (termino -> CTE_ENTERA .)
    DESDE           reduce using rule 133 (termino -> CTE_ENTERA .)
    REPETIR         reduce using rule 133 (termino -> CTE_ENTERA .)
    MIENTRAS        reduce using rule 133 (termino -> CTE_ENTERA .)
    CUANDO          reduce using rule 133 (termino -> CTE_ENTERA .)
    REGRESA         reduce using rule 133 (termino -> CTE_ENTERA .)
    IMPRIME         reduce using rule 133 (termino -> CTE_ENTERA .)
    IMPRIMENL       reduce using rule 133 (termino -> CTE_ENTERA .)
    LEE             reduce using rule 133 (termino -> CTE_ENTERA .)
    DECR            reduce using rule 133 (termino -> CTE_ENTERA .)
    INCR            reduce using rule 133 (termino -> CTE_ENTERA .)


state 86

    (134) termino -> CTE_REAL .

    POTENCIA        reduce using rule 134 (termino -> CTE_REAL .)
    MULTI           reduce using rule 134 (termino -> CTE_REAL .)
    DIV             reduce using rule 134 (termino -> CTE_REAL .)
    MOD             reduce using rule 134 (termino -> CTE_REAL .)
    MAS             reduce using rule 134 (termino -> CTE_REAL .)
    MENOS           reduce using rule 134 (termino -> CTE_REAL .)
    OP_REL          reduce using rule 134 (termino -> CTE_REAL .)
    Y               reduce using rule 134 (termino -> CTE_REAL .)
    O               reduce using rule 134 (termino -> CTE_REAL .)
    CORCHETE_TERMINA reduce using rule 134 (termino -> CTE_REAL .)
    error           reduce using rule 134 (termino -> CTE_REAL .)
    COMA            reduce using rule 134 (termino -> CTE_REAL .)
    PAREN_TERMINA   reduce using rule 134 (termino -> CTE_REAL .)
    NO              reduce using rule 134 (termino -> CTE_REAL .)
    IDENT           reduce using rule 134 (termino -> CTE_REAL .)
    CTE_ENTERA      reduce using rule 134 (termino -> CTE_REAL .)
    CTE_REAL        reduce using rule 134 (termino -> CTE_REAL .)
    CTE_ALFA        reduce using rule 134 (termino -> CTE_REAL .)
    VERDADERO       reduce using rule 134 (termino -> CTE_REAL .)
    FALSO           reduce using rule 134 (termino -> CTE_REAL .)
    PUNTO_COMA      reduce using rule 134 (termino -> CTE_REAL .)
    HASTA           reduce using rule 134 (termino -> CTE_REAL .)
    SINO            reduce using rule 134 (termino -> CTE_REAL .)
    FIN             reduce using rule 134 (termino -> CTE_REAL .)
    SEA             reduce using rule 134 (termino -> CTE_REAL .)
    OTRO            reduce using rule 134 (termino -> CTE_REAL .)
    INICIO          reduce using rule 134 (termino -> CTE_REAL .)
    LIMPIA          reduce using rule 134 (termino -> CTE_REAL .)
    INTERRUMPE      reduce using rule 134 (termino -> CTE_REAL .)
    CONTINUA        reduce using rule 134 (termino -> CTE_REAL .)
    SI              reduce using rule 134 (termino -> CTE_REAL .)
    DESDE           reduce using rule 134 (termino -> CTE_REAL .)
    REPETIR         reduce using rule 134 (termino -> CTE_REAL .)
    MIENTRAS        reduce using rule 134 (termino -> CTE_REAL .)
    CUANDO          reduce using rule 134 (termino -> CTE_REAL .)
    REGRESA         reduce using rule 134 (termino -> CTE_REAL .)
    IMPRIME         reduce using rule 134 (termino -> CTE_REAL .)
    IMPRIMENL       reduce using rule 134 (termino -> CTE_REAL .)
    LEE             reduce using rule 134 (termino -> CTE_REAL .)
    DECR            reduce using rule 134 (termino -> CTE_REAL .)
    INCR            reduce using rule 134 (termino -> CTE_REAL .)


state 87

    (135) termino -> CTE_ALFA .

    POTENCIA        reduce using rule 135 (termino -> CTE_ALFA .)
    MULTI           reduce using rule 135 (termino -> CTE_ALFA .)
    DIV             reduce using rule 135 (termino -> CTE_ALFA .)
    MOD             reduce using rule 135 (termino -> CTE_ALFA .)
    MAS             reduce using rule 135 (termino -> CTE_ALFA .)
    MENOS           reduce using rule 135 (termino -> CTE_ALFA .)
    OP_REL          reduce using rule 135 (termino -> CTE_ALFA .)
    Y               reduce using rule 135 (termino -> CTE_ALFA .)
    O               reduce using rule 135 (termino -> CTE_ALFA .)
    CORCHETE_TERMINA reduce using rule 135 (termino -> CTE_ALFA .)
    error           reduce using rule 135 (termino -> CTE_ALFA .)
    COMA            reduce using rule 135 (termino -> CTE_ALFA .)
    PAREN_TERMINA   reduce using rule 135 (termino -> CTE_ALFA .)
    NO              reduce using rule 135 (termino -> CTE_ALFA .)
    IDENT           reduce using rule 135 (termino -> CTE_ALFA .)
    CTE_ENTERA      reduce using rule 135 (termino -> CTE_ALFA .)
    CTE_REAL        reduce using rule 135 (termino -> CTE_ALFA .)
    CTE_ALFA        reduce using rule 135 (termino -> CTE_ALFA .)
    VERDADERO       reduce using rule 135 (termino -> CTE_ALFA .)
    FALSO           reduce using rule 135 (termino -> CTE_ALFA .)
    PUNTO_COMA      reduce using rule 135 (termino -> CTE_ALFA .)
    HASTA           reduce using rule 135 (termino -> CTE_ALFA .)
    SINO            reduce using rule 135 (termino -> CTE_ALFA .)
    FIN             reduce using rule 135 (termino -> CTE_ALFA .)
    SEA             reduce using rule 135 (termino -> CTE_ALFA .)
    OTRO            reduce using rule 135 (termino -> CTE_ALFA .)
    INICIO          reduce using rule 135 (termino -> CTE_ALFA .)
    LIMPIA          reduce using rule 135 (termino -> CTE_ALFA .)
    INTERRUMPE      reduce using rule 135 (termino -> CTE_ALFA .)
    CONTINUA        reduce using rule 135 (termino -> CTE_ALFA .)
    SI              reduce using rule 135 (termino -> CTE_ALFA .)
    DESDE           reduce using rule 135 (termino -> CTE_ALFA .)
    REPETIR         reduce using rule 135 (termino -> CTE_ALFA .)
    MIENTRAS        reduce using rule 135 (termino -> CTE_ALFA .)
    CUANDO          reduce using rule 135 (termino -> CTE_ALFA .)
    REGRESA         reduce using rule 135 (termino -> CTE_ALFA .)
    IMPRIME         reduce using rule 135 (termino -> CTE_ALFA .)
    IMPRIMENL       reduce using rule 135 (termino -> CTE_ALFA .)
    LEE             reduce using rule 135 (termino -> CTE_ALFA .)
    DECR            reduce using rule 135 (termino -> CTE_ALFA .)
    INCR            reduce using rule 135 (termino -> CTE_ALFA .)


state 88

    (136) termino -> VERDADERO .

    POTENCIA        reduce using rule 136 (termino -> VERDADERO .)
    MULTI           reduce using rule 136 (termino -> VERDADERO .)
    DIV             reduce using rule 136 (termino -> VERDADERO .)
    MOD             reduce using rule 136 (termino -> VERDADERO .)
    MAS             reduce using rule 136 (termino -> VERDADERO .)
    MENOS           reduce using rule 136 (termino -> VERDADERO .)
    OP_REL          reduce using rule 136 (termino -> VERDADERO .)
    Y               reduce using rule 136 (termino -> VERDADERO .)
    O               reduce using rule 136 (termino -> VERDADERO .)
    CORCHETE_TERMINA reduce using rule 136 (termino -> VERDADERO .)
    error           reduce using rule 136 (termino -> VERDADERO .)
    COMA            reduce using rule 136 (termino -> VERDADERO .)
    PAREN_TERMINA   reduce using rule 136 (termino -> VERDADERO .)
    NO              reduce using rule 136 (termino -> VERDADERO .)
    IDENT           reduce using rule 136 (termino -> VERDADERO .)
    CTE_ENTERA      reduce using rule 136 (termino -> VERDADERO .)
    CTE_REAL        reduce using rule 136 (termino -> VERDADERO .)
    CTE_ALFA        reduce using rule 136 (termino -> VERDADERO .)
    VERDADERO       reduce using rule 136 (termino -> VERDADERO .)
    FALSO           reduce using rule 136 (termino -> VERDADERO .)
    PUNTO_COMA      reduce using rule 136 (termino -> VERDADERO .)
    HASTA           reduce using rule 136 (termino -> VERDADERO .)
    SINO            reduce using rule 136 (termino -> VERDADERO .)
    FIN             reduce using rule 136 (termino -> VERDADERO .)
    SEA             reduce using rule 136 (termino -> VERDADERO .)
    OTRO            reduce using rule 136 (termino -> VERDADERO .)
    INICIO          reduce using rule 136 (termino -> VERDADERO .)
    LIMPIA          reduce using rule 136 (termino -> VERDADERO .)
    INTERRUMPE      reduce using rule 136 (termino -> VERDADERO .)
    CONTINUA        reduce using rule 136 (termino -> VERDADERO .)
    SI              reduce using rule 136 (termino -> VERDADERO .)
    DESDE           reduce using rule 136 (termino -> VERDADERO .)
    REPETIR         reduce using rule 136 (termino -> VERDADERO .)
    MIENTRAS        reduce using rule 136 (termino -> VERDADERO .)
    CUANDO          reduce using rule 136 (termino -> VERDADERO .)
    REGRESA         reduce using rule 136 (termino -> VERDADERO .)
    IMPRIME         reduce using rule 136 (termino -> VERDADERO .)
    IMPRIMENL       reduce using rule 136 (termino -> VERDADERO .)
    LEE             reduce using rule 136 (termino -> VERDADERO .)
    DECR            reduce using rule 136 (termino -> VERDADERO .)
    INCR            reduce using rule 136 (termino -> VERDADERO .)


state 89

    (137) termino -> FALSO .

    POTENCIA        reduce using rule 137 (termino -> FALSO .)
    MULTI           reduce using rule 137 (termino -> FALSO .)
    DIV             reduce using rule 137 (termino -> FALSO .)
    MOD             reduce using rule 137 (termino -> FALSO .)
    MAS             reduce using rule 137 (termino -> FALSO .)
    MENOS           reduce using rule 137 (termino -> FALSO .)
    OP_REL          reduce using rule 137 (termino -> FALSO .)
    Y               reduce using rule 137 (termino -> FALSO .)
    O               reduce using rule 137 (termino -> FALSO .)
    CORCHETE_TERMINA reduce using rule 137 (termino -> FALSO .)
    error           reduce using rule 137 (termino -> FALSO .)
    COMA            reduce using rule 137 (termino -> FALSO .)
    PAREN_TERMINA   reduce using rule 137 (termino -> FALSO .)
    NO              reduce using rule 137 (termino -> FALSO .)
    IDENT           reduce using rule 137 (termino -> FALSO .)
    CTE_ENTERA      reduce using rule 137 (termino -> FALSO .)
    CTE_REAL        reduce using rule 137 (termino -> FALSO .)
    CTE_ALFA        reduce using rule 137 (termino -> FALSO .)
    VERDADERO       reduce using rule 137 (termino -> FALSO .)
    FALSO           reduce using rule 137 (termino -> FALSO .)
    PUNTO_COMA      reduce using rule 137 (termino -> FALSO .)
    HASTA           reduce using rule 137 (termino -> FALSO .)
    SINO            reduce using rule 137 (termino -> FALSO .)
    FIN             reduce using rule 137 (termino -> FALSO .)
    SEA             reduce using rule 137 (termino -> FALSO .)
    OTRO            reduce using rule 137 (termino -> FALSO .)
    INICIO          reduce using rule 137 (termino -> FALSO .)
    LIMPIA          reduce using rule 137 (termino -> FALSO .)
    INTERRUMPE      reduce using rule 137 (termino -> FALSO .)
    CONTINUA        reduce using rule 137 (termino -> FALSO .)
    SI              reduce using rule 137 (termino -> FALSO .)
    DESDE           reduce using rule 137 (termino -> FALSO .)
    REPETIR         reduce using rule 137 (termino -> FALSO .)
    MIENTRAS        reduce using rule 137 (termino -> FALSO .)
    CUANDO          reduce using rule 137 (termino -> FALSO .)
    REGRESA         reduce using rule 137 (termino -> FALSO .)
    IMPRIME         reduce using rule 137 (termino -> FALSO .)
    IMPRIMENL       reduce using rule 137 (termino -> FALSO .)
    LEE             reduce using rule 137 (termino -> FALSO .)
    DECR            reduce using rule 137 (termino -> FALSO .)
    INCR            reduce using rule 137 (termino -> FALSO .)


state 90

    (140) termino -> lfunc .

    POTENCIA        reduce using rule 140 (termino -> lfunc .)
    MULTI           reduce using rule 140 (termino -> lfunc .)
    DIV             reduce using rule 140 (termino -> lfunc .)
    MOD             reduce using rule 140 (termino -> lfunc .)
    MAS             reduce using rule 140 (termino -> lfunc .)
    MENOS           reduce using rule 140 (termino -> lfunc .)
    OP_REL          reduce using rule 140 (termino -> lfunc .)
    Y               reduce using rule 140 (termino -> lfunc .)
    O               reduce using rule 140 (termino -> lfunc .)
    CORCHETE_TERMINA reduce using rule 140 (termino -> lfunc .)
    error           reduce using rule 140 (termino -> lfunc .)
    COMA            reduce using rule 140 (termino -> lfunc .)
    PAREN_TERMINA   reduce using rule 140 (termino -> lfunc .)
    NO              reduce using rule 140 (termino -> lfunc .)
    IDENT           reduce using rule 140 (termino -> lfunc .)
    CTE_ENTERA      reduce using rule 140 (termino -> lfunc .)
    CTE_REAL        reduce using rule 140 (termino -> lfunc .)
    CTE_ALFA        reduce using rule 140 (termino -> lfunc .)
    VERDADERO       reduce using rule 140 (termino -> lfunc .)
    FALSO           reduce using rule 140 (termino -> lfunc .)
    PUNTO_COMA      reduce using rule 140 (termino -> lfunc .)
    HASTA           reduce using rule 140 (termino -> lfunc .)
    SINO            reduce using rule 140 (termino -> lfunc .)
    FIN             reduce using rule 140 (termino -> lfunc .)
    SEA             reduce using rule 140 (termino -> lfunc .)
    OTRO            reduce using rule 140 (termino -> lfunc .)
    INICIO          reduce using rule 140 (termino -> lfunc .)
    LIMPIA          reduce using rule 140 (termino -> lfunc .)
    INTERRUMPE      reduce using rule 140 (termino -> lfunc .)
    CONTINUA        reduce using rule 140 (termino -> lfunc .)
    SI              reduce using rule 140 (termino -> lfunc .)
    DESDE           reduce using rule 140 (termino -> lfunc .)
    REPETIR         reduce using rule 140 (termino -> lfunc .)
    MIENTRAS        reduce using rule 140 (termino -> lfunc .)
    CUANDO          reduce using rule 140 (termino -> lfunc .)
    REGRESA         reduce using rule 140 (termino -> lfunc .)
    IMPRIME         reduce using rule 140 (termino -> lfunc .)
    IMPRIMENL       reduce using rule 140 (termino -> lfunc .)
    LEE             reduce using rule 140 (termino -> lfunc .)
    DECR            reduce using rule 140 (termino -> lfunc .)
    INCR            reduce using rule 140 (termino -> lfunc .)


state 91

    (31) opasig -> OP_ASIG CTE_ENTERA .

    COMA            reduce using rule 31 (opasig -> OP_ASIG CTE_ENTERA .)
    error           reduce using rule 31 (opasig -> OP_ASIG CTE_ENTERA .)


state 92

    (32) opasig -> OP_ASIG IDENT .

    COMA            reduce using rule 32 (opasig -> OP_ASIG IDENT .)
    error           reduce using rule 32 (opasig -> OP_ASIG IDENT .)


state 93

    (27) dimens -> CORCHETE_EMPIEZA valor . CORCHETE_TERMINA dimens
    (29) dimens -> CORCHETE_EMPIEZA valor . error dimens

    CORCHETE_TERMINA shift and go to state 160
    error           shift and go to state 161


state 94

    (127) multi -> empty .

    MAS             reduce using rule 127 (multi -> empty .)
    MENOS           reduce using rule 127 (multi -> empty .)
    OP_REL          reduce using rule 127 (multi -> empty .)
    Y               reduce using rule 127 (multi -> empty .)
    O               reduce using rule 127 (multi -> empty .)
    CORCHETE_TERMINA reduce using rule 127 (multi -> empty .)
    error           reduce using rule 127 (multi -> empty .)
    COMA            reduce using rule 127 (multi -> empty .)
    PAREN_TERMINA   reduce using rule 127 (multi -> empty .)
    NO              reduce using rule 127 (multi -> empty .)
    IDENT           reduce using rule 127 (multi -> empty .)
    CTE_ENTERA      reduce using rule 127 (multi -> empty .)
    CTE_REAL        reduce using rule 127 (multi -> empty .)
    CTE_ALFA        reduce using rule 127 (multi -> empty .)
    VERDADERO       reduce using rule 127 (multi -> empty .)
    FALSO           reduce using rule 127 (multi -> empty .)
    MULTI           reduce using rule 127 (multi -> empty .)
    DIV             reduce using rule 127 (multi -> empty .)
    MOD             reduce using rule 127 (multi -> empty .)
    POTENCIA        reduce using rule 127 (multi -> empty .)
    PUNTO_COMA      reduce using rule 127 (multi -> empty .)
    HASTA           reduce using rule 127 (multi -> empty .)
    SINO            reduce using rule 127 (multi -> empty .)
    FIN             reduce using rule 127 (multi -> empty .)
    SEA             reduce using rule 127 (multi -> empty .)
    OTRO            reduce using rule 127 (multi -> empty .)
    INICIO          reduce using rule 127 (multi -> empty .)
    LIMPIA          reduce using rule 127 (multi -> empty .)
    INTERRUMPE      reduce using rule 127 (multi -> empty .)
    CONTINUA        reduce using rule 127 (multi -> empty .)
    SI              reduce using rule 127 (multi -> empty .)
    DESDE           reduce using rule 127 (multi -> empty .)
    REPETIR         reduce using rule 127 (multi -> empty .)
    MIENTRAS        reduce using rule 127 (multi -> empty .)
    CUANDO          reduce using rule 127 (multi -> empty .)
    REGRESA         reduce using rule 127 (multi -> empty .)
    IMPRIME         reduce using rule 127 (multi -> empty .)
    IMPRIMENL       reduce using rule 127 (multi -> empty .)
    LEE             reduce using rule 127 (multi -> empty .)
    DECR            reduce using rule 127 (multi -> empty .)
    INCR            reduce using rule 127 (multi -> empty .)


state 95

    (132) termino -> IDENT .
    (139) termino -> IDENT . udim
    (141) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (142) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (110) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (111) udim -> . empty
    (143) parenemp -> . PAREN_EMPIEZA
    (156) empty -> .

  ! reduce/reduce conflict for POTENCIA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for MULTI resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for DIV resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for MOD resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for MAS resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for MENOS resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for OP_REL resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for Y resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for O resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for error resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for COMA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for NO resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for IDENT resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_ENTERA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_REAL resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for CTE_ALFA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for VERDADERO resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for FALSO resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for HASTA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for SINO resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for FIN resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for SEA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for OTRO resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for INICIO resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for SI resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for DESDE resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for REPETIR resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for CUANDO resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for REGRESA resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for LEE resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for DECR resolved using rule 132 (termino -> IDENT .)
  ! reduce/reduce conflict for INCR resolved using rule 132 (termino -> IDENT .)
    POTENCIA        reduce using rule 132 (termino -> IDENT .)
    MULTI           reduce using rule 132 (termino -> IDENT .)
    DIV             reduce using rule 132 (termino -> IDENT .)
    MOD             reduce using rule 132 (termino -> IDENT .)
    MAS             reduce using rule 132 (termino -> IDENT .)
    MENOS           reduce using rule 132 (termino -> IDENT .)
    OP_REL          reduce using rule 132 (termino -> IDENT .)
    Y               reduce using rule 132 (termino -> IDENT .)
    O               reduce using rule 132 (termino -> IDENT .)
    CORCHETE_TERMINA reduce using rule 132 (termino -> IDENT .)
    error           reduce using rule 132 (termino -> IDENT .)
    COMA            reduce using rule 132 (termino -> IDENT .)
    PAREN_TERMINA   reduce using rule 132 (termino -> IDENT .)
    NO              reduce using rule 132 (termino -> IDENT .)
    IDENT           reduce using rule 132 (termino -> IDENT .)
    CTE_ENTERA      reduce using rule 132 (termino -> IDENT .)
    CTE_REAL        reduce using rule 132 (termino -> IDENT .)
    CTE_ALFA        reduce using rule 132 (termino -> IDENT .)
    VERDADERO       reduce using rule 132 (termino -> IDENT .)
    FALSO           reduce using rule 132 (termino -> IDENT .)
    PUNTO_COMA      reduce using rule 132 (termino -> IDENT .)
    HASTA           reduce using rule 132 (termino -> IDENT .)
    SINO            reduce using rule 132 (termino -> IDENT .)
    FIN             reduce using rule 132 (termino -> IDENT .)
    SEA             reduce using rule 132 (termino -> IDENT .)
    OTRO            reduce using rule 132 (termino -> IDENT .)
    INICIO          reduce using rule 132 (termino -> IDENT .)
    LIMPIA          reduce using rule 132 (termino -> IDENT .)
    INTERRUMPE      reduce using rule 132 (termino -> IDENT .)
    CONTINUA        reduce using rule 132 (termino -> IDENT .)
    SI              reduce using rule 132 (termino -> IDENT .)
    DESDE           reduce using rule 132 (termino -> IDENT .)
    REPETIR         reduce using rule 132 (termino -> IDENT .)
    MIENTRAS        reduce using rule 132 (termino -> IDENT .)
    CUANDO          reduce using rule 132 (termino -> IDENT .)
    REGRESA         reduce using rule 132 (termino -> IDENT .)
    IMPRIME         reduce using rule 132 (termino -> IDENT .)
    IMPRIMENL       reduce using rule 132 (termino -> IDENT .)
    LEE             reduce using rule 132 (termino -> IDENT .)
    DECR            reduce using rule 132 (termino -> IDENT .)
    INCR            reduce using rule 132 (termino -> IDENT .)
    CORCHETE_EMPIEZA shift and go to state 162
    PAREN_EMPIEZA   shift and go to state 147

  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! HASTA           [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 156 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 156 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 156 (empty -> .) ]
  ! SI              [ reduce using rule 156 (empty -> .) ]
  ! DESDE           [ reduce using rule 156 (empty -> .) ]
  ! REPETIR         [ reduce using rule 156 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 156 (empty -> .) ]
  ! CUANDO          [ reduce using rule 156 (empty -> .) ]
  ! REGRESA         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 156 (empty -> .) ]
  ! LEE             [ reduce using rule 156 (empty -> .) ]
  ! DECR            [ reduce using rule 156 (empty -> .) ]
  ! INCR            [ reduce using rule 156 (empty -> .) ]

    udim                           shift and go to state 143
    parenemp                       shift and go to state 144
    empty                          shift and go to state 163

state 96

    (37) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .
    (38) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA . grupoconst
    (37) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (38) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (39) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (40) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (41) grupoconst -> . empty
    (156) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 37 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 37 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 37 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 37 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 37 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    VARIABLES       reduce using rule 37 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 37 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 37 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    FUNCION         reduce using rule 37 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROGRAMA        reduce using rule 37 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 156 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 156 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 156 (empty -> .) ]
  ! FUNCION         [ reduce using rule 156 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 156 (empty -> .) ]

    grupoconst                     shift and go to state 164
    empty                          shift and go to state 10

state 97

    (39) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .
    (40) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA . grupoconst
    (37) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (38) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (39) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (40) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (41) grupoconst -> . empty
    (156) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 39 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 39 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 39 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 39 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 39 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    VARIABLES       reduce using rule 39 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 39 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 39 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    FUNCION         reduce using rule 39 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROGRAMA        reduce using rule 39 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 156 (empty -> .) ]
  ! PROTOTIPOS      [ reduce using rule 156 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 156 (empty -> .) ]
  ! FUNCION         [ reduce using rule 156 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 156 (empty -> .) ]

    grupoconst                     shift and go to state 165
    empty                          shift and go to state 10

state 98

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block . FIN DE PROGRAMA PUNTO

    FIN             shift and go to state 166


state 99

    (68) block -> estatuto . puntoc block
    (69) block -> estatuto . puntoc
    (71) block -> estatuto . error
    (72) block -> estatuto . error block
    (70) puntoc -> . PUNTO_COMA

    error           shift and go to state 168
    PUNTO_COMA      shift and go to state 169

    puntoc                         shift and go to state 167

state 100

    (73) estatuto -> si .

    error           reduce using rule 73 (estatuto -> si .)
    PUNTO_COMA      reduce using rule 73 (estatuto -> si .)
    SINO            reduce using rule 73 (estatuto -> si .)
    FIN             reduce using rule 73 (estatuto -> si .)
    SEA             reduce using rule 73 (estatuto -> si .)
    OTRO            reduce using rule 73 (estatuto -> si .)


state 101

    (74) estatuto -> lfunc .

    error           reduce using rule 74 (estatuto -> lfunc .)
    PUNTO_COMA      reduce using rule 74 (estatuto -> lfunc .)
    SINO            reduce using rule 74 (estatuto -> lfunc .)
    FIN             reduce using rule 74 (estatuto -> lfunc .)
    SEA             reduce using rule 74 (estatuto -> lfunc .)
    OTRO            reduce using rule 74 (estatuto -> lfunc .)


state 102

    (75) estatuto -> LIMPIA .

    error           reduce using rule 75 (estatuto -> LIMPIA .)
    PUNTO_COMA      reduce using rule 75 (estatuto -> LIMPIA .)
    SINO            reduce using rule 75 (estatuto -> LIMPIA .)
    FIN             reduce using rule 75 (estatuto -> LIMPIA .)
    SEA             reduce using rule 75 (estatuto -> LIMPIA .)
    OTRO            reduce using rule 75 (estatuto -> LIMPIA .)


state 103

    (76) estatuto -> desde .

    error           reduce using rule 76 (estatuto -> desde .)
    PUNTO_COMA      reduce using rule 76 (estatuto -> desde .)
    SINO            reduce using rule 76 (estatuto -> desde .)
    FIN             reduce using rule 76 (estatuto -> desde .)
    SEA             reduce using rule 76 (estatuto -> desde .)
    OTRO            reduce using rule 76 (estatuto -> desde .)


state 104

    (77) estatuto -> repetir .

    error           reduce using rule 77 (estatuto -> repetir .)
    PUNTO_COMA      reduce using rule 77 (estatuto -> repetir .)
    SINO            reduce using rule 77 (estatuto -> repetir .)
    FIN             reduce using rule 77 (estatuto -> repetir .)
    SEA             reduce using rule 77 (estatuto -> repetir .)
    OTRO            reduce using rule 77 (estatuto -> repetir .)


state 105

    (78) estatuto -> mientras .

    error           reduce using rule 78 (estatuto -> mientras .)
    PUNTO_COMA      reduce using rule 78 (estatuto -> mientras .)
    SINO            reduce using rule 78 (estatuto -> mientras .)
    FIN             reduce using rule 78 (estatuto -> mientras .)
    SEA             reduce using rule 78 (estatuto -> mientras .)
    OTRO            reduce using rule 78 (estatuto -> mientras .)


state 106

    (79) estatuto -> cuando .

    error           reduce using rule 79 (estatuto -> cuando .)
    PUNTO_COMA      reduce using rule 79 (estatuto -> cuando .)
    SINO            reduce using rule 79 (estatuto -> cuando .)
    FIN             reduce using rule 79 (estatuto -> cuando .)
    SEA             reduce using rule 79 (estatuto -> cuando .)
    OTRO            reduce using rule 79 (estatuto -> cuando .)


state 107

    (80) estatuto -> regresa .

    error           reduce using rule 80 (estatuto -> regresa .)
    PUNTO_COMA      reduce using rule 80 (estatuto -> regresa .)
    SINO            reduce using rule 80 (estatuto -> regresa .)
    FIN             reduce using rule 80 (estatuto -> regresa .)
    SEA             reduce using rule 80 (estatuto -> regresa .)
    OTRO            reduce using rule 80 (estatuto -> regresa .)


state 108

    (81) estatuto -> asigna .

    error           reduce using rule 81 (estatuto -> asigna .)
    PUNTO_COMA      reduce using rule 81 (estatuto -> asigna .)
    SINO            reduce using rule 81 (estatuto -> asigna .)
    FIN             reduce using rule 81 (estatuto -> asigna .)
    SEA             reduce using rule 81 (estatuto -> asigna .)
    OTRO            reduce using rule 81 (estatuto -> asigna .)


state 109

    (82) estatuto -> imprime .

    error           reduce using rule 82 (estatuto -> imprime .)
    PUNTO_COMA      reduce using rule 82 (estatuto -> imprime .)
    SINO            reduce using rule 82 (estatuto -> imprime .)
    FIN             reduce using rule 82 (estatuto -> imprime .)
    SEA             reduce using rule 82 (estatuto -> imprime .)
    OTRO            reduce using rule 82 (estatuto -> imprime .)


state 110

    (83) estatuto -> imprimenl .

    error           reduce using rule 83 (estatuto -> imprimenl .)
    PUNTO_COMA      reduce using rule 83 (estatuto -> imprimenl .)
    SINO            reduce using rule 83 (estatuto -> imprimenl .)
    FIN             reduce using rule 83 (estatuto -> imprimenl .)
    SEA             reduce using rule 83 (estatuto -> imprimenl .)
    OTRO            reduce using rule 83 (estatuto -> imprimenl .)


state 111

    (84) estatuto -> lee .

    error           reduce using rule 84 (estatuto -> lee .)
    PUNTO_COMA      reduce using rule 84 (estatuto -> lee .)
    SINO            reduce using rule 84 (estatuto -> lee .)
    FIN             reduce using rule 84 (estatuto -> lee .)
    SEA             reduce using rule 84 (estatuto -> lee .)
    OTRO            reduce using rule 84 (estatuto -> lee .)


state 112

    (85) estatuto -> INTERRUMPE .

    error           reduce using rule 85 (estatuto -> INTERRUMPE .)
    PUNTO_COMA      reduce using rule 85 (estatuto -> INTERRUMPE .)
    SINO            reduce using rule 85 (estatuto -> INTERRUMPE .)
    FIN             reduce using rule 85 (estatuto -> INTERRUMPE .)
    SEA             reduce using rule 85 (estatuto -> INTERRUMPE .)
    OTRO            reduce using rule 85 (estatuto -> INTERRUMPE .)


state 113

    (86) estatuto -> CONTINUA .

    error           reduce using rule 86 (estatuto -> CONTINUA .)
    PUNTO_COMA      reduce using rule 86 (estatuto -> CONTINUA .)
    SINO            reduce using rule 86 (estatuto -> CONTINUA .)
    FIN             reduce using rule 86 (estatuto -> CONTINUA .)
    SEA             reduce using rule 86 (estatuto -> CONTINUA .)
    OTRO            reduce using rule 86 (estatuto -> CONTINUA .)


state 114

    (87) estatuto -> empty .

    error           reduce using rule 87 (estatuto -> empty .)
    PUNTO_COMA      reduce using rule 87 (estatuto -> empty .)
    SINO            reduce using rule 87 (estatuto -> empty .)
    FIN             reduce using rule 87 (estatuto -> empty .)
    SEA             reduce using rule 87 (estatuto -> empty .)
    OTRO            reduce using rule 87 (estatuto -> empty .)


state 115

    (88) si -> SI . PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino

    PAREN_EMPIEZA   shift and go to state 170


state 116

    (141) lfunc -> IDENT . parenemp uparams PAREN_TERMINA
    (142) lfunc -> IDENT . parenemp error PAREN_TERMINA
    (99) asigna -> IDENT . udim OP_ASIG exprlog
    (143) parenemp -> . PAREN_EMPIEZA
    (110) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (111) udim -> . empty
    (156) empty -> .

    PAREN_EMPIEZA   shift and go to state 147
    CORCHETE_EMPIEZA shift and go to state 162
    OP_ASIG         reduce using rule 156 (empty -> .)

    parenemp                       shift and go to state 144
    udim                           shift and go to state 171
    empty                          shift and go to state 163

state 117

    (94) desde -> DESDE . EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> DESDE . EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> DESDE . EL VALOR DE asigna HASTA expr error bckesp

    EL              shift and go to state 172


state 118

    (97) repetir -> REPETIR . block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) block -> . estatuto puntoc block
    (69) block -> . estatuto puntoc
    (71) block -> . estatuto error
    (72) block -> . estatuto error block
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124
    error           reduce using rule 156 (empty -> .)
    PUNTO_COMA      reduce using rule 156 (empty -> .)

    block                          shift and go to state 173
    estatuto                       shift and go to state 99
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 119

    (98) mientras -> MIENTRAS . SE CUMPLA QUE exprlog bckesp

    SE              shift and go to state 174


state 120

    (100) cuando -> CUANDO . EL VALOR DE IDENT INICIO gposea otro FIN

    EL              shift and go to state 175


state 121

    (109) regresa -> REGRESA . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 176


state 122

    (144) imprime -> IMPRIME . PAREN_EMPIEZA gpoexp PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 177


state 123

    (145) imprimenl -> IMPRIMENL . PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> IMPRIMENL . PAREN_EMPIEZA gpoexp error

    PAREN_EMPIEZA   shift and go to state 178


state 124

    (147) lee -> LEE . PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> LEE . PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 179


state 125

    (66) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (53) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (54) params -> . empty
    (55) params -> . gpopars PUNTOS_DOBLES error otrospars
    (56) params -> . gpopars error TIPO otrospars
    (59) gpopars -> . IDENT COMA gpopars2
    (60) gpopars -> . IDENT
    (156) empty -> .

    IDENT           shift and go to state 180
    PAREN_TERMINA   reduce using rule 156 (empty -> .)

    params                         shift and go to state 181
    gpopars                        shift and go to state 182
    empty                          shift and go to state 183

state 126

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (53) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (54) params -> . empty
    (55) params -> . gpopars PUNTOS_DOBLES error otrospars
    (56) params -> . gpopars error TIPO otrospars
    (59) gpopars -> . IDENT COMA gpopars2
    (60) gpopars -> . IDENT
    (156) empty -> .

    IDENT           shift and go to state 180
    PAREN_TERMINA   reduce using rule 156 (empty -> .)

    params                         shift and go to state 184
    gpopars                        shift and go to state 182
    empty                          shift and go to state 183

state 127

    (42) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE . PROTOTIPOS PUNTO_COMA

    PROTOTIPOS      shift and go to state 185


state 128

    (48) protfunc -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (53) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (54) params -> . empty
    (55) params -> . gpopars PUNTOS_DOBLES error otrospars
    (56) params -> . gpopars error TIPO otrospars
    (59) gpopars -> . IDENT COMA gpopars2
    (60) gpopars -> . IDENT
    (156) empty -> .

    IDENT           shift and go to state 180
    PAREN_TERMINA   reduce using rule 156 (empty -> .)

    params                         shift and go to state 186
    gpopars                        shift and go to state 182
    empty                          shift and go to state 183

state 129

    (49) protfunc -> FUNCION error PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (53) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (54) params -> . empty
    (55) params -> . gpopars PUNTOS_DOBLES error otrospars
    (56) params -> . gpopars error TIPO otrospars
    (59) gpopars -> . IDENT COMA gpopars2
    (60) gpopars -> . IDENT
    (156) empty -> .

    IDENT           shift and go to state 180
    PAREN_TERMINA   reduce using rule 156 (empty -> .)

    params                         shift and go to state 187
    gpopars                        shift and go to state 182
    empty                          shift and go to state 183

state 130

    (50) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (53) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (54) params -> . empty
    (55) params -> . gpopars PUNTOS_DOBLES error otrospars
    (56) params -> . gpopars error TIPO otrospars
    (59) gpopars -> . IDENT COMA gpopars2
    (60) gpopars -> . IDENT
    (156) empty -> .

    IDENT           shift and go to state 180
    PAREN_TERMINA   reduce using rule 156 (empty -> .)

    params                         shift and go to state 188
    gpopars                        shift and go to state 182
    empty                          shift and go to state 183

state 131

    (51) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (53) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (54) params -> . empty
    (55) params -> . gpopars PUNTOS_DOBLES error otrospars
    (56) params -> . gpopars error TIPO otrospars
    (59) gpopars -> . IDENT COMA gpopars2
    (60) gpopars -> . IDENT
    (156) empty -> .

    IDENT           shift and go to state 180
    PAREN_TERMINA   reduce using rule 156 (empty -> .)

    params                         shift and go to state 189
    gpopars                        shift and go to state 182
    empty                          shift and go to state 183

state 132

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA . gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT gpoids2
    (14) gpoids -> . IDENT
    (15) gpoids -> . IDENT dimens COMA gpoids2
    (16) gpoids -> . IDENT dimens
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (25) gpoids -> . empty
    (156) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    INICIO          reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 156 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 156 (empty -> .) ]
  ! FUNCION         [ reduce using rule 156 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 190
    empty                          shift and go to state 16

state 133

    (9) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA . gpovars
    (10) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT gpoids2
    (14) gpoids -> . IDENT
    (15) gpoids -> . IDENT dimens COMA gpoids2
    (16) gpoids -> . IDENT dimens
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (25) gpoids -> . empty
    (156) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    FUNCION         reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    PROGRAMA        reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    INICIO          reduce using rule 10 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 156 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 156 (empty -> .) ]
  ! FUNCION         [ reduce using rule 156 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 191
    empty                          shift and go to state 16

state 134

    (7) gpovars -> gpoids error TIPO PUNTO_COMA . gpovars
    (8) gpovars -> gpoids error TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpovars -> . gpoids error TIPO PUNTO_COMA gpovars
    (8) gpovars -> . gpoids error TIPO PUNTO_COMA
    (9) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars
    (10) gpovars -> . gpoids PUNTOS_DOBLES error PUNTO_COMA
    (11) gpoids -> . IDENT COMA gpoids2
    (12) gpoids -> . IDENT opasig COMA gpoids2
    (13) gpoids -> . IDENT gpoids2
    (14) gpoids -> . IDENT
    (15) gpoids -> . IDENT dimens COMA gpoids2
    (16) gpoids -> . IDENT dimens
    (22) gpoids -> . IDENT dimens error gpoids
    (23) gpoids -> . IDENT error gpoids
    (24) gpoids -> . IDENT opasig error gpoids
    (25) gpoids -> . empty
    (156) empty -> .

  ! reduce/reduce conflict for PROTOTIPOS resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROTOTIPOS      reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    INICIO          reduce using rule 8 (gpovars -> gpoids error TIPO PUNTO_COMA .)
    IDENT           shift and go to state 17
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

  ! PROTOTIPOS      [ reduce using rule 156 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 156 (empty -> .) ]
  ! FUNCION         [ reduce using rule 156 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]

    gpoids                         shift and go to state 15
    gpovars                        shift and go to state 192
    empty                          shift and go to state 16

state 135

    (17) gpoids2 -> IDENT COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 17 (gpoids2 -> IDENT COMA gpoids2 .)
    error           reduce using rule 17 (gpoids2 -> IDENT COMA gpoids2 .)


state 136

    (18) gpoids2 -> IDENT opasig COMA . gpoids2
    (17) gpoids2 -> . IDENT COMA gpoids2
    (18) gpoids2 -> . IDENT opasig COMA gpoids2
    (19) gpoids2 -> . IDENT
    (20) gpoids2 -> . IDENT dimens COMA gpoids2
    (21) gpoids2 -> . IDENT dimens
    (26) gpoids2 -> . empty
    (156) empty -> .

    IDENT           shift and go to state 33
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

    gpoids2                        shift and go to state 193
    empty                          shift and go to state 65

state 137

    (20) gpoids2 -> IDENT dimens COMA . gpoids2
    (17) gpoids2 -> . IDENT COMA gpoids2
    (18) gpoids2 -> . IDENT opasig COMA gpoids2
    (19) gpoids2 -> . IDENT
    (20) gpoids2 -> . IDENT dimens COMA gpoids2
    (21) gpoids2 -> . IDENT dimens
    (26) gpoids2 -> . empty
    (156) empty -> .

    IDENT           shift and go to state 33
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)

    gpoids2                        shift and go to state 194
    empty                          shift and go to state 65

state 138

    (12) gpoids -> IDENT opasig COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 12 (gpoids -> IDENT opasig COMA gpoids2 .)
    error           reduce using rule 12 (gpoids -> IDENT opasig COMA gpoids2 .)


state 139

    (24) gpoids -> IDENT opasig error gpoids .

    PUNTOS_DOBLES   reduce using rule 24 (gpoids -> IDENT opasig error gpoids .)
    error           reduce using rule 24 (gpoids -> IDENT opasig error gpoids .)


state 140

    (25) gpoids -> empty .

    PUNTOS_DOBLES   reduce using rule 25 (gpoids -> empty .)
    error           reduce using rule 25 (gpoids -> empty .)


state 141

    (15) gpoids -> IDENT dimens COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 15 (gpoids -> IDENT dimens COMA gpoids2 .)
    error           reduce using rule 15 (gpoids -> IDENT dimens COMA gpoids2 .)


state 142

    (22) gpoids -> IDENT dimens error gpoids .

    PUNTOS_DOBLES   reduce using rule 22 (gpoids -> IDENT dimens error gpoids .)
    error           reduce using rule 22 (gpoids -> IDENT dimens error gpoids .)


state 143

    (139) termino -> IDENT udim .

    POTENCIA        reduce using rule 139 (termino -> IDENT udim .)
    MULTI           reduce using rule 139 (termino -> IDENT udim .)
    DIV             reduce using rule 139 (termino -> IDENT udim .)
    MOD             reduce using rule 139 (termino -> IDENT udim .)
    MAS             reduce using rule 139 (termino -> IDENT udim .)
    MENOS           reduce using rule 139 (termino -> IDENT udim .)
    OP_REL          reduce using rule 139 (termino -> IDENT udim .)
    Y               reduce using rule 139 (termino -> IDENT udim .)
    O               reduce using rule 139 (termino -> IDENT udim .)
    CORCHETE_TERMINA reduce using rule 139 (termino -> IDENT udim .)
    error           reduce using rule 139 (termino -> IDENT udim .)
    COMA            reduce using rule 139 (termino -> IDENT udim .)
    PAREN_TERMINA   reduce using rule 139 (termino -> IDENT udim .)
    NO              reduce using rule 139 (termino -> IDENT udim .)
    IDENT           reduce using rule 139 (termino -> IDENT udim .)
    CTE_ENTERA      reduce using rule 139 (termino -> IDENT udim .)
    CTE_REAL        reduce using rule 139 (termino -> IDENT udim .)
    CTE_ALFA        reduce using rule 139 (termino -> IDENT udim .)
    VERDADERO       reduce using rule 139 (termino -> IDENT udim .)
    FALSO           reduce using rule 139 (termino -> IDENT udim .)
    PUNTO_COMA      reduce using rule 139 (termino -> IDENT udim .)
    HASTA           reduce using rule 139 (termino -> IDENT udim .)
    SINO            reduce using rule 139 (termino -> IDENT udim .)
    FIN             reduce using rule 139 (termino -> IDENT udim .)
    SEA             reduce using rule 139 (termino -> IDENT udim .)
    OTRO            reduce using rule 139 (termino -> IDENT udim .)
    INICIO          reduce using rule 139 (termino -> IDENT udim .)
    LIMPIA          reduce using rule 139 (termino -> IDENT udim .)
    INTERRUMPE      reduce using rule 139 (termino -> IDENT udim .)
    CONTINUA        reduce using rule 139 (termino -> IDENT udim .)
    SI              reduce using rule 139 (termino -> IDENT udim .)
    DESDE           reduce using rule 139 (termino -> IDENT udim .)
    REPETIR         reduce using rule 139 (termino -> IDENT udim .)
    MIENTRAS        reduce using rule 139 (termino -> IDENT udim .)
    CUANDO          reduce using rule 139 (termino -> IDENT udim .)
    REGRESA         reduce using rule 139 (termino -> IDENT udim .)
    IMPRIME         reduce using rule 139 (termino -> IDENT udim .)
    IMPRIMENL       reduce using rule 139 (termino -> IDENT udim .)
    LEE             reduce using rule 139 (termino -> IDENT udim .)
    DECR            reduce using rule 139 (termino -> IDENT udim .)
    INCR            reduce using rule 139 (termino -> IDENT udim .)


state 144

    (141) lfunc -> IDENT parenemp . uparams PAREN_TERMINA
    (142) lfunc -> IDENT parenemp . error PAREN_TERMINA
    (154) uparams -> . exprlog
    (155) uparams -> . exprlog COMA uparams
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
    error           shift and go to state 196
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    uparams                        shift and go to state 195
    exprlog                        shift and go to state 197
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 145

    (33) opasig -> empty .
    (26) gpoids2 -> empty .
    (111) udim -> empty .

  ! reduce/reduce conflict for error resolved using rule 26 (gpoids2 -> empty .)
    COMA            reduce using rule 33 (opasig -> empty .)
    PUNTOS_DOBLES   reduce using rule 26 (gpoids2 -> empty .)
    error           reduce using rule 26 (gpoids2 -> empty .)
    POTENCIA        reduce using rule 111 (udim -> empty .)
    MULTI           reduce using rule 111 (udim -> empty .)
    DIV             reduce using rule 111 (udim -> empty .)
    MOD             reduce using rule 111 (udim -> empty .)
    MAS             reduce using rule 111 (udim -> empty .)
    MENOS           reduce using rule 111 (udim -> empty .)
    OP_REL          reduce using rule 111 (udim -> empty .)
    Y               reduce using rule 111 (udim -> empty .)
    O               reduce using rule 111 (udim -> empty .)
    CORCHETE_TERMINA reduce using rule 111 (udim -> empty .)

  ! error           [ reduce using rule 33 (opasig -> empty .) ]


state 146

    (27) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (29) dimens -> CORCHETE_EMPIEZA . valor error dimens
    (110) udim -> CORCHETE_EMPIEZA . expr CORCHETE_TERMINA udim
    (34) valor -> . exprlog
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    valor                          shift and go to state 93
    expr                           shift and go to state 198
    exprlog                        shift and go to state 74
    multi                          shift and go to state 80
    opy                            shift and go to state 75
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    opno                           shift and go to state 76
    signo                          shift and go to state 83
    oprel                          shift and go to state 77
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 147

    (143) parenemp -> PAREN_EMPIEZA .

    error           reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    NO              reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    MENOS           reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    IDENT           reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    CTE_ENTERA      reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    CTE_REAL        reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    CTE_ALFA        reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    VERDADERO       reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    FALSO           reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    PAREN_TERMINA   reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    COMA            reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    O               reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    Y               reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    OP_REL          reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    MAS             reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    MULTI           reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    DIV             reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    MOD             reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)
    POTENCIA        reduce using rule 143 (parenemp -> PAREN_EMPIEZA .)


state 148

    (30) dimens -> error valor CORCHETE_TERMINA . dimens
    (27) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (28) dimens -> .
    (29) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (30) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 41
    COMA            reduce using rule 28 (dimens -> .)
    PUNTOS_DOBLES   reduce using rule 28 (dimens -> .)
    PAREN_TERMINA   reduce using rule 28 (dimens -> .)
    error           shift and go to state 63

  ! error           [ reduce using rule 28 (dimens -> .) ]

    dimens                         shift and go to state 199

state 149

    (113) exprlog -> opy O . exprlog
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for NO resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DIV resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MOD resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for NO resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DESDE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! HASTA           [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 156 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 156 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 156 (empty -> .) ]
  ! SI              [ reduce using rule 156 (empty -> .) ]
  ! DESDE           [ reduce using rule 156 (empty -> .) ]
  ! REPETIR         [ reduce using rule 156 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 156 (empty -> .) ]
  ! CUANDO          [ reduce using rule 156 (empty -> .) ]
  ! REGRESA         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 156 (empty -> .) ]
  ! LEE             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! NO              [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    opy                            shift and go to state 75
    exprlog                        shift and go to state 200
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 150

    (115) opy -> opno Y . opy
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for NO resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DIV resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MOD resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for NO resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DESDE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! HASTA           [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 156 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 156 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 156 (empty -> .) ]
  ! SI              [ reduce using rule 156 (empty -> .) ]
  ! DESDE           [ reduce using rule 156 (empty -> .) ]
  ! REPETIR         [ reduce using rule 156 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 156 (empty -> .) ]
  ! CUANDO          [ reduce using rule 156 (empty -> .) ]
  ! REGRESA         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 156 (empty -> .) ]
  ! LEE             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! NO              [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    opno                           shift and go to state 76
    opy                            shift and go to state 201
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 151

    (117) opno -> NO oprel .

    Y               reduce using rule 117 (opno -> NO oprel .)
    O               reduce using rule 117 (opno -> NO oprel .)
    CORCHETE_TERMINA reduce using rule 117 (opno -> NO oprel .)
    error           reduce using rule 117 (opno -> NO oprel .)
    COMA            reduce using rule 117 (opno -> NO oprel .)
    PAREN_TERMINA   reduce using rule 117 (opno -> NO oprel .)
    NO              reduce using rule 117 (opno -> NO oprel .)
    MENOS           reduce using rule 117 (opno -> NO oprel .)
    IDENT           reduce using rule 117 (opno -> NO oprel .)
    CTE_ENTERA      reduce using rule 117 (opno -> NO oprel .)
    CTE_REAL        reduce using rule 117 (opno -> NO oprel .)
    CTE_ALFA        reduce using rule 117 (opno -> NO oprel .)
    VERDADERO       reduce using rule 117 (opno -> NO oprel .)
    FALSO           reduce using rule 117 (opno -> NO oprel .)
    OP_REL          reduce using rule 117 (opno -> NO oprel .)
    MAS             reduce using rule 117 (opno -> NO oprel .)
    MULTI           reduce using rule 117 (opno -> NO oprel .)
    DIV             reduce using rule 117 (opno -> NO oprel .)
    MOD             reduce using rule 117 (opno -> NO oprel .)
    POTENCIA        reduce using rule 117 (opno -> NO oprel .)
    PUNTO_COMA      reduce using rule 117 (opno -> NO oprel .)
    HASTA           reduce using rule 117 (opno -> NO oprel .)
    SINO            reduce using rule 117 (opno -> NO oprel .)
    FIN             reduce using rule 117 (opno -> NO oprel .)
    SEA             reduce using rule 117 (opno -> NO oprel .)
    OTRO            reduce using rule 117 (opno -> NO oprel .)
    INICIO          reduce using rule 117 (opno -> NO oprel .)
    LIMPIA          reduce using rule 117 (opno -> NO oprel .)
    INTERRUMPE      reduce using rule 117 (opno -> NO oprel .)
    CONTINUA        reduce using rule 117 (opno -> NO oprel .)
    SI              reduce using rule 117 (opno -> NO oprel .)
    DESDE           reduce using rule 117 (opno -> NO oprel .)
    REPETIR         reduce using rule 117 (opno -> NO oprel .)
    MIENTRAS        reduce using rule 117 (opno -> NO oprel .)
    CUANDO          reduce using rule 117 (opno -> NO oprel .)
    REGRESA         reduce using rule 117 (opno -> NO oprel .)
    IMPRIME         reduce using rule 117 (opno -> NO oprel .)
    IMPRIMENL       reduce using rule 117 (opno -> NO oprel .)
    LEE             reduce using rule 117 (opno -> NO oprel .)


state 152

    (119) oprel -> expr OP_REL . oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DIV resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MOD resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for NO resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DESDE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 138 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    NO              reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! HASTA           [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 156 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 156 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 156 (empty -> .) ]
  ! SI              [ reduce using rule 156 (empty -> .) ]
  ! DESDE           [ reduce using rule 156 (empty -> .) ]
  ! REPETIR         [ reduce using rule 156 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 156 (empty -> .) ]
  ! CUANDO          [ reduce using rule 156 (empty -> .) ]
  ! REGRESA         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 156 (empty -> .) ]
  ! LEE             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    expr                           shift and go to state 79
    oprel                          shift and go to state 202
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 153

    (121) expr -> multi MAS . expr
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DIV resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MOD resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for NO resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DESDE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 138 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    NO              reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)
    DECR            reduce using rule 138 (termino -> .)
    INCR            reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! HASTA           [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 156 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 156 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 156 (empty -> .) ]
  ! SI              [ reduce using rule 156 (empty -> .) ]
  ! DESDE           [ reduce using rule 156 (empty -> .) ]
  ! REPETIR         [ reduce using rule 156 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 156 (empty -> .) ]
  ! CUANDO          [ reduce using rule 156 (empty -> .) ]
  ! REGRESA         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 156 (empty -> .) ]
  ! LEE             [ reduce using rule 156 (empty -> .) ]
  ! DECR            [ reduce using rule 156 (empty -> .) ]
  ! INCR            [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    multi                          shift and go to state 80
    expr                           shift and go to state 203
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 154

    (122) expr -> multi MENOS . expr
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DIV resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MOD resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for NO resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DESDE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 138 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    NO              reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)
    DECR            reduce using rule 138 (termino -> .)
    INCR            reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! HASTA           [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 156 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 156 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 156 (empty -> .) ]
  ! SI              [ reduce using rule 156 (empty -> .) ]
  ! DESDE           [ reduce using rule 156 (empty -> .) ]
  ! REPETIR         [ reduce using rule 156 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 156 (empty -> .) ]
  ! CUANDO          [ reduce using rule 156 (empty -> .) ]
  ! REGRESA         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 156 (empty -> .) ]
  ! LEE             [ reduce using rule 156 (empty -> .) ]
  ! DECR            [ reduce using rule 156 (empty -> .) ]
  ! INCR            [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    multi                          shift and go to state 80
    expr                           shift and go to state 204
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 155

    (131) signo -> MENOS termino .

    POTENCIA        reduce using rule 131 (signo -> MENOS termino .)
    MULTI           reduce using rule 131 (signo -> MENOS termino .)
    DIV             reduce using rule 131 (signo -> MENOS termino .)
    MOD             reduce using rule 131 (signo -> MENOS termino .)
    MAS             reduce using rule 131 (signo -> MENOS termino .)
    MENOS           reduce using rule 131 (signo -> MENOS termino .)
    OP_REL          reduce using rule 131 (signo -> MENOS termino .)
    Y               reduce using rule 131 (signo -> MENOS termino .)
    O               reduce using rule 131 (signo -> MENOS termino .)
    CORCHETE_TERMINA reduce using rule 131 (signo -> MENOS termino .)
    error           reduce using rule 131 (signo -> MENOS termino .)
    COMA            reduce using rule 131 (signo -> MENOS termino .)
    PAREN_TERMINA   reduce using rule 131 (signo -> MENOS termino .)
    NO              reduce using rule 131 (signo -> MENOS termino .)
    IDENT           reduce using rule 131 (signo -> MENOS termino .)
    CTE_ENTERA      reduce using rule 131 (signo -> MENOS termino .)
    CTE_REAL        reduce using rule 131 (signo -> MENOS termino .)
    CTE_ALFA        reduce using rule 131 (signo -> MENOS termino .)
    VERDADERO       reduce using rule 131 (signo -> MENOS termino .)
    FALSO           reduce using rule 131 (signo -> MENOS termino .)
    PUNTO_COMA      reduce using rule 131 (signo -> MENOS termino .)
    HASTA           reduce using rule 131 (signo -> MENOS termino .)
    SINO            reduce using rule 131 (signo -> MENOS termino .)
    FIN             reduce using rule 131 (signo -> MENOS termino .)
    SEA             reduce using rule 131 (signo -> MENOS termino .)
    OTRO            reduce using rule 131 (signo -> MENOS termino .)
    INICIO          reduce using rule 131 (signo -> MENOS termino .)
    LIMPIA          reduce using rule 131 (signo -> MENOS termino .)
    INTERRUMPE      reduce using rule 131 (signo -> MENOS termino .)
    CONTINUA        reduce using rule 131 (signo -> MENOS termino .)
    SI              reduce using rule 131 (signo -> MENOS termino .)
    DESDE           reduce using rule 131 (signo -> MENOS termino .)
    REPETIR         reduce using rule 131 (signo -> MENOS termino .)
    MIENTRAS        reduce using rule 131 (signo -> MENOS termino .)
    CUANDO          reduce using rule 131 (signo -> MENOS termino .)
    REGRESA         reduce using rule 131 (signo -> MENOS termino .)
    IMPRIME         reduce using rule 131 (signo -> MENOS termino .)
    IMPRIMENL       reduce using rule 131 (signo -> MENOS termino .)
    LEE             reduce using rule 131 (signo -> MENOS termino .)
    DECR            reduce using rule 131 (signo -> MENOS termino .)
    INCR            reduce using rule 131 (signo -> MENOS termino .)


state 156

    (124) multi -> expo MULTI . multi
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DIV resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MOD resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for NO resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DESDE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 138 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    NO              reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)
    DECR            reduce using rule 138 (termino -> .)
    INCR            reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! HASTA           [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 156 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 156 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 156 (empty -> .) ]
  ! SI              [ reduce using rule 156 (empty -> .) ]
  ! DESDE           [ reduce using rule 156 (empty -> .) ]
  ! REPETIR         [ reduce using rule 156 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 156 (empty -> .) ]
  ! CUANDO          [ reduce using rule 156 (empty -> .) ]
  ! REGRESA         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 156 (empty -> .) ]
  ! LEE             [ reduce using rule 156 (empty -> .) ]
  ! DECR            [ reduce using rule 156 (empty -> .) ]
  ! INCR            [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    expo                           shift and go to state 82
    multi                          shift and go to state 205
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 157

    (125) multi -> expo DIV . multi
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DIV resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MOD resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for NO resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DESDE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 138 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    NO              reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)
    DECR            reduce using rule 138 (termino -> .)
    INCR            reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! HASTA           [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 156 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 156 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 156 (empty -> .) ]
  ! SI              [ reduce using rule 156 (empty -> .) ]
  ! DESDE           [ reduce using rule 156 (empty -> .) ]
  ! REPETIR         [ reduce using rule 156 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 156 (empty -> .) ]
  ! CUANDO          [ reduce using rule 156 (empty -> .) ]
  ! REGRESA         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 156 (empty -> .) ]
  ! LEE             [ reduce using rule 156 (empty -> .) ]
  ! DECR            [ reduce using rule 156 (empty -> .) ]
  ! INCR            [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    expo                           shift and go to state 82
    multi                          shift and go to state 206
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 158

    (126) multi -> expo MOD . multi
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DIV resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MOD resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for NO resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DESDE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DECR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 138 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    NO              reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)
    DECR            reduce using rule 138 (termino -> .)
    INCR            reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! HASTA           [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 156 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 156 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 156 (empty -> .) ]
  ! SI              [ reduce using rule 156 (empty -> .) ]
  ! DESDE           [ reduce using rule 156 (empty -> .) ]
  ! REPETIR         [ reduce using rule 156 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 156 (empty -> .) ]
  ! CUANDO          [ reduce using rule 156 (empty -> .) ]
  ! REGRESA         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 156 (empty -> .) ]
  ! LEE             [ reduce using rule 156 (empty -> .) ]
  ! DECR            [ reduce using rule 156 (empty -> .) ]
  ! INCR            [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    expo                           shift and go to state 82
    multi                          shift and go to state 207
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 159

    (129) expo -> signo POTENCIA . expo
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    NO              reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)
    DECR            reduce using rule 138 (termino -> .)
    INCR            reduce using rule 138 (termino -> .)

  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    signo                          shift and go to state 83
    expo                           shift and go to state 208
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 160

    (27) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA . dimens
    (27) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (28) dimens -> .
    (29) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (30) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 41
    COMA            reduce using rule 28 (dimens -> .)
    PUNTOS_DOBLES   reduce using rule 28 (dimens -> .)
    PAREN_TERMINA   reduce using rule 28 (dimens -> .)
    error           shift and go to state 63

  ! error           [ reduce using rule 28 (dimens -> .) ]

    dimens                         shift and go to state 209

state 161

    (29) dimens -> CORCHETE_EMPIEZA valor error . dimens
    (27) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (28) dimens -> .
    (29) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (30) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for error resolved as shift
    CORCHETE_EMPIEZA shift and go to state 41
    COMA            reduce using rule 28 (dimens -> .)
    PUNTOS_DOBLES   reduce using rule 28 (dimens -> .)
    PAREN_TERMINA   reduce using rule 28 (dimens -> .)
    error           shift and go to state 63

  ! error           [ reduce using rule 28 (dimens -> .) ]

    dimens                         shift and go to state 210

state 162

    (110) udim -> CORCHETE_EMPIEZA . expr CORCHETE_TERMINA udim
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for CORCHETE_TERMINA resolved using rule 138 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    CORCHETE_TERMINA reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! CORCHETE_TERMINA [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    expr                           shift and go to state 211
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 163

    (111) udim -> empty .

    POTENCIA        reduce using rule 111 (udim -> empty .)
    MULTI           reduce using rule 111 (udim -> empty .)
    DIV             reduce using rule 111 (udim -> empty .)
    MOD             reduce using rule 111 (udim -> empty .)
    MAS             reduce using rule 111 (udim -> empty .)
    MENOS           reduce using rule 111 (udim -> empty .)
    OP_REL          reduce using rule 111 (udim -> empty .)
    Y               reduce using rule 111 (udim -> empty .)
    O               reduce using rule 111 (udim -> empty .)
    CORCHETE_TERMINA reduce using rule 111 (udim -> empty .)
    error           reduce using rule 111 (udim -> empty .)
    COMA            reduce using rule 111 (udim -> empty .)
    PAREN_TERMINA   reduce using rule 111 (udim -> empty .)
    NO              reduce using rule 111 (udim -> empty .)
    IDENT           reduce using rule 111 (udim -> empty .)
    CTE_ENTERA      reduce using rule 111 (udim -> empty .)
    CTE_REAL        reduce using rule 111 (udim -> empty .)
    CTE_ALFA        reduce using rule 111 (udim -> empty .)
    VERDADERO       reduce using rule 111 (udim -> empty .)
    FALSO           reduce using rule 111 (udim -> empty .)
    PUNTO_COMA      reduce using rule 111 (udim -> empty .)
    HASTA           reduce using rule 111 (udim -> empty .)
    SINO            reduce using rule 111 (udim -> empty .)
    FIN             reduce using rule 111 (udim -> empty .)
    SEA             reduce using rule 111 (udim -> empty .)
    OTRO            reduce using rule 111 (udim -> empty .)
    INICIO          reduce using rule 111 (udim -> empty .)
    LIMPIA          reduce using rule 111 (udim -> empty .)
    INTERRUMPE      reduce using rule 111 (udim -> empty .)
    CONTINUA        reduce using rule 111 (udim -> empty .)
    SI              reduce using rule 111 (udim -> empty .)
    DESDE           reduce using rule 111 (udim -> empty .)
    REPETIR         reduce using rule 111 (udim -> empty .)
    MIENTRAS        reduce using rule 111 (udim -> empty .)
    CUANDO          reduce using rule 111 (udim -> empty .)
    REGRESA         reduce using rule 111 (udim -> empty .)
    IMPRIME         reduce using rule 111 (udim -> empty .)
    IMPRIMENL       reduce using rule 111 (udim -> empty .)
    LEE             reduce using rule 111 (udim -> empty .)
    DECR            reduce using rule 111 (udim -> empty .)
    INCR            reduce using rule 111 (udim -> empty .)
    OP_ASIG         reduce using rule 111 (udim -> empty .)


state 164

    (38) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 38 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 38 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 38 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 38 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 38 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)


state 165

    (40) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 40 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROTOTIPOS      reduce using rule 40 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 40 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 40 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 40 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)


state 166

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN . DE PROGRAMA PUNTO

    DE              shift and go to state 212


state 167

    (68) block -> estatuto puntoc . block
    (69) block -> estatuto puntoc .
    (68) block -> . estatuto puntoc block
    (69) block -> . estatuto puntoc
    (71) block -> . estatuto error
    (72) block -> . estatuto error block
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

    FIN             reduce using rule 69 (block -> estatuto puntoc .)
    HASTA           reduce using rule 69 (block -> estatuto puntoc .)
    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124
    error           reduce using rule 156 (empty -> .)
    PUNTO_COMA      reduce using rule 156 (empty -> .)

    estatuto                       shift and go to state 99
    block                          shift and go to state 213
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 168

    (71) block -> estatuto error .
    (72) block -> estatuto error . block
    (68) block -> . estatuto puntoc block
    (69) block -> . estatuto puntoc
    (71) block -> . estatuto error
    (72) block -> . estatuto error block
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

    FIN             reduce using rule 71 (block -> estatuto error .)
    HASTA           reduce using rule 71 (block -> estatuto error .)
    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124
    error           reduce using rule 156 (empty -> .)
    PUNTO_COMA      reduce using rule 156 (empty -> .)

    estatuto                       shift and go to state 99
    block                          shift and go to state 214
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 169

    (70) puntoc -> PUNTO_COMA .

    LIMPIA          reduce using rule 70 (puntoc -> PUNTO_COMA .)
    INTERRUMPE      reduce using rule 70 (puntoc -> PUNTO_COMA .)
    CONTINUA        reduce using rule 70 (puntoc -> PUNTO_COMA .)
    SI              reduce using rule 70 (puntoc -> PUNTO_COMA .)
    IDENT           reduce using rule 70 (puntoc -> PUNTO_COMA .)
    DESDE           reduce using rule 70 (puntoc -> PUNTO_COMA .)
    REPETIR         reduce using rule 70 (puntoc -> PUNTO_COMA .)
    MIENTRAS        reduce using rule 70 (puntoc -> PUNTO_COMA .)
    CUANDO          reduce using rule 70 (puntoc -> PUNTO_COMA .)
    REGRESA         reduce using rule 70 (puntoc -> PUNTO_COMA .)
    IMPRIME         reduce using rule 70 (puntoc -> PUNTO_COMA .)
    IMPRIMENL       reduce using rule 70 (puntoc -> PUNTO_COMA .)
    LEE             reduce using rule 70 (puntoc -> PUNTO_COMA .)
    error           reduce using rule 70 (puntoc -> PUNTO_COMA .)
    PUNTO_COMA      reduce using rule 70 (puntoc -> PUNTO_COMA .)
    FIN             reduce using rule 70 (puntoc -> PUNTO_COMA .)
    HASTA           reduce using rule 70 (puntoc -> PUNTO_COMA .)


state 170

    (88) si -> SI PAREN_EMPIEZA . exprlog PAREN_TERMINA HACER bckesp sino
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    exprlog                        shift and go to state 215
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 171

    (99) asigna -> IDENT udim . OP_ASIG exprlog

    OP_ASIG         shift and go to state 216


state 172

    (94) desde -> DESDE EL . VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> DESDE EL . VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> DESDE EL . VALOR DE asigna HASTA expr error bckesp

    VALOR           shift and go to state 217


state 173

    (97) repetir -> REPETIR block . HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    HASTA           shift and go to state 218


state 174

    (98) mientras -> MIENTRAS SE . CUMPLA QUE exprlog bckesp

    CUMPLA          shift and go to state 219


state 175

    (100) cuando -> CUANDO EL . VALOR DE IDENT INICIO gposea otro FIN

    VALOR           shift and go to state 220


state 176

    (109) regresa -> REGRESA PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    exprlog                        shift and go to state 221
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 177

    (144) imprime -> IMPRIME PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (149) gpoexp -> . exprlog gpoexp2
    (150) gpoexp -> . exprlog COMA gpoexp2
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for NO resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DIV resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MOD resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for NO resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! NO              [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    gpoexp                         shift and go to state 222
    exprlog                        shift and go to state 223
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 178

    (145) imprimenl -> IMPRIMENL PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (146) imprimenl -> IMPRIMENL PAREN_EMPIEZA . gpoexp error
    (149) gpoexp -> . exprlog gpoexp2
    (150) gpoexp -> . exprlog COMA gpoexp2
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for NO resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MULTI resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for DIV resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MOD resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for NO resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! NO              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 156 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 156 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 156 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 156 (empty -> .) ]
  ! FALSO           [ reduce using rule 156 (empty -> .) ]
  ! MULTI           [ reduce using rule 156 (empty -> .) ]
  ! DIV             [ reduce using rule 156 (empty -> .) ]
  ! MOD             [ reduce using rule 156 (empty -> .) ]
  ! POTENCIA        [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! NO              [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]
  ! CTE_ENTERA      [ reduce using rule 138 (termino -> .) ]
  ! CTE_REAL        [ reduce using rule 138 (termino -> .) ]
  ! CTE_ALFA        [ reduce using rule 138 (termino -> .) ]
  ! VERDADERO       [ reduce using rule 138 (termino -> .) ]
  ! FALSO           [ reduce using rule 138 (termino -> .) ]

    gpoexp                         shift and go to state 224
    exprlog                        shift and go to state 223
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 179

    (147) lee -> LEE PAREN_EMPIEZA . IDENT PAREN_TERMINA
    (148) lee -> LEE PAREN_EMPIEZA . IDENT dimens PAREN_TERMINA

    IDENT           shift and go to state 225


state 180

    (59) gpopars -> IDENT . COMA gpopars2
    (60) gpopars -> IDENT .

    COMA            shift and go to state 226
    PUNTOS_DOBLES   reduce using rule 60 (gpopars -> IDENT .)
    error           reduce using rule 60 (gpopars -> IDENT .)


state 181

    (66) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 227


state 182

    (53) params -> gpopars . PUNTOS_DOBLES TIPO otrospars
    (55) params -> gpopars . PUNTOS_DOBLES error otrospars
    (56) params -> gpopars . error TIPO otrospars

    PUNTOS_DOBLES   shift and go to state 228
    error           shift and go to state 229


state 183

    (54) params -> empty .

    PAREN_TERMINA   reduce using rule 54 (params -> empty .)


state 184

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_TERMINA   shift and go to state 230


state 185

    (42) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 231


state 186

    (48) protfunc -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 232


state 187

    (49) protfunc -> FUNCION error PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 233


state 188

    (50) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 234


state 189

    (51) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 235


state 190

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)


state 191

    (9) gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)
    INICIO          reduce using rule 9 (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA gpovars .)


state 192

    (7) gpovars -> gpoids error TIPO PUNTO_COMA gpovars .

    PROTOTIPOS      reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    PROCEDIMIENTO   reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 7 (gpovars -> gpoids error TIPO PUNTO_COMA gpovars .)


state 193

    (18) gpoids2 -> IDENT opasig COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 18 (gpoids2 -> IDENT opasig COMA gpoids2 .)
    error           reduce using rule 18 (gpoids2 -> IDENT opasig COMA gpoids2 .)


state 194

    (20) gpoids2 -> IDENT dimens COMA gpoids2 .

    PUNTOS_DOBLES   reduce using rule 20 (gpoids2 -> IDENT dimens COMA gpoids2 .)
    error           reduce using rule 20 (gpoids2 -> IDENT dimens COMA gpoids2 .)


state 195

    (141) lfunc -> IDENT parenemp uparams . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 236


state 196

    (142) lfunc -> IDENT parenemp error . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 237


state 197

    (154) uparams -> exprlog .
    (155) uparams -> exprlog . COMA uparams

    PAREN_TERMINA   reduce using rule 154 (uparams -> exprlog .)
    COMA            shift and go to state 238


state 198

    (110) udim -> CORCHETE_EMPIEZA expr . CORCHETE_TERMINA udim
    (118) oprel -> expr .
    (119) oprel -> expr . OP_REL oprel

  ! shift/reduce conflict for CORCHETE_TERMINA resolved as shift
    CORCHETE_TERMINA shift and go to state 239
    Y               reduce using rule 118 (oprel -> expr .)
    O               reduce using rule 118 (oprel -> expr .)
    error           reduce using rule 118 (oprel -> expr .)
    OP_REL          shift and go to state 152

  ! CORCHETE_TERMINA [ reduce using rule 118 (oprel -> expr .) ]


state 199

    (30) dimens -> error valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 30 (dimens -> error valor CORCHETE_TERMINA dimens .)
    error           reduce using rule 30 (dimens -> error valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 30 (dimens -> error valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 30 (dimens -> error valor CORCHETE_TERMINA dimens .)


state 200

    (113) exprlog -> opy O exprlog .

    CORCHETE_TERMINA reduce using rule 113 (exprlog -> opy O exprlog .)
    error           reduce using rule 113 (exprlog -> opy O exprlog .)
    COMA            reduce using rule 113 (exprlog -> opy O exprlog .)
    PAREN_TERMINA   reduce using rule 113 (exprlog -> opy O exprlog .)
    NO              reduce using rule 113 (exprlog -> opy O exprlog .)
    MENOS           reduce using rule 113 (exprlog -> opy O exprlog .)
    IDENT           reduce using rule 113 (exprlog -> opy O exprlog .)
    CTE_ENTERA      reduce using rule 113 (exprlog -> opy O exprlog .)
    CTE_REAL        reduce using rule 113 (exprlog -> opy O exprlog .)
    CTE_ALFA        reduce using rule 113 (exprlog -> opy O exprlog .)
    VERDADERO       reduce using rule 113 (exprlog -> opy O exprlog .)
    FALSO           reduce using rule 113 (exprlog -> opy O exprlog .)
    O               reduce using rule 113 (exprlog -> opy O exprlog .)
    Y               reduce using rule 113 (exprlog -> opy O exprlog .)
    OP_REL          reduce using rule 113 (exprlog -> opy O exprlog .)
    MAS             reduce using rule 113 (exprlog -> opy O exprlog .)
    MULTI           reduce using rule 113 (exprlog -> opy O exprlog .)
    DIV             reduce using rule 113 (exprlog -> opy O exprlog .)
    MOD             reduce using rule 113 (exprlog -> opy O exprlog .)
    POTENCIA        reduce using rule 113 (exprlog -> opy O exprlog .)
    PUNTO_COMA      reduce using rule 113 (exprlog -> opy O exprlog .)
    HASTA           reduce using rule 113 (exprlog -> opy O exprlog .)
    SINO            reduce using rule 113 (exprlog -> opy O exprlog .)
    FIN             reduce using rule 113 (exprlog -> opy O exprlog .)
    SEA             reduce using rule 113 (exprlog -> opy O exprlog .)
    OTRO            reduce using rule 113 (exprlog -> opy O exprlog .)
    INICIO          reduce using rule 113 (exprlog -> opy O exprlog .)
    LIMPIA          reduce using rule 113 (exprlog -> opy O exprlog .)
    INTERRUMPE      reduce using rule 113 (exprlog -> opy O exprlog .)
    CONTINUA        reduce using rule 113 (exprlog -> opy O exprlog .)
    SI              reduce using rule 113 (exprlog -> opy O exprlog .)
    DESDE           reduce using rule 113 (exprlog -> opy O exprlog .)
    REPETIR         reduce using rule 113 (exprlog -> opy O exprlog .)
    MIENTRAS        reduce using rule 113 (exprlog -> opy O exprlog .)
    CUANDO          reduce using rule 113 (exprlog -> opy O exprlog .)
    REGRESA         reduce using rule 113 (exprlog -> opy O exprlog .)
    IMPRIME         reduce using rule 113 (exprlog -> opy O exprlog .)
    IMPRIMENL       reduce using rule 113 (exprlog -> opy O exprlog .)
    LEE             reduce using rule 113 (exprlog -> opy O exprlog .)


state 201

    (115) opy -> opno Y opy .

    O               reduce using rule 115 (opy -> opno Y opy .)
    CORCHETE_TERMINA reduce using rule 115 (opy -> opno Y opy .)
    error           reduce using rule 115 (opy -> opno Y opy .)
    COMA            reduce using rule 115 (opy -> opno Y opy .)
    PAREN_TERMINA   reduce using rule 115 (opy -> opno Y opy .)
    NO              reduce using rule 115 (opy -> opno Y opy .)
    MENOS           reduce using rule 115 (opy -> opno Y opy .)
    IDENT           reduce using rule 115 (opy -> opno Y opy .)
    CTE_ENTERA      reduce using rule 115 (opy -> opno Y opy .)
    CTE_REAL        reduce using rule 115 (opy -> opno Y opy .)
    CTE_ALFA        reduce using rule 115 (opy -> opno Y opy .)
    VERDADERO       reduce using rule 115 (opy -> opno Y opy .)
    FALSO           reduce using rule 115 (opy -> opno Y opy .)
    Y               reduce using rule 115 (opy -> opno Y opy .)
    OP_REL          reduce using rule 115 (opy -> opno Y opy .)
    MAS             reduce using rule 115 (opy -> opno Y opy .)
    MULTI           reduce using rule 115 (opy -> opno Y opy .)
    DIV             reduce using rule 115 (opy -> opno Y opy .)
    MOD             reduce using rule 115 (opy -> opno Y opy .)
    POTENCIA        reduce using rule 115 (opy -> opno Y opy .)
    PUNTO_COMA      reduce using rule 115 (opy -> opno Y opy .)
    HASTA           reduce using rule 115 (opy -> opno Y opy .)
    SINO            reduce using rule 115 (opy -> opno Y opy .)
    FIN             reduce using rule 115 (opy -> opno Y opy .)
    SEA             reduce using rule 115 (opy -> opno Y opy .)
    OTRO            reduce using rule 115 (opy -> opno Y opy .)
    INICIO          reduce using rule 115 (opy -> opno Y opy .)
    LIMPIA          reduce using rule 115 (opy -> opno Y opy .)
    INTERRUMPE      reduce using rule 115 (opy -> opno Y opy .)
    CONTINUA        reduce using rule 115 (opy -> opno Y opy .)
    SI              reduce using rule 115 (opy -> opno Y opy .)
    DESDE           reduce using rule 115 (opy -> opno Y opy .)
    REPETIR         reduce using rule 115 (opy -> opno Y opy .)
    MIENTRAS        reduce using rule 115 (opy -> opno Y opy .)
    CUANDO          reduce using rule 115 (opy -> opno Y opy .)
    REGRESA         reduce using rule 115 (opy -> opno Y opy .)
    IMPRIME         reduce using rule 115 (opy -> opno Y opy .)
    IMPRIMENL       reduce using rule 115 (opy -> opno Y opy .)
    LEE             reduce using rule 115 (opy -> opno Y opy .)


state 202

    (119) oprel -> expr OP_REL oprel .

    Y               reduce using rule 119 (oprel -> expr OP_REL oprel .)
    O               reduce using rule 119 (oprel -> expr OP_REL oprel .)
    CORCHETE_TERMINA reduce using rule 119 (oprel -> expr OP_REL oprel .)
    error           reduce using rule 119 (oprel -> expr OP_REL oprel .)
    COMA            reduce using rule 119 (oprel -> expr OP_REL oprel .)
    PAREN_TERMINA   reduce using rule 119 (oprel -> expr OP_REL oprel .)
    NO              reduce using rule 119 (oprel -> expr OP_REL oprel .)
    MENOS           reduce using rule 119 (oprel -> expr OP_REL oprel .)
    IDENT           reduce using rule 119 (oprel -> expr OP_REL oprel .)
    CTE_ENTERA      reduce using rule 119 (oprel -> expr OP_REL oprel .)
    CTE_REAL        reduce using rule 119 (oprel -> expr OP_REL oprel .)
    CTE_ALFA        reduce using rule 119 (oprel -> expr OP_REL oprel .)
    VERDADERO       reduce using rule 119 (oprel -> expr OP_REL oprel .)
    FALSO           reduce using rule 119 (oprel -> expr OP_REL oprel .)
    OP_REL          reduce using rule 119 (oprel -> expr OP_REL oprel .)
    MAS             reduce using rule 119 (oprel -> expr OP_REL oprel .)
    MULTI           reduce using rule 119 (oprel -> expr OP_REL oprel .)
    DIV             reduce using rule 119 (oprel -> expr OP_REL oprel .)
    MOD             reduce using rule 119 (oprel -> expr OP_REL oprel .)
    POTENCIA        reduce using rule 119 (oprel -> expr OP_REL oprel .)
    PUNTO_COMA      reduce using rule 119 (oprel -> expr OP_REL oprel .)
    HASTA           reduce using rule 119 (oprel -> expr OP_REL oprel .)
    SINO            reduce using rule 119 (oprel -> expr OP_REL oprel .)
    FIN             reduce using rule 119 (oprel -> expr OP_REL oprel .)
    SEA             reduce using rule 119 (oprel -> expr OP_REL oprel .)
    OTRO            reduce using rule 119 (oprel -> expr OP_REL oprel .)
    INICIO          reduce using rule 119 (oprel -> expr OP_REL oprel .)
    LIMPIA          reduce using rule 119 (oprel -> expr OP_REL oprel .)
    INTERRUMPE      reduce using rule 119 (oprel -> expr OP_REL oprel .)
    CONTINUA        reduce using rule 119 (oprel -> expr OP_REL oprel .)
    SI              reduce using rule 119 (oprel -> expr OP_REL oprel .)
    DESDE           reduce using rule 119 (oprel -> expr OP_REL oprel .)
    REPETIR         reduce using rule 119 (oprel -> expr OP_REL oprel .)
    MIENTRAS        reduce using rule 119 (oprel -> expr OP_REL oprel .)
    CUANDO          reduce using rule 119 (oprel -> expr OP_REL oprel .)
    REGRESA         reduce using rule 119 (oprel -> expr OP_REL oprel .)
    IMPRIME         reduce using rule 119 (oprel -> expr OP_REL oprel .)
    IMPRIMENL       reduce using rule 119 (oprel -> expr OP_REL oprel .)
    LEE             reduce using rule 119 (oprel -> expr OP_REL oprel .)


state 203

    (121) expr -> multi MAS expr .

    OP_REL          reduce using rule 121 (expr -> multi MAS expr .)
    Y               reduce using rule 121 (expr -> multi MAS expr .)
    O               reduce using rule 121 (expr -> multi MAS expr .)
    CORCHETE_TERMINA reduce using rule 121 (expr -> multi MAS expr .)
    error           reduce using rule 121 (expr -> multi MAS expr .)
    COMA            reduce using rule 121 (expr -> multi MAS expr .)
    PAREN_TERMINA   reduce using rule 121 (expr -> multi MAS expr .)
    NO              reduce using rule 121 (expr -> multi MAS expr .)
    MENOS           reduce using rule 121 (expr -> multi MAS expr .)
    IDENT           reduce using rule 121 (expr -> multi MAS expr .)
    CTE_ENTERA      reduce using rule 121 (expr -> multi MAS expr .)
    CTE_REAL        reduce using rule 121 (expr -> multi MAS expr .)
    CTE_ALFA        reduce using rule 121 (expr -> multi MAS expr .)
    VERDADERO       reduce using rule 121 (expr -> multi MAS expr .)
    FALSO           reduce using rule 121 (expr -> multi MAS expr .)
    MAS             reduce using rule 121 (expr -> multi MAS expr .)
    MULTI           reduce using rule 121 (expr -> multi MAS expr .)
    DIV             reduce using rule 121 (expr -> multi MAS expr .)
    MOD             reduce using rule 121 (expr -> multi MAS expr .)
    POTENCIA        reduce using rule 121 (expr -> multi MAS expr .)
    PUNTO_COMA      reduce using rule 121 (expr -> multi MAS expr .)
    HASTA           reduce using rule 121 (expr -> multi MAS expr .)
    SINO            reduce using rule 121 (expr -> multi MAS expr .)
    FIN             reduce using rule 121 (expr -> multi MAS expr .)
    SEA             reduce using rule 121 (expr -> multi MAS expr .)
    OTRO            reduce using rule 121 (expr -> multi MAS expr .)
    INICIO          reduce using rule 121 (expr -> multi MAS expr .)
    LIMPIA          reduce using rule 121 (expr -> multi MAS expr .)
    INTERRUMPE      reduce using rule 121 (expr -> multi MAS expr .)
    CONTINUA        reduce using rule 121 (expr -> multi MAS expr .)
    SI              reduce using rule 121 (expr -> multi MAS expr .)
    DESDE           reduce using rule 121 (expr -> multi MAS expr .)
    REPETIR         reduce using rule 121 (expr -> multi MAS expr .)
    MIENTRAS        reduce using rule 121 (expr -> multi MAS expr .)
    CUANDO          reduce using rule 121 (expr -> multi MAS expr .)
    REGRESA         reduce using rule 121 (expr -> multi MAS expr .)
    IMPRIME         reduce using rule 121 (expr -> multi MAS expr .)
    IMPRIMENL       reduce using rule 121 (expr -> multi MAS expr .)
    LEE             reduce using rule 121 (expr -> multi MAS expr .)
    DECR            reduce using rule 121 (expr -> multi MAS expr .)
    INCR            reduce using rule 121 (expr -> multi MAS expr .)


state 204

    (122) expr -> multi MENOS expr .

    OP_REL          reduce using rule 122 (expr -> multi MENOS expr .)
    Y               reduce using rule 122 (expr -> multi MENOS expr .)
    O               reduce using rule 122 (expr -> multi MENOS expr .)
    CORCHETE_TERMINA reduce using rule 122 (expr -> multi MENOS expr .)
    error           reduce using rule 122 (expr -> multi MENOS expr .)
    COMA            reduce using rule 122 (expr -> multi MENOS expr .)
    PAREN_TERMINA   reduce using rule 122 (expr -> multi MENOS expr .)
    NO              reduce using rule 122 (expr -> multi MENOS expr .)
    MENOS           reduce using rule 122 (expr -> multi MENOS expr .)
    IDENT           reduce using rule 122 (expr -> multi MENOS expr .)
    CTE_ENTERA      reduce using rule 122 (expr -> multi MENOS expr .)
    CTE_REAL        reduce using rule 122 (expr -> multi MENOS expr .)
    CTE_ALFA        reduce using rule 122 (expr -> multi MENOS expr .)
    VERDADERO       reduce using rule 122 (expr -> multi MENOS expr .)
    FALSO           reduce using rule 122 (expr -> multi MENOS expr .)
    MAS             reduce using rule 122 (expr -> multi MENOS expr .)
    MULTI           reduce using rule 122 (expr -> multi MENOS expr .)
    DIV             reduce using rule 122 (expr -> multi MENOS expr .)
    MOD             reduce using rule 122 (expr -> multi MENOS expr .)
    POTENCIA        reduce using rule 122 (expr -> multi MENOS expr .)
    PUNTO_COMA      reduce using rule 122 (expr -> multi MENOS expr .)
    HASTA           reduce using rule 122 (expr -> multi MENOS expr .)
    SINO            reduce using rule 122 (expr -> multi MENOS expr .)
    FIN             reduce using rule 122 (expr -> multi MENOS expr .)
    SEA             reduce using rule 122 (expr -> multi MENOS expr .)
    OTRO            reduce using rule 122 (expr -> multi MENOS expr .)
    INICIO          reduce using rule 122 (expr -> multi MENOS expr .)
    LIMPIA          reduce using rule 122 (expr -> multi MENOS expr .)
    INTERRUMPE      reduce using rule 122 (expr -> multi MENOS expr .)
    CONTINUA        reduce using rule 122 (expr -> multi MENOS expr .)
    SI              reduce using rule 122 (expr -> multi MENOS expr .)
    DESDE           reduce using rule 122 (expr -> multi MENOS expr .)
    REPETIR         reduce using rule 122 (expr -> multi MENOS expr .)
    MIENTRAS        reduce using rule 122 (expr -> multi MENOS expr .)
    CUANDO          reduce using rule 122 (expr -> multi MENOS expr .)
    REGRESA         reduce using rule 122 (expr -> multi MENOS expr .)
    IMPRIME         reduce using rule 122 (expr -> multi MENOS expr .)
    IMPRIMENL       reduce using rule 122 (expr -> multi MENOS expr .)
    LEE             reduce using rule 122 (expr -> multi MENOS expr .)
    DECR            reduce using rule 122 (expr -> multi MENOS expr .)
    INCR            reduce using rule 122 (expr -> multi MENOS expr .)


state 205

    (124) multi -> expo MULTI multi .

    MAS             reduce using rule 124 (multi -> expo MULTI multi .)
    MENOS           reduce using rule 124 (multi -> expo MULTI multi .)
    OP_REL          reduce using rule 124 (multi -> expo MULTI multi .)
    Y               reduce using rule 124 (multi -> expo MULTI multi .)
    O               reduce using rule 124 (multi -> expo MULTI multi .)
    CORCHETE_TERMINA reduce using rule 124 (multi -> expo MULTI multi .)
    error           reduce using rule 124 (multi -> expo MULTI multi .)
    COMA            reduce using rule 124 (multi -> expo MULTI multi .)
    PAREN_TERMINA   reduce using rule 124 (multi -> expo MULTI multi .)
    NO              reduce using rule 124 (multi -> expo MULTI multi .)
    IDENT           reduce using rule 124 (multi -> expo MULTI multi .)
    CTE_ENTERA      reduce using rule 124 (multi -> expo MULTI multi .)
    CTE_REAL        reduce using rule 124 (multi -> expo MULTI multi .)
    CTE_ALFA        reduce using rule 124 (multi -> expo MULTI multi .)
    VERDADERO       reduce using rule 124 (multi -> expo MULTI multi .)
    FALSO           reduce using rule 124 (multi -> expo MULTI multi .)
    MULTI           reduce using rule 124 (multi -> expo MULTI multi .)
    DIV             reduce using rule 124 (multi -> expo MULTI multi .)
    MOD             reduce using rule 124 (multi -> expo MULTI multi .)
    POTENCIA        reduce using rule 124 (multi -> expo MULTI multi .)
    PUNTO_COMA      reduce using rule 124 (multi -> expo MULTI multi .)
    HASTA           reduce using rule 124 (multi -> expo MULTI multi .)
    SINO            reduce using rule 124 (multi -> expo MULTI multi .)
    FIN             reduce using rule 124 (multi -> expo MULTI multi .)
    SEA             reduce using rule 124 (multi -> expo MULTI multi .)
    OTRO            reduce using rule 124 (multi -> expo MULTI multi .)
    INICIO          reduce using rule 124 (multi -> expo MULTI multi .)
    LIMPIA          reduce using rule 124 (multi -> expo MULTI multi .)
    INTERRUMPE      reduce using rule 124 (multi -> expo MULTI multi .)
    CONTINUA        reduce using rule 124 (multi -> expo MULTI multi .)
    SI              reduce using rule 124 (multi -> expo MULTI multi .)
    DESDE           reduce using rule 124 (multi -> expo MULTI multi .)
    REPETIR         reduce using rule 124 (multi -> expo MULTI multi .)
    MIENTRAS        reduce using rule 124 (multi -> expo MULTI multi .)
    CUANDO          reduce using rule 124 (multi -> expo MULTI multi .)
    REGRESA         reduce using rule 124 (multi -> expo MULTI multi .)
    IMPRIME         reduce using rule 124 (multi -> expo MULTI multi .)
    IMPRIMENL       reduce using rule 124 (multi -> expo MULTI multi .)
    LEE             reduce using rule 124 (multi -> expo MULTI multi .)
    DECR            reduce using rule 124 (multi -> expo MULTI multi .)
    INCR            reduce using rule 124 (multi -> expo MULTI multi .)


state 206

    (125) multi -> expo DIV multi .

    MAS             reduce using rule 125 (multi -> expo DIV multi .)
    MENOS           reduce using rule 125 (multi -> expo DIV multi .)
    OP_REL          reduce using rule 125 (multi -> expo DIV multi .)
    Y               reduce using rule 125 (multi -> expo DIV multi .)
    O               reduce using rule 125 (multi -> expo DIV multi .)
    CORCHETE_TERMINA reduce using rule 125 (multi -> expo DIV multi .)
    error           reduce using rule 125 (multi -> expo DIV multi .)
    COMA            reduce using rule 125 (multi -> expo DIV multi .)
    PAREN_TERMINA   reduce using rule 125 (multi -> expo DIV multi .)
    NO              reduce using rule 125 (multi -> expo DIV multi .)
    IDENT           reduce using rule 125 (multi -> expo DIV multi .)
    CTE_ENTERA      reduce using rule 125 (multi -> expo DIV multi .)
    CTE_REAL        reduce using rule 125 (multi -> expo DIV multi .)
    CTE_ALFA        reduce using rule 125 (multi -> expo DIV multi .)
    VERDADERO       reduce using rule 125 (multi -> expo DIV multi .)
    FALSO           reduce using rule 125 (multi -> expo DIV multi .)
    MULTI           reduce using rule 125 (multi -> expo DIV multi .)
    DIV             reduce using rule 125 (multi -> expo DIV multi .)
    MOD             reduce using rule 125 (multi -> expo DIV multi .)
    POTENCIA        reduce using rule 125 (multi -> expo DIV multi .)
    PUNTO_COMA      reduce using rule 125 (multi -> expo DIV multi .)
    HASTA           reduce using rule 125 (multi -> expo DIV multi .)
    SINO            reduce using rule 125 (multi -> expo DIV multi .)
    FIN             reduce using rule 125 (multi -> expo DIV multi .)
    SEA             reduce using rule 125 (multi -> expo DIV multi .)
    OTRO            reduce using rule 125 (multi -> expo DIV multi .)
    INICIO          reduce using rule 125 (multi -> expo DIV multi .)
    LIMPIA          reduce using rule 125 (multi -> expo DIV multi .)
    INTERRUMPE      reduce using rule 125 (multi -> expo DIV multi .)
    CONTINUA        reduce using rule 125 (multi -> expo DIV multi .)
    SI              reduce using rule 125 (multi -> expo DIV multi .)
    DESDE           reduce using rule 125 (multi -> expo DIV multi .)
    REPETIR         reduce using rule 125 (multi -> expo DIV multi .)
    MIENTRAS        reduce using rule 125 (multi -> expo DIV multi .)
    CUANDO          reduce using rule 125 (multi -> expo DIV multi .)
    REGRESA         reduce using rule 125 (multi -> expo DIV multi .)
    IMPRIME         reduce using rule 125 (multi -> expo DIV multi .)
    IMPRIMENL       reduce using rule 125 (multi -> expo DIV multi .)
    LEE             reduce using rule 125 (multi -> expo DIV multi .)
    DECR            reduce using rule 125 (multi -> expo DIV multi .)
    INCR            reduce using rule 125 (multi -> expo DIV multi .)


state 207

    (126) multi -> expo MOD multi .

    MAS             reduce using rule 126 (multi -> expo MOD multi .)
    MENOS           reduce using rule 126 (multi -> expo MOD multi .)
    OP_REL          reduce using rule 126 (multi -> expo MOD multi .)
    Y               reduce using rule 126 (multi -> expo MOD multi .)
    O               reduce using rule 126 (multi -> expo MOD multi .)
    CORCHETE_TERMINA reduce using rule 126 (multi -> expo MOD multi .)
    error           reduce using rule 126 (multi -> expo MOD multi .)
    COMA            reduce using rule 126 (multi -> expo MOD multi .)
    PAREN_TERMINA   reduce using rule 126 (multi -> expo MOD multi .)
    NO              reduce using rule 126 (multi -> expo MOD multi .)
    IDENT           reduce using rule 126 (multi -> expo MOD multi .)
    CTE_ENTERA      reduce using rule 126 (multi -> expo MOD multi .)
    CTE_REAL        reduce using rule 126 (multi -> expo MOD multi .)
    CTE_ALFA        reduce using rule 126 (multi -> expo MOD multi .)
    VERDADERO       reduce using rule 126 (multi -> expo MOD multi .)
    FALSO           reduce using rule 126 (multi -> expo MOD multi .)
    MULTI           reduce using rule 126 (multi -> expo MOD multi .)
    DIV             reduce using rule 126 (multi -> expo MOD multi .)
    MOD             reduce using rule 126 (multi -> expo MOD multi .)
    POTENCIA        reduce using rule 126 (multi -> expo MOD multi .)
    PUNTO_COMA      reduce using rule 126 (multi -> expo MOD multi .)
    HASTA           reduce using rule 126 (multi -> expo MOD multi .)
    SINO            reduce using rule 126 (multi -> expo MOD multi .)
    FIN             reduce using rule 126 (multi -> expo MOD multi .)
    SEA             reduce using rule 126 (multi -> expo MOD multi .)
    OTRO            reduce using rule 126 (multi -> expo MOD multi .)
    INICIO          reduce using rule 126 (multi -> expo MOD multi .)
    LIMPIA          reduce using rule 126 (multi -> expo MOD multi .)
    INTERRUMPE      reduce using rule 126 (multi -> expo MOD multi .)
    CONTINUA        reduce using rule 126 (multi -> expo MOD multi .)
    SI              reduce using rule 126 (multi -> expo MOD multi .)
    DESDE           reduce using rule 126 (multi -> expo MOD multi .)
    REPETIR         reduce using rule 126 (multi -> expo MOD multi .)
    MIENTRAS        reduce using rule 126 (multi -> expo MOD multi .)
    CUANDO          reduce using rule 126 (multi -> expo MOD multi .)
    REGRESA         reduce using rule 126 (multi -> expo MOD multi .)
    IMPRIME         reduce using rule 126 (multi -> expo MOD multi .)
    IMPRIMENL       reduce using rule 126 (multi -> expo MOD multi .)
    LEE             reduce using rule 126 (multi -> expo MOD multi .)
    DECR            reduce using rule 126 (multi -> expo MOD multi .)
    INCR            reduce using rule 126 (multi -> expo MOD multi .)


state 208

    (129) expo -> signo POTENCIA expo .

    MULTI           reduce using rule 129 (expo -> signo POTENCIA expo .)
    DIV             reduce using rule 129 (expo -> signo POTENCIA expo .)
    MOD             reduce using rule 129 (expo -> signo POTENCIA expo .)
    MAS             reduce using rule 129 (expo -> signo POTENCIA expo .)
    MENOS           reduce using rule 129 (expo -> signo POTENCIA expo .)
    OP_REL          reduce using rule 129 (expo -> signo POTENCIA expo .)
    Y               reduce using rule 129 (expo -> signo POTENCIA expo .)
    O               reduce using rule 129 (expo -> signo POTENCIA expo .)
    CORCHETE_TERMINA reduce using rule 129 (expo -> signo POTENCIA expo .)
    error           reduce using rule 129 (expo -> signo POTENCIA expo .)
    COMA            reduce using rule 129 (expo -> signo POTENCIA expo .)
    PAREN_TERMINA   reduce using rule 129 (expo -> signo POTENCIA expo .)
    NO              reduce using rule 129 (expo -> signo POTENCIA expo .)
    IDENT           reduce using rule 129 (expo -> signo POTENCIA expo .)
    CTE_ENTERA      reduce using rule 129 (expo -> signo POTENCIA expo .)
    CTE_REAL        reduce using rule 129 (expo -> signo POTENCIA expo .)
    CTE_ALFA        reduce using rule 129 (expo -> signo POTENCIA expo .)
    VERDADERO       reduce using rule 129 (expo -> signo POTENCIA expo .)
    FALSO           reduce using rule 129 (expo -> signo POTENCIA expo .)
    POTENCIA        reduce using rule 129 (expo -> signo POTENCIA expo .)
    PUNTO_COMA      reduce using rule 129 (expo -> signo POTENCIA expo .)
    HASTA           reduce using rule 129 (expo -> signo POTENCIA expo .)
    SINO            reduce using rule 129 (expo -> signo POTENCIA expo .)
    FIN             reduce using rule 129 (expo -> signo POTENCIA expo .)
    SEA             reduce using rule 129 (expo -> signo POTENCIA expo .)
    OTRO            reduce using rule 129 (expo -> signo POTENCIA expo .)
    INICIO          reduce using rule 129 (expo -> signo POTENCIA expo .)
    LIMPIA          reduce using rule 129 (expo -> signo POTENCIA expo .)
    INTERRUMPE      reduce using rule 129 (expo -> signo POTENCIA expo .)
    CONTINUA        reduce using rule 129 (expo -> signo POTENCIA expo .)
    SI              reduce using rule 129 (expo -> signo POTENCIA expo .)
    DESDE           reduce using rule 129 (expo -> signo POTENCIA expo .)
    REPETIR         reduce using rule 129 (expo -> signo POTENCIA expo .)
    MIENTRAS        reduce using rule 129 (expo -> signo POTENCIA expo .)
    CUANDO          reduce using rule 129 (expo -> signo POTENCIA expo .)
    REGRESA         reduce using rule 129 (expo -> signo POTENCIA expo .)
    IMPRIME         reduce using rule 129 (expo -> signo POTENCIA expo .)
    IMPRIMENL       reduce using rule 129 (expo -> signo POTENCIA expo .)
    LEE             reduce using rule 129 (expo -> signo POTENCIA expo .)
    DECR            reduce using rule 129 (expo -> signo POTENCIA expo .)
    INCR            reduce using rule 129 (expo -> signo POTENCIA expo .)


state 209

    (27) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 27 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    error           reduce using rule 27 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 27 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 27 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)


state 210

    (29) dimens -> CORCHETE_EMPIEZA valor error dimens .

    COMA            reduce using rule 29 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    error           reduce using rule 29 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    PUNTOS_DOBLES   reduce using rule 29 (dimens -> CORCHETE_EMPIEZA valor error dimens .)
    PAREN_TERMINA   reduce using rule 29 (dimens -> CORCHETE_EMPIEZA valor error dimens .)


state 211

    (110) udim -> CORCHETE_EMPIEZA expr . CORCHETE_TERMINA udim

    CORCHETE_TERMINA shift and go to state 239


state 212

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE . PROGRAMA PUNTO

    PROGRAMA        shift and go to state 240


state 213

    (68) block -> estatuto puntoc block .

    FIN             reduce using rule 68 (block -> estatuto puntoc block .)
    HASTA           reduce using rule 68 (block -> estatuto puntoc block .)


state 214

    (72) block -> estatuto error block .

    FIN             reduce using rule 72 (block -> estatuto error block .)
    HASTA           reduce using rule 72 (block -> estatuto error block .)


state 215

    (88) si -> SI PAREN_EMPIEZA exprlog . PAREN_TERMINA HACER bckesp sino

    PAREN_TERMINA   shift and go to state 241


state 216

    (99) asigna -> IDENT udim OP_ASIG . exprlog
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for HASTA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    HASTA           reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! HASTA           [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    exprlog                        shift and go to state 242
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 217

    (94) desde -> DESDE EL VALOR . DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> DESDE EL VALOR . DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> DESDE EL VALOR . DE asigna HASTA expr error bckesp

    DE              shift and go to state 243


state 218

    (97) repetir -> REPETIR block HASTA . QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    QUE             shift and go to state 244


state 219

    (98) mientras -> MIENTRAS SE CUMPLA . QUE exprlog bckesp

    QUE             shift and go to state 245


state 220

    (100) cuando -> CUANDO EL VALOR . DE IDENT INICIO gposea otro FIN

    DE              shift and go to state 246


state 221

    (109) regresa -> REGRESA PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 247


state 222

    (144) imprime -> IMPRIME PAREN_EMPIEZA gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 248


state 223

    (149) gpoexp -> exprlog . gpoexp2
    (150) gpoexp -> exprlog . COMA gpoexp2
    (151) gpoexp2 -> . exprlog
    (152) gpoexp2 -> . exprlog COMA gpoexp2
    (153) gpoexp2 -> .
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 153 (gpoexp2 -> .)
  ! reduce/reduce conflict for error resolved using rule 153 (gpoexp2 -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for COMA resolved as shift
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
    COMA            shift and go to state 251
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)

  ! PAREN_TERMINA   [ reduce using rule 153 (gpoexp2 -> .) ]
  ! error           [ reduce using rule 153 (gpoexp2 -> .) ]
  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! COMA            [ reduce using rule 138 (termino -> .) ]

    exprlog                        shift and go to state 249
    gpoexp2                        shift and go to state 250
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 224

    (145) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp . PAREN_TERMINA
    (146) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp . error

    PAREN_TERMINA   shift and go to state 252
    error           shift and go to state 253


state 225

    (147) lee -> LEE PAREN_EMPIEZA IDENT . PAREN_TERMINA
    (148) lee -> LEE PAREN_EMPIEZA IDENT . dimens PAREN_TERMINA
    (27) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (28) dimens -> .
    (29) dimens -> . CORCHETE_EMPIEZA valor error dimens
    (30) dimens -> . error valor CORCHETE_TERMINA dimens

  ! shift/reduce conflict for PAREN_TERMINA resolved as shift
    PAREN_TERMINA   shift and go to state 254
    CORCHETE_EMPIEZA shift and go to state 41
    error           shift and go to state 63

  ! PAREN_TERMINA   [ reduce using rule 28 (dimens -> .) ]

    dimens                         shift and go to state 255

state 226

    (59) gpopars -> IDENT COMA . gpopars2
    (61) gpopars2 -> . IDENT COMA gpopars2
    (62) gpopars2 -> . IDENT

    IDENT           shift and go to state 256

    gpopars2                       shift and go to state 257

state 227

    (66) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (156) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 156 (empty -> .)

    variables                      shift and go to state 258
    empty                          shift and go to state 7

state 228

    (53) params -> gpopars PUNTOS_DOBLES . TIPO otrospars
    (55) params -> gpopars PUNTOS_DOBLES . error otrospars

    TIPO            shift and go to state 259
    error           shift and go to state 260


state 229

    (56) params -> gpopars error . TIPO otrospars

    TIPO            shift and go to state 261


state 230

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 262


state 231

    (42) protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 42 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    FUNCION         reduce using rule 42 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)
    PROGRAMA        reduce using rule 42 (protfuncproc -> PROTOTIPOS gpofuncproc FIN DE PROTOTIPOS PUNTO_COMA .)


state 232

    (48) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 263


state 233

    (49) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 264


state 234

    (50) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 265


state 235

    (51) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 266


state 236

    (141) lfunc -> IDENT parenemp uparams PAREN_TERMINA .

    POTENCIA        reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MULTI           reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DIV             reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MOD             reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MAS             reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MENOS           reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OP_REL          reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    Y               reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    O               reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CORCHETE_TERMINA reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    error           reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    COMA            reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    NO              reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IDENT           reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CTE_ENTERA      reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CTE_REAL        reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CTE_ALFA        reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    VERDADERO       reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    FALSO           reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    HASTA           reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SINO            reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    FIN             reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SEA             reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    OTRO            reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INICIO          reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    LIMPIA          reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CONTINUA        reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    SI              reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DESDE           reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    REPETIR         reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    MIENTRAS        reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    CUANDO          reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    REGRESA         reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IMPRIME         reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    LEE             reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    DECR            reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)
    INCR            reduce using rule 141 (lfunc -> IDENT parenemp uparams PAREN_TERMINA .)


state 237

    (142) lfunc -> IDENT parenemp error PAREN_TERMINA .

    POTENCIA        reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MULTI           reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DIV             reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MOD             reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MAS             reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MENOS           reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OP_REL          reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    Y               reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    O               reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CORCHETE_TERMINA reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    error           reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    COMA            reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    NO              reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IDENT           reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CTE_ENTERA      reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CTE_REAL        reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CTE_ALFA        reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    VERDADERO       reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    FALSO           reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    HASTA           reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SINO            reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    FIN             reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SEA             reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    OTRO            reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INICIO          reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    LIMPIA          reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CONTINUA        reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    SI              reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DESDE           reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    REPETIR         reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    MIENTRAS        reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    CUANDO          reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    REGRESA         reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IMPRIME         reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    LEE             reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    DECR            reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)
    INCR            reduce using rule 142 (lfunc -> IDENT parenemp error PAREN_TERMINA .)


state 238

    (155) uparams -> exprlog COMA . uparams
    (154) uparams -> . exprlog
    (155) uparams -> . exprlog COMA uparams
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    exprlog                        shift and go to state 197
    uparams                        shift and go to state 267
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 239

    (110) udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA . udim
    (110) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (111) udim -> . empty
    (156) empty -> .

    CORCHETE_EMPIEZA shift and go to state 162
    POTENCIA        reduce using rule 156 (empty -> .)
    MULTI           reduce using rule 156 (empty -> .)
    DIV             reduce using rule 156 (empty -> .)
    MOD             reduce using rule 156 (empty -> .)
    MAS             reduce using rule 156 (empty -> .)
    MENOS           reduce using rule 156 (empty -> .)
    OP_REL          reduce using rule 156 (empty -> .)
    Y               reduce using rule 156 (empty -> .)
    O               reduce using rule 156 (empty -> .)
    CORCHETE_TERMINA reduce using rule 156 (empty -> .)
    error           reduce using rule 156 (empty -> .)
    COMA            reduce using rule 156 (empty -> .)
    PAREN_TERMINA   reduce using rule 156 (empty -> .)
    NO              reduce using rule 156 (empty -> .)
    IDENT           reduce using rule 156 (empty -> .)
    CTE_ENTERA      reduce using rule 156 (empty -> .)
    CTE_REAL        reduce using rule 156 (empty -> .)
    CTE_ALFA        reduce using rule 156 (empty -> .)
    VERDADERO       reduce using rule 156 (empty -> .)
    FALSO           reduce using rule 156 (empty -> .)
    PUNTO_COMA      reduce using rule 156 (empty -> .)
    HASTA           reduce using rule 156 (empty -> .)
    SINO            reduce using rule 156 (empty -> .)
    FIN             reduce using rule 156 (empty -> .)
    SEA             reduce using rule 156 (empty -> .)
    OTRO            reduce using rule 156 (empty -> .)
    INICIO          reduce using rule 156 (empty -> .)
    LIMPIA          reduce using rule 156 (empty -> .)
    INTERRUMPE      reduce using rule 156 (empty -> .)
    CONTINUA        reduce using rule 156 (empty -> .)
    SI              reduce using rule 156 (empty -> .)
    DESDE           reduce using rule 156 (empty -> .)
    REPETIR         reduce using rule 156 (empty -> .)
    MIENTRAS        reduce using rule 156 (empty -> .)
    CUANDO          reduce using rule 156 (empty -> .)
    REGRESA         reduce using rule 156 (empty -> .)
    IMPRIME         reduce using rule 156 (empty -> .)
    IMPRIMENL       reduce using rule 156 (empty -> .)
    LEE             reduce using rule 156 (empty -> .)
    DECR            reduce using rule 156 (empty -> .)
    INCR            reduce using rule 156 (empty -> .)
    OP_ASIG         reduce using rule 156 (empty -> .)

    udim                           shift and go to state 268
    empty                          shift and go to state 163

state 240

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA . PUNTO

    PUNTO           shift and go to state 269


state 241

    (88) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA . HACER bckesp sino

    HACER           shift and go to state 270


state 242

    (99) asigna -> IDENT udim OP_ASIG exprlog .

    error           reduce using rule 99 (asigna -> IDENT udim OP_ASIG exprlog .)
    PUNTO_COMA      reduce using rule 99 (asigna -> IDENT udim OP_ASIG exprlog .)
    HASTA           reduce using rule 99 (asigna -> IDENT udim OP_ASIG exprlog .)
    SINO            reduce using rule 99 (asigna -> IDENT udim OP_ASIG exprlog .)
    FIN             reduce using rule 99 (asigna -> IDENT udim OP_ASIG exprlog .)
    SEA             reduce using rule 99 (asigna -> IDENT udim OP_ASIG exprlog .)
    OTRO            reduce using rule 99 (asigna -> IDENT udim OP_ASIG exprlog .)


state 243

    (94) desde -> DESDE EL VALOR DE . asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> DESDE EL VALOR DE . asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> DESDE EL VALOR DE . asigna HASTA expr error bckesp
    (99) asigna -> . IDENT udim OP_ASIG exprlog

    IDENT           shift and go to state 272

    asigna                         shift and go to state 271

state 244

    (97) repetir -> REPETIR block HASTA QUE . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 273


state 245

    (98) mientras -> MIENTRAS SE CUMPLA QUE . exprlog bckesp
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INICIO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SI resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for IDENT resolved as shift
  ! reduce/reduce conflict for DESDE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REPETIR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for CUANDO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for REGRESA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for LEE resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SINO resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for FIN resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for SEA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    INICIO          reduce using rule 138 (termino -> .)
    LIMPIA          reduce using rule 138 (termino -> .)
    INTERRUMPE      reduce using rule 138 (termino -> .)
    CONTINUA        reduce using rule 138 (termino -> .)
    SI              reduce using rule 138 (termino -> .)
    DESDE           reduce using rule 138 (termino -> .)
    REPETIR         reduce using rule 138 (termino -> .)
    MIENTRAS        reduce using rule 138 (termino -> .)
    CUANDO          reduce using rule 138 (termino -> .)
    REGRESA         reduce using rule 138 (termino -> .)
    IMPRIME         reduce using rule 138 (termino -> .)
    IMPRIMENL       reduce using rule 138 (termino -> .)
    LEE             reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)
    PUNTO_COMA      reduce using rule 138 (termino -> .)
    SINO            reduce using rule 138 (termino -> .)
    FIN             reduce using rule 138 (termino -> .)
    SEA             reduce using rule 138 (termino -> .)
    OTRO            reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! INICIO          [ reduce using rule 156 (empty -> .) ]
  ! LIMPIA          [ reduce using rule 156 (empty -> .) ]
  ! INTERRUMPE      [ reduce using rule 156 (empty -> .) ]
  ! CONTINUA        [ reduce using rule 156 (empty -> .) ]
  ! SI              [ reduce using rule 156 (empty -> .) ]
  ! IDENT           [ reduce using rule 156 (empty -> .) ]
  ! DESDE           [ reduce using rule 156 (empty -> .) ]
  ! REPETIR         [ reduce using rule 156 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 156 (empty -> .) ]
  ! CUANDO          [ reduce using rule 156 (empty -> .) ]
  ! REGRESA         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIME         [ reduce using rule 156 (empty -> .) ]
  ! IMPRIMENL       [ reduce using rule 156 (empty -> .) ]
  ! LEE             [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]
  ! IDENT           [ reduce using rule 138 (termino -> .) ]

    exprlog                        shift and go to state 274
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 246

    (100) cuando -> CUANDO EL VALOR DE . IDENT INICIO gposea otro FIN

    IDENT           shift and go to state 275


state 247

    (109) regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .

    error           reduce using rule 109 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 109 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 109 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 109 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 109 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 109 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 248

    (144) imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    error           reduce using rule 144 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 144 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 144 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 144 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 144 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 144 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 249

    (151) gpoexp2 -> exprlog .
    (152) gpoexp2 -> exprlog . COMA gpoexp2

    PAREN_TERMINA   reduce using rule 151 (gpoexp2 -> exprlog .)
    error           reduce using rule 151 (gpoexp2 -> exprlog .)
    COMA            shift and go to state 276


state 250

    (149) gpoexp -> exprlog gpoexp2 .

    PAREN_TERMINA   reduce using rule 149 (gpoexp -> exprlog gpoexp2 .)
    error           reduce using rule 149 (gpoexp -> exprlog gpoexp2 .)


state 251

    (150) gpoexp -> exprlog COMA . gpoexp2
    (151) gpoexp2 -> . exprlog
    (152) gpoexp2 -> . exprlog COMA gpoexp2
    (153) gpoexp2 -> .
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 153 (gpoexp2 -> .)
  ! reduce/reduce conflict for error resolved using rule 153 (gpoexp2 -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)

  ! PAREN_TERMINA   [ reduce using rule 153 (gpoexp2 -> .) ]
  ! error           [ reduce using rule 153 (gpoexp2 -> .) ]
  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    exprlog                        shift and go to state 249
    gpoexp2                        shift and go to state 277
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 252

    (145) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    error           reduce using rule 145 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 145 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SINO            reduce using rule 145 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    FIN             reduce using rule 145 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    SEA             reduce using rule 145 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    OTRO            reduce using rule 145 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 253

    (146) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .

    error           reduce using rule 146 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    PUNTO_COMA      reduce using rule 146 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    SINO            reduce using rule 146 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    FIN             reduce using rule 146 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    SEA             reduce using rule 146 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)
    OTRO            reduce using rule 146 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp error .)


state 254

    (147) lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .

    error           reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SINO            reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    FIN             reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    SEA             reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    OTRO            reduce using rule 147 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)


state 255

    (148) lee -> LEE PAREN_EMPIEZA IDENT dimens . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 278


state 256

    (61) gpopars2 -> IDENT . COMA gpopars2
    (62) gpopars2 -> IDENT .

    COMA            shift and go to state 279
    PUNTOS_DOBLES   reduce using rule 62 (gpopars2 -> IDENT .)
    error           reduce using rule 62 (gpopars2 -> IDENT .)


state 257

    (59) gpopars -> IDENT COMA gpopars2 .

    PUNTOS_DOBLES   reduce using rule 59 (gpopars -> IDENT COMA gpopars2 .)
    error           reduce using rule 59 (gpopars -> IDENT COMA gpopars2 .)


state 258

    (66) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables . INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    INICIO          shift and go to state 280


state 259

    (53) params -> gpopars PUNTOS_DOBLES TIPO . otrospars
    (57) otrospars -> . PUNTO_COMA params
    (58) otrospars -> . empty
    (156) empty -> .

    PUNTO_COMA      shift and go to state 282
    PAREN_TERMINA   reduce using rule 156 (empty -> .)

    otrospars                      shift and go to state 281
    empty                          shift and go to state 283

state 260

    (55) params -> gpopars PUNTOS_DOBLES error . otrospars
    (57) otrospars -> . PUNTO_COMA params
    (58) otrospars -> . empty
    (156) empty -> .

    PUNTO_COMA      shift and go to state 282
    PAREN_TERMINA   reduce using rule 156 (empty -> .)

    otrospars                      shift and go to state 284
    empty                          shift and go to state 283

state 261

    (56) params -> gpopars error TIPO . otrospars
    (57) otrospars -> . PUNTO_COMA params
    (58) otrospars -> . empty
    (156) empty -> .

    PUNTO_COMA      shift and go to state 282
    PAREN_TERMINA   reduce using rule 156 (empty -> .)

    otrospars                      shift and go to state 285
    empty                          shift and go to state 283

state 262

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    TIPO            shift and go to state 286


state 263

    (48) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 287


state 264

    (49) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 288


state 265

    (50) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    FUNCION         reduce using rule 50 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 50 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FIN             reduce using rule 50 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 266

    (51) protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    FUNCION         reduce using rule 51 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 51 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FIN             reduce using rule 51 (protproc -> PROCEDIMIENTO error PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 267

    (155) uparams -> exprlog COMA uparams .

    PAREN_TERMINA   reduce using rule 155 (uparams -> exprlog COMA uparams .)


state 268

    (110) udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .

    POTENCIA        reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MULTI           reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DIV             reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MOD             reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MAS             reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MENOS           reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OP_REL          reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    Y               reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    O               reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CORCHETE_TERMINA reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    error           reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    COMA            reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    PAREN_TERMINA   reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    NO              reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IDENT           reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CTE_ENTERA      reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CTE_REAL        reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CTE_ALFA        reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    VERDADERO       reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    FALSO           reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    PUNTO_COMA      reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    HASTA           reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SINO            reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    FIN             reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SEA             reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OTRO            reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INICIO          reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    LIMPIA          reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INTERRUMPE      reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CONTINUA        reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    SI              reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DESDE           reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    REPETIR         reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    MIENTRAS        reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    CUANDO          reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    REGRESA         reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IMPRIME         reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    IMPRIMENL       reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    LEE             reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    DECR            reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    INCR            reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)
    OP_ASIG         reduce using rule 110 (udim -> CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim .)


state 269

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO .

    $end            reduce using rule 1 (program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA PUNTO .)


state 270

    (88) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER . bckesp sino
    (91) bckesp -> . estatuto
    (92) bckesp -> . INICIO block FIN
    (93) bckesp -> .
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 93 (bckesp -> .)
    INICIO          shift and go to state 291
    SINO            reduce using rule 93 (bckesp -> .)
    error           reduce using rule 93 (bckesp -> .)
    PUNTO_COMA      reduce using rule 93 (bckesp -> .)
    FIN             reduce using rule 93 (bckesp -> .)
    SEA             reduce using rule 93 (bckesp -> .)
    OTRO            reduce using rule 93 (bckesp -> .)
    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124

  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]

    bckesp                         shift and go to state 289
    estatuto                       shift and go to state 290
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 271

    (94) desde -> DESDE EL VALOR DE asigna . HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> DESDE EL VALOR DE asigna . HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> DESDE EL VALOR DE asigna . HASTA expr error bckesp

    HASTA           shift and go to state 292


state 272

    (99) asigna -> IDENT . udim OP_ASIG exprlog
    (110) udim -> . CORCHETE_EMPIEZA expr CORCHETE_TERMINA udim
    (111) udim -> . empty
    (156) empty -> .

    CORCHETE_EMPIEZA shift and go to state 162
    OP_ASIG         reduce using rule 156 (empty -> .)

    udim                           shift and go to state 171
    empty                          shift and go to state 163

state 273

    (97) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    exprlog                        shift and go to state 293
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 274

    (98) mientras -> MIENTRAS SE CUMPLA QUE exprlog . bckesp
    (91) bckesp -> . estatuto
    (92) bckesp -> . INICIO block FIN
    (93) bckesp -> .
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 93 (bckesp -> .)
    INICIO          shift and go to state 291
    SINO            reduce using rule 93 (bckesp -> .)
    error           reduce using rule 93 (bckesp -> .)
    PUNTO_COMA      reduce using rule 93 (bckesp -> .)
    FIN             reduce using rule 93 (bckesp -> .)
    SEA             reduce using rule 93 (bckesp -> .)
    OTRO            reduce using rule 93 (bckesp -> .)
    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124

  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]

    bckesp                         shift and go to state 294
    estatuto                       shift and go to state 290
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 275

    (100) cuando -> CUANDO EL VALOR DE IDENT . INICIO gposea otro FIN

    INICIO          shift and go to state 295


state 276

    (152) gpoexp2 -> exprlog COMA . gpoexp2
    (151) gpoexp2 -> . exprlog
    (152) gpoexp2 -> . exprlog COMA gpoexp2
    (153) gpoexp2 -> .
    (112) exprlog -> . opy
    (113) exprlog -> . opy O exprlog
    (114) opy -> . opno
    (115) opy -> . opno Y opy
    (116) opno -> . oprel
    (117) opno -> . NO oprel
    (118) oprel -> . expr
    (119) oprel -> . expr OP_REL oprel
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 153 (gpoexp2 -> .)
  ! reduce/reduce conflict for error resolved using rule 153 (gpoexp2 -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for OP_REL resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for Y resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for O resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for COMA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
    NO              shift and go to state 78
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    OP_REL          reduce using rule 138 (termino -> .)
    Y               reduce using rule 138 (termino -> .)
    O               reduce using rule 138 (termino -> .)
    COMA            reduce using rule 138 (termino -> .)
    PAREN_TERMINA   reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)

  ! PAREN_TERMINA   [ reduce using rule 153 (gpoexp2 -> .) ]
  ! error           [ reduce using rule 153 (gpoexp2 -> .) ]
  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! OP_REL          [ reduce using rule 156 (empty -> .) ]
  ! Y               [ reduce using rule 156 (empty -> .) ]
  ! O               [ reduce using rule 156 (empty -> .) ]
  ! COMA            [ reduce using rule 156 (empty -> .) ]
  ! PAREN_TERMINA   [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    exprlog                        shift and go to state 249
    gpoexp2                        shift and go to state 296
    opy                            shift and go to state 75
    opno                           shift and go to state 76
    oprel                          shift and go to state 77
    expr                           shift and go to state 79
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 277

    (150) gpoexp -> exprlog COMA gpoexp2 .

    PAREN_TERMINA   reduce using rule 150 (gpoexp -> exprlog COMA gpoexp2 .)
    error           reduce using rule 150 (gpoexp -> exprlog COMA gpoexp2 .)


state 278

    (148) lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .

    error           reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SINO            reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    FIN             reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    SEA             reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    OTRO            reduce using rule 148 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)


state 279

    (61) gpopars2 -> IDENT COMA . gpopars2
    (61) gpopars2 -> . IDENT COMA gpopars2
    (62) gpopars2 -> . IDENT

    IDENT           shift and go to state 256

    gpopars2                       shift and go to state 297

state 280

    (66) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO . block FIN DE PROCEDIMIENTO PUNTO_COMA
    (68) block -> . estatuto puntoc block
    (69) block -> . estatuto puntoc
    (71) block -> . estatuto error
    (72) block -> . estatuto error block
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124
    error           reduce using rule 156 (empty -> .)
    PUNTO_COMA      reduce using rule 156 (empty -> .)

    block                          shift and go to state 298
    estatuto                       shift and go to state 99
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 281

    (53) params -> gpopars PUNTOS_DOBLES TIPO otrospars .

    PAREN_TERMINA   reduce using rule 53 (params -> gpopars PUNTOS_DOBLES TIPO otrospars .)


state 282

    (57) otrospars -> PUNTO_COMA . params
    (53) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (54) params -> . empty
    (55) params -> . gpopars PUNTOS_DOBLES error otrospars
    (56) params -> . gpopars error TIPO otrospars
    (59) gpopars -> . IDENT COMA gpopars2
    (60) gpopars -> . IDENT
    (156) empty -> .

    IDENT           shift and go to state 180
    PAREN_TERMINA   reduce using rule 156 (empty -> .)

    params                         shift and go to state 299
    gpopars                        shift and go to state 182
    empty                          shift and go to state 183

state 283

    (58) otrospars -> empty .

    PAREN_TERMINA   reduce using rule 58 (otrospars -> empty .)


state 284

    (55) params -> gpopars PUNTOS_DOBLES error otrospars .

    PAREN_TERMINA   reduce using rule 55 (params -> gpopars PUNTOS_DOBLES error otrospars .)


state 285

    (56) params -> gpopars error TIPO otrospars .

    PAREN_TERMINA   reduce using rule 56 (params -> gpopars error TIPO otrospars .)


state 286

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . variables INICIO block FIN DE FUNCION PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (156) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 156 (empty -> .)

    variables                      shift and go to state 300
    empty                          shift and go to state 7

state 287

    (48) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 301


state 288

    (49) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 302


state 289

    (88) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp . sino
    (89) sino -> . SINO bckesp
    (90) sino -> . empty
    (156) empty -> .

  ! shift/reduce conflict for SINO resolved as shift
    SINO            shift and go to state 304
    error           reduce using rule 156 (empty -> .)
    PUNTO_COMA      reduce using rule 156 (empty -> .)
    FIN             reduce using rule 156 (empty -> .)
    SEA             reduce using rule 156 (empty -> .)
    OTRO            reduce using rule 156 (empty -> .)

  ! SINO            [ reduce using rule 156 (empty -> .) ]

    sino                           shift and go to state 303
    empty                          shift and go to state 305

state 290

    (91) bckesp -> estatuto .

    SINO            reduce using rule 91 (bckesp -> estatuto .)
    error           reduce using rule 91 (bckesp -> estatuto .)
    PUNTO_COMA      reduce using rule 91 (bckesp -> estatuto .)
    FIN             reduce using rule 91 (bckesp -> estatuto .)
    SEA             reduce using rule 91 (bckesp -> estatuto .)
    OTRO            reduce using rule 91 (bckesp -> estatuto .)


state 291

    (92) bckesp -> INICIO . block FIN
    (68) block -> . estatuto puntoc block
    (69) block -> . estatuto puntoc
    (71) block -> . estatuto error
    (72) block -> . estatuto error block
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124
    error           reduce using rule 156 (empty -> .)
    PUNTO_COMA      reduce using rule 156 (empty -> .)

    block                          shift and go to state 306
    estatuto                       shift and go to state 99
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 292

    (94) desde -> DESDE EL VALOR DE asigna HASTA . expr DECR CTE_ENTERA bckesp
    (95) desde -> DESDE EL VALOR DE asigna HASTA . expr INCR CTE_ENTERA bckesp
    (96) desde -> DESDE EL VALOR DE asigna HASTA . expr error bckesp
    (120) expr -> . multi
    (121) expr -> . multi MAS expr
    (122) expr -> . multi MENOS expr
    (123) multi -> . expo
    (124) multi -> . expo MULTI multi
    (125) multi -> . expo DIV multi
    (126) multi -> . expo MOD multi
    (127) multi -> . empty
    (128) expo -> . signo
    (129) expo -> . signo POTENCIA expo
    (156) empty -> .
    (130) signo -> . termino
    (131) signo -> . MENOS termino
    (132) termino -> . IDENT
    (133) termino -> . CTE_ENTERA
    (134) termino -> . CTE_REAL
    (135) termino -> . CTE_ALFA
    (136) termino -> . VERDADERO
    (137) termino -> . FALSO
    (138) termino -> .
    (139) termino -> . IDENT udim
    (140) termino -> . lfunc
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA

  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for MAS resolved using rule 138 (termino -> .)
  ! shift/reduce conflict for MENOS resolved as shift
  ! reduce/reduce conflict for DECR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for INCR resolved using rule 138 (termino -> .)
  ! reduce/reduce conflict for error resolved using rule 138 (termino -> .)
    MENOS           shift and go to state 81
    IDENT           shift and go to state 95
    CTE_ENTERA      shift and go to state 85
    CTE_REAL        shift and go to state 86
    CTE_ALFA        shift and go to state 87
    VERDADERO       shift and go to state 88
    FALSO           shift and go to state 89
    POTENCIA        reduce using rule 138 (termino -> .)
    MULTI           reduce using rule 138 (termino -> .)
    DIV             reduce using rule 138 (termino -> .)
    MOD             reduce using rule 138 (termino -> .)
    MAS             reduce using rule 138 (termino -> .)
    DECR            reduce using rule 138 (termino -> .)
    INCR            reduce using rule 138 (termino -> .)
    error           reduce using rule 138 (termino -> .)

  ! MAS             [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 156 (empty -> .) ]
  ! DECR            [ reduce using rule 156 (empty -> .) ]
  ! INCR            [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! MENOS           [ reduce using rule 138 (termino -> .) ]

    expr                           shift and go to state 307
    multi                          shift and go to state 80
    expo                           shift and go to state 82
    empty                          shift and go to state 94
    signo                          shift and go to state 83
    termino                        shift and go to state 84
    lfunc                          shift and go to state 90

state 293

    (97) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 308


state 294

    (98) mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .

    error           reduce using rule 98 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    PUNTO_COMA      reduce using rule 98 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SINO            reduce using rule 98 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    FIN             reduce using rule 98 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    SEA             reduce using rule 98 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    OTRO            reduce using rule 98 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)


state 295

    (100) cuando -> CUANDO EL VALOR DE IDENT INICIO . gposea otro FIN
    (103) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (104) gposea -> . empty
    (156) empty -> .

    SEA             shift and go to state 310
    OTRO            reduce using rule 156 (empty -> .)
    FIN             reduce using rule 156 (empty -> .)

    gposea                         shift and go to state 309
    empty                          shift and go to state 311

state 296

    (152) gpoexp2 -> exprlog COMA gpoexp2 .

    PAREN_TERMINA   reduce using rule 152 (gpoexp2 -> exprlog COMA gpoexp2 .)
    error           reduce using rule 152 (gpoexp2 -> exprlog COMA gpoexp2 .)


state 297

    (61) gpopars2 -> IDENT COMA gpopars2 .

    PUNTOS_DOBLES   reduce using rule 61 (gpopars2 -> IDENT COMA gpopars2 .)
    error           reduce using rule 61 (gpopars2 -> IDENT COMA gpopars2 .)


state 298

    (66) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block . FIN DE PROCEDIMIENTO PUNTO_COMA

    FIN             shift and go to state 312


state 299

    (57) otrospars -> PUNTO_COMA params .

    PAREN_TERMINA   reduce using rule 57 (otrospars -> PUNTO_COMA params .)


state 300

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables . INICIO block FIN DE FUNCION PUNTO_COMA

    INICIO          shift and go to state 313


state 301

    (48) protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    FUNCION         reduce using rule 48 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 48 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FIN             reduce using rule 48 (protfunc -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 302

    (49) protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    FUNCION         reduce using rule 49 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 49 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FIN             reduce using rule 49 (protfunc -> FUNCION error PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 303

    (88) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .

    error           reduce using rule 88 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    PUNTO_COMA      reduce using rule 88 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SINO            reduce using rule 88 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    FIN             reduce using rule 88 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    SEA             reduce using rule 88 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    OTRO            reduce using rule 88 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)


state 304

    (89) sino -> SINO . bckesp
    (91) bckesp -> . estatuto
    (92) bckesp -> . INICIO block FIN
    (93) bckesp -> .
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 93 (bckesp -> .)
    INICIO          shift and go to state 291
    SINO            reduce using rule 93 (bckesp -> .)
    error           reduce using rule 93 (bckesp -> .)
    PUNTO_COMA      reduce using rule 93 (bckesp -> .)
    FIN             reduce using rule 93 (bckesp -> .)
    SEA             reduce using rule 93 (bckesp -> .)
    OTRO            reduce using rule 93 (bckesp -> .)
    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124

  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]

    bckesp                         shift and go to state 314
    estatuto                       shift and go to state 290
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 305

    (90) sino -> empty .

    SINO            reduce using rule 90 (sino -> empty .)
    error           reduce using rule 90 (sino -> empty .)
    PUNTO_COMA      reduce using rule 90 (sino -> empty .)
    FIN             reduce using rule 90 (sino -> empty .)
    SEA             reduce using rule 90 (sino -> empty .)
    OTRO            reduce using rule 90 (sino -> empty .)


state 306

    (92) bckesp -> INICIO block . FIN

    FIN             shift and go to state 315


state 307

    (94) desde -> DESDE EL VALOR DE asigna HASTA expr . DECR CTE_ENTERA bckesp
    (95) desde -> DESDE EL VALOR DE asigna HASTA expr . INCR CTE_ENTERA bckesp
    (96) desde -> DESDE EL VALOR DE asigna HASTA expr . error bckesp

    DECR            shift and go to state 316
    INCR            shift and go to state 317
    error           shift and go to state 318


state 308

    (97) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .

    error           reduce using rule 97 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 97 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SINO            reduce using rule 97 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FIN             reduce using rule 97 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SEA             reduce using rule 97 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OTRO            reduce using rule 97 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 309

    (100) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea . otro FIN
    (101) otro -> . OTRO PUNTOS_DOBLES bckesp
    (102) otro -> . empty
    (156) empty -> .

    OTRO            shift and go to state 320
    FIN             reduce using rule 156 (empty -> .)

    otro                           shift and go to state 319
    empty                          shift and go to state 321

state 310

    (103) gposea -> SEA . gpoconst PUNTOS_DOBLES bckesp gposea
    (105) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 323

    gpoconst                       shift and go to state 322

state 311

    (104) gposea -> empty .

    OTRO            reduce using rule 104 (gposea -> empty .)
    FIN             reduce using rule 104 (gposea -> empty .)


state 312

    (66) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN . DE PROCEDIMIENTO PUNTO_COMA

    DE              shift and go to state 324


state 313

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO . block FIN DE FUNCION PUNTO_COMA
    (68) block -> . estatuto puntoc block
    (69) block -> . estatuto puntoc
    (71) block -> . estatuto error
    (72) block -> . estatuto error block
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124
    error           reduce using rule 156 (empty -> .)
    PUNTO_COMA      reduce using rule 156 (empty -> .)

    block                          shift and go to state 325
    estatuto                       shift and go to state 99
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 314

    (89) sino -> SINO bckesp .

    SINO            reduce using rule 89 (sino -> SINO bckesp .)
    error           reduce using rule 89 (sino -> SINO bckesp .)
    PUNTO_COMA      reduce using rule 89 (sino -> SINO bckesp .)
    FIN             reduce using rule 89 (sino -> SINO bckesp .)
    SEA             reduce using rule 89 (sino -> SINO bckesp .)
    OTRO            reduce using rule 89 (sino -> SINO bckesp .)


state 315

    (92) bckesp -> INICIO block FIN .

    SINO            reduce using rule 92 (bckesp -> INICIO block FIN .)
    error           reduce using rule 92 (bckesp -> INICIO block FIN .)
    PUNTO_COMA      reduce using rule 92 (bckesp -> INICIO block FIN .)
    FIN             reduce using rule 92 (bckesp -> INICIO block FIN .)
    SEA             reduce using rule 92 (bckesp -> INICIO block FIN .)
    OTRO            reduce using rule 92 (bckesp -> INICIO block FIN .)


state 316

    (94) desde -> DESDE EL VALOR DE asigna HASTA expr DECR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 326


state 317

    (95) desde -> DESDE EL VALOR DE asigna HASTA expr INCR . CTE_ENTERA bckesp

    CTE_ENTERA      shift and go to state 327


state 318

    (96) desde -> DESDE EL VALOR DE asigna HASTA expr error . bckesp
    (91) bckesp -> . estatuto
    (92) bckesp -> . INICIO block FIN
    (93) bckesp -> .
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 93 (bckesp -> .)
    INICIO          shift and go to state 291
    SINO            reduce using rule 93 (bckesp -> .)
    error           reduce using rule 93 (bckesp -> .)
    PUNTO_COMA      reduce using rule 93 (bckesp -> .)
    FIN             reduce using rule 93 (bckesp -> .)
    SEA             reduce using rule 93 (bckesp -> .)
    OTRO            reduce using rule 93 (bckesp -> .)
    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124

  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]

    asigna                         shift and go to state 108
    bckesp                         shift and go to state 328
    estatuto                       shift and go to state 290
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 319

    (100) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro . FIN

    FIN             shift and go to state 329


state 320

    (101) otro -> OTRO . PUNTOS_DOBLES bckesp

    PUNTOS_DOBLES   shift and go to state 330


state 321

    (102) otro -> empty .

    FIN             reduce using rule 102 (otro -> empty .)


state 322

    (103) gposea -> SEA gpoconst . PUNTOS_DOBLES bckesp gposea

    PUNTOS_DOBLES   shift and go to state 331


state 323

    (105) gpoconst -> CTE_ALFA . masgpoconst
    (107) masgpoconst -> . COMA gpoconst2
    (108) masgpoconst -> . empty
    (156) empty -> .

    COMA            shift and go to state 333
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)

    masgpoconst                    shift and go to state 332
    empty                          shift and go to state 334

state 324

    (66) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE . PROCEDIMIENTO PUNTO_COMA

    PROCEDIMIENTO   shift and go to state 335


state 325

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block . FIN DE FUNCION PUNTO_COMA

    FIN             shift and go to state 336


state 326

    (94) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA . bckesp
    (91) bckesp -> . estatuto
    (92) bckesp -> . INICIO block FIN
    (93) bckesp -> .
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 93 (bckesp -> .)
    INICIO          shift and go to state 291
    SINO            reduce using rule 93 (bckesp -> .)
    error           reduce using rule 93 (bckesp -> .)
    PUNTO_COMA      reduce using rule 93 (bckesp -> .)
    FIN             reduce using rule 93 (bckesp -> .)
    SEA             reduce using rule 93 (bckesp -> .)
    OTRO            reduce using rule 93 (bckesp -> .)
    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124

  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]

    asigna                         shift and go to state 108
    bckesp                         shift and go to state 337
    estatuto                       shift and go to state 290
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 327

    (95) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA . bckesp
    (91) bckesp -> . estatuto
    (92) bckesp -> . INICIO block FIN
    (93) bckesp -> .
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

  ! reduce/reduce conflict for SINO resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for error resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for SEA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 93 (bckesp -> .)
    INICIO          shift and go to state 291
    SINO            reduce using rule 93 (bckesp -> .)
    error           reduce using rule 93 (bckesp -> .)
    PUNTO_COMA      reduce using rule 93 (bckesp -> .)
    FIN             reduce using rule 93 (bckesp -> .)
    SEA             reduce using rule 93 (bckesp -> .)
    OTRO            reduce using rule 93 (bckesp -> .)
    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124

  ! SINO            [ reduce using rule 156 (empty -> .) ]
  ! error           [ reduce using rule 156 (empty -> .) ]
  ! PUNTO_COMA      [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]
  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]

    asigna                         shift and go to state 108
    bckesp                         shift and go to state 338
    estatuto                       shift and go to state 290
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 328

    (96) desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .

    error           reduce using rule 96 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    PUNTO_COMA      reduce using rule 96 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    SINO            reduce using rule 96 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    FIN             reduce using rule 96 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    SEA             reduce using rule 96 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)
    OTRO            reduce using rule 96 (desde -> DESDE EL VALOR DE asigna HASTA expr error bckesp .)


state 329

    (100) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .

    error           reduce using rule 100 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    PUNTO_COMA      reduce using rule 100 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SINO            reduce using rule 100 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    FIN             reduce using rule 100 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    SEA             reduce using rule 100 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    OTRO            reduce using rule 100 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)


state 330

    (101) otro -> OTRO PUNTOS_DOBLES . bckesp
    (91) bckesp -> . estatuto
    (92) bckesp -> . INICIO block FIN
    (93) bckesp -> .
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

  ! reduce/reduce conflict for FIN resolved using rule 93 (bckesp -> .)
    INICIO          shift and go to state 291
    FIN             reduce using rule 93 (bckesp -> .)
    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124

  ! FIN             [ reduce using rule 156 (empty -> .) ]

    bckesp                         shift and go to state 339
    estatuto                       shift and go to state 290
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 331

    (103) gposea -> SEA gpoconst PUNTOS_DOBLES . bckesp gposea
    (91) bckesp -> . estatuto
    (92) bckesp -> . INICIO block FIN
    (93) bckesp -> .
    (73) estatuto -> . si
    (74) estatuto -> . lfunc
    (75) estatuto -> . LIMPIA
    (76) estatuto -> . desde
    (77) estatuto -> . repetir
    (78) estatuto -> . mientras
    (79) estatuto -> . cuando
    (80) estatuto -> . regresa
    (81) estatuto -> . asigna
    (82) estatuto -> . imprime
    (83) estatuto -> . imprimenl
    (84) estatuto -> . lee
    (85) estatuto -> . INTERRUMPE
    (86) estatuto -> . CONTINUA
    (87) estatuto -> . empty
    (88) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (141) lfunc -> . IDENT parenemp uparams PAREN_TERMINA
    (142) lfunc -> . IDENT parenemp error PAREN_TERMINA
    (94) desde -> . DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp
    (95) desde -> . DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp
    (96) desde -> . DESDE EL VALOR DE asigna HASTA expr error bckesp
    (97) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (98) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (100) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (109) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (99) asigna -> . IDENT udim OP_ASIG exprlog
    (144) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (145) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (146) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp error
    (147) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (148) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
    (156) empty -> .

  ! reduce/reduce conflict for SEA resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for OTRO resolved using rule 93 (bckesp -> .)
  ! reduce/reduce conflict for FIN resolved using rule 93 (bckesp -> .)
    INICIO          shift and go to state 291
    SEA             reduce using rule 93 (bckesp -> .)
    OTRO            reduce using rule 93 (bckesp -> .)
    FIN             reduce using rule 93 (bckesp -> .)
    LIMPIA          shift and go to state 102
    INTERRUMPE      shift and go to state 112
    CONTINUA        shift and go to state 113
    SI              shift and go to state 115
    IDENT           shift and go to state 116
    DESDE           shift and go to state 117
    REPETIR         shift and go to state 118
    MIENTRAS        shift and go to state 119
    CUANDO          shift and go to state 120
    REGRESA         shift and go to state 121
    IMPRIME         shift and go to state 122
    IMPRIMENL       shift and go to state 123
    LEE             shift and go to state 124

  ! SEA             [ reduce using rule 156 (empty -> .) ]
  ! OTRO            [ reduce using rule 156 (empty -> .) ]
  ! FIN             [ reduce using rule 156 (empty -> .) ]

    bckesp                         shift and go to state 340
    estatuto                       shift and go to state 290
    si                             shift and go to state 100
    lfunc                          shift and go to state 101
    desde                          shift and go to state 103
    repetir                        shift and go to state 104
    mientras                       shift and go to state 105
    cuando                         shift and go to state 106
    regresa                        shift and go to state 107
    asigna                         shift and go to state 108
    imprime                        shift and go to state 109
    imprimenl                      shift and go to state 110
    lee                            shift and go to state 111
    empty                          shift and go to state 114

state 332

    (105) gpoconst -> CTE_ALFA masgpoconst .

    PUNTOS_DOBLES   reduce using rule 105 (gpoconst -> CTE_ALFA masgpoconst .)


state 333

    (107) masgpoconst -> COMA . gpoconst2
    (106) gpoconst2 -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 342

    gpoconst2                      shift and go to state 341

state 334

    (108) masgpoconst -> empty .

    PUNTOS_DOBLES   reduce using rule 108 (masgpoconst -> empty .)


state 335

    (66) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 343


state 336

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN . DE FUNCION PUNTO_COMA

    DE              shift and go to state 344


state 337

    (94) desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .

    error           reduce using rule 94 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    PUNTO_COMA      reduce using rule 94 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SINO            reduce using rule 94 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    FIN             reduce using rule 94 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    SEA             reduce using rule 94 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 94 (desde -> DESDE EL VALOR DE asigna HASTA expr DECR CTE_ENTERA bckesp .)


state 338

    (95) desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .

    error           reduce using rule 95 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    PUNTO_COMA      reduce using rule 95 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SINO            reduce using rule 95 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    FIN             reduce using rule 95 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    SEA             reduce using rule 95 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)
    OTRO            reduce using rule 95 (desde -> DESDE EL VALOR DE asigna HASTA expr INCR CTE_ENTERA bckesp .)


state 339

    (101) otro -> OTRO PUNTOS_DOBLES bckesp .

    FIN             reduce using rule 101 (otro -> OTRO PUNTOS_DOBLES bckesp .)


state 340

    (103) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp . gposea
    (103) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (104) gposea -> . empty
    (156) empty -> .

    SEA             shift and go to state 310
    OTRO            reduce using rule 156 (empty -> .)
    FIN             reduce using rule 156 (empty -> .)

    gposea                         shift and go to state 345
    empty                          shift and go to state 311

state 341

    (107) masgpoconst -> COMA gpoconst2 .

    PUNTOS_DOBLES   reduce using rule 107 (masgpoconst -> COMA gpoconst2 .)


state 342

    (106) gpoconst2 -> CTE_ALFA . masgpoconst
    (107) masgpoconst -> . COMA gpoconst2
    (108) masgpoconst -> . empty
    (156) empty -> .

    COMA            shift and go to state 333
    PUNTOS_DOBLES   reduce using rule 156 (empty -> .)

    masgpoconst                    shift and go to state 346
    empty                          shift and go to state 334

state 343

    (66) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 66 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    FUNCION         reduce using rule 66 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    PROGRAMA        reduce using rule 66 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)


state 344

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE . FUNCION PUNTO_COMA

    FUNCION         shift and go to state 347


state 345

    (103) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .

    OTRO            reduce using rule 103 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)
    FIN             reduce using rule 103 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)


state 346

    (106) gpoconst2 -> CTE_ALFA masgpoconst .

    PUNTOS_DOBLES   reduce using rule 106 (gpoconst2 -> CTE_ALFA masgpoconst .)


state 347

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION . PUNTO_COMA

    PUNTO_COMA      shift and go to state 348


state 348

    (67) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 67 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    FUNCION         reduce using rule 67 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    PROGRAMA        reduce using rule 67 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCION in state 12 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 12 resolved as shift
WARNING: shift/reduce conflict for COMA in state 17 resolved as shift
WARNING: shift/reduce conflict for COMA in state 17 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 26 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 26 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 27 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 27 resolved as shift
WARNING: shift/reduce conflict for COMA in state 33 resolved as shift
WARNING: shift/reduce conflict for COMA in state 33 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 38 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 38 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 41 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 41 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 63 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 63 resolved as shift
WARNING: shift/reduce conflict for COMA in state 70 resolved as shift
WARNING: shift/reduce conflict for COMA in state 70 resolved as shift
WARNING: shift/reduce conflict for O in state 75 resolved as shift
WARNING: shift/reduce conflict for Y in state 76 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 78 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 78 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 78 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 78 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 78 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 78 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 78 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 78 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 78 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 78 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 78 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 78 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 78 resolved as shift
WARNING: shift/reduce conflict for OP_REL in state 79 resolved as shift
WARNING: shift/reduce conflict for MAS in state 80 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 80 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 81 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 81 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 81 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 81 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 81 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 81 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV in state 82 resolved as shift
WARNING: shift/reduce conflict for MOD in state 82 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 83 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 144 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 144 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 146 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 146 resolved as shift
WARNING: shift/reduce conflict for error in state 148 resolved as shift
WARNING: shift/reduce conflict for NO in state 149 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 149 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 149 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 149 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 149 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 149 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 149 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 149 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 149 resolved as shift
WARNING: shift/reduce conflict for NO in state 149 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 149 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 149 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 149 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 149 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 149 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 149 resolved as shift
WARNING: shift/reduce conflict for NO in state 150 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 150 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 150 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 150 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 150 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 150 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 150 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 150 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 150 resolved as shift
WARNING: shift/reduce conflict for NO in state 150 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 150 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 150 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 150 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 150 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 150 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 150 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 152 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 152 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 152 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 152 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 152 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 152 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 152 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 152 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 152 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 152 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 152 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 152 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 152 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 152 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 153 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 153 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 153 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 153 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 153 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 153 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 153 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 153 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 153 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 153 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 153 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 153 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 153 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 153 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 154 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 154 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 154 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 154 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 154 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 154 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 154 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 154 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 154 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 154 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 154 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 154 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 154 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 154 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 156 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 156 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 156 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 156 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 156 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 156 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 156 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 156 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 156 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 156 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 156 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 156 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 156 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 156 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 157 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 157 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 157 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 157 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 157 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 157 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 157 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 157 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 157 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 157 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 157 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 157 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 157 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 157 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 158 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 158 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 158 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 158 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 158 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 158 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 158 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 158 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 158 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 158 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 158 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 158 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 158 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 158 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 159 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 159 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 159 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 159 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 159 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 159 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 159 resolved as shift
WARNING: shift/reduce conflict for error in state 160 resolved as shift
WARNING: shift/reduce conflict for error in state 161 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 162 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 162 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 170 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 170 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 176 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 176 resolved as shift
WARNING: shift/reduce conflict for NO in state 177 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 177 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 177 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 177 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 177 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 177 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 177 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 177 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 177 resolved as shift
WARNING: shift/reduce conflict for NO in state 177 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 177 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 177 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 177 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 177 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 177 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 177 resolved as shift
WARNING: shift/reduce conflict for NO in state 178 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 178 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 178 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 178 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 178 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 178 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 178 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 178 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 178 resolved as shift
WARNING: shift/reduce conflict for NO in state 178 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 178 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 178 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 178 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 178 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 178 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 178 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_TERMINA in state 198 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 216 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 216 resolved as shift
WARNING: shift/reduce conflict for COMA in state 223 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 223 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 223 resolved as shift
WARNING: shift/reduce conflict for COMA in state 223 resolved as shift
WARNING: shift/reduce conflict for PAREN_TERMINA in state 225 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 238 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 238 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 245 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 245 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 245 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 245 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 251 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 251 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 273 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 273 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 276 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 276 resolved as shift
WARNING: shift/reduce conflict for SINO in state 289 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 292 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 292 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (gpoids -> IDENT)
WARNING: rejected rule (dimens -> <empty>) in state 17
WARNING: reduce/reduce conflict in state 17 resolved using rule (gpoids -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 17
WARNING: reduce/reduce conflict in state 26 resolved using rule (gpofuncproc -> protfunc)
WARNING: rejected rule (empty -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (gpofuncproc -> protproc)
WARNING: rejected rule (empty -> <empty>) in state 27
WARNING: reduce/reduce conflict in state 33 resolved using rule (gpoids2 -> IDENT)
WARNING: rejected rule (dimens -> <empty>) in state 33
WARNING: reduce/reduce conflict in state 38 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 38
WARNING: reduce/reduce conflict in state 40 resolved using rule (gpoids2 -> empty)
WARNING: rejected rule (opasig -> empty) in state 40
WARNING: reduce/reduce conflict in state 41 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 63 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 70 resolved using rule (gpoids -> IDENT)
WARNING: rejected rule (dimens -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 70 resolved using rule (gpoids -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 70 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 70
WARNING: reduce/reduce conflict in state 78 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 78
WARNING: reduce/reduce conflict in state 95 resolved using rule (termino -> IDENT)
WARNING: rejected rule (empty -> <empty>) in state 95
WARNING: reduce/reduce conflict in state 96 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 96
WARNING: reduce/reduce conflict in state 97 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 97
WARNING: reduce/reduce conflict in state 132 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 132
WARNING: reduce/reduce conflict in state 133 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES error PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 133
WARNING: reduce/reduce conflict in state 134 resolved using rule (gpovars -> gpoids error TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 134
WARNING: reduce/reduce conflict in state 144 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 144
WARNING: reduce/reduce conflict in state 145 resolved using rule (gpoids2 -> empty)
WARNING: rejected rule (opasig -> empty) in state 145
WARNING: reduce/reduce conflict in state 146 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 146
WARNING: reduce/reduce conflict in state 149 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 149
WARNING: reduce/reduce conflict in state 150 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 150
WARNING: reduce/reduce conflict in state 152 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 152
WARNING: reduce/reduce conflict in state 153 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 154 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 154
WARNING: reduce/reduce conflict in state 156 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 156
WARNING: reduce/reduce conflict in state 157 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 157
WARNING: reduce/reduce conflict in state 158 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 158
WARNING: reduce/reduce conflict in state 162 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 162
WARNING: reduce/reduce conflict in state 170 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 170
WARNING: reduce/reduce conflict in state 176 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 176
WARNING: reduce/reduce conflict in state 177 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 177
WARNING: reduce/reduce conflict in state 178 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 216 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 223 resolved using rule (gpoexp2 -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 223
WARNING: reduce/reduce conflict in state 223 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 223
WARNING: reduce/reduce conflict in state 223 resolved using rule (termino -> <empty>)
WARNING: rejected rule (gpoexp2 -> <empty>) in state 223
WARNING: reduce/reduce conflict in state 238 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 238
WARNING: reduce/reduce conflict in state 245 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 245
WARNING: reduce/reduce conflict in state 251 resolved using rule (gpoexp2 -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 251
WARNING: reduce/reduce conflict in state 251 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 251
WARNING: reduce/reduce conflict in state 251 resolved using rule (termino -> <empty>)
WARNING: rejected rule (gpoexp2 -> <empty>) in state 251
WARNING: reduce/reduce conflict in state 270 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 270
WARNING: reduce/reduce conflict in state 273 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 273
WARNING: reduce/reduce conflict in state 274 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 274
WARNING: reduce/reduce conflict in state 276 resolved using rule (gpoexp2 -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 276
WARNING: reduce/reduce conflict in state 276 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 276
WARNING: reduce/reduce conflict in state 276 resolved using rule (termino -> <empty>)
WARNING: rejected rule (gpoexp2 -> <empty>) in state 276
WARNING: reduce/reduce conflict in state 292 resolved using rule (termino -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 292
WARNING: reduce/reduce conflict in state 304 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 304
WARNING: reduce/reduce conflict in state 318 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 318
WARNING: reduce/reduce conflict in state 326 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 326
WARNING: reduce/reduce conflict in state 327 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 327
WARNING: reduce/reduce conflict in state 330 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 330
WARNING: reduce/reduce conflict in state 331 resolved using rule (bckesp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 331
WARNING: Rule (gpoexp2 -> <empty>) is never reduced
