Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CTE_ENTERA_NON_NUM
    CTE_REAL_ENDING_BAD
    CTE_REAL_NON_NUM
    OP_ARIT
    OP_LOG
    PAL_RES
    PUNTO

Grammar

Rule 0     S' -> program
Rule 1     program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
Rule 2     variables -> VARIABLES gpovars
Rule 3     variables -> empty
Rule 4     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
Rule 5     gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 6     gpovars -> empty
Rule 7     gpoids -> IDENT dimens COMA gpoids
Rule 8     gpoids -> IDENT dimens
Rule 9     gpoids -> IDENT opasig COMA gpoids
Rule 10    gpoids -> IDENT COMA gpoids
Rule 11    gpoids -> empty
Rule 12    dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
Rule 13    dimens -> empty
Rule 14    opasig -> OP_ASIG CTE_ENTERA
Rule 15    opasig -> OP_ASIG IDENT
Rule 16    opasig -> empty
Rule 17    valor -> CTE_ENTERA
Rule 18    valor -> IDENT
Rule 19    constantes -> CONSTANTES grupoconst
Rule 20    constantes -> empty
Rule 21    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA
Rule 22    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
Rule 23    grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
Rule 24    grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
Rule 25    grupoconst -> empty
Rule 26    protfuncproc -> protfunc
Rule 27    protfuncproc -> protproc protfuncproc
Rule 28    protfuncproc -> empty
Rule 29    protfunc -> funcion IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
Rule 30    protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
Rule 31    params -> gpopars PUNTOS_DOBLES TIPO otrospars
Rule 32    params -> empty
Rule 33    otrospars -> PUNTO_COMA params
Rule 34    otrospars -> empty
Rule 35    gpopars -> IDENT maspars
Rule 36    maspars -> COMA gpopars
Rule 37    maspars -> empty
Rule 38    funcproc -> procedimiento funcproc
Rule 39    funcproc -> funcion funcproc
Rule 40    funcproc -> empty
Rule 41    procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
Rule 42    funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
Rule 43    block -> estatuto PUNTO_COMA block
Rule 44    block -> empty
Rule 45    estatuto -> si
Rule 46    estatuto -> LIMPIA
Rule 47    estatuto -> desde
Rule 48    estatuto -> repetir
Rule 49    estatuto -> mientras
Rule 50    estatuto -> cuando
Rule 51    estatuto -> regresa
Rule 52    estatuto -> asigna
Rule 53    estatuto -> lproc
Rule 54    estatuto -> imprime
Rule 55    estatuto -> imprimenl
Rule 56    estatuto -> lee
Rule 57    estatuto -> INTERRUMPE
Rule 58    estatuto -> CONTINUA
Rule 59    estatuto -> empty
Rule 60    si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
Rule 61    sino -> SINO bckesp
Rule 62    sino -> empty
Rule 63    bckesp -> estatuto INICIO block FIN
Rule 64    bckesp -> empty
Rule 65    desde -> DESDE EL VALOR DE asigna HASTA expr bckesp
Rule 66    repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 67    mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp
Rule 68    asigna -> IDENT udim OP_ASIG exprlog
Rule 69    cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
Rule 70    otro -> OTRO PUNTOS_DOBLES bckesp
Rule 71    otro -> empty
Rule 72    gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea
Rule 73    gposea -> empty
Rule 74    gpoconst -> CTE_ALFA masgpoconst
Rule 75    masgpoconst -> COMA gpoconst
Rule 76    masgpoconst -> empty
Rule 77    regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 78    udim -> expr udim
Rule 79    udim -> empty
Rule 80    exprlog -> opy o
Rule 81    o -> O exprlog
Rule 82    o -> empty
Rule 83    opy -> opno
Rule 84    opy -> opno Y opy
Rule 85    opno -> oprel
Rule 86    opno -> NO oprel
Rule 87    oprel -> expr
Rule 88    oprel -> expr OP_REL oprel
Rule 89    expr -> multi
Rule 90    expr -> MAS expr
Rule 91    expr -> MENOS expr
Rule 92    multi -> expo
Rule 93    multi -> expo MULTI
Rule 94    multi -> expo DIV
Rule 95    multi -> expo MOD multi
Rule 96    expo -> signo
Rule 97    expo -> signo POTENCIA expo
Rule 98    signo -> termino
Rule 99    signo -> MENOS termino
Rule 100   termino -> IDENT lfunc
Rule 101   termino -> IDENT udim
Rule 102   termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA
Rule 103   termino -> CTE_ENTERA
Rule 104   termino -> CTE_REAL
Rule 105   termino -> CTE_ALFA
Rule 106   termino -> VERDADERO
Rule 107   termino -> FALSO
Rule 108   lproc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
Rule 109   lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
Rule 110   imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 111   imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
Rule 112   lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
Rule 113   lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA
Rule 114   gpoexp -> exprlog
Rule 115   gpoexp -> exprlog COMA gpoexp
Rule 116   uparams -> exprlog
Rule 117   uparams -> exprlog COMA uparams
Rule 118   uparams -> empty
Rule 119   empty -> <empty>

Terminals, with rules where they appear

COMA                 : 7 9 10 36 75 115 117
COMMENT              : 
CONSTANTES           : 19
CONTINUA             : 58
CORCHETE_EMPIEZA     : 12
CORCHETE_TERMINA     : 12
CTE_ALFA             : 74 105
CTE_ENTERA           : 14 17 22 24 103
CTE_ENTERA_NON_NUM   : 
CTE_REAL             : 21 23 104
CTE_REAL_ENDING_BAD  : 
CTE_REAL_NON_NUM     : 
CUANDO               : 69
CUMPLA               : 67
DE                   : 1 41 42 65 69
DESDE                : 65
DIV                  : 94
EL                   : 65 69
FALSO                : 107
FIN                  : 1 41 42 63 69
FUNCION              : 42 42
HACER                : 60
HASTA                : 65 66
IDENT                : 7 8 9 10 15 18 21 22 23 24 29 30 35 41 42 68 69 100 101 108 109 112 113
IMPRIME              : 110
IMPRIMENL            : 111
INICIO               : 41 42 63 69
INTERRUMPE           : 57
LEE                  : 112 113
LIMPIA               : 46
MAS                  : 90
MENOS                : 91 99
MIENTRAS             : 67
MOD                  : 95
MULTI                : 93
NO                   : 86
O                    : 81
OP_ARIT              : 
OP_ASIG              : 14 15 21 22 23 24 68
OP_LOG               : 
OP_REL               : 88
OTRO                 : 70
PAL_RES              : 
PAREN_EMPIEZA        : 29 30 41 42 60 66 77 102 108 109 110 111 112 113
PAREN_TERMINA        : 29 30 41 42 60 66 77 102 108 109 110 111 112 113
POTENCIA             : 97
PROCEDIMIENTO        : 30 41 41
PROGRAMA             : 1 1
PUNTO                : 
PUNTOS_DOBLES        : 4 5 29 31 42 70 72
PUNTO_COMA           : 4 5 21 22 23 24 29 30 33 41 42 43
QUE                  : 66 67
REGRESA              : 77
REPETIR              : 66
SE                   : 67
SEA                  : 72
SI                   : 60
SINO                 : 61
TIPO                 : 4 5 29 31 42
VALOR                : 65 69
VARIABLES            : 2
VERDADERO            : 106
Y                    : 84
error                : 

Nonterminals, with rules where they appear

asigna               : 52 65
bckesp               : 60 61 65 67 70 72
block                : 1 41 42 43 63 66
constantes           : 1
cuando               : 50
desde                : 47
dimens               : 7 8 12 113
empty                : 3 6 11 13 16 20 25 28 32 34 37 40 44 59 62 64 71 73 76 79 82 118
estatuto             : 43 63
expo                 : 92 93 94 95 97
expr                 : 65 78 87 88 90 91
exprlog              : 60 66 67 68 77 81 102 114 115 116 117
funcion              : 29 39
funcproc             : 1 38 39
gpoconst             : 72 75
gpoexp               : 110 111 115
gpoids               : 4 5 7 9 10
gpopars              : 31 36
gposea               : 69 72
gpovars              : 2 4
grupoconst           : 19 23 24
imprime              : 54
imprimenl            : 55
lee                  : 56
lfunc                : 100
lproc                : 53
masgpoconst          : 74
maspars              : 35
mientras             : 49
multi                : 89 95
o                    : 80
opasig               : 9
opno                 : 83 84
oprel                : 85 86 88
opy                  : 80 84
otro                 : 69
otrospars            : 31
params               : 29 30 33 41 42
procedimiento        : 38
program              : 0
protfunc             : 26
protfuncproc         : 1 27
protproc             : 27
regresa              : 51
repetir              : 48
si                   : 45
signo                : 96 97
sino                 : 60
termino              : 98 99
udim                 : 68 78 101
uparams              : 108 109 117
valor                : 12
variables            : 1 41 42

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
    (19) constantes -> . CONSTANTES grupoconst
    (20) constantes -> . empty
    (119) empty -> .

    CONSTANTES      shift and go to state 3
    VARIABLES       reduce using rule 119 (empty -> .)
    PROCEDIMIENTO   reduce using rule 119 (empty -> .)
    FUNCION         reduce using rule 119 (empty -> .)
    PROGRAMA        reduce using rule 119 (empty -> .)

    program                        shift and go to state 1
    constantes                     shift and go to state 2
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> constantes . variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (119) empty -> .

    VARIABLES       shift and go to state 6
    PROCEDIMIENTO   reduce using rule 119 (empty -> .)
    FUNCION         reduce using rule 119 (empty -> .)
    PROGRAMA        reduce using rule 119 (empty -> .)

    variables                      shift and go to state 5
    empty                          shift and go to state 7

state 3

    (19) constantes -> CONSTANTES . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (119) empty -> .

    IDENT           shift and go to state 9
    VARIABLES       reduce using rule 119 (empty -> .)
    PROCEDIMIENTO   reduce using rule 119 (empty -> .)
    FUNCION         reduce using rule 119 (empty -> .)
    PROGRAMA        reduce using rule 119 (empty -> .)

    grupoconst                     shift and go to state 8
    empty                          shift and go to state 10

state 4

    (20) constantes -> empty .

    VARIABLES       reduce using rule 20 (constantes -> empty .)
    PROCEDIMIENTO   reduce using rule 20 (constantes -> empty .)
    FUNCION         reduce using rule 20 (constantes -> empty .)
    PROGRAMA        reduce using rule 20 (constantes -> empty .)


state 5

    (1) program -> constantes variables . protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA
    (26) protfuncproc -> . protfunc
    (27) protfuncproc -> . protproc protfuncproc
    (28) protfuncproc -> . empty
    (29) protfunc -> . funcion IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (30) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (119) empty -> .
    (42) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! shift/reduce conflict for FUNCION resolved as shift
    PROCEDIMIENTO   shift and go to state 16
    PROGRAMA        reduce using rule 119 (empty -> .)
    FUNCION         shift and go to state 17

  ! PROCEDIMIENTO   [ reduce using rule 119 (empty -> .) ]
  ! FUNCION         [ reduce using rule 119 (empty -> .) ]

    protfuncproc                   shift and go to state 11
    protfunc                       shift and go to state 12
    protproc                       shift and go to state 13
    empty                          shift and go to state 14
    funcion                        shift and go to state 15

state 6

    (2) variables -> VARIABLES . gpovars
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (119) empty -> .

    IDENT           shift and go to state 21
    PROCEDIMIENTO   reduce using rule 119 (empty -> .)
    FUNCION         reduce using rule 119 (empty -> .)
    PROGRAMA        reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 119 (empty -> .)

    gpovars                        shift and go to state 18
    gpoids                         shift and go to state 19
    empty                          shift and go to state 20

state 7

    (3) variables -> empty .

    PROCEDIMIENTO   reduce using rule 3 (variables -> empty .)
    FUNCION         reduce using rule 3 (variables -> empty .)
    PROGRAMA        reduce using rule 3 (variables -> empty .)
    INICIO          reduce using rule 3 (variables -> empty .)


state 8

    (19) constantes -> CONSTANTES grupoconst .

    VARIABLES       reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    PROCEDIMIENTO   reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    FUNCION         reduce using rule 19 (constantes -> CONSTANTES grupoconst .)
    PROGRAMA        reduce using rule 19 (constantes -> CONSTANTES grupoconst .)


state 9

    (21) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> IDENT . OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> IDENT . OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst

    OP_ASIG         shift and go to state 22


state 10

    (25) grupoconst -> empty .

    VARIABLES       reduce using rule 25 (grupoconst -> empty .)
    PROCEDIMIENTO   reduce using rule 25 (grupoconst -> empty .)
    FUNCION         reduce using rule 25 (grupoconst -> empty .)
    PROGRAMA        reduce using rule 25 (grupoconst -> empty .)


state 11

    (1) program -> constantes variables protfuncproc . funcproc PROGRAMA block FIN DE PROGRAMA
    (38) funcproc -> . procedimiento funcproc
    (39) funcproc -> . funcion funcproc
    (40) funcproc -> . empty
    (41) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (42) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (119) empty -> .

    PROCEDIMIENTO   shift and go to state 27
    FUNCION         shift and go to state 17
    PROGRAMA        reduce using rule 119 (empty -> .)

    funcproc                       shift and go to state 23
    procedimiento                  shift and go to state 24
    funcion                        shift and go to state 25
    empty                          shift and go to state 26

state 12

    (26) protfuncproc -> protfunc .

    PROCEDIMIENTO   reduce using rule 26 (protfuncproc -> protfunc .)
    FUNCION         reduce using rule 26 (protfuncproc -> protfunc .)
    PROGRAMA        reduce using rule 26 (protfuncproc -> protfunc .)


state 13

    (27) protfuncproc -> protproc . protfuncproc
    (26) protfuncproc -> . protfunc
    (27) protfuncproc -> . protproc protfuncproc
    (28) protfuncproc -> . empty
    (29) protfunc -> . funcion IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (30) protproc -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA
    (119) empty -> .
    (42) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

  ! shift/reduce conflict for PROCEDIMIENTO resolved as shift
  ! shift/reduce conflict for FUNCION resolved as shift
    PROCEDIMIENTO   shift and go to state 16
    PROGRAMA        reduce using rule 119 (empty -> .)
    FUNCION         shift and go to state 17

  ! PROCEDIMIENTO   [ reduce using rule 119 (empty -> .) ]
  ! FUNCION         [ reduce using rule 119 (empty -> .) ]

    protproc                       shift and go to state 13
    protfuncproc                   shift and go to state 28
    protfunc                       shift and go to state 12
    empty                          shift and go to state 14
    funcion                        shift and go to state 15

state 14

    (28) protfuncproc -> empty .

    PROCEDIMIENTO   reduce using rule 28 (protfuncproc -> empty .)
    FUNCION         reduce using rule 28 (protfuncproc -> empty .)
    PROGRAMA        reduce using rule 28 (protfuncproc -> empty .)


state 15

    (29) protfunc -> funcion . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    IDENT           shift and go to state 29


state 16

    (30) protproc -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    IDENT           shift and go to state 30


state 17

    (42) funcion -> FUNCION . IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    IDENT           shift and go to state 31


state 18

    (2) variables -> VARIABLES gpovars .

    PROCEDIMIENTO   reduce using rule 2 (variables -> VARIABLES gpovars .)
    FUNCION         reduce using rule 2 (variables -> VARIABLES gpovars .)
    PROGRAMA        reduce using rule 2 (variables -> VARIABLES gpovars .)
    INICIO          reduce using rule 2 (variables -> VARIABLES gpovars .)


state 19

    (4) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 32


state 20

    (6) gpovars -> empty .
    (11) gpoids -> empty .

    PROCEDIMIENTO   reduce using rule 6 (gpovars -> empty .)
    FUNCION         reduce using rule 6 (gpovars -> empty .)
    PROGRAMA        reduce using rule 6 (gpovars -> empty .)
    INICIO          reduce using rule 6 (gpovars -> empty .)
    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> empty .)


state 21

    (7) gpoids -> IDENT . dimens COMA gpoids
    (8) gpoids -> IDENT . dimens
    (9) gpoids -> IDENT . opasig COMA gpoids
    (10) gpoids -> IDENT . COMA gpoids
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (14) opasig -> . OP_ASIG CTE_ENTERA
    (15) opasig -> . OP_ASIG IDENT
    (16) opasig -> . empty
    (119) empty -> .

  ! shift/reduce conflict for COMA resolved as shift
    COMA            shift and go to state 34
    CORCHETE_EMPIEZA shift and go to state 36
    OP_ASIG         shift and go to state 38
    PUNTOS_DOBLES   reduce using rule 119 (empty -> .)

  ! COMA            [ reduce using rule 119 (empty -> .) ]

    dimens                         shift and go to state 33
    opasig                         shift and go to state 35
    empty                          shift and go to state 37

state 22

    (21) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA
    (22) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> IDENT OP_ASIG . CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> IDENT OP_ASIG . CTE_ENTERA PUNTO_COMA grupoconst

    CTE_REAL        shift and go to state 39
    CTE_ENTERA      shift and go to state 40


state 23

    (1) program -> constantes variables protfuncproc funcproc . PROGRAMA block FIN DE PROGRAMA

    PROGRAMA        shift and go to state 41


state 24

    (38) funcproc -> procedimiento . funcproc
    (38) funcproc -> . procedimiento funcproc
    (39) funcproc -> . funcion funcproc
    (40) funcproc -> . empty
    (41) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (42) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (119) empty -> .

    PROCEDIMIENTO   shift and go to state 27
    FUNCION         shift and go to state 17
    PROGRAMA        reduce using rule 119 (empty -> .)

    procedimiento                  shift and go to state 24
    funcproc                       shift and go to state 42
    funcion                        shift and go to state 25
    empty                          shift and go to state 26

state 25

    (39) funcproc -> funcion . funcproc
    (38) funcproc -> . procedimiento funcproc
    (39) funcproc -> . funcion funcproc
    (40) funcproc -> . empty
    (41) procedimiento -> . PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (42) funcion -> . FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (119) empty -> .

    PROCEDIMIENTO   shift and go to state 27
    FUNCION         shift and go to state 17
    PROGRAMA        reduce using rule 119 (empty -> .)

    funcion                        shift and go to state 25
    funcproc                       shift and go to state 43
    procedimiento                  shift and go to state 24
    empty                          shift and go to state 26

state 26

    (40) funcproc -> empty .

    PROGRAMA        reduce using rule 40 (funcproc -> empty .)


state 27

    (41) procedimiento -> PROCEDIMIENTO . IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    IDENT           shift and go to state 44


state 28

    (27) protfuncproc -> protproc protfuncproc .

    PROCEDIMIENTO   reduce using rule 27 (protfuncproc -> protproc protfuncproc .)
    FUNCION         reduce using rule 27 (protfuncproc -> protproc protfuncproc .)
    PROGRAMA        reduce using rule 27 (protfuncproc -> protproc protfuncproc .)


state 29

    (29) protfunc -> funcion IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 45


state 30

    (30) protproc -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 46


state 31

    (42) funcion -> FUNCION IDENT . PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 47


state 32

    (4) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 48


state 33

    (7) gpoids -> IDENT dimens . COMA gpoids
    (8) gpoids -> IDENT dimens .

    COMA            shift and go to state 49
    PUNTOS_DOBLES   reduce using rule 8 (gpoids -> IDENT dimens .)


state 34

    (10) gpoids -> IDENT COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (119) empty -> .

    IDENT           shift and go to state 21
    PUNTOS_DOBLES   reduce using rule 119 (empty -> .)

    gpoids                         shift and go to state 50
    empty                          shift and go to state 51

state 35

    (9) gpoids -> IDENT opasig . COMA gpoids

    COMA            shift and go to state 52


state 36

    (12) dimens -> CORCHETE_EMPIEZA . valor CORCHETE_TERMINA dimens
    (17) valor -> . CTE_ENTERA
    (18) valor -> . IDENT

    CTE_ENTERA      shift and go to state 54
    IDENT           shift and go to state 55

    valor                          shift and go to state 53

state 37

    (13) dimens -> empty .
    (16) opasig -> empty .

  ! reduce/reduce conflict for COMA resolved using rule 13 (dimens -> empty .)
    COMA            reduce using rule 13 (dimens -> empty .)
    PUNTOS_DOBLES   reduce using rule 13 (dimens -> empty .)

  ! COMA            [ reduce using rule 16 (opasig -> empty .) ]


state 38

    (14) opasig -> OP_ASIG . CTE_ENTERA
    (15) opasig -> OP_ASIG . IDENT

    CTE_ENTERA      shift and go to state 56
    IDENT           shift and go to state 57


state 39

    (21) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA
    (23) grupoconst -> IDENT OP_ASIG CTE_REAL . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 58


state 40

    (22) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA
    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA . PUNTO_COMA grupoconst

    PUNTO_COMA      shift and go to state 59


state 41

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA . block FIN DE PROGRAMA
    (43) block -> . estatuto PUNTO_COMA block
    (44) block -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    FIN             reduce using rule 119 (empty -> .)
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    block                          shift and go to state 60
    estatuto                       shift and go to state 61
    empty                          shift and go to state 62
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    asigna                         shift and go to state 70
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 42

    (38) funcproc -> procedimiento funcproc .

    PROGRAMA        reduce using rule 38 (funcproc -> procedimiento funcproc .)


state 43

    (39) funcproc -> funcion funcproc .

    PROGRAMA        reduce using rule 39 (funcproc -> funcion funcproc .)


state 44

    (41) procedimiento -> PROCEDIMIENTO IDENT . PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_EMPIEZA   shift and go to state 87


state 45

    (29) protfunc -> funcion IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA
    (31) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (32) params -> . empty
    (35) gpopars -> . IDENT maspars
    (119) empty -> .

    IDENT           shift and go to state 88
    PAREN_TERMINA   reduce using rule 119 (empty -> .)

    params                         shift and go to state 89
    gpopars                        shift and go to state 90
    empty                          shift and go to state 91

state 46

    (30) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTO_COMA
    (31) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (32) params -> . empty
    (35) gpopars -> . IDENT maspars
    (119) empty -> .

    IDENT           shift and go to state 88
    PAREN_TERMINA   reduce using rule 119 (empty -> .)

    params                         shift and go to state 92
    gpopars                        shift and go to state 90
    empty                          shift and go to state 91

state 47

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA . params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA
    (31) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (32) params -> . empty
    (35) gpopars -> . IDENT maspars
    (119) empty -> .

    IDENT           shift and go to state 88
    PAREN_TERMINA   reduce using rule 119 (empty -> .)

    params                         shift and go to state 93
    gpopars                        shift and go to state 90
    empty                          shift and go to state 91

state 48

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 94


state 49

    (7) gpoids -> IDENT dimens COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (119) empty -> .

    IDENT           shift and go to state 21
    PUNTOS_DOBLES   reduce using rule 119 (empty -> .)

    gpoids                         shift and go to state 95
    empty                          shift and go to state 51

state 50

    (10) gpoids -> IDENT COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 10 (gpoids -> IDENT COMA gpoids .)


state 51

    (11) gpoids -> empty .

    PUNTOS_DOBLES   reduce using rule 11 (gpoids -> empty .)


state 52

    (9) gpoids -> IDENT opasig COMA . gpoids
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (119) empty -> .

    IDENT           shift and go to state 21
    PUNTOS_DOBLES   reduce using rule 119 (empty -> .)

    gpoids                         shift and go to state 96
    empty                          shift and go to state 51

state 53

    (12) dimens -> CORCHETE_EMPIEZA valor . CORCHETE_TERMINA dimens

    CORCHETE_TERMINA shift and go to state 97


state 54

    (17) valor -> CTE_ENTERA .

    CORCHETE_TERMINA reduce using rule 17 (valor -> CTE_ENTERA .)


state 55

    (18) valor -> IDENT .

    CORCHETE_TERMINA reduce using rule 18 (valor -> IDENT .)


state 56

    (14) opasig -> OP_ASIG CTE_ENTERA .

    COMA            reduce using rule 14 (opasig -> OP_ASIG CTE_ENTERA .)


state 57

    (15) opasig -> OP_ASIG IDENT .

    COMA            reduce using rule 15 (opasig -> OP_ASIG IDENT .)


state 58

    (21) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .
    (23) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (119) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    VARIABLES       reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    FUNCION         reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    PROGRAMA        reduce using rule 21 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 119 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 119 (empty -> .) ]
  ! FUNCION         [ reduce using rule 119 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 119 (empty -> .) ]

    grupoconst                     shift and go to state 98
    empty                          shift and go to state 10

state 59

    (22) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .
    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA . grupoconst
    (21) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA
    (22) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA
    (23) grupoconst -> . IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst
    (24) grupoconst -> . IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst
    (25) grupoconst -> . empty
    (119) empty -> .

  ! reduce/reduce conflict for VARIABLES resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    VARIABLES       reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    FUNCION         reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    PROGRAMA        reduce using rule 22 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA .)
    IDENT           shift and go to state 9

  ! VARIABLES       [ reduce using rule 119 (empty -> .) ]
  ! PROCEDIMIENTO   [ reduce using rule 119 (empty -> .) ]
  ! FUNCION         [ reduce using rule 119 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 119 (empty -> .) ]

    grupoconst                     shift and go to state 99
    empty                          shift and go to state 10

state 60

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block . FIN DE PROGRAMA

    FIN             shift and go to state 100


state 61

    (43) block -> estatuto . PUNTO_COMA block

    PUNTO_COMA      shift and go to state 101


state 62

    (44) block -> empty .
    (59) estatuto -> empty .

    FIN             reduce using rule 44 (block -> empty .)
    HASTA           reduce using rule 44 (block -> empty .)
    PUNTO_COMA      reduce using rule 59 (estatuto -> empty .)


state 63

    (45) estatuto -> si .

    PUNTO_COMA      reduce using rule 45 (estatuto -> si .)
    INICIO          reduce using rule 45 (estatuto -> si .)


state 64

    (46) estatuto -> LIMPIA .

    PUNTO_COMA      reduce using rule 46 (estatuto -> LIMPIA .)
    INICIO          reduce using rule 46 (estatuto -> LIMPIA .)


state 65

    (47) estatuto -> desde .

    PUNTO_COMA      reduce using rule 47 (estatuto -> desde .)
    INICIO          reduce using rule 47 (estatuto -> desde .)


state 66

    (48) estatuto -> repetir .

    PUNTO_COMA      reduce using rule 48 (estatuto -> repetir .)
    INICIO          reduce using rule 48 (estatuto -> repetir .)


state 67

    (49) estatuto -> mientras .

    PUNTO_COMA      reduce using rule 49 (estatuto -> mientras .)
    INICIO          reduce using rule 49 (estatuto -> mientras .)


state 68

    (50) estatuto -> cuando .

    PUNTO_COMA      reduce using rule 50 (estatuto -> cuando .)
    INICIO          reduce using rule 50 (estatuto -> cuando .)


state 69

    (51) estatuto -> regresa .

    PUNTO_COMA      reduce using rule 51 (estatuto -> regresa .)
    INICIO          reduce using rule 51 (estatuto -> regresa .)


state 70

    (52) estatuto -> asigna .

    PUNTO_COMA      reduce using rule 52 (estatuto -> asigna .)
    INICIO          reduce using rule 52 (estatuto -> asigna .)


state 71

    (53) estatuto -> lproc .

    PUNTO_COMA      reduce using rule 53 (estatuto -> lproc .)
    INICIO          reduce using rule 53 (estatuto -> lproc .)


state 72

    (54) estatuto -> imprime .

    PUNTO_COMA      reduce using rule 54 (estatuto -> imprime .)
    INICIO          reduce using rule 54 (estatuto -> imprime .)


state 73

    (55) estatuto -> imprimenl .

    PUNTO_COMA      reduce using rule 55 (estatuto -> imprimenl .)
    INICIO          reduce using rule 55 (estatuto -> imprimenl .)


state 74

    (56) estatuto -> lee .

    PUNTO_COMA      reduce using rule 56 (estatuto -> lee .)
    INICIO          reduce using rule 56 (estatuto -> lee .)


state 75

    (57) estatuto -> INTERRUMPE .

    PUNTO_COMA      reduce using rule 57 (estatuto -> INTERRUMPE .)
    INICIO          reduce using rule 57 (estatuto -> INTERRUMPE .)


state 76

    (58) estatuto -> CONTINUA .

    PUNTO_COMA      reduce using rule 58 (estatuto -> CONTINUA .)
    INICIO          reduce using rule 58 (estatuto -> CONTINUA .)


state 77

    (60) si -> SI . PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino

    PAREN_EMPIEZA   shift and go to state 102


state 78

    (65) desde -> DESDE . EL VALOR DE asigna HASTA expr bckesp

    EL              shift and go to state 103


state 79

    (66) repetir -> REPETIR . block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (43) block -> . estatuto PUNTO_COMA block
    (44) block -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    HASTA           reduce using rule 119 (empty -> .)
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    block                          shift and go to state 104
    estatuto                       shift and go to state 61
    empty                          shift and go to state 62
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    asigna                         shift and go to state 70
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 80

    (67) mientras -> MIENTRAS . SE CUMPLA QUE exprlog bckesp

    SE              shift and go to state 105


state 81

    (69) cuando -> CUANDO . EL VALOR DE IDENT INICIO gposea otro FIN

    EL              shift and go to state 106


state 82

    (68) asigna -> IDENT . udim OP_ASIG exprlog
    (108) lproc -> IDENT . PAREN_EMPIEZA uparams PAREN_TERMINA
    (78) udim -> . expr udim
    (79) udim -> . empty
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (119) empty -> .
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    PAREN_EMPIEZA   shift and go to state 109
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_ASIG         reduce using rule 119 (empty -> .)
    IDENT           shift and go to state 107
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    udim                           shift and go to state 108
    expr                           shift and go to state 110
    empty                          shift and go to state 111
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 83

    (77) regresa -> REGRESA . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 123


state 84

    (110) imprime -> IMPRIME . PAREN_EMPIEZA gpoexp PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 124


state 85

    (111) imprimenl -> IMPRIMENL . PAREN_EMPIEZA gpoexp PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 125


state 86

    (112) lee -> LEE . PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> LEE . PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 126


state 87

    (41) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA . params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (31) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (32) params -> . empty
    (35) gpopars -> . IDENT maspars
    (119) empty -> .

    IDENT           shift and go to state 88
    PAREN_TERMINA   reduce using rule 119 (empty -> .)

    params                         shift and go to state 127
    gpopars                        shift and go to state 90
    empty                          shift and go to state 91

state 88

    (35) gpopars -> IDENT . maspars
    (36) maspars -> . COMA gpopars
    (37) maspars -> . empty
    (119) empty -> .

    COMA            shift and go to state 129
    PUNTOS_DOBLES   reduce using rule 119 (empty -> .)

    maspars                        shift and go to state 128
    empty                          shift and go to state 130

state 89

    (29) protfunc -> funcion IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 131


state 90

    (31) params -> gpopars . PUNTOS_DOBLES TIPO otrospars

    PUNTOS_DOBLES   shift and go to state 132


state 91

    (32) params -> empty .

    PAREN_TERMINA   reduce using rule 32 (params -> empty .)


state 92

    (30) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTO_COMA

    PAREN_TERMINA   shift and go to state 133


state 93

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA params . PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PAREN_TERMINA   shift and go to state 134


state 94

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA . gpovars
    (5) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .
    (4) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars
    (5) gpovars -> . gpoids PUNTOS_DOBLES TIPO PUNTO_COMA
    (6) gpovars -> . empty
    (7) gpoids -> . IDENT dimens COMA gpoids
    (8) gpoids -> . IDENT dimens
    (9) gpoids -> . IDENT opasig COMA gpoids
    (10) gpoids -> . IDENT COMA gpoids
    (11) gpoids -> . empty
    (119) empty -> .

  ! reduce/reduce conflict for PROCEDIMIENTO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for FUNCION resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for PROGRAMA resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
  ! reduce/reduce conflict for INICIO resolved using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    INICIO          reduce using rule 5 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA .)
    IDENT           shift and go to state 21
    PUNTOS_DOBLES   reduce using rule 119 (empty -> .)

  ! PROCEDIMIENTO   [ reduce using rule 119 (empty -> .) ]
  ! FUNCION         [ reduce using rule 119 (empty -> .) ]
  ! PROGRAMA        [ reduce using rule 119 (empty -> .) ]
  ! INICIO          [ reduce using rule 119 (empty -> .) ]

    gpoids                         shift and go to state 19
    gpovars                        shift and go to state 135
    empty                          shift and go to state 20

state 95

    (7) gpoids -> IDENT dimens COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 7 (gpoids -> IDENT dimens COMA gpoids .)


state 96

    (9) gpoids -> IDENT opasig COMA gpoids .

    PUNTOS_DOBLES   reduce using rule 9 (gpoids -> IDENT opasig COMA gpoids .)


state 97

    (12) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA . dimens
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (119) empty -> .

    CORCHETE_EMPIEZA shift and go to state 36
    COMA            reduce using rule 119 (empty -> .)
    PUNTOS_DOBLES   reduce using rule 119 (empty -> .)
    PAREN_TERMINA   reduce using rule 119 (empty -> .)

    dimens                         shift and go to state 136
    empty                          shift and go to state 137

state 98

    (23) grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 23 (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA grupoconst .)


state 99

    (24) grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .

    VARIABLES       reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROCEDIMIENTO   reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    FUNCION         reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)
    PROGRAMA        reduce using rule 24 (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA grupoconst .)


state 100

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN . DE PROGRAMA

    DE              shift and go to state 138


state 101

    (43) block -> estatuto PUNTO_COMA . block
    (43) block -> . estatuto PUNTO_COMA block
    (44) block -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    FIN             reduce using rule 119 (empty -> .)
    HASTA           reduce using rule 119 (empty -> .)
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    estatuto                       shift and go to state 61
    block                          shift and go to state 139
    empty                          shift and go to state 62
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    asigna                         shift and go to state 70
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 102

    (60) si -> SI PAREN_EMPIEZA . exprlog PAREN_TERMINA HACER bckesp sino
    (80) exprlog -> . opy o
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 141
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 103

    (65) desde -> DESDE EL . VALOR DE asigna HASTA expr bckesp

    VALOR           shift and go to state 147


state 104

    (66) repetir -> REPETIR block . HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    HASTA           shift and go to state 148


state 105

    (67) mientras -> MIENTRAS SE . CUMPLA QUE exprlog bckesp

    CUMPLA          shift and go to state 149


state 106

    (69) cuando -> CUANDO EL . VALOR DE IDENT INICIO gposea otro FIN

    VALOR           shift and go to state 150


state 107

    (100) termino -> IDENT . lfunc
    (101) termino -> IDENT . udim
    (109) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (78) udim -> . expr udim
    (79) udim -> . empty
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (119) empty -> .
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    IDENT           shift and go to state 151
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POTENCIA        reduce using rule 119 (empty -> .)
    MULTI           reduce using rule 119 (empty -> .)
    DIV             reduce using rule 119 (empty -> .)
    MOD             reduce using rule 119 (empty -> .)
    OP_ASIG         reduce using rule 119 (empty -> .)
    OP_REL          reduce using rule 119 (empty -> .)
    Y               reduce using rule 119 (empty -> .)
    O               reduce using rule 119 (empty -> .)
    PAREN_TERMINA   reduce using rule 119 (empty -> .)
    COMA            reduce using rule 119 (empty -> .)
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    HASTA           reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)
    LIMPIA          reduce using rule 119 (empty -> .)
    INTERRUMPE      reduce using rule 119 (empty -> .)
    CONTINUA        reduce using rule 119 (empty -> .)
    SI              reduce using rule 119 (empty -> .)
    DESDE           reduce using rule 119 (empty -> .)
    REPETIR         reduce using rule 119 (empty -> .)
    MIENTRAS        reduce using rule 119 (empty -> .)
    CUANDO          reduce using rule 119 (empty -> .)
    REGRESA         reduce using rule 119 (empty -> .)
    IMPRIME         reduce using rule 119 (empty -> .)
    IMPRIMENL       reduce using rule 119 (empty -> .)
    LEE             reduce using rule 119 (empty -> .)
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! MAS             [ reduce using rule 119 (empty -> .) ]
  ! MENOS           [ reduce using rule 119 (empty -> .) ]
  ! IDENT           [ reduce using rule 119 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 119 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 119 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 119 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 119 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 119 (empty -> .) ]
  ! FALSO           [ reduce using rule 119 (empty -> .) ]

    lfunc                          shift and go to state 152
    udim                           shift and go to state 153
    expr                           shift and go to state 110
    empty                          shift and go to state 111
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 108

    (68) asigna -> IDENT udim . OP_ASIG exprlog

    OP_ASIG         shift and go to state 154


state 109

    (108) lproc -> IDENT PAREN_EMPIEZA . uparams PAREN_TERMINA
    (102) termino -> PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (116) uparams -> . exprlog
    (117) uparams -> . exprlog COMA uparams
    (118) uparams -> . empty
    (80) exprlog -> . opy o
    (119) empty -> .
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    PAREN_TERMINA   reduce using rule 119 (empty -> .)
    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    uparams                        shift and go to state 155
    exprlog                        shift and go to state 156
    empty                          shift and go to state 157
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 110

    (78) udim -> expr . udim
    (78) udim -> . expr udim
    (79) udim -> . empty
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (119) empty -> .
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POTENCIA        reduce using rule 119 (empty -> .)
    MULTI           reduce using rule 119 (empty -> .)
    DIV             reduce using rule 119 (empty -> .)
    MOD             reduce using rule 119 (empty -> .)
    OP_ASIG         reduce using rule 119 (empty -> .)
    OP_REL          reduce using rule 119 (empty -> .)
    Y               reduce using rule 119 (empty -> .)
    O               reduce using rule 119 (empty -> .)
    PAREN_TERMINA   reduce using rule 119 (empty -> .)
    COMA            reduce using rule 119 (empty -> .)
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    HASTA           reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)
    LIMPIA          reduce using rule 119 (empty -> .)
    INTERRUMPE      reduce using rule 119 (empty -> .)
    CONTINUA        reduce using rule 119 (empty -> .)
    SI              reduce using rule 119 (empty -> .)
    DESDE           reduce using rule 119 (empty -> .)
    REPETIR         reduce using rule 119 (empty -> .)
    MIENTRAS        reduce using rule 119 (empty -> .)
    CUANDO          reduce using rule 119 (empty -> .)
    REGRESA         reduce using rule 119 (empty -> .)
    IMPRIME         reduce using rule 119 (empty -> .)
    IMPRIMENL       reduce using rule 119 (empty -> .)
    LEE             reduce using rule 119 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! MAS             [ reduce using rule 119 (empty -> .) ]
  ! MENOS           [ reduce using rule 119 (empty -> .) ]
  ! IDENT           [ reduce using rule 119 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 119 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 119 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 119 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 119 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 119 (empty -> .) ]
  ! FALSO           [ reduce using rule 119 (empty -> .) ]

    expr                           shift and go to state 110
    udim                           shift and go to state 158
    empty                          shift and go to state 111
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 111

    (79) udim -> empty .

    OP_ASIG         reduce using rule 79 (udim -> empty .)
    POTENCIA        reduce using rule 79 (udim -> empty .)
    MULTI           reduce using rule 79 (udim -> empty .)
    DIV             reduce using rule 79 (udim -> empty .)
    MOD             reduce using rule 79 (udim -> empty .)
    MAS             reduce using rule 79 (udim -> empty .)
    MENOS           reduce using rule 79 (udim -> empty .)
    IDENT           reduce using rule 79 (udim -> empty .)
    PAREN_EMPIEZA   reduce using rule 79 (udim -> empty .)
    CTE_ENTERA      reduce using rule 79 (udim -> empty .)
    CTE_REAL        reduce using rule 79 (udim -> empty .)
    CTE_ALFA        reduce using rule 79 (udim -> empty .)
    VERDADERO       reduce using rule 79 (udim -> empty .)
    FALSO           reduce using rule 79 (udim -> empty .)
    OP_REL          reduce using rule 79 (udim -> empty .)
    Y               reduce using rule 79 (udim -> empty .)
    O               reduce using rule 79 (udim -> empty .)
    PAREN_TERMINA   reduce using rule 79 (udim -> empty .)
    COMA            reduce using rule 79 (udim -> empty .)
    PUNTO_COMA      reduce using rule 79 (udim -> empty .)
    HASTA           reduce using rule 79 (udim -> empty .)
    INICIO          reduce using rule 79 (udim -> empty .)
    LIMPIA          reduce using rule 79 (udim -> empty .)
    INTERRUMPE      reduce using rule 79 (udim -> empty .)
    CONTINUA        reduce using rule 79 (udim -> empty .)
    SI              reduce using rule 79 (udim -> empty .)
    DESDE           reduce using rule 79 (udim -> empty .)
    REPETIR         reduce using rule 79 (udim -> empty .)
    MIENTRAS        reduce using rule 79 (udim -> empty .)
    CUANDO          reduce using rule 79 (udim -> empty .)
    REGRESA         reduce using rule 79 (udim -> empty .)
    IMPRIME         reduce using rule 79 (udim -> empty .)
    IMPRIMENL       reduce using rule 79 (udim -> empty .)
    LEE             reduce using rule 79 (udim -> empty .)


state 112

    (89) expr -> multi .

    MAS             reduce using rule 89 (expr -> multi .)
    MENOS           reduce using rule 89 (expr -> multi .)
    IDENT           reduce using rule 89 (expr -> multi .)
    PAREN_EMPIEZA   reduce using rule 89 (expr -> multi .)
    CTE_ENTERA      reduce using rule 89 (expr -> multi .)
    CTE_REAL        reduce using rule 89 (expr -> multi .)
    CTE_ALFA        reduce using rule 89 (expr -> multi .)
    VERDADERO       reduce using rule 89 (expr -> multi .)
    FALSO           reduce using rule 89 (expr -> multi .)
    OP_ASIG         reduce using rule 89 (expr -> multi .)
    OP_REL          reduce using rule 89 (expr -> multi .)
    Y               reduce using rule 89 (expr -> multi .)
    O               reduce using rule 89 (expr -> multi .)
    PAREN_TERMINA   reduce using rule 89 (expr -> multi .)
    POTENCIA        reduce using rule 89 (expr -> multi .)
    MULTI           reduce using rule 89 (expr -> multi .)
    DIV             reduce using rule 89 (expr -> multi .)
    MOD             reduce using rule 89 (expr -> multi .)
    COMA            reduce using rule 89 (expr -> multi .)
    PUNTO_COMA      reduce using rule 89 (expr -> multi .)
    HASTA           reduce using rule 89 (expr -> multi .)
    INICIO          reduce using rule 89 (expr -> multi .)
    LIMPIA          reduce using rule 89 (expr -> multi .)
    INTERRUMPE      reduce using rule 89 (expr -> multi .)
    CONTINUA        reduce using rule 89 (expr -> multi .)
    SI              reduce using rule 89 (expr -> multi .)
    DESDE           reduce using rule 89 (expr -> multi .)
    REPETIR         reduce using rule 89 (expr -> multi .)
    MIENTRAS        reduce using rule 89 (expr -> multi .)
    CUANDO          reduce using rule 89 (expr -> multi .)
    REGRESA         reduce using rule 89 (expr -> multi .)
    IMPRIME         reduce using rule 89 (expr -> multi .)
    IMPRIMENL       reduce using rule 89 (expr -> multi .)
    LEE             reduce using rule 89 (expr -> multi .)


state 113

    (90) expr -> MAS . expr
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    expr                           shift and go to state 159
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 114

    (91) expr -> MENOS . expr
    (99) signo -> MENOS . termino
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino

    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    expr                           shift and go to state 160
    termino                        shift and go to state 161
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116

state 115

    (92) multi -> expo .
    (93) multi -> expo . MULTI
    (94) multi -> expo . DIV
    (95) multi -> expo . MOD multi

  ! shift/reduce conflict for MULTI resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    MAS             reduce using rule 92 (multi -> expo .)
    MENOS           reduce using rule 92 (multi -> expo .)
    IDENT           reduce using rule 92 (multi -> expo .)
    PAREN_EMPIEZA   reduce using rule 92 (multi -> expo .)
    CTE_ENTERA      reduce using rule 92 (multi -> expo .)
    CTE_REAL        reduce using rule 92 (multi -> expo .)
    CTE_ALFA        reduce using rule 92 (multi -> expo .)
    VERDADERO       reduce using rule 92 (multi -> expo .)
    FALSO           reduce using rule 92 (multi -> expo .)
    OP_ASIG         reduce using rule 92 (multi -> expo .)
    OP_REL          reduce using rule 92 (multi -> expo .)
    Y               reduce using rule 92 (multi -> expo .)
    O               reduce using rule 92 (multi -> expo .)
    PAREN_TERMINA   reduce using rule 92 (multi -> expo .)
    POTENCIA        reduce using rule 92 (multi -> expo .)
    COMA            reduce using rule 92 (multi -> expo .)
    PUNTO_COMA      reduce using rule 92 (multi -> expo .)
    HASTA           reduce using rule 92 (multi -> expo .)
    INICIO          reduce using rule 92 (multi -> expo .)
    LIMPIA          reduce using rule 92 (multi -> expo .)
    INTERRUMPE      reduce using rule 92 (multi -> expo .)
    CONTINUA        reduce using rule 92 (multi -> expo .)
    SI              reduce using rule 92 (multi -> expo .)
    DESDE           reduce using rule 92 (multi -> expo .)
    REPETIR         reduce using rule 92 (multi -> expo .)
    MIENTRAS        reduce using rule 92 (multi -> expo .)
    CUANDO          reduce using rule 92 (multi -> expo .)
    REGRESA         reduce using rule 92 (multi -> expo .)
    IMPRIME         reduce using rule 92 (multi -> expo .)
    IMPRIMENL       reduce using rule 92 (multi -> expo .)
    LEE             reduce using rule 92 (multi -> expo .)
    MULTI           shift and go to state 162
    DIV             shift and go to state 163
    MOD             shift and go to state 164

  ! MULTI           [ reduce using rule 92 (multi -> expo .) ]
  ! DIV             [ reduce using rule 92 (multi -> expo .) ]
  ! MOD             [ reduce using rule 92 (multi -> expo .) ]


state 116

    (96) expo -> signo .
    (97) expo -> signo . POTENCIA expo

  ! shift/reduce conflict for POTENCIA resolved as shift
    MULTI           reduce using rule 96 (expo -> signo .)
    DIV             reduce using rule 96 (expo -> signo .)
    MOD             reduce using rule 96 (expo -> signo .)
    MAS             reduce using rule 96 (expo -> signo .)
    MENOS           reduce using rule 96 (expo -> signo .)
    IDENT           reduce using rule 96 (expo -> signo .)
    PAREN_EMPIEZA   reduce using rule 96 (expo -> signo .)
    CTE_ENTERA      reduce using rule 96 (expo -> signo .)
    CTE_REAL        reduce using rule 96 (expo -> signo .)
    CTE_ALFA        reduce using rule 96 (expo -> signo .)
    VERDADERO       reduce using rule 96 (expo -> signo .)
    FALSO           reduce using rule 96 (expo -> signo .)
    OP_ASIG         reduce using rule 96 (expo -> signo .)
    OP_REL          reduce using rule 96 (expo -> signo .)
    Y               reduce using rule 96 (expo -> signo .)
    O               reduce using rule 96 (expo -> signo .)
    PAREN_TERMINA   reduce using rule 96 (expo -> signo .)
    COMA            reduce using rule 96 (expo -> signo .)
    PUNTO_COMA      reduce using rule 96 (expo -> signo .)
    HASTA           reduce using rule 96 (expo -> signo .)
    INICIO          reduce using rule 96 (expo -> signo .)
    LIMPIA          reduce using rule 96 (expo -> signo .)
    INTERRUMPE      reduce using rule 96 (expo -> signo .)
    CONTINUA        reduce using rule 96 (expo -> signo .)
    SI              reduce using rule 96 (expo -> signo .)
    DESDE           reduce using rule 96 (expo -> signo .)
    REPETIR         reduce using rule 96 (expo -> signo .)
    MIENTRAS        reduce using rule 96 (expo -> signo .)
    CUANDO          reduce using rule 96 (expo -> signo .)
    REGRESA         reduce using rule 96 (expo -> signo .)
    IMPRIME         reduce using rule 96 (expo -> signo .)
    IMPRIMENL       reduce using rule 96 (expo -> signo .)
    LEE             reduce using rule 96 (expo -> signo .)
    POTENCIA        shift and go to state 165

  ! POTENCIA        [ reduce using rule 96 (expo -> signo .) ]


state 117

    (98) signo -> termino .

    POTENCIA        reduce using rule 98 (signo -> termino .)
    MULTI           reduce using rule 98 (signo -> termino .)
    DIV             reduce using rule 98 (signo -> termino .)
    MOD             reduce using rule 98 (signo -> termino .)
    MAS             reduce using rule 98 (signo -> termino .)
    MENOS           reduce using rule 98 (signo -> termino .)
    IDENT           reduce using rule 98 (signo -> termino .)
    PAREN_EMPIEZA   reduce using rule 98 (signo -> termino .)
    CTE_ENTERA      reduce using rule 98 (signo -> termino .)
    CTE_REAL        reduce using rule 98 (signo -> termino .)
    CTE_ALFA        reduce using rule 98 (signo -> termino .)
    VERDADERO       reduce using rule 98 (signo -> termino .)
    FALSO           reduce using rule 98 (signo -> termino .)
    OP_ASIG         reduce using rule 98 (signo -> termino .)
    OP_REL          reduce using rule 98 (signo -> termino .)
    Y               reduce using rule 98 (signo -> termino .)
    O               reduce using rule 98 (signo -> termino .)
    PAREN_TERMINA   reduce using rule 98 (signo -> termino .)
    COMA            reduce using rule 98 (signo -> termino .)
    PUNTO_COMA      reduce using rule 98 (signo -> termino .)
    HASTA           reduce using rule 98 (signo -> termino .)
    INICIO          reduce using rule 98 (signo -> termino .)
    LIMPIA          reduce using rule 98 (signo -> termino .)
    INTERRUMPE      reduce using rule 98 (signo -> termino .)
    CONTINUA        reduce using rule 98 (signo -> termino .)
    SI              reduce using rule 98 (signo -> termino .)
    DESDE           reduce using rule 98 (signo -> termino .)
    REPETIR         reduce using rule 98 (signo -> termino .)
    MIENTRAS        reduce using rule 98 (signo -> termino .)
    CUANDO          reduce using rule 98 (signo -> termino .)
    REGRESA         reduce using rule 98 (signo -> termino .)
    IMPRIME         reduce using rule 98 (signo -> termino .)
    IMPRIMENL       reduce using rule 98 (signo -> termino .)
    LEE             reduce using rule 98 (signo -> termino .)


state 118

    (103) termino -> CTE_ENTERA .

    POTENCIA        reduce using rule 103 (termino -> CTE_ENTERA .)
    MULTI           reduce using rule 103 (termino -> CTE_ENTERA .)
    DIV             reduce using rule 103 (termino -> CTE_ENTERA .)
    MOD             reduce using rule 103 (termino -> CTE_ENTERA .)
    MAS             reduce using rule 103 (termino -> CTE_ENTERA .)
    MENOS           reduce using rule 103 (termino -> CTE_ENTERA .)
    IDENT           reduce using rule 103 (termino -> CTE_ENTERA .)
    PAREN_EMPIEZA   reduce using rule 103 (termino -> CTE_ENTERA .)
    CTE_ENTERA      reduce using rule 103 (termino -> CTE_ENTERA .)
    CTE_REAL        reduce using rule 103 (termino -> CTE_ENTERA .)
    CTE_ALFA        reduce using rule 103 (termino -> CTE_ENTERA .)
    VERDADERO       reduce using rule 103 (termino -> CTE_ENTERA .)
    FALSO           reduce using rule 103 (termino -> CTE_ENTERA .)
    OP_ASIG         reduce using rule 103 (termino -> CTE_ENTERA .)
    OP_REL          reduce using rule 103 (termino -> CTE_ENTERA .)
    Y               reduce using rule 103 (termino -> CTE_ENTERA .)
    O               reduce using rule 103 (termino -> CTE_ENTERA .)
    PAREN_TERMINA   reduce using rule 103 (termino -> CTE_ENTERA .)
    COMA            reduce using rule 103 (termino -> CTE_ENTERA .)
    PUNTO_COMA      reduce using rule 103 (termino -> CTE_ENTERA .)
    HASTA           reduce using rule 103 (termino -> CTE_ENTERA .)
    INICIO          reduce using rule 103 (termino -> CTE_ENTERA .)
    LIMPIA          reduce using rule 103 (termino -> CTE_ENTERA .)
    INTERRUMPE      reduce using rule 103 (termino -> CTE_ENTERA .)
    CONTINUA        reduce using rule 103 (termino -> CTE_ENTERA .)
    SI              reduce using rule 103 (termino -> CTE_ENTERA .)
    DESDE           reduce using rule 103 (termino -> CTE_ENTERA .)
    REPETIR         reduce using rule 103 (termino -> CTE_ENTERA .)
    MIENTRAS        reduce using rule 103 (termino -> CTE_ENTERA .)
    CUANDO          reduce using rule 103 (termino -> CTE_ENTERA .)
    REGRESA         reduce using rule 103 (termino -> CTE_ENTERA .)
    IMPRIME         reduce using rule 103 (termino -> CTE_ENTERA .)
    IMPRIMENL       reduce using rule 103 (termino -> CTE_ENTERA .)
    LEE             reduce using rule 103 (termino -> CTE_ENTERA .)


state 119

    (104) termino -> CTE_REAL .

    POTENCIA        reduce using rule 104 (termino -> CTE_REAL .)
    MULTI           reduce using rule 104 (termino -> CTE_REAL .)
    DIV             reduce using rule 104 (termino -> CTE_REAL .)
    MOD             reduce using rule 104 (termino -> CTE_REAL .)
    MAS             reduce using rule 104 (termino -> CTE_REAL .)
    MENOS           reduce using rule 104 (termino -> CTE_REAL .)
    IDENT           reduce using rule 104 (termino -> CTE_REAL .)
    PAREN_EMPIEZA   reduce using rule 104 (termino -> CTE_REAL .)
    CTE_ENTERA      reduce using rule 104 (termino -> CTE_REAL .)
    CTE_REAL        reduce using rule 104 (termino -> CTE_REAL .)
    CTE_ALFA        reduce using rule 104 (termino -> CTE_REAL .)
    VERDADERO       reduce using rule 104 (termino -> CTE_REAL .)
    FALSO           reduce using rule 104 (termino -> CTE_REAL .)
    OP_ASIG         reduce using rule 104 (termino -> CTE_REAL .)
    OP_REL          reduce using rule 104 (termino -> CTE_REAL .)
    Y               reduce using rule 104 (termino -> CTE_REAL .)
    O               reduce using rule 104 (termino -> CTE_REAL .)
    PAREN_TERMINA   reduce using rule 104 (termino -> CTE_REAL .)
    COMA            reduce using rule 104 (termino -> CTE_REAL .)
    PUNTO_COMA      reduce using rule 104 (termino -> CTE_REAL .)
    HASTA           reduce using rule 104 (termino -> CTE_REAL .)
    INICIO          reduce using rule 104 (termino -> CTE_REAL .)
    LIMPIA          reduce using rule 104 (termino -> CTE_REAL .)
    INTERRUMPE      reduce using rule 104 (termino -> CTE_REAL .)
    CONTINUA        reduce using rule 104 (termino -> CTE_REAL .)
    SI              reduce using rule 104 (termino -> CTE_REAL .)
    DESDE           reduce using rule 104 (termino -> CTE_REAL .)
    REPETIR         reduce using rule 104 (termino -> CTE_REAL .)
    MIENTRAS        reduce using rule 104 (termino -> CTE_REAL .)
    CUANDO          reduce using rule 104 (termino -> CTE_REAL .)
    REGRESA         reduce using rule 104 (termino -> CTE_REAL .)
    IMPRIME         reduce using rule 104 (termino -> CTE_REAL .)
    IMPRIMENL       reduce using rule 104 (termino -> CTE_REAL .)
    LEE             reduce using rule 104 (termino -> CTE_REAL .)


state 120

    (105) termino -> CTE_ALFA .

    POTENCIA        reduce using rule 105 (termino -> CTE_ALFA .)
    MULTI           reduce using rule 105 (termino -> CTE_ALFA .)
    DIV             reduce using rule 105 (termino -> CTE_ALFA .)
    MOD             reduce using rule 105 (termino -> CTE_ALFA .)
    MAS             reduce using rule 105 (termino -> CTE_ALFA .)
    MENOS           reduce using rule 105 (termino -> CTE_ALFA .)
    IDENT           reduce using rule 105 (termino -> CTE_ALFA .)
    PAREN_EMPIEZA   reduce using rule 105 (termino -> CTE_ALFA .)
    CTE_ENTERA      reduce using rule 105 (termino -> CTE_ALFA .)
    CTE_REAL        reduce using rule 105 (termino -> CTE_ALFA .)
    CTE_ALFA        reduce using rule 105 (termino -> CTE_ALFA .)
    VERDADERO       reduce using rule 105 (termino -> CTE_ALFA .)
    FALSO           reduce using rule 105 (termino -> CTE_ALFA .)
    OP_ASIG         reduce using rule 105 (termino -> CTE_ALFA .)
    OP_REL          reduce using rule 105 (termino -> CTE_ALFA .)
    Y               reduce using rule 105 (termino -> CTE_ALFA .)
    O               reduce using rule 105 (termino -> CTE_ALFA .)
    PAREN_TERMINA   reduce using rule 105 (termino -> CTE_ALFA .)
    COMA            reduce using rule 105 (termino -> CTE_ALFA .)
    PUNTO_COMA      reduce using rule 105 (termino -> CTE_ALFA .)
    HASTA           reduce using rule 105 (termino -> CTE_ALFA .)
    INICIO          reduce using rule 105 (termino -> CTE_ALFA .)
    LIMPIA          reduce using rule 105 (termino -> CTE_ALFA .)
    INTERRUMPE      reduce using rule 105 (termino -> CTE_ALFA .)
    CONTINUA        reduce using rule 105 (termino -> CTE_ALFA .)
    SI              reduce using rule 105 (termino -> CTE_ALFA .)
    DESDE           reduce using rule 105 (termino -> CTE_ALFA .)
    REPETIR         reduce using rule 105 (termino -> CTE_ALFA .)
    MIENTRAS        reduce using rule 105 (termino -> CTE_ALFA .)
    CUANDO          reduce using rule 105 (termino -> CTE_ALFA .)
    REGRESA         reduce using rule 105 (termino -> CTE_ALFA .)
    IMPRIME         reduce using rule 105 (termino -> CTE_ALFA .)
    IMPRIMENL       reduce using rule 105 (termino -> CTE_ALFA .)
    LEE             reduce using rule 105 (termino -> CTE_ALFA .)


state 121

    (106) termino -> VERDADERO .

    POTENCIA        reduce using rule 106 (termino -> VERDADERO .)
    MULTI           reduce using rule 106 (termino -> VERDADERO .)
    DIV             reduce using rule 106 (termino -> VERDADERO .)
    MOD             reduce using rule 106 (termino -> VERDADERO .)
    MAS             reduce using rule 106 (termino -> VERDADERO .)
    MENOS           reduce using rule 106 (termino -> VERDADERO .)
    IDENT           reduce using rule 106 (termino -> VERDADERO .)
    PAREN_EMPIEZA   reduce using rule 106 (termino -> VERDADERO .)
    CTE_ENTERA      reduce using rule 106 (termino -> VERDADERO .)
    CTE_REAL        reduce using rule 106 (termino -> VERDADERO .)
    CTE_ALFA        reduce using rule 106 (termino -> VERDADERO .)
    VERDADERO       reduce using rule 106 (termino -> VERDADERO .)
    FALSO           reduce using rule 106 (termino -> VERDADERO .)
    OP_ASIG         reduce using rule 106 (termino -> VERDADERO .)
    OP_REL          reduce using rule 106 (termino -> VERDADERO .)
    Y               reduce using rule 106 (termino -> VERDADERO .)
    O               reduce using rule 106 (termino -> VERDADERO .)
    PAREN_TERMINA   reduce using rule 106 (termino -> VERDADERO .)
    COMA            reduce using rule 106 (termino -> VERDADERO .)
    PUNTO_COMA      reduce using rule 106 (termino -> VERDADERO .)
    HASTA           reduce using rule 106 (termino -> VERDADERO .)
    INICIO          reduce using rule 106 (termino -> VERDADERO .)
    LIMPIA          reduce using rule 106 (termino -> VERDADERO .)
    INTERRUMPE      reduce using rule 106 (termino -> VERDADERO .)
    CONTINUA        reduce using rule 106 (termino -> VERDADERO .)
    SI              reduce using rule 106 (termino -> VERDADERO .)
    DESDE           reduce using rule 106 (termino -> VERDADERO .)
    REPETIR         reduce using rule 106 (termino -> VERDADERO .)
    MIENTRAS        reduce using rule 106 (termino -> VERDADERO .)
    CUANDO          reduce using rule 106 (termino -> VERDADERO .)
    REGRESA         reduce using rule 106 (termino -> VERDADERO .)
    IMPRIME         reduce using rule 106 (termino -> VERDADERO .)
    IMPRIMENL       reduce using rule 106 (termino -> VERDADERO .)
    LEE             reduce using rule 106 (termino -> VERDADERO .)


state 122

    (107) termino -> FALSO .

    POTENCIA        reduce using rule 107 (termino -> FALSO .)
    MULTI           reduce using rule 107 (termino -> FALSO .)
    DIV             reduce using rule 107 (termino -> FALSO .)
    MOD             reduce using rule 107 (termino -> FALSO .)
    MAS             reduce using rule 107 (termino -> FALSO .)
    MENOS           reduce using rule 107 (termino -> FALSO .)
    IDENT           reduce using rule 107 (termino -> FALSO .)
    PAREN_EMPIEZA   reduce using rule 107 (termino -> FALSO .)
    CTE_ENTERA      reduce using rule 107 (termino -> FALSO .)
    CTE_REAL        reduce using rule 107 (termino -> FALSO .)
    CTE_ALFA        reduce using rule 107 (termino -> FALSO .)
    VERDADERO       reduce using rule 107 (termino -> FALSO .)
    FALSO           reduce using rule 107 (termino -> FALSO .)
    OP_ASIG         reduce using rule 107 (termino -> FALSO .)
    OP_REL          reduce using rule 107 (termino -> FALSO .)
    Y               reduce using rule 107 (termino -> FALSO .)
    O               reduce using rule 107 (termino -> FALSO .)
    PAREN_TERMINA   reduce using rule 107 (termino -> FALSO .)
    COMA            reduce using rule 107 (termino -> FALSO .)
    PUNTO_COMA      reduce using rule 107 (termino -> FALSO .)
    HASTA           reduce using rule 107 (termino -> FALSO .)
    INICIO          reduce using rule 107 (termino -> FALSO .)
    LIMPIA          reduce using rule 107 (termino -> FALSO .)
    INTERRUMPE      reduce using rule 107 (termino -> FALSO .)
    CONTINUA        reduce using rule 107 (termino -> FALSO .)
    SI              reduce using rule 107 (termino -> FALSO .)
    DESDE           reduce using rule 107 (termino -> FALSO .)
    REPETIR         reduce using rule 107 (termino -> FALSO .)
    MIENTRAS        reduce using rule 107 (termino -> FALSO .)
    CUANDO          reduce using rule 107 (termino -> FALSO .)
    REGRESA         reduce using rule 107 (termino -> FALSO .)
    IMPRIME         reduce using rule 107 (termino -> FALSO .)
    IMPRIMENL       reduce using rule 107 (termino -> FALSO .)
    LEE             reduce using rule 107 (termino -> FALSO .)


state 123

    (77) regresa -> REGRESA PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (80) exprlog -> . opy o
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 166
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 124

    (110) imprime -> IMPRIME PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (114) gpoexp -> . exprlog
    (115) gpoexp -> . exprlog COMA gpoexp
    (80) exprlog -> . opy o
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    gpoexp                         shift and go to state 167
    exprlog                        shift and go to state 168
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 125

    (111) imprimenl -> IMPRIMENL PAREN_EMPIEZA . gpoexp PAREN_TERMINA
    (114) gpoexp -> . exprlog
    (115) gpoexp -> . exprlog COMA gpoexp
    (80) exprlog -> . opy o
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    gpoexp                         shift and go to state 169
    exprlog                        shift and go to state 168
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 126

    (112) lee -> LEE PAREN_EMPIEZA . IDENT PAREN_TERMINA
    (113) lee -> LEE PAREN_EMPIEZA . IDENT dimens PAREN_TERMINA

    IDENT           shift and go to state 170


state 127

    (41) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params . PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    PAREN_TERMINA   shift and go to state 171


state 128

    (35) gpopars -> IDENT maspars .

    PUNTOS_DOBLES   reduce using rule 35 (gpopars -> IDENT maspars .)


state 129

    (36) maspars -> COMA . gpopars
    (35) gpopars -> . IDENT maspars

    IDENT           shift and go to state 88

    gpopars                        shift and go to state 172

state 130

    (37) maspars -> empty .

    PUNTOS_DOBLES   reduce using rule 37 (maspars -> empty .)


state 131

    (29) protfunc -> funcion IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 173


state 132

    (31) params -> gpopars PUNTOS_DOBLES . TIPO otrospars

    TIPO            shift and go to state 174


state 133

    (30) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTO_COMA

    PUNTO_COMA      shift and go to state 175


state 134

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA . PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    PUNTOS_DOBLES   shift and go to state 176


state 135

    (4) gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .

    PROCEDIMIENTO   reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    FUNCION         reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    PROGRAMA        reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)
    INICIO          reduce using rule 4 (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA gpovars .)


state 136

    (12) dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .

    COMA            reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PUNTOS_DOBLES   reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)
    PAREN_TERMINA   reduce using rule 12 (dimens -> CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens .)


state 137

    (13) dimens -> empty .

    COMA            reduce using rule 13 (dimens -> empty .)
    PUNTOS_DOBLES   reduce using rule 13 (dimens -> empty .)
    PAREN_TERMINA   reduce using rule 13 (dimens -> empty .)


state 138

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE . PROGRAMA

    PROGRAMA        shift and go to state 177


state 139

    (43) block -> estatuto PUNTO_COMA block .

    FIN             reduce using rule 43 (block -> estatuto PUNTO_COMA block .)
    HASTA           reduce using rule 43 (block -> estatuto PUNTO_COMA block .)


state 140

    (102) termino -> PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (80) exprlog -> . opy o
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 178
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 141

    (60) si -> SI PAREN_EMPIEZA exprlog . PAREN_TERMINA HACER bckesp sino

    PAREN_TERMINA   shift and go to state 179


state 142

    (80) exprlog -> opy . o
    (81) o -> . O exprlog
    (82) o -> . empty
    (119) empty -> .

    O               shift and go to state 181
    PAREN_TERMINA   reduce using rule 119 (empty -> .)
    COMA            reduce using rule 119 (empty -> .)
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    HASTA           reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)
    LIMPIA          reduce using rule 119 (empty -> .)
    INTERRUMPE      reduce using rule 119 (empty -> .)
    CONTINUA        reduce using rule 119 (empty -> .)
    SI              reduce using rule 119 (empty -> .)
    DESDE           reduce using rule 119 (empty -> .)
    REPETIR         reduce using rule 119 (empty -> .)
    MIENTRAS        reduce using rule 119 (empty -> .)
    CUANDO          reduce using rule 119 (empty -> .)
    REGRESA         reduce using rule 119 (empty -> .)
    IDENT           reduce using rule 119 (empty -> .)
    IMPRIME         reduce using rule 119 (empty -> .)
    IMPRIMENL       reduce using rule 119 (empty -> .)
    LEE             reduce using rule 119 (empty -> .)

    o                              shift and go to state 180
    empty                          shift and go to state 182

state 143

    (83) opy -> opno .
    (84) opy -> opno . Y opy

    O               reduce using rule 83 (opy -> opno .)
    PAREN_TERMINA   reduce using rule 83 (opy -> opno .)
    COMA            reduce using rule 83 (opy -> opno .)
    PUNTO_COMA      reduce using rule 83 (opy -> opno .)
    HASTA           reduce using rule 83 (opy -> opno .)
    INICIO          reduce using rule 83 (opy -> opno .)
    LIMPIA          reduce using rule 83 (opy -> opno .)
    INTERRUMPE      reduce using rule 83 (opy -> opno .)
    CONTINUA        reduce using rule 83 (opy -> opno .)
    SI              reduce using rule 83 (opy -> opno .)
    DESDE           reduce using rule 83 (opy -> opno .)
    REPETIR         reduce using rule 83 (opy -> opno .)
    MIENTRAS        reduce using rule 83 (opy -> opno .)
    CUANDO          reduce using rule 83 (opy -> opno .)
    REGRESA         reduce using rule 83 (opy -> opno .)
    IDENT           reduce using rule 83 (opy -> opno .)
    IMPRIME         reduce using rule 83 (opy -> opno .)
    IMPRIMENL       reduce using rule 83 (opy -> opno .)
    LEE             reduce using rule 83 (opy -> opno .)
    Y               shift and go to state 183


state 144

    (85) opno -> oprel .

    Y               reduce using rule 85 (opno -> oprel .)
    O               reduce using rule 85 (opno -> oprel .)
    PAREN_TERMINA   reduce using rule 85 (opno -> oprel .)
    COMA            reduce using rule 85 (opno -> oprel .)
    PUNTO_COMA      reduce using rule 85 (opno -> oprel .)
    HASTA           reduce using rule 85 (opno -> oprel .)
    INICIO          reduce using rule 85 (opno -> oprel .)
    LIMPIA          reduce using rule 85 (opno -> oprel .)
    INTERRUMPE      reduce using rule 85 (opno -> oprel .)
    CONTINUA        reduce using rule 85 (opno -> oprel .)
    SI              reduce using rule 85 (opno -> oprel .)
    DESDE           reduce using rule 85 (opno -> oprel .)
    REPETIR         reduce using rule 85 (opno -> oprel .)
    MIENTRAS        reduce using rule 85 (opno -> oprel .)
    CUANDO          reduce using rule 85 (opno -> oprel .)
    REGRESA         reduce using rule 85 (opno -> oprel .)
    IDENT           reduce using rule 85 (opno -> oprel .)
    IMPRIME         reduce using rule 85 (opno -> oprel .)
    IMPRIMENL       reduce using rule 85 (opno -> oprel .)
    LEE             reduce using rule 85 (opno -> oprel .)


state 145

    (86) opno -> NO . oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    oprel                          shift and go to state 184
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 146

    (87) oprel -> expr .
    (88) oprel -> expr . OP_REL oprel

    Y               reduce using rule 87 (oprel -> expr .)
    O               reduce using rule 87 (oprel -> expr .)
    PAREN_TERMINA   reduce using rule 87 (oprel -> expr .)
    COMA            reduce using rule 87 (oprel -> expr .)
    PUNTO_COMA      reduce using rule 87 (oprel -> expr .)
    HASTA           reduce using rule 87 (oprel -> expr .)
    INICIO          reduce using rule 87 (oprel -> expr .)
    LIMPIA          reduce using rule 87 (oprel -> expr .)
    INTERRUMPE      reduce using rule 87 (oprel -> expr .)
    CONTINUA        reduce using rule 87 (oprel -> expr .)
    SI              reduce using rule 87 (oprel -> expr .)
    DESDE           reduce using rule 87 (oprel -> expr .)
    REPETIR         reduce using rule 87 (oprel -> expr .)
    MIENTRAS        reduce using rule 87 (oprel -> expr .)
    CUANDO          reduce using rule 87 (oprel -> expr .)
    REGRESA         reduce using rule 87 (oprel -> expr .)
    IDENT           reduce using rule 87 (oprel -> expr .)
    IMPRIME         reduce using rule 87 (oprel -> expr .)
    IMPRIMENL       reduce using rule 87 (oprel -> expr .)
    LEE             reduce using rule 87 (oprel -> expr .)
    OP_REL          shift and go to state 185


state 147

    (65) desde -> DESDE EL VALOR . DE asigna HASTA expr bckesp

    DE              shift and go to state 186


state 148

    (66) repetir -> REPETIR block HASTA . QUE PAREN_EMPIEZA exprlog PAREN_TERMINA

    QUE             shift and go to state 187


state 149

    (67) mientras -> MIENTRAS SE CUMPLA . QUE exprlog bckesp

    QUE             shift and go to state 188


state 150

    (69) cuando -> CUANDO EL VALOR . DE IDENT INICIO gposea otro FIN

    DE              shift and go to state 189


state 151

    (109) lfunc -> IDENT . PAREN_EMPIEZA uparams PAREN_TERMINA
    (100) termino -> IDENT . lfunc
    (101) termino -> IDENT . udim
    (109) lfunc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (78) udim -> . expr udim
    (79) udim -> . empty
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (119) empty -> .
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for PAREN_EMPIEZA resolved as shift
  ! shift/reduce conflict for CTE_ENTERA resolved as shift
  ! shift/reduce conflict for CTE_REAL resolved as shift
  ! shift/reduce conflict for CTE_ALFA resolved as shift
  ! shift/reduce conflict for VERDADERO resolved as shift
  ! shift/reduce conflict for FALSO resolved as shift
    PAREN_EMPIEZA   shift and go to state 190
    IDENT           shift and go to state 151
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    POTENCIA        reduce using rule 119 (empty -> .)
    MULTI           reduce using rule 119 (empty -> .)
    DIV             reduce using rule 119 (empty -> .)
    MOD             reduce using rule 119 (empty -> .)
    OP_ASIG         reduce using rule 119 (empty -> .)
    OP_REL          reduce using rule 119 (empty -> .)
    Y               reduce using rule 119 (empty -> .)
    O               reduce using rule 119 (empty -> .)
    PAREN_TERMINA   reduce using rule 119 (empty -> .)
    COMA            reduce using rule 119 (empty -> .)
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    HASTA           reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)
    LIMPIA          reduce using rule 119 (empty -> .)
    INTERRUMPE      reduce using rule 119 (empty -> .)
    CONTINUA        reduce using rule 119 (empty -> .)
    SI              reduce using rule 119 (empty -> .)
    DESDE           reduce using rule 119 (empty -> .)
    REPETIR         reduce using rule 119 (empty -> .)
    MIENTRAS        reduce using rule 119 (empty -> .)
    CUANDO          reduce using rule 119 (empty -> .)
    REGRESA         reduce using rule 119 (empty -> .)
    IMPRIME         reduce using rule 119 (empty -> .)
    IMPRIMENL       reduce using rule 119 (empty -> .)
    LEE             reduce using rule 119 (empty -> .)
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

  ! MAS             [ reduce using rule 119 (empty -> .) ]
  ! MENOS           [ reduce using rule 119 (empty -> .) ]
  ! IDENT           [ reduce using rule 119 (empty -> .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 119 (empty -> .) ]
  ! CTE_ENTERA      [ reduce using rule 119 (empty -> .) ]
  ! CTE_REAL        [ reduce using rule 119 (empty -> .) ]
  ! CTE_ALFA        [ reduce using rule 119 (empty -> .) ]
  ! VERDADERO       [ reduce using rule 119 (empty -> .) ]
  ! FALSO           [ reduce using rule 119 (empty -> .) ]

    lfunc                          shift and go to state 152
    udim                           shift and go to state 153
    expr                           shift and go to state 110
    empty                          shift and go to state 111
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 152

    (100) termino -> IDENT lfunc .

    POTENCIA        reduce using rule 100 (termino -> IDENT lfunc .)
    MULTI           reduce using rule 100 (termino -> IDENT lfunc .)
    DIV             reduce using rule 100 (termino -> IDENT lfunc .)
    MOD             reduce using rule 100 (termino -> IDENT lfunc .)
    MAS             reduce using rule 100 (termino -> IDENT lfunc .)
    MENOS           reduce using rule 100 (termino -> IDENT lfunc .)
    IDENT           reduce using rule 100 (termino -> IDENT lfunc .)
    PAREN_EMPIEZA   reduce using rule 100 (termino -> IDENT lfunc .)
    CTE_ENTERA      reduce using rule 100 (termino -> IDENT lfunc .)
    CTE_REAL        reduce using rule 100 (termino -> IDENT lfunc .)
    CTE_ALFA        reduce using rule 100 (termino -> IDENT lfunc .)
    VERDADERO       reduce using rule 100 (termino -> IDENT lfunc .)
    FALSO           reduce using rule 100 (termino -> IDENT lfunc .)
    OP_ASIG         reduce using rule 100 (termino -> IDENT lfunc .)
    OP_REL          reduce using rule 100 (termino -> IDENT lfunc .)
    Y               reduce using rule 100 (termino -> IDENT lfunc .)
    O               reduce using rule 100 (termino -> IDENT lfunc .)
    PAREN_TERMINA   reduce using rule 100 (termino -> IDENT lfunc .)
    COMA            reduce using rule 100 (termino -> IDENT lfunc .)
    PUNTO_COMA      reduce using rule 100 (termino -> IDENT lfunc .)
    HASTA           reduce using rule 100 (termino -> IDENT lfunc .)
    INICIO          reduce using rule 100 (termino -> IDENT lfunc .)
    LIMPIA          reduce using rule 100 (termino -> IDENT lfunc .)
    INTERRUMPE      reduce using rule 100 (termino -> IDENT lfunc .)
    CONTINUA        reduce using rule 100 (termino -> IDENT lfunc .)
    SI              reduce using rule 100 (termino -> IDENT lfunc .)
    DESDE           reduce using rule 100 (termino -> IDENT lfunc .)
    REPETIR         reduce using rule 100 (termino -> IDENT lfunc .)
    MIENTRAS        reduce using rule 100 (termino -> IDENT lfunc .)
    CUANDO          reduce using rule 100 (termino -> IDENT lfunc .)
    REGRESA         reduce using rule 100 (termino -> IDENT lfunc .)
    IMPRIME         reduce using rule 100 (termino -> IDENT lfunc .)
    IMPRIMENL       reduce using rule 100 (termino -> IDENT lfunc .)
    LEE             reduce using rule 100 (termino -> IDENT lfunc .)


state 153

    (101) termino -> IDENT udim .

    POTENCIA        reduce using rule 101 (termino -> IDENT udim .)
    MULTI           reduce using rule 101 (termino -> IDENT udim .)
    DIV             reduce using rule 101 (termino -> IDENT udim .)
    MOD             reduce using rule 101 (termino -> IDENT udim .)
    MAS             reduce using rule 101 (termino -> IDENT udim .)
    MENOS           reduce using rule 101 (termino -> IDENT udim .)
    IDENT           reduce using rule 101 (termino -> IDENT udim .)
    PAREN_EMPIEZA   reduce using rule 101 (termino -> IDENT udim .)
    CTE_ENTERA      reduce using rule 101 (termino -> IDENT udim .)
    CTE_REAL        reduce using rule 101 (termino -> IDENT udim .)
    CTE_ALFA        reduce using rule 101 (termino -> IDENT udim .)
    VERDADERO       reduce using rule 101 (termino -> IDENT udim .)
    FALSO           reduce using rule 101 (termino -> IDENT udim .)
    OP_ASIG         reduce using rule 101 (termino -> IDENT udim .)
    OP_REL          reduce using rule 101 (termino -> IDENT udim .)
    Y               reduce using rule 101 (termino -> IDENT udim .)
    O               reduce using rule 101 (termino -> IDENT udim .)
    PAREN_TERMINA   reduce using rule 101 (termino -> IDENT udim .)
    COMA            reduce using rule 101 (termino -> IDENT udim .)
    PUNTO_COMA      reduce using rule 101 (termino -> IDENT udim .)
    HASTA           reduce using rule 101 (termino -> IDENT udim .)
    INICIO          reduce using rule 101 (termino -> IDENT udim .)
    LIMPIA          reduce using rule 101 (termino -> IDENT udim .)
    INTERRUMPE      reduce using rule 101 (termino -> IDENT udim .)
    CONTINUA        reduce using rule 101 (termino -> IDENT udim .)
    SI              reduce using rule 101 (termino -> IDENT udim .)
    DESDE           reduce using rule 101 (termino -> IDENT udim .)
    REPETIR         reduce using rule 101 (termino -> IDENT udim .)
    MIENTRAS        reduce using rule 101 (termino -> IDENT udim .)
    CUANDO          reduce using rule 101 (termino -> IDENT udim .)
    REGRESA         reduce using rule 101 (termino -> IDENT udim .)
    IMPRIME         reduce using rule 101 (termino -> IDENT udim .)
    IMPRIMENL       reduce using rule 101 (termino -> IDENT udim .)
    LEE             reduce using rule 101 (termino -> IDENT udim .)


state 154

    (68) asigna -> IDENT udim OP_ASIG . exprlog
    (80) exprlog -> . opy o
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 191
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 155

    (108) lproc -> IDENT PAREN_EMPIEZA uparams . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 192


state 156

    (102) termino -> PAREN_EMPIEZA exprlog . PAREN_TERMINA
    (116) uparams -> exprlog .
    (117) uparams -> exprlog . COMA uparams

  ! shift/reduce conflict for PAREN_TERMINA resolved as shift
    PAREN_TERMINA   shift and go to state 193
    COMA            shift and go to state 194

  ! PAREN_TERMINA   [ reduce using rule 116 (uparams -> exprlog .) ]


state 157

    (118) uparams -> empty .

    PAREN_TERMINA   reduce using rule 118 (uparams -> empty .)


state 158

    (78) udim -> expr udim .

    OP_ASIG         reduce using rule 78 (udim -> expr udim .)
    POTENCIA        reduce using rule 78 (udim -> expr udim .)
    MULTI           reduce using rule 78 (udim -> expr udim .)
    DIV             reduce using rule 78 (udim -> expr udim .)
    MOD             reduce using rule 78 (udim -> expr udim .)
    MAS             reduce using rule 78 (udim -> expr udim .)
    MENOS           reduce using rule 78 (udim -> expr udim .)
    IDENT           reduce using rule 78 (udim -> expr udim .)
    PAREN_EMPIEZA   reduce using rule 78 (udim -> expr udim .)
    CTE_ENTERA      reduce using rule 78 (udim -> expr udim .)
    CTE_REAL        reduce using rule 78 (udim -> expr udim .)
    CTE_ALFA        reduce using rule 78 (udim -> expr udim .)
    VERDADERO       reduce using rule 78 (udim -> expr udim .)
    FALSO           reduce using rule 78 (udim -> expr udim .)
    OP_REL          reduce using rule 78 (udim -> expr udim .)
    Y               reduce using rule 78 (udim -> expr udim .)
    O               reduce using rule 78 (udim -> expr udim .)
    PAREN_TERMINA   reduce using rule 78 (udim -> expr udim .)
    COMA            reduce using rule 78 (udim -> expr udim .)
    PUNTO_COMA      reduce using rule 78 (udim -> expr udim .)
    HASTA           reduce using rule 78 (udim -> expr udim .)
    INICIO          reduce using rule 78 (udim -> expr udim .)
    LIMPIA          reduce using rule 78 (udim -> expr udim .)
    INTERRUMPE      reduce using rule 78 (udim -> expr udim .)
    CONTINUA        reduce using rule 78 (udim -> expr udim .)
    SI              reduce using rule 78 (udim -> expr udim .)
    DESDE           reduce using rule 78 (udim -> expr udim .)
    REPETIR         reduce using rule 78 (udim -> expr udim .)
    MIENTRAS        reduce using rule 78 (udim -> expr udim .)
    CUANDO          reduce using rule 78 (udim -> expr udim .)
    REGRESA         reduce using rule 78 (udim -> expr udim .)
    IMPRIME         reduce using rule 78 (udim -> expr udim .)
    IMPRIMENL       reduce using rule 78 (udim -> expr udim .)
    LEE             reduce using rule 78 (udim -> expr udim .)


state 159

    (90) expr -> MAS expr .

    MAS             reduce using rule 90 (expr -> MAS expr .)
    MENOS           reduce using rule 90 (expr -> MAS expr .)
    IDENT           reduce using rule 90 (expr -> MAS expr .)
    PAREN_EMPIEZA   reduce using rule 90 (expr -> MAS expr .)
    CTE_ENTERA      reduce using rule 90 (expr -> MAS expr .)
    CTE_REAL        reduce using rule 90 (expr -> MAS expr .)
    CTE_ALFA        reduce using rule 90 (expr -> MAS expr .)
    VERDADERO       reduce using rule 90 (expr -> MAS expr .)
    FALSO           reduce using rule 90 (expr -> MAS expr .)
    OP_ASIG         reduce using rule 90 (expr -> MAS expr .)
    OP_REL          reduce using rule 90 (expr -> MAS expr .)
    Y               reduce using rule 90 (expr -> MAS expr .)
    O               reduce using rule 90 (expr -> MAS expr .)
    PAREN_TERMINA   reduce using rule 90 (expr -> MAS expr .)
    POTENCIA        reduce using rule 90 (expr -> MAS expr .)
    MULTI           reduce using rule 90 (expr -> MAS expr .)
    DIV             reduce using rule 90 (expr -> MAS expr .)
    MOD             reduce using rule 90 (expr -> MAS expr .)
    COMA            reduce using rule 90 (expr -> MAS expr .)
    PUNTO_COMA      reduce using rule 90 (expr -> MAS expr .)
    HASTA           reduce using rule 90 (expr -> MAS expr .)
    INICIO          reduce using rule 90 (expr -> MAS expr .)
    LIMPIA          reduce using rule 90 (expr -> MAS expr .)
    INTERRUMPE      reduce using rule 90 (expr -> MAS expr .)
    CONTINUA        reduce using rule 90 (expr -> MAS expr .)
    SI              reduce using rule 90 (expr -> MAS expr .)
    DESDE           reduce using rule 90 (expr -> MAS expr .)
    REPETIR         reduce using rule 90 (expr -> MAS expr .)
    MIENTRAS        reduce using rule 90 (expr -> MAS expr .)
    CUANDO          reduce using rule 90 (expr -> MAS expr .)
    REGRESA         reduce using rule 90 (expr -> MAS expr .)
    IMPRIME         reduce using rule 90 (expr -> MAS expr .)
    IMPRIMENL       reduce using rule 90 (expr -> MAS expr .)
    LEE             reduce using rule 90 (expr -> MAS expr .)


state 160

    (91) expr -> MENOS expr .

    MAS             reduce using rule 91 (expr -> MENOS expr .)
    MENOS           reduce using rule 91 (expr -> MENOS expr .)
    IDENT           reduce using rule 91 (expr -> MENOS expr .)
    PAREN_EMPIEZA   reduce using rule 91 (expr -> MENOS expr .)
    CTE_ENTERA      reduce using rule 91 (expr -> MENOS expr .)
    CTE_REAL        reduce using rule 91 (expr -> MENOS expr .)
    CTE_ALFA        reduce using rule 91 (expr -> MENOS expr .)
    VERDADERO       reduce using rule 91 (expr -> MENOS expr .)
    FALSO           reduce using rule 91 (expr -> MENOS expr .)
    OP_ASIG         reduce using rule 91 (expr -> MENOS expr .)
    OP_REL          reduce using rule 91 (expr -> MENOS expr .)
    Y               reduce using rule 91 (expr -> MENOS expr .)
    O               reduce using rule 91 (expr -> MENOS expr .)
    PAREN_TERMINA   reduce using rule 91 (expr -> MENOS expr .)
    POTENCIA        reduce using rule 91 (expr -> MENOS expr .)
    MULTI           reduce using rule 91 (expr -> MENOS expr .)
    DIV             reduce using rule 91 (expr -> MENOS expr .)
    MOD             reduce using rule 91 (expr -> MENOS expr .)
    COMA            reduce using rule 91 (expr -> MENOS expr .)
    PUNTO_COMA      reduce using rule 91 (expr -> MENOS expr .)
    HASTA           reduce using rule 91 (expr -> MENOS expr .)
    INICIO          reduce using rule 91 (expr -> MENOS expr .)
    LIMPIA          reduce using rule 91 (expr -> MENOS expr .)
    INTERRUMPE      reduce using rule 91 (expr -> MENOS expr .)
    CONTINUA        reduce using rule 91 (expr -> MENOS expr .)
    SI              reduce using rule 91 (expr -> MENOS expr .)
    DESDE           reduce using rule 91 (expr -> MENOS expr .)
    REPETIR         reduce using rule 91 (expr -> MENOS expr .)
    MIENTRAS        reduce using rule 91 (expr -> MENOS expr .)
    CUANDO          reduce using rule 91 (expr -> MENOS expr .)
    REGRESA         reduce using rule 91 (expr -> MENOS expr .)
    IMPRIME         reduce using rule 91 (expr -> MENOS expr .)
    IMPRIMENL       reduce using rule 91 (expr -> MENOS expr .)
    LEE             reduce using rule 91 (expr -> MENOS expr .)


state 161

    (99) signo -> MENOS termino .
    (98) signo -> termino .

  ! reduce/reduce conflict for POTENCIA resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for MULTI resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for DIV resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for MOD resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for MAS resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for MENOS resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for IDENT resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for PAREN_EMPIEZA resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for CTE_ENTERA resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for CTE_REAL resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for CTE_ALFA resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for VERDADERO resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for FALSO resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for OP_ASIG resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for OP_REL resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for Y resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for O resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for PAREN_TERMINA resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for COMA resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for HASTA resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for INICIO resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for LIMPIA resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for INTERRUMPE resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for CONTINUA resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for SI resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for DESDE resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for REPETIR resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for CUANDO resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for REGRESA resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for IMPRIME resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for IMPRIMENL resolved using rule 98 (signo -> termino .)
  ! reduce/reduce conflict for LEE resolved using rule 98 (signo -> termino .)
    POTENCIA        reduce using rule 98 (signo -> termino .)
    MULTI           reduce using rule 98 (signo -> termino .)
    DIV             reduce using rule 98 (signo -> termino .)
    MOD             reduce using rule 98 (signo -> termino .)
    MAS             reduce using rule 98 (signo -> termino .)
    MENOS           reduce using rule 98 (signo -> termino .)
    IDENT           reduce using rule 98 (signo -> termino .)
    PAREN_EMPIEZA   reduce using rule 98 (signo -> termino .)
    CTE_ENTERA      reduce using rule 98 (signo -> termino .)
    CTE_REAL        reduce using rule 98 (signo -> termino .)
    CTE_ALFA        reduce using rule 98 (signo -> termino .)
    VERDADERO       reduce using rule 98 (signo -> termino .)
    FALSO           reduce using rule 98 (signo -> termino .)
    OP_ASIG         reduce using rule 98 (signo -> termino .)
    OP_REL          reduce using rule 98 (signo -> termino .)
    Y               reduce using rule 98 (signo -> termino .)
    O               reduce using rule 98 (signo -> termino .)
    PAREN_TERMINA   reduce using rule 98 (signo -> termino .)
    COMA            reduce using rule 98 (signo -> termino .)
    PUNTO_COMA      reduce using rule 98 (signo -> termino .)
    HASTA           reduce using rule 98 (signo -> termino .)
    INICIO          reduce using rule 98 (signo -> termino .)
    LIMPIA          reduce using rule 98 (signo -> termino .)
    INTERRUMPE      reduce using rule 98 (signo -> termino .)
    CONTINUA        reduce using rule 98 (signo -> termino .)
    SI              reduce using rule 98 (signo -> termino .)
    DESDE           reduce using rule 98 (signo -> termino .)
    REPETIR         reduce using rule 98 (signo -> termino .)
    MIENTRAS        reduce using rule 98 (signo -> termino .)
    CUANDO          reduce using rule 98 (signo -> termino .)
    REGRESA         reduce using rule 98 (signo -> termino .)
    IMPRIME         reduce using rule 98 (signo -> termino .)
    IMPRIMENL       reduce using rule 98 (signo -> termino .)
    LEE             reduce using rule 98 (signo -> termino .)

  ! POTENCIA        [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! MULTI           [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! DIV             [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! MOD             [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! MAS             [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! MENOS           [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! IDENT           [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! PAREN_EMPIEZA   [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! CTE_ENTERA      [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! CTE_REAL        [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! CTE_ALFA        [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! VERDADERO       [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! FALSO           [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! OP_ASIG         [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! OP_REL          [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! Y               [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! O               [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! PAREN_TERMINA   [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! COMA            [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! PUNTO_COMA      [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! HASTA           [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! INICIO          [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! LIMPIA          [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! INTERRUMPE      [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! CONTINUA        [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! SI              [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! DESDE           [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! REPETIR         [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! MIENTRAS        [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! CUANDO          [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! REGRESA         [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! IMPRIME         [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! IMPRIMENL       [ reduce using rule 99 (signo -> MENOS termino .) ]
  ! LEE             [ reduce using rule 99 (signo -> MENOS termino .) ]


state 162

    (93) multi -> expo MULTI .

    MAS             reduce using rule 93 (multi -> expo MULTI .)
    MENOS           reduce using rule 93 (multi -> expo MULTI .)
    IDENT           reduce using rule 93 (multi -> expo MULTI .)
    PAREN_EMPIEZA   reduce using rule 93 (multi -> expo MULTI .)
    CTE_ENTERA      reduce using rule 93 (multi -> expo MULTI .)
    CTE_REAL        reduce using rule 93 (multi -> expo MULTI .)
    CTE_ALFA        reduce using rule 93 (multi -> expo MULTI .)
    VERDADERO       reduce using rule 93 (multi -> expo MULTI .)
    FALSO           reduce using rule 93 (multi -> expo MULTI .)
    OP_ASIG         reduce using rule 93 (multi -> expo MULTI .)
    OP_REL          reduce using rule 93 (multi -> expo MULTI .)
    Y               reduce using rule 93 (multi -> expo MULTI .)
    O               reduce using rule 93 (multi -> expo MULTI .)
    PAREN_TERMINA   reduce using rule 93 (multi -> expo MULTI .)
    POTENCIA        reduce using rule 93 (multi -> expo MULTI .)
    MULTI           reduce using rule 93 (multi -> expo MULTI .)
    DIV             reduce using rule 93 (multi -> expo MULTI .)
    MOD             reduce using rule 93 (multi -> expo MULTI .)
    COMA            reduce using rule 93 (multi -> expo MULTI .)
    PUNTO_COMA      reduce using rule 93 (multi -> expo MULTI .)
    HASTA           reduce using rule 93 (multi -> expo MULTI .)
    INICIO          reduce using rule 93 (multi -> expo MULTI .)
    LIMPIA          reduce using rule 93 (multi -> expo MULTI .)
    INTERRUMPE      reduce using rule 93 (multi -> expo MULTI .)
    CONTINUA        reduce using rule 93 (multi -> expo MULTI .)
    SI              reduce using rule 93 (multi -> expo MULTI .)
    DESDE           reduce using rule 93 (multi -> expo MULTI .)
    REPETIR         reduce using rule 93 (multi -> expo MULTI .)
    MIENTRAS        reduce using rule 93 (multi -> expo MULTI .)
    CUANDO          reduce using rule 93 (multi -> expo MULTI .)
    REGRESA         reduce using rule 93 (multi -> expo MULTI .)
    IMPRIME         reduce using rule 93 (multi -> expo MULTI .)
    IMPRIMENL       reduce using rule 93 (multi -> expo MULTI .)
    LEE             reduce using rule 93 (multi -> expo MULTI .)


state 163

    (94) multi -> expo DIV .

    MAS             reduce using rule 94 (multi -> expo DIV .)
    MENOS           reduce using rule 94 (multi -> expo DIV .)
    IDENT           reduce using rule 94 (multi -> expo DIV .)
    PAREN_EMPIEZA   reduce using rule 94 (multi -> expo DIV .)
    CTE_ENTERA      reduce using rule 94 (multi -> expo DIV .)
    CTE_REAL        reduce using rule 94 (multi -> expo DIV .)
    CTE_ALFA        reduce using rule 94 (multi -> expo DIV .)
    VERDADERO       reduce using rule 94 (multi -> expo DIV .)
    FALSO           reduce using rule 94 (multi -> expo DIV .)
    OP_ASIG         reduce using rule 94 (multi -> expo DIV .)
    OP_REL          reduce using rule 94 (multi -> expo DIV .)
    Y               reduce using rule 94 (multi -> expo DIV .)
    O               reduce using rule 94 (multi -> expo DIV .)
    PAREN_TERMINA   reduce using rule 94 (multi -> expo DIV .)
    POTENCIA        reduce using rule 94 (multi -> expo DIV .)
    MULTI           reduce using rule 94 (multi -> expo DIV .)
    DIV             reduce using rule 94 (multi -> expo DIV .)
    MOD             reduce using rule 94 (multi -> expo DIV .)
    COMA            reduce using rule 94 (multi -> expo DIV .)
    PUNTO_COMA      reduce using rule 94 (multi -> expo DIV .)
    HASTA           reduce using rule 94 (multi -> expo DIV .)
    INICIO          reduce using rule 94 (multi -> expo DIV .)
    LIMPIA          reduce using rule 94 (multi -> expo DIV .)
    INTERRUMPE      reduce using rule 94 (multi -> expo DIV .)
    CONTINUA        reduce using rule 94 (multi -> expo DIV .)
    SI              reduce using rule 94 (multi -> expo DIV .)
    DESDE           reduce using rule 94 (multi -> expo DIV .)
    REPETIR         reduce using rule 94 (multi -> expo DIV .)
    MIENTRAS        reduce using rule 94 (multi -> expo DIV .)
    CUANDO          reduce using rule 94 (multi -> expo DIV .)
    REGRESA         reduce using rule 94 (multi -> expo DIV .)
    IMPRIME         reduce using rule 94 (multi -> expo DIV .)
    IMPRIMENL       reduce using rule 94 (multi -> expo DIV .)
    LEE             reduce using rule 94 (multi -> expo DIV .)


state 164

    (95) multi -> expo MOD . multi
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    MENOS           shift and go to state 196
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    expo                           shift and go to state 115
    multi                          shift and go to state 195
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 165

    (97) expo -> signo POTENCIA . expo
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    MENOS           shift and go to state 196
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    signo                          shift and go to state 116
    expo                           shift and go to state 197
    termino                        shift and go to state 117

state 166

    (77) regresa -> REGRESA PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 198


state 167

    (110) imprime -> IMPRIME PAREN_EMPIEZA gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 199


state 168

    (114) gpoexp -> exprlog .
    (115) gpoexp -> exprlog . COMA gpoexp

    PAREN_TERMINA   reduce using rule 114 (gpoexp -> exprlog .)
    COMA            shift and go to state 200


state 169

    (111) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 201


state 170

    (112) lee -> LEE PAREN_EMPIEZA IDENT . PAREN_TERMINA
    (113) lee -> LEE PAREN_EMPIEZA IDENT . dimens PAREN_TERMINA
    (12) dimens -> . CORCHETE_EMPIEZA valor CORCHETE_TERMINA dimens
    (13) dimens -> . empty
    (119) empty -> .

  ! shift/reduce conflict for PAREN_TERMINA resolved as shift
    PAREN_TERMINA   shift and go to state 202
    CORCHETE_EMPIEZA shift and go to state 36

  ! PAREN_TERMINA   [ reduce using rule 119 (empty -> .) ]

    dimens                         shift and go to state 203
    empty                          shift and go to state 137

state 171

    (41) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA . variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (119) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 119 (empty -> .)

    variables                      shift and go to state 204
    empty                          shift and go to state 7

state 172

    (36) maspars -> COMA gpopars .

    PUNTOS_DOBLES   reduce using rule 36 (maspars -> COMA gpopars .)


state 173

    (29) protfunc -> funcion IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO PUNTO_COMA

    TIPO            shift and go to state 205


state 174

    (31) params -> gpopars PUNTOS_DOBLES TIPO . otrospars
    (33) otrospars -> . PUNTO_COMA params
    (34) otrospars -> . empty
    (119) empty -> .

    PUNTO_COMA      shift and go to state 207
    PAREN_TERMINA   reduce using rule 119 (empty -> .)

    otrospars                      shift and go to state 206
    empty                          shift and go to state 208

state 175

    (30) protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 30 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    FUNCION         reduce using rule 30 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)
    PROGRAMA        reduce using rule 30 (protproc -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTO_COMA .)


state 176

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES . TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA

    TIPO            shift and go to state 209


state 177

    (1) program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA .

    $end            reduce using rule 1 (program -> constantes variables protfuncproc funcproc PROGRAMA block FIN DE PROGRAMA .)


state 178

    (102) termino -> PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 193


state 179

    (60) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA . HACER bckesp sino

    HACER           shift and go to state 210


state 180

    (80) exprlog -> opy o .

    PAREN_TERMINA   reduce using rule 80 (exprlog -> opy o .)
    COMA            reduce using rule 80 (exprlog -> opy o .)
    PUNTO_COMA      reduce using rule 80 (exprlog -> opy o .)
    HASTA           reduce using rule 80 (exprlog -> opy o .)
    INICIO          reduce using rule 80 (exprlog -> opy o .)
    LIMPIA          reduce using rule 80 (exprlog -> opy o .)
    INTERRUMPE      reduce using rule 80 (exprlog -> opy o .)
    CONTINUA        reduce using rule 80 (exprlog -> opy o .)
    SI              reduce using rule 80 (exprlog -> opy o .)
    DESDE           reduce using rule 80 (exprlog -> opy o .)
    REPETIR         reduce using rule 80 (exprlog -> opy o .)
    MIENTRAS        reduce using rule 80 (exprlog -> opy o .)
    CUANDO          reduce using rule 80 (exprlog -> opy o .)
    REGRESA         reduce using rule 80 (exprlog -> opy o .)
    IDENT           reduce using rule 80 (exprlog -> opy o .)
    IMPRIME         reduce using rule 80 (exprlog -> opy o .)
    IMPRIMENL       reduce using rule 80 (exprlog -> opy o .)
    LEE             reduce using rule 80 (exprlog -> opy o .)


state 181

    (81) o -> O . exprlog
    (80) exprlog -> . opy o
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 211
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 182

    (82) o -> empty .

    PAREN_TERMINA   reduce using rule 82 (o -> empty .)
    COMA            reduce using rule 82 (o -> empty .)
    PUNTO_COMA      reduce using rule 82 (o -> empty .)
    HASTA           reduce using rule 82 (o -> empty .)
    INICIO          reduce using rule 82 (o -> empty .)
    LIMPIA          reduce using rule 82 (o -> empty .)
    INTERRUMPE      reduce using rule 82 (o -> empty .)
    CONTINUA        reduce using rule 82 (o -> empty .)
    SI              reduce using rule 82 (o -> empty .)
    DESDE           reduce using rule 82 (o -> empty .)
    REPETIR         reduce using rule 82 (o -> empty .)
    MIENTRAS        reduce using rule 82 (o -> empty .)
    CUANDO          reduce using rule 82 (o -> empty .)
    REGRESA         reduce using rule 82 (o -> empty .)
    IDENT           reduce using rule 82 (o -> empty .)
    IMPRIME         reduce using rule 82 (o -> empty .)
    IMPRIMENL       reduce using rule 82 (o -> empty .)
    LEE             reduce using rule 82 (o -> empty .)


state 183

    (84) opy -> opno Y . opy
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    opno                           shift and go to state 143
    opy                            shift and go to state 212
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 184

    (86) opno -> NO oprel .

    Y               reduce using rule 86 (opno -> NO oprel .)
    O               reduce using rule 86 (opno -> NO oprel .)
    PAREN_TERMINA   reduce using rule 86 (opno -> NO oprel .)
    COMA            reduce using rule 86 (opno -> NO oprel .)
    PUNTO_COMA      reduce using rule 86 (opno -> NO oprel .)
    HASTA           reduce using rule 86 (opno -> NO oprel .)
    INICIO          reduce using rule 86 (opno -> NO oprel .)
    LIMPIA          reduce using rule 86 (opno -> NO oprel .)
    INTERRUMPE      reduce using rule 86 (opno -> NO oprel .)
    CONTINUA        reduce using rule 86 (opno -> NO oprel .)
    SI              reduce using rule 86 (opno -> NO oprel .)
    DESDE           reduce using rule 86 (opno -> NO oprel .)
    REPETIR         reduce using rule 86 (opno -> NO oprel .)
    MIENTRAS        reduce using rule 86 (opno -> NO oprel .)
    CUANDO          reduce using rule 86 (opno -> NO oprel .)
    REGRESA         reduce using rule 86 (opno -> NO oprel .)
    IDENT           reduce using rule 86 (opno -> NO oprel .)
    IMPRIME         reduce using rule 86 (opno -> NO oprel .)
    IMPRIMENL       reduce using rule 86 (opno -> NO oprel .)
    LEE             reduce using rule 86 (opno -> NO oprel .)


state 185

    (88) oprel -> expr OP_REL . oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    expr                           shift and go to state 146
    oprel                          shift and go to state 213
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 186

    (65) desde -> DESDE EL VALOR DE . asigna HASTA expr bckesp
    (68) asigna -> . IDENT udim OP_ASIG exprlog

    IDENT           shift and go to state 215

    asigna                         shift and go to state 214

state 187

    (66) repetir -> REPETIR block HASTA QUE . PAREN_EMPIEZA exprlog PAREN_TERMINA

    PAREN_EMPIEZA   shift and go to state 216


state 188

    (67) mientras -> MIENTRAS SE CUMPLA QUE . exprlog bckesp
    (80) exprlog -> . opy o
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 217
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 189

    (69) cuando -> CUANDO EL VALOR DE . IDENT INICIO gposea otro FIN

    IDENT           shift and go to state 218


state 190

    (109) lfunc -> IDENT PAREN_EMPIEZA . uparams PAREN_TERMINA
    (102) termino -> PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (116) uparams -> . exprlog
    (117) uparams -> . exprlog COMA uparams
    (118) uparams -> . empty
    (80) exprlog -> . opy o
    (119) empty -> .
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    PAREN_TERMINA   reduce using rule 119 (empty -> .)
    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    uparams                        shift and go to state 219
    exprlog                        shift and go to state 156
    empty                          shift and go to state 157
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 191

    (68) asigna -> IDENT udim OP_ASIG exprlog .

    PUNTO_COMA      reduce using rule 68 (asigna -> IDENT udim OP_ASIG exprlog .)
    HASTA           reduce using rule 68 (asigna -> IDENT udim OP_ASIG exprlog .)
    INICIO          reduce using rule 68 (asigna -> IDENT udim OP_ASIG exprlog .)


state 192

    (108) lproc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 108 (lproc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    INICIO          reduce using rule 108 (lproc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)


state 193

    (102) termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .

    POTENCIA        reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MULTI           reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    DIV             reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MOD             reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MAS             reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MENOS           reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IDENT           reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PAREN_EMPIEZA   reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CTE_ENTERA      reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CTE_REAL        reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CTE_ALFA        reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    VERDADERO       reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    FALSO           reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OP_ASIG         reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    OP_REL          reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    Y               reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    O               reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    COMA            reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    HASTA           reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INICIO          reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    LIMPIA          reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CONTINUA        reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    SI              reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    DESDE           reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    REPETIR         reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    MIENTRAS        reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    CUANDO          reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    REGRESA         reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IMPRIME         reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    LEE             reduce using rule 102 (termino -> PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 194

    (117) uparams -> exprlog COMA . uparams
    (116) uparams -> . exprlog
    (117) uparams -> . exprlog COMA uparams
    (118) uparams -> . empty
    (80) exprlog -> . opy o
    (119) empty -> .
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    PAREN_TERMINA   reduce using rule 119 (empty -> .)
    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 220
    uparams                        shift and go to state 221
    empty                          shift and go to state 157
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 195

    (95) multi -> expo MOD multi .

    MAS             reduce using rule 95 (multi -> expo MOD multi .)
    MENOS           reduce using rule 95 (multi -> expo MOD multi .)
    IDENT           reduce using rule 95 (multi -> expo MOD multi .)
    PAREN_EMPIEZA   reduce using rule 95 (multi -> expo MOD multi .)
    CTE_ENTERA      reduce using rule 95 (multi -> expo MOD multi .)
    CTE_REAL        reduce using rule 95 (multi -> expo MOD multi .)
    CTE_ALFA        reduce using rule 95 (multi -> expo MOD multi .)
    VERDADERO       reduce using rule 95 (multi -> expo MOD multi .)
    FALSO           reduce using rule 95 (multi -> expo MOD multi .)
    OP_ASIG         reduce using rule 95 (multi -> expo MOD multi .)
    OP_REL          reduce using rule 95 (multi -> expo MOD multi .)
    Y               reduce using rule 95 (multi -> expo MOD multi .)
    O               reduce using rule 95 (multi -> expo MOD multi .)
    PAREN_TERMINA   reduce using rule 95 (multi -> expo MOD multi .)
    POTENCIA        reduce using rule 95 (multi -> expo MOD multi .)
    MULTI           reduce using rule 95 (multi -> expo MOD multi .)
    DIV             reduce using rule 95 (multi -> expo MOD multi .)
    MOD             reduce using rule 95 (multi -> expo MOD multi .)
    COMA            reduce using rule 95 (multi -> expo MOD multi .)
    PUNTO_COMA      reduce using rule 95 (multi -> expo MOD multi .)
    HASTA           reduce using rule 95 (multi -> expo MOD multi .)
    INICIO          reduce using rule 95 (multi -> expo MOD multi .)
    LIMPIA          reduce using rule 95 (multi -> expo MOD multi .)
    INTERRUMPE      reduce using rule 95 (multi -> expo MOD multi .)
    CONTINUA        reduce using rule 95 (multi -> expo MOD multi .)
    SI              reduce using rule 95 (multi -> expo MOD multi .)
    DESDE           reduce using rule 95 (multi -> expo MOD multi .)
    REPETIR         reduce using rule 95 (multi -> expo MOD multi .)
    MIENTRAS        reduce using rule 95 (multi -> expo MOD multi .)
    CUANDO          reduce using rule 95 (multi -> expo MOD multi .)
    REGRESA         reduce using rule 95 (multi -> expo MOD multi .)
    IMPRIME         reduce using rule 95 (multi -> expo MOD multi .)
    IMPRIMENL       reduce using rule 95 (multi -> expo MOD multi .)
    LEE             reduce using rule 95 (multi -> expo MOD multi .)


state 196

    (99) signo -> MENOS . termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    termino                        shift and go to state 222

state 197

    (97) expo -> signo POTENCIA expo .

    MULTI           reduce using rule 97 (expo -> signo POTENCIA expo .)
    DIV             reduce using rule 97 (expo -> signo POTENCIA expo .)
    MOD             reduce using rule 97 (expo -> signo POTENCIA expo .)
    MAS             reduce using rule 97 (expo -> signo POTENCIA expo .)
    MENOS           reduce using rule 97 (expo -> signo POTENCIA expo .)
    IDENT           reduce using rule 97 (expo -> signo POTENCIA expo .)
    PAREN_EMPIEZA   reduce using rule 97 (expo -> signo POTENCIA expo .)
    CTE_ENTERA      reduce using rule 97 (expo -> signo POTENCIA expo .)
    CTE_REAL        reduce using rule 97 (expo -> signo POTENCIA expo .)
    CTE_ALFA        reduce using rule 97 (expo -> signo POTENCIA expo .)
    VERDADERO       reduce using rule 97 (expo -> signo POTENCIA expo .)
    FALSO           reduce using rule 97 (expo -> signo POTENCIA expo .)
    OP_ASIG         reduce using rule 97 (expo -> signo POTENCIA expo .)
    OP_REL          reduce using rule 97 (expo -> signo POTENCIA expo .)
    Y               reduce using rule 97 (expo -> signo POTENCIA expo .)
    O               reduce using rule 97 (expo -> signo POTENCIA expo .)
    PAREN_TERMINA   reduce using rule 97 (expo -> signo POTENCIA expo .)
    POTENCIA        reduce using rule 97 (expo -> signo POTENCIA expo .)
    COMA            reduce using rule 97 (expo -> signo POTENCIA expo .)
    PUNTO_COMA      reduce using rule 97 (expo -> signo POTENCIA expo .)
    HASTA           reduce using rule 97 (expo -> signo POTENCIA expo .)
    INICIO          reduce using rule 97 (expo -> signo POTENCIA expo .)
    LIMPIA          reduce using rule 97 (expo -> signo POTENCIA expo .)
    INTERRUMPE      reduce using rule 97 (expo -> signo POTENCIA expo .)
    CONTINUA        reduce using rule 97 (expo -> signo POTENCIA expo .)
    SI              reduce using rule 97 (expo -> signo POTENCIA expo .)
    DESDE           reduce using rule 97 (expo -> signo POTENCIA expo .)
    REPETIR         reduce using rule 97 (expo -> signo POTENCIA expo .)
    MIENTRAS        reduce using rule 97 (expo -> signo POTENCIA expo .)
    CUANDO          reduce using rule 97 (expo -> signo POTENCIA expo .)
    REGRESA         reduce using rule 97 (expo -> signo POTENCIA expo .)
    IMPRIME         reduce using rule 97 (expo -> signo POTENCIA expo .)
    IMPRIMENL       reduce using rule 97 (expo -> signo POTENCIA expo .)
    LEE             reduce using rule 97 (expo -> signo POTENCIA expo .)


state 198

    (77) regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 77 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INICIO          reduce using rule 77 (regresa -> REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 199

    (110) imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 110 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    INICIO          reduce using rule 110 (imprime -> IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 200

    (115) gpoexp -> exprlog COMA . gpoexp
    (114) gpoexp -> . exprlog
    (115) gpoexp -> . exprlog COMA gpoexp
    (80) exprlog -> . opy o
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 168
    gpoexp                         shift and go to state 223
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 201

    (111) imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 111 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)
    INICIO          reduce using rule 111 (imprimenl -> IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA .)


state 202

    (112) lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 112 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)
    INICIO          reduce using rule 112 (lee -> LEE PAREN_EMPIEZA IDENT PAREN_TERMINA .)


state 203

    (113) lee -> LEE PAREN_EMPIEZA IDENT dimens . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 224


state 204

    (41) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables . INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA

    INICIO          shift and go to state 225


state 205

    (29) protfunc -> funcion IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 226


state 206

    (31) params -> gpopars PUNTOS_DOBLES TIPO otrospars .

    PAREN_TERMINA   reduce using rule 31 (params -> gpopars PUNTOS_DOBLES TIPO otrospars .)


state 207

    (33) otrospars -> PUNTO_COMA . params
    (31) params -> . gpopars PUNTOS_DOBLES TIPO otrospars
    (32) params -> . empty
    (35) gpopars -> . IDENT maspars
    (119) empty -> .

    IDENT           shift and go to state 88
    PAREN_TERMINA   reduce using rule 119 (empty -> .)

    params                         shift and go to state 227
    gpopars                        shift and go to state 90
    empty                          shift and go to state 91

state 208

    (34) otrospars -> empty .

    PAREN_TERMINA   reduce using rule 34 (otrospars -> empty .)


state 209

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO . variables INICIO block FIN DE FUNCION PUNTO_COMA
    (2) variables -> . VARIABLES gpovars
    (3) variables -> . empty
    (119) empty -> .

    VARIABLES       shift and go to state 6
    INICIO          reduce using rule 119 (empty -> .)

    variables                      shift and go to state 228
    empty                          shift and go to state 7

state 210

    (60) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER . bckesp sino
    (63) bckesp -> . estatuto INICIO block FIN
    (64) bckesp -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    SINO            reduce using rule 119 (empty -> .)
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    bckesp                         shift and go to state 229
    estatuto                       shift and go to state 230
    empty                          shift and go to state 231
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    asigna                         shift and go to state 70
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 211

    (81) o -> O exprlog .

    PAREN_TERMINA   reduce using rule 81 (o -> O exprlog .)
    COMA            reduce using rule 81 (o -> O exprlog .)
    PUNTO_COMA      reduce using rule 81 (o -> O exprlog .)
    HASTA           reduce using rule 81 (o -> O exprlog .)
    INICIO          reduce using rule 81 (o -> O exprlog .)
    LIMPIA          reduce using rule 81 (o -> O exprlog .)
    INTERRUMPE      reduce using rule 81 (o -> O exprlog .)
    CONTINUA        reduce using rule 81 (o -> O exprlog .)
    SI              reduce using rule 81 (o -> O exprlog .)
    DESDE           reduce using rule 81 (o -> O exprlog .)
    REPETIR         reduce using rule 81 (o -> O exprlog .)
    MIENTRAS        reduce using rule 81 (o -> O exprlog .)
    CUANDO          reduce using rule 81 (o -> O exprlog .)
    REGRESA         reduce using rule 81 (o -> O exprlog .)
    IDENT           reduce using rule 81 (o -> O exprlog .)
    IMPRIME         reduce using rule 81 (o -> O exprlog .)
    IMPRIMENL       reduce using rule 81 (o -> O exprlog .)
    LEE             reduce using rule 81 (o -> O exprlog .)


state 212

    (84) opy -> opno Y opy .

    O               reduce using rule 84 (opy -> opno Y opy .)
    PAREN_TERMINA   reduce using rule 84 (opy -> opno Y opy .)
    COMA            reduce using rule 84 (opy -> opno Y opy .)
    PUNTO_COMA      reduce using rule 84 (opy -> opno Y opy .)
    HASTA           reduce using rule 84 (opy -> opno Y opy .)
    INICIO          reduce using rule 84 (opy -> opno Y opy .)
    LIMPIA          reduce using rule 84 (opy -> opno Y opy .)
    INTERRUMPE      reduce using rule 84 (opy -> opno Y opy .)
    CONTINUA        reduce using rule 84 (opy -> opno Y opy .)
    SI              reduce using rule 84 (opy -> opno Y opy .)
    DESDE           reduce using rule 84 (opy -> opno Y opy .)
    REPETIR         reduce using rule 84 (opy -> opno Y opy .)
    MIENTRAS        reduce using rule 84 (opy -> opno Y opy .)
    CUANDO          reduce using rule 84 (opy -> opno Y opy .)
    REGRESA         reduce using rule 84 (opy -> opno Y opy .)
    IDENT           reduce using rule 84 (opy -> opno Y opy .)
    IMPRIME         reduce using rule 84 (opy -> opno Y opy .)
    IMPRIMENL       reduce using rule 84 (opy -> opno Y opy .)
    LEE             reduce using rule 84 (opy -> opno Y opy .)


state 213

    (88) oprel -> expr OP_REL oprel .

    Y               reduce using rule 88 (oprel -> expr OP_REL oprel .)
    O               reduce using rule 88 (oprel -> expr OP_REL oprel .)
    PAREN_TERMINA   reduce using rule 88 (oprel -> expr OP_REL oprel .)
    COMA            reduce using rule 88 (oprel -> expr OP_REL oprel .)
    PUNTO_COMA      reduce using rule 88 (oprel -> expr OP_REL oprel .)
    HASTA           reduce using rule 88 (oprel -> expr OP_REL oprel .)
    INICIO          reduce using rule 88 (oprel -> expr OP_REL oprel .)
    LIMPIA          reduce using rule 88 (oprel -> expr OP_REL oprel .)
    INTERRUMPE      reduce using rule 88 (oprel -> expr OP_REL oprel .)
    CONTINUA        reduce using rule 88 (oprel -> expr OP_REL oprel .)
    SI              reduce using rule 88 (oprel -> expr OP_REL oprel .)
    DESDE           reduce using rule 88 (oprel -> expr OP_REL oprel .)
    REPETIR         reduce using rule 88 (oprel -> expr OP_REL oprel .)
    MIENTRAS        reduce using rule 88 (oprel -> expr OP_REL oprel .)
    CUANDO          reduce using rule 88 (oprel -> expr OP_REL oprel .)
    REGRESA         reduce using rule 88 (oprel -> expr OP_REL oprel .)
    IDENT           reduce using rule 88 (oprel -> expr OP_REL oprel .)
    IMPRIME         reduce using rule 88 (oprel -> expr OP_REL oprel .)
    IMPRIMENL       reduce using rule 88 (oprel -> expr OP_REL oprel .)
    LEE             reduce using rule 88 (oprel -> expr OP_REL oprel .)


state 214

    (65) desde -> DESDE EL VALOR DE asigna . HASTA expr bckesp

    HASTA           shift and go to state 232


state 215

    (68) asigna -> IDENT . udim OP_ASIG exprlog
    (78) udim -> . expr udim
    (79) udim -> . empty
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (119) empty -> .
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    OP_ASIG         reduce using rule 119 (empty -> .)
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    udim                           shift and go to state 108
    expr                           shift and go to state 110
    empty                          shift and go to state 111
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 216

    (66) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA . exprlog PAREN_TERMINA
    (80) exprlog -> . opy o
    (83) opy -> . opno
    (84) opy -> . opno Y opy
    (85) opno -> . oprel
    (86) opno -> . NO oprel
    (87) oprel -> . expr
    (88) oprel -> . expr OP_REL oprel
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    NO              shift and go to state 145
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    exprlog                        shift and go to state 233
    opy                            shift and go to state 142
    opno                           shift and go to state 143
    oprel                          shift and go to state 144
    expr                           shift and go to state 146
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 217

    (67) mientras -> MIENTRAS SE CUMPLA QUE exprlog . bckesp
    (63) bckesp -> . estatuto INICIO block FIN
    (64) bckesp -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    bckesp                         shift and go to state 234
    estatuto                       shift and go to state 230
    empty                          shift and go to state 231
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    asigna                         shift and go to state 70
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 218

    (69) cuando -> CUANDO EL VALOR DE IDENT . INICIO gposea otro FIN

    INICIO          shift and go to state 235


state 219

    (109) lfunc -> IDENT PAREN_EMPIEZA uparams . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 236


state 220

    (116) uparams -> exprlog .
    (117) uparams -> exprlog . COMA uparams

    PAREN_TERMINA   reduce using rule 116 (uparams -> exprlog .)
    COMA            shift and go to state 194


state 221

    (117) uparams -> exprlog COMA uparams .

    PAREN_TERMINA   reduce using rule 117 (uparams -> exprlog COMA uparams .)


state 222

    (99) signo -> MENOS termino .

    POTENCIA        reduce using rule 99 (signo -> MENOS termino .)
    MULTI           reduce using rule 99 (signo -> MENOS termino .)
    DIV             reduce using rule 99 (signo -> MENOS termino .)
    MOD             reduce using rule 99 (signo -> MENOS termino .)
    MAS             reduce using rule 99 (signo -> MENOS termino .)
    MENOS           reduce using rule 99 (signo -> MENOS termino .)
    IDENT           reduce using rule 99 (signo -> MENOS termino .)
    PAREN_EMPIEZA   reduce using rule 99 (signo -> MENOS termino .)
    CTE_ENTERA      reduce using rule 99 (signo -> MENOS termino .)
    CTE_REAL        reduce using rule 99 (signo -> MENOS termino .)
    CTE_ALFA        reduce using rule 99 (signo -> MENOS termino .)
    VERDADERO       reduce using rule 99 (signo -> MENOS termino .)
    FALSO           reduce using rule 99 (signo -> MENOS termino .)
    OP_ASIG         reduce using rule 99 (signo -> MENOS termino .)
    OP_REL          reduce using rule 99 (signo -> MENOS termino .)
    Y               reduce using rule 99 (signo -> MENOS termino .)
    O               reduce using rule 99 (signo -> MENOS termino .)
    PAREN_TERMINA   reduce using rule 99 (signo -> MENOS termino .)
    COMA            reduce using rule 99 (signo -> MENOS termino .)
    PUNTO_COMA      reduce using rule 99 (signo -> MENOS termino .)
    HASTA           reduce using rule 99 (signo -> MENOS termino .)
    INICIO          reduce using rule 99 (signo -> MENOS termino .)
    LIMPIA          reduce using rule 99 (signo -> MENOS termino .)
    INTERRUMPE      reduce using rule 99 (signo -> MENOS termino .)
    CONTINUA        reduce using rule 99 (signo -> MENOS termino .)
    SI              reduce using rule 99 (signo -> MENOS termino .)
    DESDE           reduce using rule 99 (signo -> MENOS termino .)
    REPETIR         reduce using rule 99 (signo -> MENOS termino .)
    MIENTRAS        reduce using rule 99 (signo -> MENOS termino .)
    CUANDO          reduce using rule 99 (signo -> MENOS termino .)
    REGRESA         reduce using rule 99 (signo -> MENOS termino .)
    IMPRIME         reduce using rule 99 (signo -> MENOS termino .)
    IMPRIMENL       reduce using rule 99 (signo -> MENOS termino .)
    LEE             reduce using rule 99 (signo -> MENOS termino .)


state 223

    (115) gpoexp -> exprlog COMA gpoexp .

    PAREN_TERMINA   reduce using rule 115 (gpoexp -> exprlog COMA gpoexp .)


state 224

    (113) lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 113 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)
    INICIO          reduce using rule 113 (lee -> LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA .)


state 225

    (41) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO . block FIN DE PROCEDIMIENTO PUNTO_COMA
    (43) block -> . estatuto PUNTO_COMA block
    (44) block -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    FIN             reduce using rule 119 (empty -> .)
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    block                          shift and go to state 237
    estatuto                       shift and go to state 61
    empty                          shift and go to state 62
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    asigna                         shift and go to state 70
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 226

    (29) protfunc -> funcion IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 29 (protfunc -> funcion IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    FUNCION         reduce using rule 29 (protfunc -> funcion IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)
    PROGRAMA        reduce using rule 29 (protfunc -> funcion IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO PUNTO_COMA .)


state 227

    (33) otrospars -> PUNTO_COMA params .

    PAREN_TERMINA   reduce using rule 33 (otrospars -> PUNTO_COMA params .)


state 228

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables . INICIO block FIN DE FUNCION PUNTO_COMA

    INICIO          shift and go to state 238


state 229

    (60) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp . sino
    (61) sino -> . SINO bckesp
    (62) sino -> . empty
    (119) empty -> .

    SINO            shift and go to state 240
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)

    sino                           shift and go to state 239
    empty                          shift and go to state 241

state 230

    (63) bckesp -> estatuto . INICIO block FIN

    INICIO          shift and go to state 242


state 231

    (64) bckesp -> empty .
    (59) estatuto -> empty .

  ! reduce/reduce conflict for INICIO resolved using rule 59 (estatuto -> empty .)
    SINO            reduce using rule 64 (bckesp -> empty .)
    PUNTO_COMA      reduce using rule 64 (bckesp -> empty .)
    FIN             reduce using rule 64 (bckesp -> empty .)
    SEA             reduce using rule 64 (bckesp -> empty .)
    OTRO            reduce using rule 64 (bckesp -> empty .)
    INICIO          reduce using rule 59 (estatuto -> empty .)

  ! INICIO          [ reduce using rule 64 (bckesp -> empty .) ]


state 232

    (65) desde -> DESDE EL VALOR DE asigna HASTA . expr bckesp
    (89) expr -> . multi
    (90) expr -> . MAS expr
    (91) expr -> . MENOS expr
    (92) multi -> . expo
    (93) multi -> . expo MULTI
    (94) multi -> . expo DIV
    (95) multi -> . expo MOD multi
    (96) expo -> . signo
    (97) expo -> . signo POTENCIA expo
    (98) signo -> . termino
    (99) signo -> . MENOS termino
    (100) termino -> . IDENT lfunc
    (101) termino -> . IDENT udim
    (102) termino -> . PAREN_EMPIEZA exprlog PAREN_TERMINA
    (103) termino -> . CTE_ENTERA
    (104) termino -> . CTE_REAL
    (105) termino -> . CTE_ALFA
    (106) termino -> . VERDADERO
    (107) termino -> . FALSO

    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    IDENT           shift and go to state 107
    PAREN_EMPIEZA   shift and go to state 140
    CTE_ENTERA      shift and go to state 118
    CTE_REAL        shift and go to state 119
    CTE_ALFA        shift and go to state 120
    VERDADERO       shift and go to state 121
    FALSO           shift and go to state 122

    expr                           shift and go to state 243
    multi                          shift and go to state 112
    expo                           shift and go to state 115
    signo                          shift and go to state 116
    termino                        shift and go to state 117

state 233

    (66) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog . PAREN_TERMINA

    PAREN_TERMINA   shift and go to state 244


state 234

    (67) mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .

    PUNTO_COMA      reduce using rule 67 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)
    INICIO          reduce using rule 67 (mientras -> MIENTRAS SE CUMPLA QUE exprlog bckesp .)


state 235

    (69) cuando -> CUANDO EL VALOR DE IDENT INICIO . gposea otro FIN
    (72) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (73) gposea -> . empty
    (119) empty -> .

    SEA             shift and go to state 246
    OTRO            reduce using rule 119 (empty -> .)
    FIN             reduce using rule 119 (empty -> .)

    gposea                         shift and go to state 245
    empty                          shift and go to state 247

state 236

    (109) lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .

    POTENCIA        reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MULTI           reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    DIV             reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MOD             reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MAS             reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MENOS           reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    IDENT           reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    PAREN_EMPIEZA   reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CTE_ENTERA      reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CTE_REAL        reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CTE_ALFA        reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    VERDADERO       reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    FALSO           reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    OP_ASIG         reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    OP_REL          reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    Y               reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    O               reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    PAREN_TERMINA   reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    COMA            reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    PUNTO_COMA      reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    HASTA           reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    INICIO          reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    LIMPIA          reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    INTERRUMPE      reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CONTINUA        reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    SI              reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    DESDE           reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    REPETIR         reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    MIENTRAS        reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    CUANDO          reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    REGRESA         reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    IMPRIME         reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    IMPRIMENL       reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)
    LEE             reduce using rule 109 (lfunc -> IDENT PAREN_EMPIEZA uparams PAREN_TERMINA .)


state 237

    (41) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block . FIN DE PROCEDIMIENTO PUNTO_COMA

    FIN             shift and go to state 248


state 238

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO . block FIN DE FUNCION PUNTO_COMA
    (43) block -> . estatuto PUNTO_COMA block
    (44) block -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    FIN             reduce using rule 119 (empty -> .)
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    block                          shift and go to state 249
    estatuto                       shift and go to state 61
    empty                          shift and go to state 62
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    asigna                         shift and go to state 70
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 239

    (60) si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .

    PUNTO_COMA      reduce using rule 60 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)
    INICIO          reduce using rule 60 (si -> SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino .)


state 240

    (61) sino -> SINO . bckesp
    (63) bckesp -> . estatuto INICIO block FIN
    (64) bckesp -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    bckesp                         shift and go to state 250
    estatuto                       shift and go to state 230
    empty                          shift and go to state 231
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    asigna                         shift and go to state 70
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 241

    (62) sino -> empty .

    PUNTO_COMA      reduce using rule 62 (sino -> empty .)
    INICIO          reduce using rule 62 (sino -> empty .)


state 242

    (63) bckesp -> estatuto INICIO . block FIN
    (43) block -> . estatuto PUNTO_COMA block
    (44) block -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    FIN             reduce using rule 119 (empty -> .)
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    estatuto                       shift and go to state 61
    block                          shift and go to state 251
    empty                          shift and go to state 62
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    asigna                         shift and go to state 70
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 243

    (65) desde -> DESDE EL VALOR DE asigna HASTA expr . bckesp
    (63) bckesp -> . estatuto INICIO block FIN
    (64) bckesp -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    PUNTO_COMA      reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    asigna                         shift and go to state 70
    bckesp                         shift and go to state 252
    estatuto                       shift and go to state 230
    empty                          shift and go to state 231
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 244

    (66) repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .

    PUNTO_COMA      reduce using rule 66 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)
    INICIO          reduce using rule 66 (repetir -> REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA .)


state 245

    (69) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea . otro FIN
    (70) otro -> . OTRO PUNTOS_DOBLES bckesp
    (71) otro -> . empty
    (119) empty -> .

    OTRO            shift and go to state 254
    FIN             reduce using rule 119 (empty -> .)

    otro                           shift and go to state 253
    empty                          shift and go to state 255

state 246

    (72) gposea -> SEA . gpoconst PUNTOS_DOBLES bckesp gposea
    (74) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 257

    gpoconst                       shift and go to state 256

state 247

    (73) gposea -> empty .

    OTRO            reduce using rule 73 (gposea -> empty .)
    FIN             reduce using rule 73 (gposea -> empty .)


state 248

    (41) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN . DE PROCEDIMIENTO PUNTO_COMA

    DE              shift and go to state 258


state 249

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block . FIN DE FUNCION PUNTO_COMA

    FIN             shift and go to state 259


state 250

    (61) sino -> SINO bckesp .

    PUNTO_COMA      reduce using rule 61 (sino -> SINO bckesp .)
    INICIO          reduce using rule 61 (sino -> SINO bckesp .)


state 251

    (63) bckesp -> estatuto INICIO block . FIN

    FIN             shift and go to state 260


state 252

    (65) desde -> DESDE EL VALOR DE asigna HASTA expr bckesp .

    PUNTO_COMA      reduce using rule 65 (desde -> DESDE EL VALOR DE asigna HASTA expr bckesp .)
    INICIO          reduce using rule 65 (desde -> DESDE EL VALOR DE asigna HASTA expr bckesp .)


state 253

    (69) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro . FIN

    FIN             shift and go to state 261


state 254

    (70) otro -> OTRO . PUNTOS_DOBLES bckesp

    PUNTOS_DOBLES   shift and go to state 262


state 255

    (71) otro -> empty .

    FIN             reduce using rule 71 (otro -> empty .)


state 256

    (72) gposea -> SEA gpoconst . PUNTOS_DOBLES bckesp gposea

    PUNTOS_DOBLES   shift and go to state 263


state 257

    (74) gpoconst -> CTE_ALFA . masgpoconst
    (75) masgpoconst -> . COMA gpoconst
    (76) masgpoconst -> . empty
    (119) empty -> .

    COMA            shift and go to state 265
    PUNTOS_DOBLES   reduce using rule 119 (empty -> .)

    masgpoconst                    shift and go to state 264
    empty                          shift and go to state 266

state 258

    (41) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE . PROCEDIMIENTO PUNTO_COMA

    PROCEDIMIENTO   shift and go to state 267


state 259

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN . DE FUNCION PUNTO_COMA

    DE              shift and go to state 268


state 260

    (63) bckesp -> estatuto INICIO block FIN .

    SINO            reduce using rule 63 (bckesp -> estatuto INICIO block FIN .)
    PUNTO_COMA      reduce using rule 63 (bckesp -> estatuto INICIO block FIN .)
    INICIO          reduce using rule 63 (bckesp -> estatuto INICIO block FIN .)
    FIN             reduce using rule 63 (bckesp -> estatuto INICIO block FIN .)
    SEA             reduce using rule 63 (bckesp -> estatuto INICIO block FIN .)
    OTRO            reduce using rule 63 (bckesp -> estatuto INICIO block FIN .)


state 261

    (69) cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .

    PUNTO_COMA      reduce using rule 69 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)
    INICIO          reduce using rule 69 (cuando -> CUANDO EL VALOR DE IDENT INICIO gposea otro FIN .)


state 262

    (70) otro -> OTRO PUNTOS_DOBLES . bckesp
    (63) bckesp -> . estatuto INICIO block FIN
    (64) bckesp -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    FIN             reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    bckesp                         shift and go to state 269
    estatuto                       shift and go to state 230
    empty                          shift and go to state 231
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    asigna                         shift and go to state 70
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 263

    (72) gposea -> SEA gpoconst PUNTOS_DOBLES . bckesp gposea
    (63) bckesp -> . estatuto INICIO block FIN
    (64) bckesp -> . empty
    (45) estatuto -> . si
    (46) estatuto -> . LIMPIA
    (47) estatuto -> . desde
    (48) estatuto -> . repetir
    (49) estatuto -> . mientras
    (50) estatuto -> . cuando
    (51) estatuto -> . regresa
    (52) estatuto -> . asigna
    (53) estatuto -> . lproc
    (54) estatuto -> . imprime
    (55) estatuto -> . imprimenl
    (56) estatuto -> . lee
    (57) estatuto -> . INTERRUMPE
    (58) estatuto -> . CONTINUA
    (59) estatuto -> . empty
    (119) empty -> .
    (60) si -> . SI PAREN_EMPIEZA exprlog PAREN_TERMINA HACER bckesp sino
    (65) desde -> . DESDE EL VALOR DE asigna HASTA expr bckesp
    (66) repetir -> . REPETIR block HASTA QUE PAREN_EMPIEZA exprlog PAREN_TERMINA
    (67) mientras -> . MIENTRAS SE CUMPLA QUE exprlog bckesp
    (69) cuando -> . CUANDO EL VALOR DE IDENT INICIO gposea otro FIN
    (77) regresa -> . REGRESA PAREN_EMPIEZA exprlog PAREN_TERMINA
    (68) asigna -> . IDENT udim OP_ASIG exprlog
    (108) lproc -> . IDENT PAREN_EMPIEZA uparams PAREN_TERMINA
    (110) imprime -> . IMPRIME PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (111) imprimenl -> . IMPRIMENL PAREN_EMPIEZA gpoexp PAREN_TERMINA
    (112) lee -> . LEE PAREN_EMPIEZA IDENT PAREN_TERMINA
    (113) lee -> . LEE PAREN_EMPIEZA IDENT dimens PAREN_TERMINA

    LIMPIA          shift and go to state 64
    INTERRUMPE      shift and go to state 75
    CONTINUA        shift and go to state 76
    SEA             reduce using rule 119 (empty -> .)
    OTRO            reduce using rule 119 (empty -> .)
    FIN             reduce using rule 119 (empty -> .)
    INICIO          reduce using rule 119 (empty -> .)
    SI              shift and go to state 77
    DESDE           shift and go to state 78
    REPETIR         shift and go to state 79
    MIENTRAS        shift and go to state 80
    CUANDO          shift and go to state 81
    REGRESA         shift and go to state 83
    IDENT           shift and go to state 82
    IMPRIME         shift and go to state 84
    IMPRIMENL       shift and go to state 85
    LEE             shift and go to state 86

    bckesp                         shift and go to state 270
    estatuto                       shift and go to state 230
    empty                          shift and go to state 231
    si                             shift and go to state 63
    desde                          shift and go to state 65
    repetir                        shift and go to state 66
    mientras                       shift and go to state 67
    cuando                         shift and go to state 68
    regresa                        shift and go to state 69
    asigna                         shift and go to state 70
    lproc                          shift and go to state 71
    imprime                        shift and go to state 72
    imprimenl                      shift and go to state 73
    lee                            shift and go to state 74

state 264

    (74) gpoconst -> CTE_ALFA masgpoconst .

    PUNTOS_DOBLES   reduce using rule 74 (gpoconst -> CTE_ALFA masgpoconst .)


state 265

    (75) masgpoconst -> COMA . gpoconst
    (74) gpoconst -> . CTE_ALFA masgpoconst

    CTE_ALFA        shift and go to state 257

    gpoconst                       shift and go to state 271

state 266

    (76) masgpoconst -> empty .

    PUNTOS_DOBLES   reduce using rule 76 (masgpoconst -> empty .)


state 267

    (41) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO . PUNTO_COMA

    PUNTO_COMA      shift and go to state 272


state 268

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE . FUNCION PUNTO_COMA

    FUNCION         shift and go to state 273


state 269

    (70) otro -> OTRO PUNTOS_DOBLES bckesp .

    FIN             reduce using rule 70 (otro -> OTRO PUNTOS_DOBLES bckesp .)


state 270

    (72) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp . gposea
    (72) gposea -> . SEA gpoconst PUNTOS_DOBLES bckesp gposea
    (73) gposea -> . empty
    (119) empty -> .

    SEA             shift and go to state 246
    OTRO            reduce using rule 119 (empty -> .)
    FIN             reduce using rule 119 (empty -> .)

    gposea                         shift and go to state 274
    empty                          shift and go to state 247

state 271

    (75) masgpoconst -> COMA gpoconst .

    PUNTOS_DOBLES   reduce using rule 75 (masgpoconst -> COMA gpoconst .)


state 272

    (41) procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .

    PROCEDIMIENTO   reduce using rule 41 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    FUNCION         reduce using rule 41 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)
    PROGRAMA        reduce using rule 41 (procedimiento -> PROCEDIMIENTO IDENT PAREN_EMPIEZA params PAREN_TERMINA variables INICIO block FIN DE PROCEDIMIENTO PUNTO_COMA .)


state 273

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION . PUNTO_COMA

    PUNTO_COMA      shift and go to state 275


state 274

    (72) gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .

    OTRO            reduce using rule 72 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)
    FIN             reduce using rule 72 (gposea -> SEA gpoconst PUNTOS_DOBLES bckesp gposea .)


state 275

    (42) funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .

    IDENT           reduce using rule 42 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    PROCEDIMIENTO   reduce using rule 42 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    FUNCION         reduce using rule 42 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)
    PROGRAMA        reduce using rule 42 (funcion -> FUNCION IDENT PAREN_EMPIEZA params PAREN_TERMINA PUNTOS_DOBLES TIPO variables INICIO block FIN DE FUNCION PUNTO_COMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 5 resolved as shift
WARNING: shift/reduce conflict for PROCEDIMIENTO in state 13 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 13 resolved as shift
WARNING: shift/reduce conflict for COMA in state 21 resolved as shift
WARNING: shift/reduce conflict for MAS in state 107 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 107 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 107 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 107 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 107 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 107 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 107 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 107 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 107 resolved as shift
WARNING: shift/reduce conflict for MAS in state 110 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 110 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 110 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 110 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 110 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 110 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 110 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 110 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 110 resolved as shift
WARNING: shift/reduce conflict for MULTI in state 115 resolved as shift
WARNING: shift/reduce conflict for DIV in state 115 resolved as shift
WARNING: shift/reduce conflict for MOD in state 115 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 116 resolved as shift
WARNING: shift/reduce conflict for MAS in state 151 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 151 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 151 resolved as shift
WARNING: shift/reduce conflict for PAREN_EMPIEZA in state 151 resolved as shift
WARNING: shift/reduce conflict for CTE_ENTERA in state 151 resolved as shift
WARNING: shift/reduce conflict for CTE_REAL in state 151 resolved as shift
WARNING: shift/reduce conflict for CTE_ALFA in state 151 resolved as shift
WARNING: shift/reduce conflict for VERDADERO in state 151 resolved as shift
WARNING: shift/reduce conflict for FALSO in state 151 resolved as shift
WARNING: shift/reduce conflict for PAREN_TERMINA in state 156 resolved as shift
WARNING: shift/reduce conflict for PAREN_TERMINA in state 170 resolved as shift
WARNING: reduce/reduce conflict in state 37 resolved using rule (dimens -> empty)
WARNING: rejected rule (opasig -> empty) in state 37
WARNING: reduce/reduce conflict in state 58 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_REAL PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 58
WARNING: reduce/reduce conflict in state 59 resolved using rule (grupoconst -> IDENT OP_ASIG CTE_ENTERA PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 59
WARNING: reduce/reduce conflict in state 94 resolved using rule (gpovars -> gpoids PUNTOS_DOBLES TIPO PUNTO_COMA)
WARNING: rejected rule (empty -> <empty>) in state 94
WARNING: reduce/reduce conflict in state 161 resolved using rule (signo -> termino)
WARNING: rejected rule (signo -> MENOS termino) in state 161
WARNING: reduce/reduce conflict in state 231 resolved using rule (estatuto -> empty)
WARNING: rejected rule (bckesp -> empty) in state 231
WARNING: Rule (opasig -> empty) is never reduced
